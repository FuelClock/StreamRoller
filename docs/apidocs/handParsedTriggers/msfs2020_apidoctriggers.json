{
  "extensionname": "msfs2020",
  "description": "Connects to Microsoft Flight Sim 2020 and reads/writes simvars. when connected to MSFS2020 thousands more triggers/options will be available than appear in this default list. <BR> ie you can set a trigger on simvar 'FLAPS HANDLE INDEX' index 0 position 2 to trigger an action when the flaps are set to position 2<BR>Ie you can set an action on the simvar 'GENERAL ENG THROTTLE LEVER POSITION' using index 1 and a value of 50 to set the postition of throttle 1 to 50%. Please feel free to post useful triggers and actions on teh discord server for others to play with<BR><B>DON'T FORGET TO TURN ON MONITORING FOR ANY VARS YOU WANT TO TRIGGER ON (IN THE SETTINGS PAGE)</B>",
  "version": "0.2",
  "channel": "MSFS2020_CHANNEL",
  "triggers": [
    {
      "name": "onRequest_PLANE LATITUDE LONGITUDE",
      "displaytitle": "Current lat/long (OnRequest)",
      "description": "The current lat long in one message with separate variables",
      "messagetype": "trigger_onRequest_PLANE LATITUDE LONGITUDE",
      "parameters": {
        "lat": "",
        "long": ""
      }
    },
    {
      "name": "AircraftLoaded",
      "displaytitle": "AircraftLoaded",
      "description": "Request a notification when the aircraft flight dynamics file is changed. These files have a .AIR extension. The filename is returned in a SIMCONNECT_RECV_EVENT_FILENAME structure.",
      "messagetype": "trigger_AircraftLoaded",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AircraftLoaded",
      "displaytitle": "AircraftLoaded (OnChange)",
      "description": "Request a notification when the aircraft flight dynamics file is changed. These files have a .AIR extension. The filename is returned in a SIMCONNECT_RECV_EVENT_FILENAME structure.",
      "messagetype": "trigger_onChange_AircraftLoaded",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "Crashed",
      "displaytitle": "Crashed",
      "description": "Request a notification if the user aircraft crashes.",
      "messagetype": "trigger_Crashed",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_Crashed",
      "displaytitle": "Crashed (OnChange)",
      "description": "Request a notification if the user aircraft crashes.",
      "messagetype": "trigger_onChange_Crashed",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CrashReset",
      "displaytitle": "CrashReset",
      "description": "Request a notification when the crash cut-scene has completed.",
      "messagetype": "trigger_CrashReset",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CrashReset",
      "displaytitle": "CrashReset (OnChange)",
      "description": "Request a notification when the crash cut-scene has completed.",
      "messagetype": "trigger_onChange_CrashReset",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CustomMissionActionExecuted",
      "displaytitle": "CustomMissionActionExecuted",
      "description": "Request a notification when a mission action has been executed. ",
      "messagetype": "trigger_CustomMissionActionExecuted",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CustomMissionActionExecuted",
      "displaytitle": "CustomMissionActionExecuted (OnChange)",
      "description": "Request a notification when a mission action has been executed. ",
      "messagetype": "trigger_onChange_CustomMissionActionExecuted",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FlightLoaded",
      "displaytitle": "FlightLoaded",
      "description": "Request a notification when a flight is loaded. Note that when a flight is ended, a default flight is typically loaded, so these events will occur when flights and missions are started and finished. The filename of the flight loaded is returned in a SIMCONNECT_RECV_EVENT_FILENAME structure.",
      "messagetype": "trigger_FlightLoaded",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FlightLoaded",
      "displaytitle": "FlightLoaded (OnChange)",
      "description": "Request a notification when a flight is loaded. Note that when a flight is ended, a default flight is typically loaded, so these events will occur when flights and missions are started and finished. The filename of the flight loaded is returned in a SIMCONNECT_RECV_EVENT_FILENAME structure.",
      "messagetype": "trigger_onChange_FlightLoaded",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FlightSaved",
      "displaytitle": "FlightSaved",
      "description": "Request a notification when a flight is saved correctly. The filename of the flight saved is returned in a SIMCONNECT_RECV_EVENT_FILENAME structure.",
      "messagetype": "trigger_FlightSaved",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FlightSaved",
      "displaytitle": "FlightSaved (OnChange)",
      "description": "Request a notification when a flight is saved correctly. The filename of the flight saved is returned in a SIMCONNECT_RECV_EVENT_FILENAME structure.",
      "messagetype": "trigger_onChange_FlightSaved",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FlightPlanActivated",
      "displaytitle": "FlightPlanActivated",
      "description": "Request a notification when a new flight plan is activated. The filename of the activated flight plan is returned in a SIMCONNECT_RECV_EVENT_FILENAME structure.",
      "messagetype": "trigger_FlightPlanActivated",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FlightPlanActivated",
      "displaytitle": "FlightPlanActivated (OnChange)",
      "description": "Request a notification when a new flight plan is activated. The filename of the activated flight plan is returned in a SIMCONNECT_RECV_EVENT_FILENAME structure.",
      "messagetype": "trigger_onChange_FlightPlanActivated",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FlightPlanDeactivated",
      "displaytitle": "FlightPlanDeactivated",
      "description": "Request a notification when the active flight plan is de-activated.",
      "messagetype": "trigger_FlightPlanDeactivated",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FlightPlanDeactivated",
      "displaytitle": "FlightPlanDeactivated (OnChange)",
      "description": "Request a notification when the active flight plan is de-activated.",
      "messagetype": "trigger_onChange_FlightPlanDeactivated",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ObjectAdded",
      "displaytitle": "ObjectAdded",
      "description": "Request a notification when an AI object is added to the simulation. Refer also to the SIMCONNECT_RECV_EVENT_OBJECT_ADDREMOVE structure.",
      "messagetype": "trigger_ObjectAdded",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ObjectAdded",
      "displaytitle": "ObjectAdded (OnChange)",
      "description": "Request a notification when an AI object is added to the simulation. Refer also to the SIMCONNECT_RECV_EVENT_OBJECT_ADDREMOVE structure.",
      "messagetype": "trigger_onChange_ObjectAdded",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ObjectRemoved",
      "displaytitle": "ObjectRemoved",
      "description": "Request a notification when an AI object is removed from the simulation. Refer also to the SIMCONNECT_RECV_EVENT_OBJECT_ADDREMOVE structure.",
      "messagetype": "trigger_ObjectRemoved",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ObjectRemoved",
      "displaytitle": "ObjectRemoved (OnChange)",
      "description": "Request a notification when an AI object is removed from the simulation. Refer also to the SIMCONNECT_RECV_EVENT_OBJECT_ADDREMOVE structure.",
      "messagetype": "trigger_onChange_ObjectRemoved",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "Pause",
      "displaytitle": "Pause",
      "description": "Request notifications when the flight is paused or unpaused, and also immediately returns the current pause state (1 = paused or 0 = unpaused). The state is returned in the dwData parameter.",
      "messagetype": "trigger_Pause",
      "parameters": {
        "data": 0
      }
    },
    {
      "name": "onChange_Pause",
      "displaytitle": "Pause (OnChange)",
      "description": "Request notifications when the flight is paused or unpaused, and also immediately returns the current pause state (1 = paused or 0 = unpaused). The state is returned in the dwData parameter.",
      "messagetype": "trigger_onChange_Pause",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "Pause_EX1",
      "displaytitle": "Pause_EX1",
      "description": "Request notifications when the flight is paused or unpaused, and also immediately returns the current pause state with more detail than the regular Pause system event. The state is returned in the dwData parameter, see documentation.",
      "messagetype": "trigger_Pause_EX1",
      "parameters": {
        "data": 0
      }
    },
    {
      "name": "onChange_Pause_EX1",
      "displaytitle": "Pause_EX1 (OnChange)",
      "description": "Request notifications when the flight is paused or unpaused, and also immediately returns the current pause state with more detail than the regular Pause system event. The state is returned in the dwData parameter, see documentation.",
      "messagetype": "trigger_onChange_Pause_EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "Paused",
      "displaytitle": "Paused",
      "description": "Request a notification when the flight is paused.",
      "messagetype": "trigger_Paused",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_Paused",
      "displaytitle": "Paused (OnChange)",
      "description": "Request a notification when the flight is paused.",
      "messagetype": "trigger_onChange_Paused",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PositionChanged",
      "displaytitle": "PositionChanged",
      "description": "Request a notification when the user changes the position of their aircraft through a dialog.",
      "messagetype": "trigger_PositionChanged",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PositionChanged",
      "displaytitle": "PositionChanged (OnChange)",
      "description": "Request a notification when the user changes the position of their aircraft through a dialog.",
      "messagetype": "trigger_onChange_PositionChanged",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SimStart",
      "displaytitle": "SimStart",
      "description": "The simulator is running. Typically the user is actively controlling the aircraft on the ground or in the air. However, in some cases additional pairs of SimStart/SimStop events are sent. For example, when a flight is reset the events that are sent are SimStop, SimStart, SimStop, SimStart. Also when a flight is started with the SHOW_OPENING_SCREEN value set to zero, then an additional SimStart/SimStop pair are sent before a second SimStart event is sent when the scenery is fully loaded. The opening screen provides the options to change aircraft, departure airport, and so on.",
      "messagetype": "trigger_SimStart",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SimStart",
      "displaytitle": "SimStart (OnChange)",
      "description": "The simulator is running. Typically the user is actively controlling the aircraft on the ground or in the air. However, in some cases additional pairs of SimStart/SimStop events are sent. For example, when a flight is reset the events that are sent are SimStop, SimStart, SimStop, SimStart. Also when a flight is started with the SHOW_OPENING_SCREEN value set to zero, then an additional SimStart/SimStop pair are sent before a second SimStart event is sent when the scenery is fully loaded. The opening screen provides the options to change aircraft, departure airport, and so on.",
      "messagetype": "trigger_onChange_SimStart",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SimStop",
      "displaytitle": "SimStop",
      "description": "The simulator is not running. Typically the user is loading a flight, navigating the shell or in a dialog.",
      "messagetype": "trigger_SimStop",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SimStop",
      "displaytitle": "SimStop (OnChange)",
      "description": "The simulator is not running. Typically the user is loading a flight, navigating the shell or in a dialog.",
      "messagetype": "trigger_onChange_SimStop",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "Unpaused",
      "displaytitle": "Unpaused",
      "description": "Request a notification when the flight is un-paused.",
      "messagetype": "trigger_Unpaused",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_Unpaused",
      "displaytitle": "Unpaused (OnChange)",
      "description": "Request a notification when the flight is un-paused.",
      "messagetype": "trigger_onChange_Unpaused",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "View",
      "displaytitle": "View",
      "description": "Requests a notification when the user aircraft view is changed. This request will also return the current view immediately. A flag is returned in the dwData parameter, one of: SIMCONNECT_VIEW_SYSTEM_EVENT_DATA_COCKPIT_2D SIMCONNECT_VIEW_SYSTEM_EVENT_DATA_COCKPIT_VIRTUAL SIMCONNECT_VIEW_SYSTEM_EVENT_DATA_ORTHOGONAL (the map view).",
      "messagetype": "trigger_View",
      "parameters": {
        "data": 2
      }
    },
    {
      "name": "onChange_View",
      "displaytitle": "View (OnChange)",
      "description": "Requests a notification when the user aircraft view is changed. This request will also return the current view immediately. A flag is returned in the dwData parameter, one of: SIMCONNECT_VIEW_SYSTEM_EVENT_DATA_COCKPIT_2D SIMCONNECT_VIEW_SYSTEM_EVENT_DATA_COCKPIT_VIRTUAL SIMCONNECT_VIEW_SYSTEM_EVENT_DATA_ORTHOGONAL (the map view).",
      "messagetype": "trigger_onChange_View",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ACCELERATION BODY X",
      "displaytitle": "ACCELERATION BODY X (Poll)",
      "description": "Acceleration relative to aircraft X axis, in east/west direction: Units feet: settable false",
      "messagetype": "trigger_ACCELERATION BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ACCELERATION BODY X",
      "displaytitle": "ACCELERATION BODY X (OnChange)",
      "description": "Acceleration relative to aircraft X axis, in east/west direction: Units feet: settable false",
      "messagetype": "trigger_onChange_ACCELERATION BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ACCELERATION BODY X",
      "displaytitle": "ACCELERATION BODY X (OnRequest)",
      "description": "Acceleration relative to aircraft X axis, in east/west direction: Units feet: settable false",
      "messagetype": "trigger_onRequest_ACCELERATION BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ACCELERATION BODY Y",
      "displaytitle": "ACCELERATION BODY Y (Poll)",
      "description": "Acceleration relative to aircraft Y axis, in vertical direction: Units feet: settable false",
      "messagetype": "trigger_ACCELERATION BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ACCELERATION BODY Y",
      "displaytitle": "ACCELERATION BODY Y (OnChange)",
      "description": "Acceleration relative to aircraft Y axis, in vertical direction: Units feet: settable false",
      "messagetype": "trigger_onChange_ACCELERATION BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ACCELERATION BODY Y",
      "displaytitle": "ACCELERATION BODY Y (OnRequest)",
      "description": "Acceleration relative to aircraft Y axis, in vertical direction: Units feet: settable false",
      "messagetype": "trigger_onRequest_ACCELERATION BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ACCELERATION BODY Z",
      "displaytitle": "ACCELERATION BODY Z (Poll)",
      "description": "Acceleration relative to aircraft Z axis, in north/south direction: Units feet: settable false",
      "messagetype": "trigger_ACCELERATION BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ACCELERATION BODY Z",
      "displaytitle": "ACCELERATION BODY Z (OnChange)",
      "description": "Acceleration relative to aircraft Z axis, in north/south direction: Units feet: settable false",
      "messagetype": "trigger_onChange_ACCELERATION BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ACCELERATION BODY Z",
      "displaytitle": "ACCELERATION BODY Z (OnRequest)",
      "description": "Acceleration relative to aircraft Z axis, in north/south direction: Units feet: settable false",
      "messagetype": "trigger_onRequest_ACCELERATION BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ACCELERATION WORLD X",
      "displaytitle": "ACCELERATION WORLD X (Poll)",
      "description": "Acceleration relative to the earth X axis, in east/west direction: Units feet: settable false",
      "messagetype": "trigger_ACCELERATION WORLD X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ACCELERATION WORLD X",
      "displaytitle": "ACCELERATION WORLD X (OnChange)",
      "description": "Acceleration relative to the earth X axis, in east/west direction: Units feet: settable false",
      "messagetype": "trigger_onChange_ACCELERATION WORLD X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ACCELERATION WORLD X",
      "displaytitle": "ACCELERATION WORLD X (OnRequest)",
      "description": "Acceleration relative to the earth X axis, in east/west direction: Units feet: settable false",
      "messagetype": "trigger_onRequest_ACCELERATION WORLD X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ACCELERATION WORLD Y",
      "displaytitle": "ACCELERATION WORLD Y (Poll)",
      "description": "Acceleration relative to the earth Y axis, in vertical direction: Units feet: settable false",
      "messagetype": "trigger_ACCELERATION WORLD Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ACCELERATION WORLD Y",
      "displaytitle": "ACCELERATION WORLD Y (OnChange)",
      "description": "Acceleration relative to the earth Y axis, in vertical direction: Units feet: settable false",
      "messagetype": "trigger_onChange_ACCELERATION WORLD Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ACCELERATION WORLD Y",
      "displaytitle": "ACCELERATION WORLD Y (OnRequest)",
      "description": "Acceleration relative to the earth Y axis, in vertical direction: Units feet: settable false",
      "messagetype": "trigger_onRequest_ACCELERATION WORLD Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ACCELERATION WORLD Z",
      "displaytitle": "ACCELERATION WORLD Z (Poll)",
      "description": "Acceleration relative to the earth Z axis, in north/south direction: Units feet: settable false",
      "messagetype": "trigger_ACCELERATION WORLD Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ACCELERATION WORLD Z",
      "displaytitle": "ACCELERATION WORLD Z (OnChange)",
      "description": "Acceleration relative to the earth Z axis, in north/south direction: Units feet: settable false",
      "messagetype": "trigger_onChange_ACCELERATION WORLD Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ACCELERATION WORLD Z",
      "displaytitle": "ACCELERATION WORLD Z (OnRequest)",
      "description": "Acceleration relative to the earth Z axis, in north/south direction: Units feet: settable false",
      "messagetype": "trigger_onRequest_ACCELERATION WORLD Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ADF ACTIVE FREQUENCY:index",
      "displaytitle": "ADF ACTIVE FREQUENCY:index (Poll)",
      "description": "ADF frequency. Index of 1 or 2.: Units frequency ADF BCD32: settable false",
      "messagetype": "trigger_ADF ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF ACTIVE FREQUENCY:index",
      "displaytitle": "ADF ACTIVE FREQUENCY:index (OnChange)",
      "description": "ADF frequency. Index of 1 or 2.: Units frequency ADF BCD32: settable false",
      "messagetype": "trigger_onChange_ADF ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF ACTIVE FREQUENCY:index",
      "displaytitle": "ADF ACTIVE FREQUENCY:index (OnRequest)",
      "description": "ADF frequency. Index of 1 or 2.: Units frequency ADF BCD32: settable false",
      "messagetype": "trigger_onRequest_ADF ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF AVAILABLE:index",
      "displaytitle": "ADF AVAILABLE:index (Poll)",
      "description": "True if ADF is available: Units bool: settable false",
      "messagetype": "trigger_ADF AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF AVAILABLE:index",
      "displaytitle": "ADF AVAILABLE:index (OnChange)",
      "description": "True if ADF is available: Units bool: settable false",
      "messagetype": "trigger_onChange_ADF AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF AVAILABLE:index",
      "displaytitle": "ADF AVAILABLE:index (OnRequest)",
      "description": "True if ADF is available: Units bool: settable false",
      "messagetype": "trigger_onRequest_ADF AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF CARD",
      "displaytitle": "ADF CARD (Poll)",
      "description": "ADF compass rose setting: Units degrees: settable false",
      "messagetype": "trigger_ADF CARD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ADF CARD",
      "displaytitle": "ADF CARD (OnChange)",
      "description": "ADF compass rose setting: Units degrees: settable false",
      "messagetype": "trigger_onChange_ADF CARD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF CARD",
      "displaytitle": "ADF CARD (OnRequest)",
      "description": "ADF compass rose setting: Units degrees: settable false",
      "messagetype": "trigger_onRequest_ADF CARD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ADF IDENT",
      "displaytitle": "ADF IDENT (Poll)",
      "description": "ICAO code: Units null: settable false",
      "messagetype": "trigger_ADF IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ADF IDENT",
      "displaytitle": "ADF IDENT (OnChange)",
      "description": "ICAO code: Units null: settable false",
      "messagetype": "trigger_onChange_ADF IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF IDENT",
      "displaytitle": "ADF IDENT (OnRequest)",
      "description": "ICAO code: Units null: settable false",
      "messagetype": "trigger_onRequest_ADF IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ADF NAME:index",
      "displaytitle": "ADF NAME:index (Poll)",
      "description": "Descriptive name: Units null: settable false",
      "messagetype": "trigger_ADF NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF NAME:index",
      "displaytitle": "ADF NAME:index (OnChange)",
      "description": "Descriptive name: Units null: settable false",
      "messagetype": "trigger_onChange_ADF NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF NAME:index",
      "displaytitle": "ADF NAME:index (OnRequest)",
      "description": "Descriptive name: Units null: settable false",
      "messagetype": "trigger_onRequest_ADF NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF RADIAL MAG:index",
      "displaytitle": "ADF RADIAL MAG:index (Poll)",
      "description": "Returns the magnetic bearing to the currently tuned ADF transmitter.: Units degrees: settable false",
      "messagetype": "trigger_ADF RADIAL MAG:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF RADIAL MAG:index",
      "displaytitle": "ADF RADIAL MAG:index (OnChange)",
      "description": "Returns the magnetic bearing to the currently tuned ADF transmitter.: Units degrees: settable false",
      "messagetype": "trigger_onChange_ADF RADIAL MAG:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF RADIAL MAG:index",
      "displaytitle": "ADF RADIAL MAG:index (OnRequest)",
      "description": "Returns the magnetic bearing to the currently tuned ADF transmitter.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_ADF RADIAL MAG:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF RADIAL:index",
      "displaytitle": "ADF RADIAL:index (Poll)",
      "description": "Current direction from NDB station: Units degrees: settable false",
      "messagetype": "trigger_ADF RADIAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF RADIAL:index",
      "displaytitle": "ADF RADIAL:index (OnChange)",
      "description": "Current direction from NDB station: Units degrees: settable false",
      "messagetype": "trigger_onChange_ADF RADIAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF RADIAL:index",
      "displaytitle": "ADF RADIAL:index (OnRequest)",
      "description": "Current direction from NDB station: Units degrees: settable false",
      "messagetype": "trigger_onRequest_ADF RADIAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF SIGNAL:index",
      "displaytitle": "ADF SIGNAL:index (Poll)",
      "description": "Signal strength: Units number: settable false",
      "messagetype": "trigger_ADF SIGNAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF SIGNAL:index",
      "displaytitle": "ADF SIGNAL:index (OnChange)",
      "description": "Signal strength: Units number: settable false",
      "messagetype": "trigger_onChange_ADF SIGNAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF SIGNAL:index",
      "displaytitle": "ADF SIGNAL:index (OnRequest)",
      "description": "Signal strength: Units number: settable false",
      "messagetype": "trigger_onRequest_ADF SIGNAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF SOUND:index",
      "displaytitle": "ADF SOUND:index (Poll)",
      "description": "ADF audio flag. Index of 0 or 1.: Units bool: settable false",
      "messagetype": "trigger_ADF SOUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF SOUND:index",
      "displaytitle": "ADF SOUND:index (OnChange)",
      "description": "ADF audio flag. Index of 0 or 1.: Units bool: settable false",
      "messagetype": "trigger_onChange_ADF SOUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF SOUND:index",
      "displaytitle": "ADF SOUND:index (OnRequest)",
      "description": "ADF audio flag. Index of 0 or 1.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ADF SOUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF STANDBY AVAILABLE:index",
      "displaytitle": "ADF STANDBY AVAILABLE:index (Poll)",
      "description": "True if ADF Standby is available: Units bool: settable false",
      "messagetype": "trigger_ADF STANDBY AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF STANDBY AVAILABLE:index",
      "displaytitle": "ADF STANDBY AVAILABLE:index (OnChange)",
      "description": "True if ADF Standby is available: Units bool: settable false",
      "messagetype": "trigger_onChange_ADF STANDBY AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF STANDBY AVAILABLE:index",
      "displaytitle": "ADF STANDBY AVAILABLE:index (OnRequest)",
      "description": "True if ADF Standby is available: Units bool: settable false",
      "messagetype": "trigger_onRequest_ADF STANDBY AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF STANDBY FREQUENCY:index",
      "displaytitle": "ADF STANDBY FREQUENCY:index (Poll)",
      "description": "ADF standby frequency: Units Hz: settable false",
      "messagetype": "trigger_ADF STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ADF STANDBY FREQUENCY:index",
      "displaytitle": "ADF STANDBY FREQUENCY:index (OnChange)",
      "description": "ADF standby frequency: Units Hz: settable false",
      "messagetype": "trigger_onChange_ADF STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF STANDBY FREQUENCY:index",
      "displaytitle": "ADF STANDBY FREQUENCY:index (OnRequest)",
      "description": "ADF standby frequency: Units Hz: settable false",
      "messagetype": "trigger_onRequest_ADF STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ADF VOLUME",
      "displaytitle": "ADF VOLUME (Poll)",
      "description": "Returns the volume of the ADF: Units percent Over 100: settable false",
      "messagetype": "trigger_ADF VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ADF VOLUME",
      "displaytitle": "ADF VOLUME (OnChange)",
      "description": "Returns the volume of the ADF: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ADF VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ADF VOLUME",
      "displaytitle": "ADF VOLUME (OnRequest)",
      "description": "Returns the volume of the ADF: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ADF VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AI ANTISTALL STATE",
      "displaytitle": "AI ANTISTALL STATE (Poll)",
      "description": "The current state of the AI anti-stall system: Units enum: settable false",
      "messagetype": "trigger_AI ANTISTALL STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AI ANTISTALL STATE",
      "displaytitle": "AI ANTISTALL STATE (OnChange)",
      "description": "The current state of the AI anti-stall system: Units enum: settable false",
      "messagetype": "trigger_onChange_AI ANTISTALL STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AI ANTISTALL STATE",
      "displaytitle": "AI ANTISTALL STATE (OnRequest)",
      "description": "The current state of the AI anti-stall system: Units enum: settable false",
      "messagetype": "trigger_onRequest_AI ANTISTALL STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AI AUTOTRIM ACTIVE",
      "displaytitle": "AI AUTOTRIM ACTIVE (Poll)",
      "description": "Returns whether the AI auto-trim system is enabled or not: Units bool: settable false",
      "messagetype": "trigger_AI AUTOTRIM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AI AUTOTRIM ACTIVE",
      "displaytitle": "AI AUTOTRIM ACTIVE (OnChange)",
      "description": "Returns whether the AI auto-trim system is enabled or not: Units bool: settable false",
      "messagetype": "trigger_onChange_AI AUTOTRIM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AI AUTOTRIM ACTIVE",
      "displaytitle": "AI AUTOTRIM ACTIVE (OnRequest)",
      "description": "Returns whether the AI auto-trim system is enabled or not: Units bool: settable false",
      "messagetype": "trigger_onRequest_AI AUTOTRIM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AI AUTOTRIM ACTIVE AGAINST PLAYER",
      "displaytitle": "AI AUTOTRIM ACTIVE AGAINST PLAYER (Poll)",
      "description": "Returns whether the AI auto-trim system is enabled or not for AI controlled aircraft: Units bool: settable false",
      "messagetype": "trigger_AI AUTOTRIM ACTIVE AGAINST PLAYER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AI AUTOTRIM ACTIVE AGAINST PLAYER",
      "displaytitle": "AI AUTOTRIM ACTIVE AGAINST PLAYER (OnChange)",
      "description": "Returns whether the AI auto-trim system is enabled or not for AI controlled aircraft: Units bool: settable false",
      "messagetype": "trigger_onChange_AI AUTOTRIM ACTIVE AGAINST PLAYER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AI AUTOTRIM ACTIVE AGAINST PLAYER",
      "displaytitle": "AI AUTOTRIM ACTIVE AGAINST PLAYER (OnRequest)",
      "description": "Returns whether the AI auto-trim system is enabled or not for AI controlled aircraft: Units bool: settable false",
      "messagetype": "trigger_onRequest_AI AUTOTRIM ACTIVE AGAINST PLAYER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AI CONTROLS",
      "displaytitle": "AI CONTROLS (Poll)",
      "description": "Returns whether the AI control system is enabled or not: Units bool: settable false",
      "messagetype": "trigger_AI CONTROLS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AI CONTROLS",
      "displaytitle": "AI CONTROLS (OnChange)",
      "description": "Returns whether the AI control system is enabled or not: Units bool: settable false",
      "messagetype": "trigger_onChange_AI CONTROLS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AI CONTROLS",
      "displaytitle": "AI CONTROLS (OnRequest)",
      "description": "Returns whether the AI control system is enabled or not: Units bool: settable false",
      "messagetype": "trigger_onRequest_AI CONTROLS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AI CURSOR MODE ACTIVE",
      "displaytitle": "AI CURSOR MODE ACTIVE (Poll)",
      "description": "Returns whether the AI cursor mode is active or not: Units bool: settable false",
      "messagetype": "trigger_AI CURSOR MODE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AI CURSOR MODE ACTIVE",
      "displaytitle": "AI CURSOR MODE ACTIVE (OnChange)",
      "description": "Returns whether the AI cursor mode is active or not: Units bool: settable false",
      "messagetype": "trigger_onChange_AI CURSOR MODE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AI CURSOR MODE ACTIVE",
      "displaytitle": "AI CURSOR MODE ACTIVE (OnRequest)",
      "description": "Returns whether the AI cursor mode is active or not: Units bool: settable false",
      "messagetype": "trigger_onRequest_AI CURSOR MODE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON AVERAGE DEFLECTION",
      "displaytitle": "AILERON AVERAGE DEFLECTION (Poll)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_AILERON AVERAGE DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON AVERAGE DEFLECTION",
      "displaytitle": "AILERON AVERAGE DEFLECTION (OnChange)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onChange_AILERON AVERAGE DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON AVERAGE DEFLECTION",
      "displaytitle": "AILERON AVERAGE DEFLECTION (OnRequest)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onRequest_AILERON AVERAGE DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON LEFT DEFLECTION",
      "displaytitle": "AILERON LEFT DEFLECTION (Poll)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_AILERON LEFT DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON LEFT DEFLECTION",
      "displaytitle": "AILERON LEFT DEFLECTION (OnChange)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onChange_AILERON LEFT DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON LEFT DEFLECTION",
      "displaytitle": "AILERON LEFT DEFLECTION (OnRequest)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onRequest_AILERON LEFT DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON LEFT DEFLECTION PCT",
      "displaytitle": "AILERON LEFT DEFLECTION PCT (Poll)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_AILERON LEFT DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON LEFT DEFLECTION PCT",
      "displaytitle": "AILERON LEFT DEFLECTION PCT (OnChange)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_AILERON LEFT DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON LEFT DEFLECTION PCT",
      "displaytitle": "AILERON LEFT DEFLECTION PCT (OnRequest)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_AILERON LEFT DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON POSITION",
      "displaytitle": "AILERON POSITION (Poll)",
      "description": "Percent aileron input left/right: Units position: settable true",
      "messagetype": "trigger_AILERON POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON POSITION",
      "displaytitle": "AILERON POSITION (OnChange)",
      "description": "Percent aileron input left/right: Units position: settable true",
      "messagetype": "trigger_onChange_AILERON POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON POSITION",
      "displaytitle": "AILERON POSITION (OnRequest)",
      "description": "Percent aileron input left/right: Units position: settable true",
      "messagetype": "trigger_onRequest_AILERON POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON RIGHT DEFLECTION",
      "displaytitle": "AILERON RIGHT DEFLECTION (Poll)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_AILERON RIGHT DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON RIGHT DEFLECTION",
      "displaytitle": "AILERON RIGHT DEFLECTION (OnChange)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onChange_AILERON RIGHT DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON RIGHT DEFLECTION",
      "displaytitle": "AILERON RIGHT DEFLECTION (OnRequest)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onRequest_AILERON RIGHT DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON RIGHT DEFLECTION PCT",
      "displaytitle": "AILERON RIGHT DEFLECTION PCT (Poll)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_AILERON RIGHT DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON RIGHT DEFLECTION PCT",
      "displaytitle": "AILERON RIGHT DEFLECTION PCT (OnChange)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_AILERON RIGHT DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON RIGHT DEFLECTION PCT",
      "displaytitle": "AILERON RIGHT DEFLECTION PCT (OnRequest)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_AILERON RIGHT DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON TRIM",
      "displaytitle": "AILERON TRIM (Poll)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_AILERON TRIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON TRIM",
      "displaytitle": "AILERON TRIM (OnChange)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onChange_AILERON TRIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON TRIM",
      "displaytitle": "AILERON TRIM (OnRequest)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onRequest_AILERON TRIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON TRIM DISABLED",
      "displaytitle": "AILERON TRIM DISABLED (Poll)",
      "description": "Whether or not the Aileron Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_AILERON TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON TRIM DISABLED",
      "displaytitle": "AILERON TRIM DISABLED (OnChange)",
      "description": "Whether or not the Aileron Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_onChange_AILERON TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON TRIM DISABLED",
      "displaytitle": "AILERON TRIM DISABLED (OnRequest)",
      "description": "Whether or not the Aileron Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_onRequest_AILERON TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON TRIM PCT",
      "displaytitle": "AILERON TRIM PCT (Poll)",
      "description": "The trim position of the ailerons. Zero is fully retracted: Units percent Over 100: settable true",
      "messagetype": "trigger_AILERON TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AILERON TRIM PCT",
      "displaytitle": "AILERON TRIM PCT (OnChange)",
      "description": "The trim position of the ailerons. Zero is fully retracted: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_AILERON TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AILERON TRIM PCT",
      "displaytitle": "AILERON TRIM PCT (OnRequest)",
      "description": "The trim position of the ailerons. Zero is fully retracted: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_AILERON TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRCRAFT WIND X",
      "displaytitle": "AIRCRAFT WIND X (Poll)",
      "description": "Wind component in aircraft lateral (X) axis: Units knots: settable false",
      "messagetype": "trigger_AIRCRAFT WIND X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRCRAFT WIND X",
      "displaytitle": "AIRCRAFT WIND X (OnChange)",
      "description": "Wind component in aircraft lateral (X) axis: Units knots: settable false",
      "messagetype": "trigger_onChange_AIRCRAFT WIND X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRCRAFT WIND X",
      "displaytitle": "AIRCRAFT WIND X (OnRequest)",
      "description": "Wind component in aircraft lateral (X) axis: Units knots: settable false",
      "messagetype": "trigger_onRequest_AIRCRAFT WIND X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRCRAFT WIND Y",
      "displaytitle": "AIRCRAFT WIND Y (Poll)",
      "description": "Wind component in aircraft vertical (Y) axis.: Units knots: settable false",
      "messagetype": "trigger_AIRCRAFT WIND Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRCRAFT WIND Y",
      "displaytitle": "AIRCRAFT WIND Y (OnChange)",
      "description": "Wind component in aircraft vertical (Y) axis.: Units knots: settable false",
      "messagetype": "trigger_onChange_AIRCRAFT WIND Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRCRAFT WIND Y",
      "displaytitle": "AIRCRAFT WIND Y (OnRequest)",
      "description": "Wind component in aircraft vertical (Y) axis.: Units knots: settable false",
      "messagetype": "trigger_onRequest_AIRCRAFT WIND Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRCRAFT WIND Z",
      "displaytitle": "AIRCRAFT WIND Z (Poll)",
      "description": "Wind component in aircraft longitudinal (Z) axis.: Units knots: settable false",
      "messagetype": "trigger_AIRCRAFT WIND Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRCRAFT WIND Z",
      "displaytitle": "AIRCRAFT WIND Z (OnChange)",
      "description": "Wind component in aircraft longitudinal (Z) axis.: Units knots: settable false",
      "messagetype": "trigger_onChange_AIRCRAFT WIND Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRCRAFT WIND Z",
      "displaytitle": "AIRCRAFT WIND Z (OnRequest)",
      "description": "Wind component in aircraft longitudinal (Z) axis.: Units knots: settable false",
      "messagetype": "trigger_onRequest_AIRCRAFT WIND Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED BARBER POLE",
      "displaytitle": "AIRSPEED BARBER POLE (Poll)",
      "description": "Redline airspeed (dynamic on some aircraft).: Units knots: settable false",
      "messagetype": "trigger_AIRSPEED BARBER POLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRSPEED BARBER POLE",
      "displaytitle": "AIRSPEED BARBER POLE (OnChange)",
      "description": "Redline airspeed (dynamic on some aircraft).: Units knots: settable false",
      "messagetype": "trigger_onChange_AIRSPEED BARBER POLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRSPEED BARBER POLE",
      "displaytitle": "AIRSPEED BARBER POLE (OnRequest)",
      "description": "Redline airspeed (dynamic on some aircraft).: Units knots: settable false",
      "messagetype": "trigger_onRequest_AIRSPEED BARBER POLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED INDICATED",
      "displaytitle": "AIRSPEED INDICATED (Poll)",
      "description": "Indicated airspeed.: Units knots: settable true",
      "messagetype": "trigger_AIRSPEED INDICATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRSPEED INDICATED",
      "displaytitle": "AIRSPEED INDICATED (OnChange)",
      "description": "Indicated airspeed.: Units knots: settable true",
      "messagetype": "trigger_onChange_AIRSPEED INDICATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRSPEED INDICATED",
      "displaytitle": "AIRSPEED INDICATED (OnRequest)",
      "description": "Indicated airspeed.: Units knots: settable true",
      "messagetype": "trigger_onRequest_AIRSPEED INDICATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED MACH",
      "displaytitle": "AIRSPEED MACH (Poll)",
      "description": "Current mach.: Units mach: settable false",
      "messagetype": "trigger_AIRSPEED MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRSPEED MACH",
      "displaytitle": "AIRSPEED MACH (OnChange)",
      "description": "Current mach.: Units mach: settable false",
      "messagetype": "trigger_onChange_AIRSPEED MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRSPEED MACH",
      "displaytitle": "AIRSPEED MACH (OnRequest)",
      "description": "Current mach.: Units mach: settable false",
      "messagetype": "trigger_onRequest_AIRSPEED MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED SELECT INDICATED OR TRUE",
      "displaytitle": "AIRSPEED SELECT INDICATED OR TRUE (Poll)",
      "description": "The airspeed, whether true or indicated airspeed has been selected.: Units knots: settable false",
      "messagetype": "trigger_AIRSPEED SELECT INDICATED OR TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRSPEED SELECT INDICATED OR TRUE",
      "displaytitle": "AIRSPEED SELECT INDICATED OR TRUE (OnChange)",
      "description": "The airspeed, whether true or indicated airspeed has been selected.: Units knots: settable false",
      "messagetype": "trigger_onChange_AIRSPEED SELECT INDICATED OR TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRSPEED SELECT INDICATED OR TRUE",
      "displaytitle": "AIRSPEED SELECT INDICATED OR TRUE (OnRequest)",
      "description": "The airspeed, whether true or indicated airspeed has been selected.: Units knots: settable false",
      "messagetype": "trigger_onRequest_AIRSPEED SELECT INDICATED OR TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED TRUE",
      "displaytitle": "AIRSPEED TRUE (Poll)",
      "description": "True airspeed.: Units knots: settable true",
      "messagetype": "trigger_AIRSPEED TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRSPEED TRUE",
      "displaytitle": "AIRSPEED TRUE (OnChange)",
      "description": "True airspeed.: Units knots: settable true",
      "messagetype": "trigger_onChange_AIRSPEED TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRSPEED TRUE",
      "displaytitle": "AIRSPEED TRUE (OnRequest)",
      "description": "True airspeed.: Units knots: settable true",
      "messagetype": "trigger_onRequest_AIRSPEED TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED TRUE CALIBRATE",
      "displaytitle": "AIRSPEED TRUE CALIBRATE (Poll)",
      "description": "Angle of True calibration scale on airspeed indicator.: Units degrees: settable true",
      "messagetype": "trigger_AIRSPEED TRUE CALIBRATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRSPEED TRUE CALIBRATE",
      "displaytitle": "AIRSPEED TRUE CALIBRATE (OnChange)",
      "description": "Angle of True calibration scale on airspeed indicator.: Units degrees: settable true",
      "messagetype": "trigger_onChange_AIRSPEED TRUE CALIBRATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRSPEED TRUE CALIBRATE",
      "displaytitle": "AIRSPEED TRUE CALIBRATE (OnRequest)",
      "description": "Angle of True calibration scale on airspeed indicator.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_AIRSPEED TRUE CALIBRATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED TRUE RAW",
      "displaytitle": "AIRSPEED TRUE RAW (Poll)",
      "description": "Equivalent to AIRSPEED TRUE, but does not account for wind when used to Set Airspeed value: Units knots: settable true",
      "messagetype": "trigger_AIRSPEED TRUE RAW",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AIRSPEED TRUE RAW",
      "displaytitle": "AIRSPEED TRUE RAW (OnChange)",
      "description": "Equivalent to AIRSPEED TRUE, but does not account for wind when used to Set Airspeed value: Units knots: settable true",
      "messagetype": "trigger_onChange_AIRSPEED TRUE RAW",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AIRSPEED TRUE RAW",
      "displaytitle": "AIRSPEED TRUE RAW (OnRequest)",
      "description": "Equivalent to AIRSPEED TRUE, but does not account for wind when used to Set Airspeed value: Units knots: settable true",
      "messagetype": "trigger_onRequest_AIRSPEED TRUE RAW",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ALTERNATE STATIC SOURCE OPEN:index",
      "displaytitle": "ALTERNATE STATIC SOURCE OPEN:index (Poll)",
      "description": "Alternate static air source.: Units bool: settable false",
      "messagetype": "trigger_ALTERNATE STATIC SOURCE OPEN:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ALTERNATE STATIC SOURCE OPEN:index",
      "displaytitle": "ALTERNATE STATIC SOURCE OPEN:index (OnChange)",
      "description": "Alternate static air source.: Units bool: settable false",
      "messagetype": "trigger_onChange_ALTERNATE STATIC SOURCE OPEN:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ALTERNATE STATIC SOURCE OPEN:index",
      "displaytitle": "ALTERNATE STATIC SOURCE OPEN:index (OnRequest)",
      "description": "Alternate static air source.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ALTERNATE STATIC SOURCE OPEN:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ALTERNATOR BREAKER PULLED",
      "displaytitle": "ALTERNATOR BREAKER PULLED (Poll)",
      "description": "This will be true if the alternator breaker is pulled. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool: settable true",
      "messagetype": "trigger_ALTERNATOR BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ALTERNATOR BREAKER PULLED",
      "displaytitle": "ALTERNATOR BREAKER PULLED (OnChange)",
      "description": "This will be true if the alternator breaker is pulled. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool: settable true",
      "messagetype": "trigger_onChange_ALTERNATOR BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ALTERNATOR BREAKER PULLED",
      "displaytitle": "ALTERNATOR BREAKER PULLED (OnRequest)",
      "description": "This will be true if the alternator breaker is pulled. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool: settable true",
      "messagetype": "trigger_onRequest_ALTERNATOR BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ALTERNATOR CONNECTION ON",
      "displaytitle": "ALTERNATOR CONNECTION ON (Poll)",
      "description": "This will be true if the alternator is connected. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool: settable false",
      "messagetype": "trigger_ALTERNATOR CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ALTERNATOR CONNECTION ON",
      "displaytitle": "ALTERNATOR CONNECTION ON (OnChange)",
      "description": "This will be true if the alternator is connected. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool: settable false",
      "messagetype": "trigger_onChange_ALTERNATOR CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ALTERNATOR CONNECTION ON",
      "displaytitle": "ALTERNATOR CONNECTION ON (OnRequest)",
      "description": "This will be true if the alternator is connected. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool: settable false",
      "messagetype": "trigger_onRequest_ALTERNATOR CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT DENSITY",
      "displaytitle": "AMBIENT DENSITY (Poll)",
      "description": "Ambient density.: Units Slugs per cubic feet: settable false",
      "messagetype": "trigger_AMBIENT DENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT DENSITY",
      "displaytitle": "AMBIENT DENSITY (OnChange)",
      "description": "Ambient density.: Units Slugs per cubic feet: settable false",
      "messagetype": "trigger_onChange_AMBIENT DENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT DENSITY",
      "displaytitle": "AMBIENT DENSITY (OnRequest)",
      "description": "Ambient density.: Units Slugs per cubic feet: settable false",
      "messagetype": "trigger_onRequest_AMBIENT DENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT IN CLOUD",
      "displaytitle": "AMBIENT IN CLOUD (Poll)",
      "description": "True if the aircraft is in a cloud: Units bool: settable false",
      "messagetype": "trigger_AMBIENT IN CLOUD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT IN CLOUD",
      "displaytitle": "AMBIENT IN CLOUD (OnChange)",
      "description": "True if the aircraft is in a cloud: Units bool: settable false",
      "messagetype": "trigger_onChange_AMBIENT IN CLOUD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT IN CLOUD",
      "displaytitle": "AMBIENT IN CLOUD (OnRequest)",
      "description": "True if the aircraft is in a cloud: Units bool: settable false",
      "messagetype": "trigger_onRequest_AMBIENT IN CLOUD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT PRECIP RATE",
      "displaytitle": "AMBIENT PRECIP RATE (Poll)",
      "description": "The current precipitation rate.: Units millimeters of water: settable false",
      "messagetype": "trigger_AMBIENT PRECIP RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT PRECIP RATE",
      "displaytitle": "AMBIENT PRECIP RATE (OnChange)",
      "description": "The current precipitation rate.: Units millimeters of water: settable false",
      "messagetype": "trigger_onChange_AMBIENT PRECIP RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT PRECIP RATE",
      "displaytitle": "AMBIENT PRECIP RATE (OnRequest)",
      "description": "The current precipitation rate.: Units millimeters of water: settable false",
      "messagetype": "trigger_onRequest_AMBIENT PRECIP RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT PRECIP STATE",
      "displaytitle": "AMBIENT PRECIP STATE (Poll)",
      "description": "The current state of precipitation.: Units mask: settable false",
      "messagetype": "trigger_AMBIENT PRECIP STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT PRECIP STATE",
      "displaytitle": "AMBIENT PRECIP STATE (OnChange)",
      "description": "The current state of precipitation.: Units mask: settable false",
      "messagetype": "trigger_onChange_AMBIENT PRECIP STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT PRECIP STATE",
      "displaytitle": "AMBIENT PRECIP STATE (OnRequest)",
      "description": "The current state of precipitation.: Units mask: settable false",
      "messagetype": "trigger_onRequest_AMBIENT PRECIP STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT PRESSURE",
      "displaytitle": "AMBIENT PRESSURE (Poll)",
      "description": "Ambient pressure.: Units Inches of Mercury: settable false",
      "messagetype": "trigger_AMBIENT PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT PRESSURE",
      "displaytitle": "AMBIENT PRESSURE (OnChange)",
      "description": "Ambient pressure.: Units Inches of Mercury: settable false",
      "messagetype": "trigger_onChange_AMBIENT PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT PRESSURE",
      "displaytitle": "AMBIENT PRESSURE (OnRequest)",
      "description": "Ambient pressure.: Units Inches of Mercury: settable false",
      "messagetype": "trigger_onRequest_AMBIENT PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT TEMPERATURE",
      "displaytitle": "AMBIENT TEMPERATURE (Poll)",
      "description": "Ambient temperature.: Units celsius: settable false",
      "messagetype": "trigger_AMBIENT TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT TEMPERATURE",
      "displaytitle": "AMBIENT TEMPERATURE (OnChange)",
      "description": "Ambient temperature.: Units celsius: settable false",
      "messagetype": "trigger_onChange_AMBIENT TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT TEMPERATURE",
      "displaytitle": "AMBIENT TEMPERATURE (OnRequest)",
      "description": "Ambient temperature.: Units celsius: settable false",
      "messagetype": "trigger_onRequest_AMBIENT TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT VISIBILITY",
      "displaytitle": "AMBIENT VISIBILITY (Poll)",
      "description": "Ambient visibility (only measures ambient particle visibility - related to ambient density).: Units meters: settable false",
      "messagetype": "trigger_AMBIENT VISIBILITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT VISIBILITY",
      "displaytitle": "AMBIENT VISIBILITY (OnChange)",
      "description": "Ambient visibility (only measures ambient particle visibility - related to ambient density).: Units meters: settable false",
      "messagetype": "trigger_onChange_AMBIENT VISIBILITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT VISIBILITY",
      "displaytitle": "AMBIENT VISIBILITY (OnRequest)",
      "description": "Ambient visibility (only measures ambient particle visibility - related to ambient density).: Units meters: settable false",
      "messagetype": "trigger_onRequest_AMBIENT VISIBILITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT WIND DIRECTION",
      "displaytitle": "AMBIENT WIND DIRECTION (Poll)",
      "description": "Wind direction, relative to true north.: Units degrees: settable false",
      "messagetype": "trigger_AMBIENT WIND DIRECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT WIND DIRECTION",
      "displaytitle": "AMBIENT WIND DIRECTION (OnChange)",
      "description": "Wind direction, relative to true north.: Units degrees: settable false",
      "messagetype": "trigger_onChange_AMBIENT WIND DIRECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT WIND DIRECTION",
      "displaytitle": "AMBIENT WIND DIRECTION (OnRequest)",
      "description": "Wind direction, relative to true north.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_AMBIENT WIND DIRECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT WIND VELOCITY",
      "displaytitle": "AMBIENT WIND VELOCITY (Poll)",
      "description": "Wind velocity.: Units knots: settable false",
      "messagetype": "trigger_AMBIENT WIND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT WIND VELOCITY",
      "displaytitle": "AMBIENT WIND VELOCITY (OnChange)",
      "description": "Wind velocity.: Units knots: settable false",
      "messagetype": "trigger_onChange_AMBIENT WIND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT WIND VELOCITY",
      "displaytitle": "AMBIENT WIND VELOCITY (OnRequest)",
      "description": "Wind velocity.: Units knots: settable false",
      "messagetype": "trigger_onRequest_AMBIENT WIND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT WIND X",
      "displaytitle": "AMBIENT WIND X (Poll)",
      "description": "Wind component in East/West direction.: Units Meters per second: settable false",
      "messagetype": "trigger_AMBIENT WIND X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT WIND X",
      "displaytitle": "AMBIENT WIND X (OnChange)",
      "description": "Wind component in East/West direction.: Units Meters per second: settable false",
      "messagetype": "trigger_onChange_AMBIENT WIND X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT WIND X",
      "displaytitle": "AMBIENT WIND X (OnRequest)",
      "description": "Wind component in East/West direction.: Units Meters per second: settable false",
      "messagetype": "trigger_onRequest_AMBIENT WIND X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT WIND Y",
      "displaytitle": "AMBIENT WIND Y (Poll)",
      "description": "Wind component in vertical direction.: Units Meters per second: settable false",
      "messagetype": "trigger_AMBIENT WIND Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT WIND Y",
      "displaytitle": "AMBIENT WIND Y (OnChange)",
      "description": "Wind component in vertical direction.: Units Meters per second: settable false",
      "messagetype": "trigger_onChange_AMBIENT WIND Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT WIND Y",
      "displaytitle": "AMBIENT WIND Y (OnRequest)",
      "description": "Wind component in vertical direction.: Units Meters per second: settable false",
      "messagetype": "trigger_onRequest_AMBIENT WIND Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AMBIENT WIND Z",
      "displaytitle": "AMBIENT WIND Z (Poll)",
      "description": "Wind component in North/South direction.: Units Meters per second: settable false",
      "messagetype": "trigger_AMBIENT WIND Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AMBIENT WIND Z",
      "displaytitle": "AMBIENT WIND Z (OnChange)",
      "description": "Wind component in North/South direction.: Units Meters per second: settable false",
      "messagetype": "trigger_onChange_AMBIENT WIND Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AMBIENT WIND Z",
      "displaytitle": "AMBIENT WIND Z (OnRequest)",
      "description": "Wind component in North/South direction.: Units Meters per second: settable false",
      "messagetype": "trigger_onRequest_AMBIENT WIND Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ANEMOMETER PCT RPM",
      "displaytitle": "ANEMOMETER PCT RPM (Poll)",
      "description": "Anemometer rpm as a percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_ANEMOMETER PCT RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ANEMOMETER PCT RPM",
      "displaytitle": "ANEMOMETER PCT RPM (OnChange)",
      "description": "Anemometer rpm as a percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ANEMOMETER PCT RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ANEMOMETER PCT RPM",
      "displaytitle": "ANEMOMETER PCT RPM (OnRequest)",
      "description": "Anemometer rpm as a percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ANEMOMETER PCT RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ANGLE OF ATTACK INDICATOR",
      "displaytitle": "ANGLE OF ATTACK INDICATOR (Poll)",
      "description": "AoA indication.: Units radians: settable false",
      "messagetype": "trigger_ANGLE OF ATTACK INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ANGLE OF ATTACK INDICATOR",
      "displaytitle": "ANGLE OF ATTACK INDICATOR (OnChange)",
      "description": "AoA indication.: Units radians: settable false",
      "messagetype": "trigger_onChange_ANGLE OF ATTACK INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ANGLE OF ATTACK INDICATOR",
      "displaytitle": "ANGLE OF ATTACK INDICATOR (OnRequest)",
      "description": "AoA indication.: Units radians: settable false",
      "messagetype": "trigger_onRequest_ANGLE OF ATTACK INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ANIMATION DELTA TIME",
      "displaytitle": "ANIMATION DELTA TIME (Poll)",
      "description": "Difference of time between the current frame and the last frame where this SimObject has been animated: Units seconds: settable false",
      "messagetype": "trigger_ANIMATION DELTA TIME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ANIMATION DELTA TIME",
      "displaytitle": "ANIMATION DELTA TIME (OnChange)",
      "description": "Difference of time between the current frame and the last frame where this SimObject has been animated: Units seconds: settable false",
      "messagetype": "trigger_onChange_ANIMATION DELTA TIME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ANIMATION DELTA TIME",
      "displaytitle": "ANIMATION DELTA TIME (OnRequest)",
      "description": "Difference of time between the current frame and the last frame where this SimObject has been animated: Units seconds: settable false",
      "messagetype": "trigger_onRequest_ANIMATION DELTA TIME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ANTISKID BRAKES ACTIVE",
      "displaytitle": "ANTISKID BRAKES ACTIVE (Poll)",
      "description": "True if antiskid brakes active. This can be set using the AntiSkidActive parameter: Units bool: settable false",
      "messagetype": "trigger_ANTISKID BRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ANTISKID BRAKES ACTIVE",
      "displaytitle": "ANTISKID BRAKES ACTIVE (OnChange)",
      "description": "True if antiskid brakes active. This can be set using the AntiSkidActive parameter: Units bool: settable false",
      "messagetype": "trigger_onChange_ANTISKID BRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ANTISKID BRAKES ACTIVE",
      "displaytitle": "ANTISKID BRAKES ACTIVE (OnRequest)",
      "description": "True if antiskid brakes active. This can be set using the AntiSkidActive parameter: Units bool: settable false",
      "messagetype": "trigger_onRequest_ANTISKID BRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APPLY HEAT TO SYSTEMS",
      "displaytitle": "APPLY HEAT TO SYSTEMS (Poll)",
      "description": "Used when too close to a fire.: Units bool: settable true",
      "messagetype": "trigger_APPLY HEAT TO SYSTEMS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_APPLY HEAT TO SYSTEMS",
      "displaytitle": "APPLY HEAT TO SYSTEMS (OnChange)",
      "description": "Used when too close to a fire.: Units bool: settable true",
      "messagetype": "trigger_onChange_APPLY HEAT TO SYSTEMS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_APPLY HEAT TO SYSTEMS",
      "displaytitle": "APPLY HEAT TO SYSTEMS (OnRequest)",
      "description": "Used when too close to a fire.: Units bool: settable true",
      "messagetype": "trigger_onRequest_APPLY HEAT TO SYSTEMS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APU BLEED PRESSURE RECEIVED BY ENGINE",
      "displaytitle": "APU BLEED PRESSURE RECEIVED BY ENGINE (Poll)",
      "description": "Bleed air pressure received by the engine from the APU: Units pounds: settable false",
      "messagetype": "trigger_APU BLEED PRESSURE RECEIVED BY ENGINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_APU BLEED PRESSURE RECEIVED BY ENGINE",
      "displaytitle": "APU BLEED PRESSURE RECEIVED BY ENGINE (OnChange)",
      "description": "Bleed air pressure received by the engine from the APU: Units pounds: settable false",
      "messagetype": "trigger_onChange_APU BLEED PRESSURE RECEIVED BY ENGINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_APU BLEED PRESSURE RECEIVED BY ENGINE",
      "displaytitle": "APU BLEED PRESSURE RECEIVED BY ENGINE (OnRequest)",
      "description": "Bleed air pressure received by the engine from the APU: Units pounds: settable false",
      "messagetype": "trigger_onRequest_APU BLEED PRESSURE RECEIVED BY ENGINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APU GENERATOR ACTIVE:index",
      "displaytitle": "APU GENERATOR ACTIVE:index (Poll)",
      "description": "Set or get whether an APU is active (true) or not (false). Takes an index to be able to have multiple generators on a single APU: Units bool: settable true",
      "messagetype": "trigger_APU GENERATOR ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_APU GENERATOR ACTIVE:index",
      "displaytitle": "APU GENERATOR ACTIVE:index (OnChange)",
      "description": "Set or get whether an APU is active (true) or not (false). Takes an index to be able to have multiple generators on a single APU: Units bool: settable true",
      "messagetype": "trigger_onChange_APU GENERATOR ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_APU GENERATOR ACTIVE:index",
      "displaytitle": "APU GENERATOR ACTIVE:index (OnRequest)",
      "description": "Set or get whether an APU is active (true) or not (false). Takes an index to be able to have multiple generators on a single APU: Units bool: settable true",
      "messagetype": "trigger_onRequest_APU GENERATOR ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "APU GENERATOR SWITCH:index",
      "displaytitle": "APU GENERATOR SWITCH:index (Poll)",
      "description": "Enables or disables the APU for an engine. Takes an index to be able to have multiple generators on a single APU: Units bool: settable false",
      "messagetype": "trigger_APU GENERATOR SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_APU GENERATOR SWITCH:index",
      "displaytitle": "APU GENERATOR SWITCH:index (OnChange)",
      "description": "Enables or disables the APU for an engine. Takes an index to be able to have multiple generators on a single APU: Units bool: settable false",
      "messagetype": "trigger_onChange_APU GENERATOR SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_APU GENERATOR SWITCH:index",
      "displaytitle": "APU GENERATOR SWITCH:index (OnRequest)",
      "description": "Enables or disables the APU for an engine. Takes an index to be able to have multiple generators on a single APU: Units bool: settable false",
      "messagetype": "trigger_onRequest_APU GENERATOR SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "APU ON FIRE DETECTED",
      "displaytitle": "APU ON FIRE DETECTED (Poll)",
      "description": "Will return true if the APU is on fire, or false otherwise: Units bool: settable false",
      "messagetype": "trigger_APU ON FIRE DETECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_APU ON FIRE DETECTED",
      "displaytitle": "APU ON FIRE DETECTED (OnChange)",
      "description": "Will return true if the APU is on fire, or false otherwise: Units bool: settable false",
      "messagetype": "trigger_onChange_APU ON FIRE DETECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_APU ON FIRE DETECTED",
      "displaytitle": "APU ON FIRE DETECTED (OnRequest)",
      "description": "Will return true if the APU is on fire, or false otherwise: Units bool: settable false",
      "messagetype": "trigger_onRequest_APU ON FIRE DETECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APU PCT RPM",
      "displaytitle": "APU PCT RPM (Poll)",
      "description": "Auxiliary power unit RPM, as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_APU PCT RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_APU PCT RPM",
      "displaytitle": "APU PCT RPM (OnChange)",
      "description": "Auxiliary power unit RPM, as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_APU PCT RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_APU PCT RPM",
      "displaytitle": "APU PCT RPM (OnRequest)",
      "description": "Auxiliary power unit RPM, as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_APU PCT RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APU PCT STARTER",
      "displaytitle": "APU PCT STARTER (Poll)",
      "description": "Auxiliary power unit starter, as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_APU PCT STARTER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_APU PCT STARTER",
      "displaytitle": "APU PCT STARTER (OnChange)",
      "description": "Auxiliary power unit starter, as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_APU PCT STARTER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_APU PCT STARTER",
      "displaytitle": "APU PCT STARTER (OnRequest)",
      "description": "Auxiliary power unit starter, as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_APU PCT STARTER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APU SWITCH",
      "displaytitle": "APU SWITCH (Poll)",
      "description": "Boolean, whether or not the APU is switched on: Units bool: settable true",
      "messagetype": "trigger_APU SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_APU SWITCH",
      "displaytitle": "APU SWITCH (OnChange)",
      "description": "Boolean, whether or not the APU is switched on: Units bool: settable true",
      "messagetype": "trigger_onChange_APU SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_APU SWITCH",
      "displaytitle": "APU SWITCH (OnRequest)",
      "description": "Boolean, whether or not the APU is switched on: Units bool: settable true",
      "messagetype": "trigger_onRequest_APU SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APU VOLTS:index",
      "displaytitle": "APU VOLTS:index (Poll)",
      "description": "The volts from the APU to the selected engine. Takes an index to be able to have multiple generators on a single APU: Units volts: settable false",
      "messagetype": "trigger_APU VOLTS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_APU VOLTS:index",
      "displaytitle": "APU VOLTS:index (OnChange)",
      "description": "The volts from the APU to the selected engine. Takes an index to be able to have multiple generators on a single APU: Units volts: settable false",
      "messagetype": "trigger_onChange_APU VOLTS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_APU VOLTS:index",
      "displaytitle": "APU VOLTS:index (OnRequest)",
      "description": "The volts from the APU to the selected engine. Takes an index to be able to have multiple generators on a single APU: Units volts: settable false",
      "messagetype": "trigger_onRequest_APU VOLTS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ARTIFICIAL GROUND ELEVATION",
      "displaytitle": "ARTIFICIAL GROUND ELEVATION (Poll)",
      "description": "In case scenery is not loaded for AI planes, this variable can be used to set a default surface elevation.: Units feet: settable false",
      "messagetype": "trigger_ARTIFICIAL GROUND ELEVATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ARTIFICIAL GROUND ELEVATION",
      "displaytitle": "ARTIFICIAL GROUND ELEVATION (OnChange)",
      "description": "In case scenery is not loaded for AI planes, this variable can be used to set a default surface elevation.: Units feet: settable false",
      "messagetype": "trigger_onChange_ARTIFICIAL GROUND ELEVATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ARTIFICIAL GROUND ELEVATION",
      "displaytitle": "ARTIFICIAL GROUND ELEVATION (OnRequest)",
      "description": "In case scenery is not loaded for AI planes, this variable can be used to set a default surface elevation.: Units feet: settable false",
      "messagetype": "trigger_onRequest_ARTIFICIAL GROUND ELEVATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ASSISTANCE LANDING ENABLED",
      "displaytitle": "ASSISTANCE LANDING ENABLED (Poll)",
      "description": "Returns whether landing assistance has been enabled or not: Units bool: settable false",
      "messagetype": "trigger_ASSISTANCE LANDING ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ASSISTANCE LANDING ENABLED",
      "displaytitle": "ASSISTANCE LANDING ENABLED (OnChange)",
      "description": "Returns whether landing assistance has been enabled or not: Units bool: settable false",
      "messagetype": "trigger_onChange_ASSISTANCE LANDING ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ASSISTANCE LANDING ENABLED",
      "displaytitle": "ASSISTANCE LANDING ENABLED (OnRequest)",
      "description": "Returns whether landing assistance has been enabled or not: Units bool: settable false",
      "messagetype": "trigger_onRequest_ASSISTANCE LANDING ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ASSISTANCE TAKEOFF ENABLED",
      "displaytitle": "ASSISTANCE TAKEOFF ENABLED (Poll)",
      "description": "Returns whether takeoff assistance has been enabled or not: Units bool: settable false",
      "messagetype": "trigger_ASSISTANCE TAKEOFF ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ASSISTANCE TAKEOFF ENABLED",
      "displaytitle": "ASSISTANCE TAKEOFF ENABLED (OnChange)",
      "description": "Returns whether takeoff assistance has been enabled or not: Units bool: settable false",
      "messagetype": "trigger_onChange_ASSISTANCE TAKEOFF ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ASSISTANCE TAKEOFF ENABLED",
      "displaytitle": "ASSISTANCE TAKEOFF ENABLED (OnRequest)",
      "description": "Returns whether takeoff assistance has been enabled or not: Units bool: settable false",
      "messagetype": "trigger_onRequest_ASSISTANCE TAKEOFF ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC AIRLINE",
      "displaytitle": "ATC AIRLINE (Poll)",
      "description": "The name of the Airline used by ATC, as a string with a maximum length of 50 characters.: Units null: settable true",
      "messagetype": "trigger_ATC AIRLINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC AIRLINE",
      "displaytitle": "ATC AIRLINE (OnChange)",
      "description": "The name of the Airline used by ATC, as a string with a maximum length of 50 characters.: Units null: settable true",
      "messagetype": "trigger_onChange_ATC AIRLINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC AIRLINE",
      "displaytitle": "ATC AIRLINE (OnRequest)",
      "description": "The name of the Airline used by ATC, as a string with a maximum length of 50 characters.: Units null: settable true",
      "messagetype": "trigger_onRequest_ATC AIRLINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC AIRPORT IS TOWERED",
      "displaytitle": "ATC AIRPORT IS TOWERED (Poll)",
      "description": "If the airport is controlled, this boolean is true.: Units bool: settable false",
      "messagetype": "trigger_ATC AIRPORT IS TOWERED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC AIRPORT IS TOWERED",
      "displaytitle": "ATC AIRPORT IS TOWERED (OnChange)",
      "description": "If the airport is controlled, this boolean is true.: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC AIRPORT IS TOWERED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC AIRPORT IS TOWERED",
      "displaytitle": "ATC AIRPORT IS TOWERED (OnRequest)",
      "description": "If the airport is controlled, this boolean is true.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC AIRPORT IS TOWERED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC CLEARED IFR",
      "displaytitle": "ATC CLEARED IFR (Poll)",
      "description": "Returns whether or not the user has filed an IFR flightplan that has been cleared by the sim ATC: Units bool: settable false",
      "messagetype": "trigger_ATC CLEARED IFR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC CLEARED IFR",
      "displaytitle": "ATC CLEARED IFR (OnChange)",
      "description": "Returns whether or not the user has filed an IFR flightplan that has been cleared by the sim ATC: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC CLEARED IFR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC CLEARED IFR",
      "displaytitle": "ATC CLEARED IFR (OnRequest)",
      "description": "Returns whether or not the user has filed an IFR flightplan that has been cleared by the sim ATC: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC CLEARED IFR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC CLEARED LANDING",
      "displaytitle": "ATC CLEARED LANDING (Poll)",
      "description": "Whether the ATC has cleared the plane for landing.: Units bool: settable false",
      "messagetype": "trigger_ATC CLEARED LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC CLEARED LANDING",
      "displaytitle": "ATC CLEARED LANDING (OnChange)",
      "description": "Whether the ATC has cleared the plane for landing.: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC CLEARED LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC CLEARED LANDING",
      "displaytitle": "ATC CLEARED LANDING (OnRequest)",
      "description": "Whether the ATC has cleared the plane for landing.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC CLEARED LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC CLEARED TAKEOFF",
      "displaytitle": "ATC CLEARED TAKEOFF (Poll)",
      "description": "Whether the ATC has cleared the plane for takeoff.: Units bool: settable false",
      "messagetype": "trigger_ATC CLEARED TAKEOFF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC CLEARED TAKEOFF",
      "displaytitle": "ATC CLEARED TAKEOFF (OnChange)",
      "description": "Whether the ATC has cleared the plane for takeoff.: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC CLEARED TAKEOFF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC CLEARED TAKEOFF",
      "displaytitle": "ATC CLEARED TAKEOFF (OnRequest)",
      "description": "Whether the ATC has cleared the plane for takeoff.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC CLEARED TAKEOFF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC CLEARED TAXI",
      "displaytitle": "ATC CLEARED TAXI (Poll)",
      "description": "Whether the ATC has cleared the plane for taxi.: Units bool: settable false",
      "messagetype": "trigger_ATC CLEARED TAXI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC CLEARED TAXI",
      "displaytitle": "ATC CLEARED TAXI (OnChange)",
      "description": "Whether the ATC has cleared the plane for taxi.: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC CLEARED TAXI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC CLEARED TAXI",
      "displaytitle": "ATC CLEARED TAXI (OnRequest)",
      "description": "Whether the ATC has cleared the plane for taxi.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC CLEARED TAXI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC CURRENT WAYPOINT ALTITUDE",
      "displaytitle": "ATC CURRENT WAYPOINT ALTITUDE (Poll)",
      "description": "Returns the target altitude for the current ATC flightplan waypoint.: Units bool: settable false",
      "messagetype": "trigger_ATC CURRENT WAYPOINT ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC CURRENT WAYPOINT ALTITUDE",
      "displaytitle": "ATC CURRENT WAYPOINT ALTITUDE (OnChange)",
      "description": "Returns the target altitude for the current ATC flightplan waypoint.: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC CURRENT WAYPOINT ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC CURRENT WAYPOINT ALTITUDE",
      "displaytitle": "ATC CURRENT WAYPOINT ALTITUDE (OnRequest)",
      "description": "Returns the target altitude for the current ATC flightplan waypoint.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC CURRENT WAYPOINT ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC FLIGHT NUMBER",
      "displaytitle": "ATC FLIGHT NUMBER (Poll)",
      "description": "Flight Number used by ATC, as a string with a maximum number of 6 characters.: Units null: settable true",
      "messagetype": "trigger_ATC FLIGHT NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC FLIGHT NUMBER",
      "displaytitle": "ATC FLIGHT NUMBER (OnChange)",
      "description": "Flight Number used by ATC, as a string with a maximum number of 6 characters.: Units null: settable true",
      "messagetype": "trigger_onChange_ATC FLIGHT NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC FLIGHT NUMBER",
      "displaytitle": "ATC FLIGHT NUMBER (OnRequest)",
      "description": "Flight Number used by ATC, as a string with a maximum number of 6 characters.: Units null: settable true",
      "messagetype": "trigger_onRequest_ATC FLIGHT NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC FLIGHTPLAN DIFF ALT",
      "displaytitle": "ATC FLIGHTPLAN DIFF ALT (Poll)",
      "description": "Altitude between the position of the aircraft and his closest waypoints in the flightplan.: Units meters: settable false",
      "messagetype": "trigger_ATC FLIGHTPLAN DIFF ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC FLIGHTPLAN DIFF ALT",
      "displaytitle": "ATC FLIGHTPLAN DIFF ALT (OnChange)",
      "description": "Altitude between the position of the aircraft and his closest waypoints in the flightplan.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC FLIGHTPLAN DIFF ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC FLIGHTPLAN DIFF ALT",
      "displaytitle": "ATC FLIGHTPLAN DIFF ALT (OnRequest)",
      "description": "Altitude between the position of the aircraft and his closest waypoints in the flightplan.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC FLIGHTPLAN DIFF ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC FLIGHTPLAN DIFF DISTANCE",
      "displaytitle": "ATC FLIGHTPLAN DIFF DISTANCE (Poll)",
      "description": "Returns the lateral distance the user's plane is from the ATC flight plan track.: Units meters: settable false",
      "messagetype": "trigger_ATC FLIGHTPLAN DIFF DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC FLIGHTPLAN DIFF DISTANCE",
      "displaytitle": "ATC FLIGHTPLAN DIFF DISTANCE (OnChange)",
      "description": "Returns the lateral distance the user's plane is from the ATC flight plan track.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC FLIGHTPLAN DIFF DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC FLIGHTPLAN DIFF DISTANCE",
      "displaytitle": "ATC FLIGHTPLAN DIFF DISTANCE (OnRequest)",
      "description": "Returns the lateral distance the user's plane is from the ATC flight plan track.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC FLIGHTPLAN DIFF DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC FLIGHTPLAN DIFF HEADING",
      "displaytitle": "ATC FLIGHTPLAN DIFF HEADING (Poll)",
      "description": "Heading between the position of the aircraft and his closest waypoints in the flightplan.: Units degrees: settable false",
      "messagetype": "trigger_ATC FLIGHTPLAN DIFF HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC FLIGHTPLAN DIFF HEADING",
      "displaytitle": "ATC FLIGHTPLAN DIFF HEADING (OnChange)",
      "description": "Heading between the position of the aircraft and his closest waypoints in the flightplan.: Units degrees: settable false",
      "messagetype": "trigger_onChange_ATC FLIGHTPLAN DIFF HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC FLIGHTPLAN DIFF HEADING",
      "displaytitle": "ATC FLIGHTPLAN DIFF HEADING (OnRequest)",
      "description": "Heading between the position of the aircraft and his closest waypoints in the flightplan.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_ATC FLIGHTPLAN DIFF HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC HEAVY",
      "displaytitle": "ATC HEAVY (Poll)",
      "description": "Is this aircraft recognized by ATC as heavy.: Units bool: settable true",
      "messagetype": "trigger_ATC HEAVY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC HEAVY",
      "displaytitle": "ATC HEAVY (OnChange)",
      "description": "Is this aircraft recognized by ATC as heavy.: Units bool: settable true",
      "messagetype": "trigger_onChange_ATC HEAVY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC HEAVY",
      "displaytitle": "ATC HEAVY (OnRequest)",
      "description": "Is this aircraft recognized by ATC as heavy.: Units bool: settable true",
      "messagetype": "trigger_onRequest_ATC HEAVY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC ID",
      "displaytitle": "ATC ID (Poll)",
      "description": "ID used by ATC, as a string with a maximum number of 10 characters.: Units null: settable true",
      "messagetype": "trigger_ATC ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC ID",
      "displaytitle": "ATC ID (OnChange)",
      "description": "ID used by ATC, as a string with a maximum number of 10 characters.: Units null: settable true",
      "messagetype": "trigger_onChange_ATC ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC ID",
      "displaytitle": "ATC ID (OnRequest)",
      "description": "ID used by ATC, as a string with a maximum number of 10 characters.: Units null: settable true",
      "messagetype": "trigger_onRequest_ATC ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC IFR FP TO REQUEST",
      "displaytitle": "ATC IFR FP TO REQUEST (Poll)",
      "description": "Returns true if the user has a valid IFR flight plan they can as for clearance for with ATC at the airport they are currently at.: Units bool: settable false",
      "messagetype": "trigger_ATC IFR FP TO REQUEST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC IFR FP TO REQUEST",
      "displaytitle": "ATC IFR FP TO REQUEST (OnChange)",
      "description": "Returns true if the user has a valid IFR flight plan they can as for clearance for with ATC at the airport they are currently at.: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC IFR FP TO REQUEST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC IFR FP TO REQUEST",
      "displaytitle": "ATC IFR FP TO REQUEST (OnRequest)",
      "description": "Returns true if the user has a valid IFR flight plan they can as for clearance for with ATC at the airport they are currently at.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC IFR FP TO REQUEST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC MODEL",
      "displaytitle": "ATC MODEL (Poll)",
      "description": "Model used by ATC, as a string with a maximum number of 10 characters.: Units null: settable false",
      "messagetype": "trigger_ATC MODEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC MODEL",
      "displaytitle": "ATC MODEL (OnChange)",
      "description": "Model used by ATC, as a string with a maximum number of 10 characters.: Units null: settable false",
      "messagetype": "trigger_onChange_ATC MODEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC MODEL",
      "displaytitle": "ATC MODEL (OnRequest)",
      "description": "Model used by ATC, as a string with a maximum number of 10 characters.: Units null: settable false",
      "messagetype": "trigger_onRequest_ATC MODEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC ON PARKING SPOT",
      "displaytitle": "ATC ON PARKING SPOT (Poll)",
      "description": "Is ATC aircraft on parking spot.: Units bool: settable false",
      "messagetype": "trigger_ATC ON PARKING SPOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC ON PARKING SPOT",
      "displaytitle": "ATC ON PARKING SPOT (OnChange)",
      "description": "Is ATC aircraft on parking spot.: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC ON PARKING SPOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC ON PARKING SPOT",
      "displaytitle": "ATC ON PARKING SPOT (OnRequest)",
      "description": "Is ATC aircraft on parking spot.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC ON PARKING SPOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC PREVIOUS WAYPOINT ALTITUDE",
      "displaytitle": "ATC PREVIOUS WAYPOINT ALTITUDE (Poll)",
      "description": "Returns the target altitude for the previous ATC flightplan waypoint.: Units meters: settable false",
      "messagetype": "trigger_ATC PREVIOUS WAYPOINT ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC PREVIOUS WAYPOINT ALTITUDE",
      "displaytitle": "ATC PREVIOUS WAYPOINT ALTITUDE (OnChange)",
      "description": "Returns the target altitude for the previous ATC flightplan waypoint.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC PREVIOUS WAYPOINT ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC PREVIOUS WAYPOINT ALTITUDE",
      "displaytitle": "ATC PREVIOUS WAYPOINT ALTITUDE (OnRequest)",
      "description": "Returns the target altitude for the previous ATC flightplan waypoint.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC PREVIOUS WAYPOINT ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY AIRPORT NAME",
      "displaytitle": "ATC RUNWAY AIRPORT NAME (Poll)",
      "description": "The name of the airport of the runway assigned by the ATC. Returns \"\" if no runway is assigned.: Units null: settable false",
      "messagetype": "trigger_ATC RUNWAY AIRPORT NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY AIRPORT NAME",
      "displaytitle": "ATC RUNWAY AIRPORT NAME (OnChange)",
      "description": "The name of the airport of the runway assigned by the ATC. Returns \"\" if no runway is assigned.: Units null: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY AIRPORT NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY AIRPORT NAME",
      "displaytitle": "ATC RUNWAY AIRPORT NAME (OnRequest)",
      "description": "The name of the airport of the runway assigned by the ATC. Returns \"\" if no runway is assigned.: Units null: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY AIRPORT NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY DISTANCE",
      "displaytitle": "ATC RUNWAY DISTANCE (Poll)",
      "description": "This float represents the distance between the player's plane and the center of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY DISTANCE",
      "displaytitle": "ATC RUNWAY DISTANCE (OnChange)",
      "description": "This float represents the distance between the player's plane and the center of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY DISTANCE",
      "displaytitle": "ATC RUNWAY DISTANCE (OnRequest)",
      "description": "This float represents the distance between the player's plane and the center of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY END DISTANCE",
      "displaytitle": "ATC RUNWAY END DISTANCE (Poll)",
      "description": "This is a float corresponding to the horizontal distance between the player's plane and the end of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY END DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY END DISTANCE",
      "displaytitle": "ATC RUNWAY END DISTANCE (OnChange)",
      "description": "This is a float corresponding to the horizontal distance between the player's plane and the end of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY END DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY END DISTANCE",
      "displaytitle": "ATC RUNWAY END DISTANCE (OnRequest)",
      "description": "This is a float corresponding to the horizontal distance between the player's plane and the end of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY END DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY HEADING DEGREES TRUE",
      "displaytitle": "ATC RUNWAY HEADING DEGREES TRUE (Poll)",
      "description": "This float represents the true heading of the runway selected by the ATC.: Units degrees: settable false",
      "messagetype": "trigger_ATC RUNWAY HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY HEADING DEGREES TRUE",
      "displaytitle": "ATC RUNWAY HEADING DEGREES TRUE (OnChange)",
      "description": "This float represents the true heading of the runway selected by the ATC.: Units degrees: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY HEADING DEGREES TRUE",
      "displaytitle": "ATC RUNWAY HEADING DEGREES TRUE (OnRequest)",
      "description": "This float represents the true heading of the runway selected by the ATC.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY LENGTH",
      "displaytitle": "ATC RUNWAY LENGTH (Poll)",
      "description": "The length of the runway assigned by the ATC. Returns -1 if no runway is assigned.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY LENGTH",
      "displaytitle": "ATC RUNWAY LENGTH (OnChange)",
      "description": "The length of the runway assigned by the ATC. Returns -1 if no runway is assigned.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY LENGTH",
      "displaytitle": "ATC RUNWAY LENGTH (OnRequest)",
      "description": "The length of the runway assigned by the ATC. Returns -1 if no runway is assigned.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY RELATIVE POSITION X",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION X (Poll)",
      "description": "This is a float corresponding to the player's main gear relative X (transverse) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY RELATIVE POSITION X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY RELATIVE POSITION X",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION X (OnChange)",
      "description": "This is a float corresponding to the player's main gear relative X (transverse) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY RELATIVE POSITION X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY RELATIVE POSITION X",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION X (OnRequest)",
      "description": "This is a float corresponding to the player's main gear relative X (transverse) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY RELATIVE POSITION X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY RELATIVE POSITION Y",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION Y (Poll)",
      "description": "This is a float corresponding to the player's main gear relative Y (height) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY RELATIVE POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY RELATIVE POSITION Y",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION Y (OnChange)",
      "description": "This is a float corresponding to the player's main gear relative Y (height) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY RELATIVE POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY RELATIVE POSITION Y",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION Y (OnRequest)",
      "description": "This is a float corresponding to the player's main gear relative Y (height) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY RELATIVE POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY RELATIVE POSITION Z",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION Z (Poll)",
      "description": "This is a float corresponding to the player's main gear relative Z (longitudinal) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY RELATIVE POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY RELATIVE POSITION Z",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION Z (OnChange)",
      "description": "This is a float corresponding to the player's main gear relative Z (longitudinal) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY RELATIVE POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY RELATIVE POSITION Z",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION Z (OnRequest)",
      "description": "This is a float corresponding to the player's main gear relative Z (longitudinal) position on the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY RELATIVE POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY SELECTED",
      "displaytitle": "ATC RUNWAY SELECTED (Poll)",
      "description": "This is a boolean corresponding to whether or not the ATC has pre-selected a runway for the player's plane. If this is false, every other ATC RUNWAY * SimVar will return default values.: Units bool: settable false",
      "messagetype": "trigger_ATC RUNWAY SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY SELECTED",
      "displaytitle": "ATC RUNWAY SELECTED (OnChange)",
      "description": "This is a boolean corresponding to whether or not the ATC has pre-selected a runway for the player's plane. If this is false, every other ATC RUNWAY * SimVar will return default values.: Units bool: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY SELECTED",
      "displaytitle": "ATC RUNWAY SELECTED (OnRequest)",
      "description": "This is a boolean corresponding to whether or not the ATC has pre-selected a runway for the player's plane. If this is false, every other ATC RUNWAY * SimVar will return default values.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY START DISTANCE",
      "displaytitle": "ATC RUNWAY START DISTANCE (Poll)",
      "description": "This is a float corresponding to the horizontal distance between the player's plane and the start of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY START DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY START DISTANCE",
      "displaytitle": "ATC RUNWAY START DISTANCE (OnChange)",
      "description": "This is a float corresponding to the horizontal distance between the player's plane and the start of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY START DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY START DISTANCE",
      "displaytitle": "ATC RUNWAY START DISTANCE (OnRequest)",
      "description": "This is a float corresponding to the horizontal distance between the player's plane and the start of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY START DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY TDPOINT RELATIVE POSITION X",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION X (Poll)",
      "description": "This float represents the player's main gear relative X (transverse) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY TDPOINT RELATIVE POSITION X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY TDPOINT RELATIVE POSITION X",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION X (OnChange)",
      "description": "This float represents the player's main gear relative X (transverse) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY TDPOINT RELATIVE POSITION X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY TDPOINT RELATIVE POSITION X",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION X (OnRequest)",
      "description": "This float represents the player's main gear relative X (transverse) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY TDPOINT RELATIVE POSITION X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY TDPOINT RELATIVE POSITION Y",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION Y (Poll)",
      "description": "This float represents the player's main gear relative Y (height) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY TDPOINT RELATIVE POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY TDPOINT RELATIVE POSITION Y",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION Y (OnChange)",
      "description": "This float represents the player's main gear relative Y (height) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY TDPOINT RELATIVE POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY TDPOINT RELATIVE POSITION Y",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION Y (OnRequest)",
      "description": "This float represents the player's main gear relative Y (height) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY TDPOINT RELATIVE POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY TDPOINT RELATIVE POSITION Z",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION Z (Poll)",
      "description": "This float represents the player's main relative Z (longitudinal) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY TDPOINT RELATIVE POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY TDPOINT RELATIVE POSITION Z",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION Z (OnChange)",
      "description": "This float represents the player's main relative Z (longitudinal) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY TDPOINT RELATIVE POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY TDPOINT RELATIVE POSITION Z",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION Z (OnRequest)",
      "description": "This float represents the player's main relative Z (longitudinal) position according to the aiming point of the runway selected by the ATC.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY TDPOINT RELATIVE POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC RUNWAY WIDTH",
      "displaytitle": "ATC RUNWAY WIDTH (Poll)",
      "description": "The width of the runway assigned by the ATC. Returns -1 if no runway is assigned.: Units meters: settable false",
      "messagetype": "trigger_ATC RUNWAY WIDTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC RUNWAY WIDTH",
      "displaytitle": "ATC RUNWAY WIDTH (OnChange)",
      "description": "The width of the runway assigned by the ATC. Returns -1 if no runway is assigned.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC RUNWAY WIDTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC RUNWAY WIDTH",
      "displaytitle": "ATC RUNWAY WIDTH (OnRequest)",
      "description": "The width of the runway assigned by the ATC. Returns -1 if no runway is assigned.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC RUNWAY WIDTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC SUGGESTED MIN RWY LANDING",
      "displaytitle": "ATC SUGGESTED MIN RWY LANDING (Poll)",
      "description": "Suggested minimum runway length for landing. Used by ATC.: Units feet: settable false",
      "messagetype": "trigger_ATC SUGGESTED MIN RWY LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC SUGGESTED MIN RWY LANDING",
      "displaytitle": "ATC SUGGESTED MIN RWY LANDING (OnChange)",
      "description": "Suggested minimum runway length for landing. Used by ATC.: Units feet: settable false",
      "messagetype": "trigger_onChange_ATC SUGGESTED MIN RWY LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC SUGGESTED MIN RWY LANDING",
      "displaytitle": "ATC SUGGESTED MIN RWY LANDING (OnRequest)",
      "description": "Suggested minimum runway length for landing. Used by ATC.: Units feet: settable false",
      "messagetype": "trigger_onRequest_ATC SUGGESTED MIN RWY LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC SUGGESTED MIN RWY TAKEOFF",
      "displaytitle": "ATC SUGGESTED MIN RWY TAKEOFF (Poll)",
      "description": "Suggested minimum runway length for takeoff. Used by ATC.: Units feet: settable false",
      "messagetype": "trigger_ATC SUGGESTED MIN RWY TAKEOFF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC SUGGESTED MIN RWY TAKEOFF",
      "displaytitle": "ATC SUGGESTED MIN RWY TAKEOFF (OnChange)",
      "description": "Suggested minimum runway length for takeoff. Used by ATC.: Units feet: settable false",
      "messagetype": "trigger_onChange_ATC SUGGESTED MIN RWY TAKEOFF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC SUGGESTED MIN RWY TAKEOFF",
      "displaytitle": "ATC SUGGESTED MIN RWY TAKEOFF (OnRequest)",
      "description": "Suggested minimum runway length for takeoff. Used by ATC.: Units feet: settable false",
      "messagetype": "trigger_onRequest_ATC SUGGESTED MIN RWY TAKEOFF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC TAXIPATH DISTANCE",
      "displaytitle": "ATC TAXIPATH DISTANCE (Poll)",
      "description": "Returns the lateral distance the user's plane is from the path of the currently issued ATC taxi instructions.: Units meters: settable false",
      "messagetype": "trigger_ATC TAXIPATH DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC TAXIPATH DISTANCE",
      "displaytitle": "ATC TAXIPATH DISTANCE (OnChange)",
      "description": "Returns the lateral distance the user's plane is from the path of the currently issued ATC taxi instructions.: Units meters: settable false",
      "messagetype": "trigger_onChange_ATC TAXIPATH DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC TAXIPATH DISTANCE",
      "displaytitle": "ATC TAXIPATH DISTANCE (OnRequest)",
      "description": "Returns the lateral distance the user's plane is from the path of the currently issued ATC taxi instructions.: Units meters: settable false",
      "messagetype": "trigger_onRequest_ATC TAXIPATH DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC TYPE",
      "displaytitle": "ATC TYPE (Poll)",
      "description": "Type used by ATC.: Units null: settable false",
      "messagetype": "trigger_ATC TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATC TYPE",
      "displaytitle": "ATC TYPE (OnChange)",
      "description": "Type used by ATC.: Units null: settable false",
      "messagetype": "trigger_onChange_ATC TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATC TYPE",
      "displaytitle": "ATC TYPE (OnRequest)",
      "description": "Type used by ATC.: Units null: settable false",
      "messagetype": "trigger_onRequest_ATC TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATTITUDE BARS POSITION",
      "displaytitle": "ATTITUDE BARS POSITION (Poll)",
      "description": "AI reference pitch reference bars: Units percent Over 100: settable false",
      "messagetype": "trigger_ATTITUDE BARS POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATTITUDE BARS POSITION",
      "displaytitle": "ATTITUDE BARS POSITION (OnChange)",
      "description": "AI reference pitch reference bars: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ATTITUDE BARS POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATTITUDE BARS POSITION",
      "displaytitle": "ATTITUDE BARS POSITION (OnRequest)",
      "description": "AI reference pitch reference bars: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ATTITUDE BARS POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATTITUDE CAGE",
      "displaytitle": "ATTITUDE CAGE (Poll)",
      "description": "AI caged state: Units bool: settable false",
      "messagetype": "trigger_ATTITUDE CAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATTITUDE CAGE",
      "displaytitle": "ATTITUDE CAGE (OnChange)",
      "description": "AI caged state: Units bool: settable false",
      "messagetype": "trigger_onChange_ATTITUDE CAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATTITUDE CAGE",
      "displaytitle": "ATTITUDE CAGE (OnRequest)",
      "description": "AI caged state: Units bool: settable false",
      "messagetype": "trigger_onRequest_ATTITUDE CAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATTITUDE INDICATOR BANK DEGREES",
      "displaytitle": "ATTITUDE INDICATOR BANK DEGREES (Poll)",
      "description": "AI bank indication: Units radians: settable false",
      "messagetype": "trigger_ATTITUDE INDICATOR BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATTITUDE INDICATOR BANK DEGREES",
      "displaytitle": "ATTITUDE INDICATOR BANK DEGREES (OnChange)",
      "description": "AI bank indication: Units radians: settable false",
      "messagetype": "trigger_onChange_ATTITUDE INDICATOR BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATTITUDE INDICATOR BANK DEGREES",
      "displaytitle": "ATTITUDE INDICATOR BANK DEGREES (OnRequest)",
      "description": "AI bank indication: Units radians: settable false",
      "messagetype": "trigger_onRequest_ATTITUDE INDICATOR BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATTITUDE INDICATOR PITCH DEGREES",
      "displaytitle": "ATTITUDE INDICATOR PITCH DEGREES (Poll)",
      "description": "AI pitch indication: Units radians: settable false",
      "messagetype": "trigger_ATTITUDE INDICATOR PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ATTITUDE INDICATOR PITCH DEGREES",
      "displaytitle": "ATTITUDE INDICATOR PITCH DEGREES (OnChange)",
      "description": "AI pitch indication: Units radians: settable false",
      "messagetype": "trigger_onChange_ATTITUDE INDICATOR PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ATTITUDE INDICATOR PITCH DEGREES",
      "displaytitle": "ATTITUDE INDICATOR PITCH DEGREES (OnRequest)",
      "description": "AI pitch indication: Units radians: settable false",
      "messagetype": "trigger_onRequest_ATTITUDE INDICATOR PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUDIO PANEL AVAILABLE",
      "displaytitle": "AUDIO PANEL AVAILABLE (Poll)",
      "description": "True if the audio panel is available.: Units bool: settable false",
      "messagetype": "trigger_AUDIO PANEL AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUDIO PANEL AVAILABLE",
      "displaytitle": "AUDIO PANEL AVAILABLE (OnChange)",
      "description": "True if the audio panel is available.: Units bool: settable false",
      "messagetype": "trigger_onChange_AUDIO PANEL AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUDIO PANEL AVAILABLE",
      "displaytitle": "AUDIO PANEL AVAILABLE (OnRequest)",
      "description": "True if the audio panel is available.: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUDIO PANEL AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUDIO PANEL VOLUME",
      "displaytitle": "AUDIO PANEL VOLUME (Poll)",
      "description": "The Volume of the Audio Panel.: Units percent: settable false",
      "messagetype": "trigger_AUDIO PANEL VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUDIO PANEL VOLUME",
      "displaytitle": "AUDIO PANEL VOLUME (OnChange)",
      "description": "The Volume of the Audio Panel.: Units percent: settable false",
      "messagetype": "trigger_onChange_AUDIO PANEL VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUDIO PANEL VOLUME",
      "displaytitle": "AUDIO PANEL VOLUME (OnRequest)",
      "description": "The Volume of the Audio Panel.: Units percent: settable false",
      "messagetype": "trigger_onRequest_AUDIO PANEL VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTO BRAKE SWITCH CB",
      "displaytitle": "AUTO BRAKE SWITCH CB (Poll)",
      "description": "Auto brake switch position: Units number: settable false",
      "messagetype": "trigger_AUTO BRAKE SWITCH CB",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTO BRAKE SWITCH CB",
      "displaytitle": "AUTO BRAKE SWITCH CB (OnChange)",
      "description": "Auto brake switch position: Units number: settable false",
      "messagetype": "trigger_onChange_AUTO BRAKE SWITCH CB",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTO BRAKE SWITCH CB",
      "displaytitle": "AUTO BRAKE SWITCH CB (OnRequest)",
      "description": "Auto brake switch position: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTO BRAKE SWITCH CB",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTO COORDINATION",
      "displaytitle": "AUTO COORDINATION (Poll)",
      "description": "Is auto-coordination active.: Units bool: settable true",
      "messagetype": "trigger_AUTO COORDINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTO COORDINATION",
      "displaytitle": "AUTO COORDINATION (OnChange)",
      "description": "Is auto-coordination active.: Units bool: settable true",
      "messagetype": "trigger_onChange_AUTO COORDINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTO COORDINATION",
      "displaytitle": "AUTO COORDINATION (OnRequest)",
      "description": "Is auto-coordination active.: Units bool: settable true",
      "messagetype": "trigger_onRequest_AUTO COORDINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOBRAKES ACTIVE",
      "displaytitle": "AUTOBRAKES ACTIVE (Poll)",
      "description": "Whether or not the AutoBrakes are currently active: Units bool: settable false",
      "messagetype": "trigger_AUTOBRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOBRAKES ACTIVE",
      "displaytitle": "AUTOBRAKES ACTIVE (OnChange)",
      "description": "Whether or not the AutoBrakes are currently active: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOBRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOBRAKES ACTIVE",
      "displaytitle": "AUTOBRAKES ACTIVE (OnRequest)",
      "description": "Whether or not the AutoBrakes are currently active: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOBRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT AIRSPEED ACQUISITION",
      "displaytitle": "AUTOPILOT AIRSPEED ACQUISITION (Poll)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT AIRSPEED ACQUISITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT AIRSPEED ACQUISITION",
      "displaytitle": "AUTOPILOT AIRSPEED ACQUISITION (OnChange)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT AIRSPEED ACQUISITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT AIRSPEED ACQUISITION",
      "displaytitle": "AUTOPILOT AIRSPEED ACQUISITION (OnRequest)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT AIRSPEED ACQUISITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT AIRSPEED HOLD",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD (Poll)",
      "description": "returns whether airspeed hold is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT AIRSPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT AIRSPEED HOLD",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD (OnChange)",
      "description": "returns whether airspeed hold is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT AIRSPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT AIRSPEED HOLD",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD (OnRequest)",
      "description": "returns whether airspeed hold is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT AIRSPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT AIRSPEED HOLD CURRENT",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD CURRENT (Poll)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT AIRSPEED HOLD CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT AIRSPEED HOLD CURRENT",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD CURRENT (OnChange)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT AIRSPEED HOLD CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT AIRSPEED HOLD CURRENT",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD CURRENT (OnRequest)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT AIRSPEED HOLD CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT AIRSPEED HOLD VAR",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD VAR (Poll)",
      "description": "Returns the target holding airspeed for the autopilot: Units knots: settable false",
      "messagetype": "trigger_AUTOPILOT AIRSPEED HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT AIRSPEED HOLD VAR",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD VAR (OnChange)",
      "description": "Returns the target holding airspeed for the autopilot: Units knots: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT AIRSPEED HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT AIRSPEED HOLD VAR",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD VAR (OnRequest)",
      "description": "Returns the target holding airspeed for the autopilot: Units knots: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT AIRSPEED HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT AIRSPEED MAX CALCULATED",
      "displaytitle": "AUTOPILOT AIRSPEED MAX CALCULATED (Poll)",
      "description": "Returns the maximum calculated airspeed (kcas) limit set for the autopilot: Units knots: settable false",
      "messagetype": "trigger_AUTOPILOT AIRSPEED MAX CALCULATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT AIRSPEED MAX CALCULATED",
      "displaytitle": "AUTOPILOT AIRSPEED MAX CALCULATED (OnChange)",
      "description": "Returns the maximum calculated airspeed (kcas) limit set for the autopilot: Units knots: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT AIRSPEED MAX CALCULATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT AIRSPEED MAX CALCULATED",
      "displaytitle": "AUTOPILOT AIRSPEED MAX CALCULATED (OnRequest)",
      "description": "Returns the maximum calculated airspeed (kcas) limit set for the autopilot: Units knots: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT AIRSPEED MAX CALCULATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT AIRSPEED MIN CALCULATED",
      "displaytitle": "AUTOPILOT AIRSPEED MIN CALCULATED (Poll)",
      "description": "Returns the minimum calculated airspeed (kcas) limit set for the autopilot: Units knots: settable false",
      "messagetype": "trigger_AUTOPILOT AIRSPEED MIN CALCULATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT AIRSPEED MIN CALCULATED",
      "displaytitle": "AUTOPILOT AIRSPEED MIN CALCULATED (OnChange)",
      "description": "Returns the minimum calculated airspeed (kcas) limit set for the autopilot: Units knots: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT AIRSPEED MIN CALCULATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT AIRSPEED MIN CALCULATED",
      "displaytitle": "AUTOPILOT AIRSPEED MIN CALCULATED (OnRequest)",
      "description": "Returns the minimum calculated airspeed (kcas) limit set for the autopilot: Units knots: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT AIRSPEED MIN CALCULATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT ALT RADIO MODE",
      "displaytitle": "AUTOPILOT ALT RADIO MODE (Poll)",
      "description": "If enabled the Autopilot will use the Radio Altitude rather than the Indicated Altitude: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT ALT RADIO MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT ALT RADIO MODE",
      "displaytitle": "AUTOPILOT ALT RADIO MODE (OnChange)",
      "description": "If enabled the Autopilot will use the Radio Altitude rather than the Indicated Altitude: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT ALT RADIO MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT ALT RADIO MODE",
      "displaytitle": "AUTOPILOT ALT RADIO MODE (OnRequest)",
      "description": "If enabled the Autopilot will use the Radio Altitude rather than the Indicated Altitude: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT ALT RADIO MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT ALTITUDE ARM",
      "displaytitle": "AUTOPILOT ALTITUDE ARM (Poll)",
      "description": "Returns whether the autopilot is in Altitude Arm mode (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT ALTITUDE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT ALTITUDE ARM",
      "displaytitle": "AUTOPILOT ALTITUDE ARM (OnChange)",
      "description": "Returns whether the autopilot is in Altitude Arm mode (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT ALTITUDE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT ALTITUDE ARM",
      "displaytitle": "AUTOPILOT ALTITUDE ARM (OnRequest)",
      "description": "Returns whether the autopilot is in Altitude Arm mode (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT ALTITUDE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT ALTITUDE LOCK",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK (Poll)",
      "description": "Altitude hold active: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT ALTITUDE LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT ALTITUDE LOCK",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK (OnChange)",
      "description": "Altitude hold active: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT ALTITUDE LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT ALTITUDE LOCK",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK (OnRequest)",
      "description": "Altitude hold active: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT ALTITUDE LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT ALTITUDE LOCK VAR",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK VAR (Poll)",
      "description": "Set or get the slot index which the altitude hold mode will track when captured. See alt_mode_slot_index for more information: Units feet: settable true",
      "messagetype": "trigger_AUTOPILOT ALTITUDE LOCK VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT ALTITUDE LOCK VAR",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK VAR (OnChange)",
      "description": "Set or get the slot index which the altitude hold mode will track when captured. See alt_mode_slot_index for more information: Units feet: settable true",
      "messagetype": "trigger_onChange_AUTOPILOT ALTITUDE LOCK VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT ALTITUDE LOCK VAR",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK VAR (OnRequest)",
      "description": "Set or get the slot index which the altitude hold mode will track when captured. See alt_mode_slot_index for more information: Units feet: settable true",
      "messagetype": "trigger_onRequest_AUTOPILOT ALTITUDE LOCK VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT ALTITUDE MANUALLY TUNABLE",
      "displaytitle": "AUTOPILOT ALTITUDE MANUALLY TUNABLE (Poll)",
      "description": "Whether or not the autopilot altitude is manually tunable or not: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT ALTITUDE MANUALLY TUNABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT ALTITUDE MANUALLY TUNABLE",
      "displaytitle": "AUTOPILOT ALTITUDE MANUALLY TUNABLE (OnChange)",
      "description": "Whether or not the autopilot altitude is manually tunable or not: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT ALTITUDE MANUALLY TUNABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT ALTITUDE MANUALLY TUNABLE",
      "displaytitle": "AUTOPILOT ALTITUDE MANUALLY TUNABLE (OnRequest)",
      "description": "Whether or not the autopilot altitude is manually tunable or not: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT ALTITUDE MANUALLY TUNABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT ALTITUDE SLOT INDEX",
      "displaytitle": "AUTOPILOT ALTITUDE SLOT INDEX (Poll)",
      "description": "Index of the slot that the autopilot will use for the altitude reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT ALTITUDE SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT ALTITUDE SLOT INDEX",
      "displaytitle": "AUTOPILOT ALTITUDE SLOT INDEX (OnChange)",
      "description": "Index of the slot that the autopilot will use for the altitude reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT ALTITUDE SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT ALTITUDE SLOT INDEX",
      "displaytitle": "AUTOPILOT ALTITUDE SLOT INDEX (OnRequest)",
      "description": "Index of the slot that the autopilot will use for the altitude reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT ALTITUDE SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT APPROACH ACTIVE",
      "displaytitle": "AUTOPILOT APPROACH ACTIVE (Poll)",
      "description": "When true, the autopilot is currently flying the approach Flight Plan (the last legs): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT APPROACH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT APPROACH ACTIVE",
      "displaytitle": "AUTOPILOT APPROACH ACTIVE (OnChange)",
      "description": "When true, the autopilot is currently flying the approach Flight Plan (the last legs): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT APPROACH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT APPROACH ACTIVE",
      "displaytitle": "AUTOPILOT APPROACH ACTIVE (OnRequest)",
      "description": "When true, the autopilot is currently flying the approach Flight Plan (the last legs): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT APPROACH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT APPROACH ARM",
      "displaytitle": "AUTOPILOT APPROACH ARM (Poll)",
      "description": "Returns true when the autopilot is active on the approach, once it reaches the adequate condition (in most cases, once it reaches the second-last waypoint of the flightplan): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT APPROACH ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT APPROACH ARM",
      "displaytitle": "AUTOPILOT APPROACH ARM (OnChange)",
      "description": "Returns true when the autopilot is active on the approach, once it reaches the adequate condition (in most cases, once it reaches the second-last waypoint of the flightplan): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT APPROACH ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT APPROACH ARM",
      "displaytitle": "AUTOPILOT APPROACH ARM (OnRequest)",
      "description": "Returns true when the autopilot is active on the approach, once it reaches the adequate condition (in most cases, once it reaches the second-last waypoint of the flightplan): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT APPROACH ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT APPROACH CAPTURED",
      "displaytitle": "AUTOPILOT APPROACH CAPTURED (Poll)",
      "description": "Returns true when the lateral NAV mode is engaged and the angular deviation with the current tuned navigation frequency is less than 5°: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT APPROACH CAPTURED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT APPROACH CAPTURED",
      "displaytitle": "AUTOPILOT APPROACH CAPTURED (OnChange)",
      "description": "Returns true when the lateral NAV mode is engaged and the angular deviation with the current tuned navigation frequency is less than 5°: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT APPROACH CAPTURED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT APPROACH CAPTURED",
      "displaytitle": "AUTOPILOT APPROACH CAPTURED (OnRequest)",
      "description": "Returns true when the lateral NAV mode is engaged and the angular deviation with the current tuned navigation frequency is less than 5°: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT APPROACH CAPTURED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT APPROACH HOLD",
      "displaytitle": "AUTOPILOT APPROACH HOLD (Poll)",
      "description": "Returns whether pproach mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT APPROACH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT APPROACH HOLD",
      "displaytitle": "AUTOPILOT APPROACH HOLD (OnChange)",
      "description": "Returns whether pproach mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT APPROACH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT APPROACH HOLD",
      "displaytitle": "AUTOPILOT APPROACH HOLD (OnRequest)",
      "description": "Returns whether pproach mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT APPROACH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT APPROACH IS LOCALIZER",
      "displaytitle": "AUTOPILOT APPROACH IS LOCALIZER (Poll)",
      "description": "Returns true if the current approach is using a localizer: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT APPROACH IS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT APPROACH IS LOCALIZER",
      "displaytitle": "AUTOPILOT APPROACH IS LOCALIZER (OnChange)",
      "description": "Returns true if the current approach is using a localizer: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT APPROACH IS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT APPROACH IS LOCALIZER",
      "displaytitle": "AUTOPILOT APPROACH IS LOCALIZER (OnRequest)",
      "description": "Returns true if the current approach is using a localizer: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT APPROACH IS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT ATTITUDE HOLD",
      "displaytitle": "AUTOPILOT ATTITUDE HOLD (Poll)",
      "description": "Attitude hold active: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT ATTITUDE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT ATTITUDE HOLD",
      "displaytitle": "AUTOPILOT ATTITUDE HOLD (OnChange)",
      "description": "Attitude hold active: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT ATTITUDE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT ATTITUDE HOLD",
      "displaytitle": "AUTOPILOT ATTITUDE HOLD (OnRequest)",
      "description": "Attitude hold active: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT ATTITUDE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT AVAILABLE",
      "displaytitle": "AUTOPILOT AVAILABLE (Poll)",
      "description": "Available flag: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT AVAILABLE",
      "displaytitle": "AUTOPILOT AVAILABLE (OnChange)",
      "description": "Available flag: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT AVAILABLE",
      "displaytitle": "AUTOPILOT AVAILABLE (OnRequest)",
      "description": "Available flag: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT AVIONICS MANAGED",
      "displaytitle": "AUTOPILOT AVIONICS MANAGED (Poll)",
      "description": "Returns whether the autopilot has active managed avionics (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT AVIONICS MANAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT AVIONICS MANAGED",
      "displaytitle": "AUTOPILOT AVIONICS MANAGED (OnChange)",
      "description": "Returns whether the autopilot has active managed avionics (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT AVIONICS MANAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT AVIONICS MANAGED",
      "displaytitle": "AUTOPILOT AVIONICS MANAGED (OnRequest)",
      "description": "Returns whether the autopilot has active managed avionics (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT AVIONICS MANAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT BACKCOURSE HOLD",
      "displaytitle": "AUTOPILOT BACKCOURSE HOLD (Poll)",
      "description": "Returns whether the autopilot back course mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT BACKCOURSE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT BACKCOURSE HOLD",
      "displaytitle": "AUTOPILOT BACKCOURSE HOLD (OnChange)",
      "description": "Returns whether the autopilot back course mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT BACKCOURSE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT BACKCOURSE HOLD",
      "displaytitle": "AUTOPILOT BACKCOURSE HOLD (OnRequest)",
      "description": "Returns whether the autopilot back course mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT BACKCOURSE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT BANK HOLD",
      "displaytitle": "AUTOPILOT BANK HOLD (Poll)",
      "description": "Returns whether the autopilot bank hold mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT BANK HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT BANK HOLD",
      "displaytitle": "AUTOPILOT BANK HOLD (OnChange)",
      "description": "Returns whether the autopilot bank hold mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT BANK HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT BANK HOLD",
      "displaytitle": "AUTOPILOT BANK HOLD (OnRequest)",
      "description": "Returns whether the autopilot bank hold mode is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT BANK HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT BANK HOLD REF",
      "displaytitle": "AUTOPILOT BANK HOLD REF (Poll)",
      "description": "The current bank-hold bank reference. Note that if you set this, the next frame the value will be overwritten by the engine, so you may need to write to this every game frame to ensure it maintains the required value: Units degrees: settable true",
      "messagetype": "trigger_AUTOPILOT BANK HOLD REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT BANK HOLD REF",
      "displaytitle": "AUTOPILOT BANK HOLD REF (OnChange)",
      "description": "The current bank-hold bank reference. Note that if you set this, the next frame the value will be overwritten by the engine, so you may need to write to this every game frame to ensure it maintains the required value: Units degrees: settable true",
      "messagetype": "trigger_onChange_AUTOPILOT BANK HOLD REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT BANK HOLD REF",
      "displaytitle": "AUTOPILOT BANK HOLD REF (OnRequest)",
      "description": "The current bank-hold bank reference. Note that if you set this, the next frame the value will be overwritten by the engine, so you may need to write to this every game frame to ensure it maintains the required value: Units degrees: settable true",
      "messagetype": "trigger_onRequest_AUTOPILOT BANK HOLD REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT CRUISE SPEED HOLD",
      "displaytitle": "AUTOPILOT CRUISE SPEED HOLD (Poll)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT CRUISE SPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT CRUISE SPEED HOLD",
      "displaytitle": "AUTOPILOT CRUISE SPEED HOLD (OnChange)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT CRUISE SPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT CRUISE SPEED HOLD",
      "displaytitle": "AUTOPILOT CRUISE SPEED HOLD (OnRequest)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT CRUISE SPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT DEFAULT PITCH MODE",
      "displaytitle": "AUTOPILOT DEFAULT PITCH MODE (Poll)",
      "description": "The current default pitch mode of the autopilot as configured in the plane configuration with the parameter default_pitch_mode: Units enum: settable false",
      "messagetype": "trigger_AUTOPILOT DEFAULT PITCH MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT DEFAULT PITCH MODE",
      "displaytitle": "AUTOPILOT DEFAULT PITCH MODE (OnChange)",
      "description": "The current default pitch mode of the autopilot as configured in the plane configuration with the parameter default_pitch_mode: Units enum: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT DEFAULT PITCH MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT DEFAULT PITCH MODE",
      "displaytitle": "AUTOPILOT DEFAULT PITCH MODE (OnRequest)",
      "description": "The current default pitch mode of the autopilot as configured in the plane configuration with the parameter default_pitch_mode: Units enum: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT DEFAULT PITCH MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT DEFAULT ROLL MODE",
      "displaytitle": "AUTOPILOT DEFAULT ROLL MODE (Poll)",
      "description": "The current default roll mode of the autopilot as configured in the plane configuration with the parameter default_bank_mode: Units enum: settable false",
      "messagetype": "trigger_AUTOPILOT DEFAULT ROLL MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT DEFAULT ROLL MODE",
      "displaytitle": "AUTOPILOT DEFAULT ROLL MODE (OnChange)",
      "description": "The current default roll mode of the autopilot as configured in the plane configuration with the parameter default_bank_mode: Units enum: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT DEFAULT ROLL MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT DEFAULT ROLL MODE",
      "displaytitle": "AUTOPILOT DEFAULT ROLL MODE (OnRequest)",
      "description": "The current default roll mode of the autopilot as configured in the plane configuration with the parameter default_bank_mode: Units enum: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT DEFAULT ROLL MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT DISENGAGED",
      "displaytitle": "AUTOPILOT DISENGAGED (Poll)",
      "description": "Returns whether the autopilot has been disengaged (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT DISENGAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT DISENGAGED",
      "displaytitle": "AUTOPILOT DISENGAGED (OnChange)",
      "description": "Returns whether the autopilot has been disengaged (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT DISENGAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT DISENGAGED",
      "displaytitle": "AUTOPILOT DISENGAGED (OnRequest)",
      "description": "Returns whether the autopilot has been disengaged (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT DISENGAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR ACTIVE",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR ACTIVE (Poll)",
      "description": "Flight director active: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT FLIGHT DIRECTOR ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT FLIGHT DIRECTOR ACTIVE",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR ACTIVE (OnChange)",
      "description": "Flight director active: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT FLIGHT DIRECTOR ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT FLIGHT DIRECTOR ACTIVE",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR ACTIVE (OnRequest)",
      "description": "Flight director active: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT FLIGHT DIRECTOR ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR BANK",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR BANK (Poll)",
      "description": "Reference bank angle: Units radians: settable false",
      "messagetype": "trigger_AUTOPILOT FLIGHT DIRECTOR BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT FLIGHT DIRECTOR BANK",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR BANK (OnChange)",
      "description": "Reference bank angle: Units radians: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT FLIGHT DIRECTOR BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT FLIGHT DIRECTOR BANK",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR BANK (OnRequest)",
      "description": "Reference bank angle: Units radians: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT FLIGHT DIRECTOR BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR BANK EX1",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR BANK EX1 (Poll)",
      "description": "Raw reference bank angle: Units radians: settable false",
      "messagetype": "trigger_AUTOPILOT FLIGHT DIRECTOR BANK EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT FLIGHT DIRECTOR BANK EX1",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR BANK EX1 (OnChange)",
      "description": "Raw reference bank angle: Units radians: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT FLIGHT DIRECTOR BANK EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT FLIGHT DIRECTOR BANK EX1",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR BANK EX1 (OnRequest)",
      "description": "Raw reference bank angle: Units radians: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT FLIGHT DIRECTOR BANK EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR PITCH",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR PITCH (Poll)",
      "description": "Reference pitch angle: Units radians: settable false",
      "messagetype": "trigger_AUTOPILOT FLIGHT DIRECTOR PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT FLIGHT DIRECTOR PITCH",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR PITCH (OnChange)",
      "description": "Reference pitch angle: Units radians: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT FLIGHT DIRECTOR PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT FLIGHT DIRECTOR PITCH",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR PITCH (OnRequest)",
      "description": "Reference pitch angle: Units radians: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT FLIGHT DIRECTOR PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR PITCH EX1",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR PITCH EX1 (Poll)",
      "description": "Raw reference pitch angle: Units radians: settable false",
      "messagetype": "trigger_AUTOPILOT FLIGHT DIRECTOR PITCH EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT FLIGHT DIRECTOR PITCH EX1",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR PITCH EX1 (OnChange)",
      "description": "Raw reference pitch angle: Units radians: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT FLIGHT DIRECTOR PITCH EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT FLIGHT DIRECTOR PITCH EX1",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR PITCH EX1 (OnRequest)",
      "description": "Raw reference pitch angle: Units radians: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT FLIGHT DIRECTOR PITCH EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT FLIGHT LEVEL CHANGE",
      "displaytitle": "AUTOPILOT FLIGHT LEVEL CHANGE (Poll)",
      "description": "Boolean, toggles the autopilot Flight Level Change mode: Units bool: settable true",
      "messagetype": "trigger_AUTOPILOT FLIGHT LEVEL CHANGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT FLIGHT LEVEL CHANGE",
      "displaytitle": "AUTOPILOT FLIGHT LEVEL CHANGE (OnChange)",
      "description": "Boolean, toggles the autopilot Flight Level Change mode: Units bool: settable true",
      "messagetype": "trigger_onChange_AUTOPILOT FLIGHT LEVEL CHANGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT FLIGHT LEVEL CHANGE",
      "displaytitle": "AUTOPILOT FLIGHT LEVEL CHANGE (OnRequest)",
      "description": "Boolean, toggles the autopilot Flight Level Change mode: Units bool: settable true",
      "messagetype": "trigger_onRequest_AUTOPILOT FLIGHT LEVEL CHANGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT GLIDESLOPE ACTIVE",
      "displaytitle": "AUTOPILOT GLIDESLOPE ACTIVE (Poll)",
      "description": "When true, the autopilot is receiving a signal from the runway beacon and is following the slope to reach the ground: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT GLIDESLOPE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT GLIDESLOPE ACTIVE",
      "displaytitle": "AUTOPILOT GLIDESLOPE ACTIVE (OnChange)",
      "description": "When true, the autopilot is receiving a signal from the runway beacon and is following the slope to reach the ground: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT GLIDESLOPE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT GLIDESLOPE ACTIVE",
      "displaytitle": "AUTOPILOT GLIDESLOPE ACTIVE (OnRequest)",
      "description": "When true, the autopilot is receiving a signal from the runway beacon and is following the slope to reach the ground: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT GLIDESLOPE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT GLIDESLOPE ARM",
      "displaytitle": "AUTOPILOT GLIDESLOPE ARM (Poll)",
      "description": "Returns true when the autopilot is active on the glide slope: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT GLIDESLOPE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT GLIDESLOPE ARM",
      "displaytitle": "AUTOPILOT GLIDESLOPE ARM (OnChange)",
      "description": "Returns true when the autopilot is active on the glide slope: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT GLIDESLOPE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT GLIDESLOPE ARM",
      "displaytitle": "AUTOPILOT GLIDESLOPE ARM (OnRequest)",
      "description": "Returns true when the autopilot is active on the glide slope: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT GLIDESLOPE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT GLIDESLOPE HOLD",
      "displaytitle": "AUTOPILOT GLIDESLOPE HOLD (Poll)",
      "description": "Returns whether the autopilot glidslope hold is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT GLIDESLOPE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT GLIDESLOPE HOLD",
      "displaytitle": "AUTOPILOT GLIDESLOPE HOLD (OnChange)",
      "description": "Returns whether the autopilot glidslope hold is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT GLIDESLOPE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT GLIDESLOPE HOLD",
      "displaytitle": "AUTOPILOT GLIDESLOPE HOLD (OnRequest)",
      "description": "Returns whether the autopilot glidslope hold is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT GLIDESLOPE HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT HEADING LOCK",
      "displaytitle": "AUTOPILOT HEADING LOCK (Poll)",
      "description": "Returns whether the autopilot heading lock is enabled (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT HEADING LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT HEADING LOCK",
      "displaytitle": "AUTOPILOT HEADING LOCK (OnChange)",
      "description": "Returns whether the autopilot heading lock is enabled (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT HEADING LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT HEADING LOCK",
      "displaytitle": "AUTOPILOT HEADING LOCK (OnRequest)",
      "description": "Returns whether the autopilot heading lock is enabled (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT HEADING LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT HEADING LOCK DIR",
      "displaytitle": "AUTOPILOT HEADING LOCK DIR (Poll)",
      "description": "Specifies / Returns the locked in heading for the autopilot: Units degrees: settable true",
      "messagetype": "trigger_AUTOPILOT HEADING LOCK DIR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT HEADING LOCK DIR",
      "displaytitle": "AUTOPILOT HEADING LOCK DIR (OnChange)",
      "description": "Specifies / Returns the locked in heading for the autopilot: Units degrees: settable true",
      "messagetype": "trigger_onChange_AUTOPILOT HEADING LOCK DIR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT HEADING LOCK DIR",
      "displaytitle": "AUTOPILOT HEADING LOCK DIR (OnRequest)",
      "description": "Specifies / Returns the locked in heading for the autopilot: Units degrees: settable true",
      "messagetype": "trigger_onRequest_AUTOPILOT HEADING LOCK DIR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT HEADING MANUALLY TUNABLE",
      "displaytitle": "AUTOPILOT HEADING MANUALLY TUNABLE (Poll)",
      "description": "Whether or not the autopilot heading is manually tunable or not: Units bool: settable true",
      "messagetype": "trigger_AUTOPILOT HEADING MANUALLY TUNABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT HEADING MANUALLY TUNABLE",
      "displaytitle": "AUTOPILOT HEADING MANUALLY TUNABLE (OnChange)",
      "description": "Whether or not the autopilot heading is manually tunable or not: Units bool: settable true",
      "messagetype": "trigger_onChange_AUTOPILOT HEADING MANUALLY TUNABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT HEADING MANUALLY TUNABLE",
      "displaytitle": "AUTOPILOT HEADING MANUALLY TUNABLE (OnRequest)",
      "description": "Whether or not the autopilot heading is manually tunable or not: Units bool: settable true",
      "messagetype": "trigger_onRequest_AUTOPILOT HEADING MANUALLY TUNABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT HEADING SLOT INDEX",
      "displaytitle": "AUTOPILOT HEADING SLOT INDEX (Poll)",
      "description": "Index of the slot that the autopilot will use for the heading reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT HEADING SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT HEADING SLOT INDEX",
      "displaytitle": "AUTOPILOT HEADING SLOT INDEX (OnChange)",
      "description": "Index of the slot that the autopilot will use for the heading reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT HEADING SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT HEADING SLOT INDEX",
      "displaytitle": "AUTOPILOT HEADING SLOT INDEX (OnRequest)",
      "description": "Index of the slot that the autopilot will use for the heading reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT HEADING SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MACH HOLD",
      "displaytitle": "AUTOPILOT MACH HOLD (Poll)",
      "description": "Mach hold active: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT MACH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MACH HOLD",
      "displaytitle": "AUTOPILOT MACH HOLD (OnChange)",
      "description": "Mach hold active: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MACH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MACH HOLD",
      "displaytitle": "AUTOPILOT MACH HOLD (OnRequest)",
      "description": "Mach hold active: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MACH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MACH HOLD VAR",
      "displaytitle": "AUTOPILOT MACH HOLD VAR (Poll)",
      "description": "Returns the target holding mach airspeed for the autopilot: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT MACH HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MACH HOLD VAR",
      "displaytitle": "AUTOPILOT MACH HOLD VAR (OnChange)",
      "description": "Returns the target holding mach airspeed for the autopilot: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MACH HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MACH HOLD VAR",
      "displaytitle": "AUTOPILOT MACH HOLD VAR (OnRequest)",
      "description": "Returns the target holding mach airspeed for the autopilot: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MACH HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MANAGED INDEX",
      "displaytitle": "AUTOPILOT MANAGED INDEX (Poll)",
      "description": "Currently not used within the simulation: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT MANAGED INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MANAGED INDEX",
      "displaytitle": "AUTOPILOT MANAGED INDEX (OnChange)",
      "description": "Currently not used within the simulation: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MANAGED INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MANAGED INDEX",
      "displaytitle": "AUTOPILOT MANAGED INDEX (OnRequest)",
      "description": "Currently not used within the simulation: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MANAGED INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MANAGED SPEED IN MACH",
      "displaytitle": "AUTOPILOT MANAGED SPEED IN MACH (Poll)",
      "description": "Returns whether the managed speed is in mach (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT MANAGED SPEED IN MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MANAGED SPEED IN MACH",
      "displaytitle": "AUTOPILOT MANAGED SPEED IN MACH (OnChange)",
      "description": "Returns whether the managed speed is in mach (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MANAGED SPEED IN MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MANAGED SPEED IN MACH",
      "displaytitle": "AUTOPILOT MANAGED SPEED IN MACH (OnRequest)",
      "description": "Returns whether the managed speed is in mach (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MANAGED SPEED IN MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MANAGED THROTTLE ACTIVE",
      "displaytitle": "AUTOPILOT MANAGED THROTTLE ACTIVE (Poll)",
      "description": "Returns whether the autopilot managed throttle is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT MANAGED THROTTLE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MANAGED THROTTLE ACTIVE",
      "displaytitle": "AUTOPILOT MANAGED THROTTLE ACTIVE (OnChange)",
      "description": "Returns whether the autopilot managed throttle is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MANAGED THROTTLE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MANAGED THROTTLE ACTIVE",
      "displaytitle": "AUTOPILOT MANAGED THROTTLE ACTIVE (OnRequest)",
      "description": "Returns whether the autopilot managed throttle is active (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MANAGED THROTTLE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MASTER",
      "displaytitle": "AUTOPILOT MASTER (Poll)",
      "description": "On/off flag: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT MASTER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MASTER",
      "displaytitle": "AUTOPILOT MASTER (OnChange)",
      "description": "On/off flag: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MASTER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MASTER",
      "displaytitle": "AUTOPILOT MASTER (OnRequest)",
      "description": "On/off flag: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MASTER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MAX BANK",
      "displaytitle": "AUTOPILOT MAX BANK (Poll)",
      "description": "Returns the maximum banking angle for the autopilot, in radians.: Units radians: settable false",
      "messagetype": "trigger_AUTOPILOT MAX BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MAX BANK",
      "displaytitle": "AUTOPILOT MAX BANK (OnChange)",
      "description": "Returns the maximum banking angle for the autopilot, in radians.: Units radians: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MAX BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MAX BANK",
      "displaytitle": "AUTOPILOT MAX BANK (OnRequest)",
      "description": "Returns the maximum banking angle for the autopilot, in radians.: Units radians: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MAX BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MAX BANK ID",
      "displaytitle": "AUTOPILOT MAX BANK ID (Poll)",
      "description": "Returns the index of the current maximum bank setting of the autopilot: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT MAX BANK ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MAX BANK ID",
      "displaytitle": "AUTOPILOT MAX BANK ID (OnChange)",
      "description": "Returns the index of the current maximum bank setting of the autopilot: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MAX BANK ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MAX BANK ID",
      "displaytitle": "AUTOPILOT MAX BANK ID (OnRequest)",
      "description": "Returns the index of the current maximum bank setting of the autopilot: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MAX BANK ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT MAX SPEED HOLD",
      "displaytitle": "AUTOPILOT MAX SPEED HOLD (Poll)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT MAX SPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT MAX SPEED HOLD",
      "displaytitle": "AUTOPILOT MAX SPEED HOLD (OnChange)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT MAX SPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT MAX SPEED HOLD",
      "displaytitle": "AUTOPILOT MAX SPEED HOLD (OnRequest)",
      "description": "Currently not used within the simulation: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT MAX SPEED HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT NAV SELECTED",
      "displaytitle": "AUTOPILOT NAV SELECTED (Poll)",
      "description": "Index of Nav radio selected: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT NAV SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT NAV SELECTED",
      "displaytitle": "AUTOPILOT NAV SELECTED (OnChange)",
      "description": "Index of Nav radio selected: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT NAV SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT NAV SELECTED",
      "displaytitle": "AUTOPILOT NAV SELECTED (OnRequest)",
      "description": "Index of Nav radio selected: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT NAV SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT NAV1 LOCK",
      "displaytitle": "AUTOPILOT NAV1 LOCK (Poll)",
      "description": "Returns TRUE (1) if the autopilot Nav1 lock is applied, or 0 (FALSE) otherwise: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT NAV1 LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT NAV1 LOCK",
      "displaytitle": "AUTOPILOT NAV1 LOCK (OnChange)",
      "description": "Returns TRUE (1) if the autopilot Nav1 lock is applied, or 0 (FALSE) otherwise: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT NAV1 LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT NAV1 LOCK",
      "displaytitle": "AUTOPILOT NAV1 LOCK (OnRequest)",
      "description": "Returns TRUE (1) if the autopilot Nav1 lock is applied, or 0 (FALSE) otherwise: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT NAV1 LOCK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT PITCH HOLD",
      "displaytitle": "AUTOPILOT PITCH HOLD (Poll)",
      "description": "Set to True if the autopilot pitch hold has is engaged: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT PITCH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT PITCH HOLD",
      "displaytitle": "AUTOPILOT PITCH HOLD (OnChange)",
      "description": "Set to True if the autopilot pitch hold has is engaged: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT PITCH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT PITCH HOLD",
      "displaytitle": "AUTOPILOT PITCH HOLD (OnRequest)",
      "description": "Set to True if the autopilot pitch hold has is engaged: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT PITCH HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT PITCH HOLD REF",
      "displaytitle": "AUTOPILOT PITCH HOLD REF (Poll)",
      "description": "Returns the current autotpilot reference pitch.: Units radians: settable false",
      "messagetype": "trigger_AUTOPILOT PITCH HOLD REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT PITCH HOLD REF",
      "displaytitle": "AUTOPILOT PITCH HOLD REF (OnChange)",
      "description": "Returns the current autotpilot reference pitch.: Units radians: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT PITCH HOLD REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT PITCH HOLD REF",
      "displaytitle": "AUTOPILOT PITCH HOLD REF (OnRequest)",
      "description": "Returns the current autotpilot reference pitch.: Units radians: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT PITCH HOLD REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT RPM HOLD",
      "displaytitle": "AUTOPILOT RPM HOLD (Poll)",
      "description": "True if autopilot rpm hold applied: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT RPM HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT RPM HOLD",
      "displaytitle": "AUTOPILOT RPM HOLD (OnChange)",
      "description": "True if autopilot rpm hold applied: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT RPM HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT RPM HOLD",
      "displaytitle": "AUTOPILOT RPM HOLD (OnRequest)",
      "description": "True if autopilot rpm hold applied: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT RPM HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT RPM HOLD VAR",
      "displaytitle": "AUTOPILOT RPM HOLD VAR (Poll)",
      "description": "Selected rpm: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT RPM HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT RPM HOLD VAR",
      "displaytitle": "AUTOPILOT RPM HOLD VAR (OnChange)",
      "description": "Selected rpm: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT RPM HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT RPM HOLD VAR",
      "displaytitle": "AUTOPILOT RPM HOLD VAR (OnRequest)",
      "description": "Selected rpm: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT RPM HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT RPM SLOT INDEX",
      "displaytitle": "AUTOPILOT RPM SLOT INDEX (Poll)",
      "description": "Index of the slot that the autopilot will use for the RPM reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT RPM SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT RPM SLOT INDEX",
      "displaytitle": "AUTOPILOT RPM SLOT INDEX (OnChange)",
      "description": "Index of the slot that the autopilot will use for the RPM reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT RPM SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT RPM SLOT INDEX",
      "displaytitle": "AUTOPILOT RPM SLOT INDEX (OnRequest)",
      "description": "Index of the slot that the autopilot will use for the RPM reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT RPM SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT SPEED SETTING",
      "displaytitle": "AUTOPILOT SPEED SETTING (Poll)",
      "description": "Currently not used within the simulation: Units knots: settable false",
      "messagetype": "trigger_AUTOPILOT SPEED SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT SPEED SETTING",
      "displaytitle": "AUTOPILOT SPEED SETTING (OnChange)",
      "description": "Currently not used within the simulation: Units knots: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT SPEED SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT SPEED SETTING",
      "displaytitle": "AUTOPILOT SPEED SETTING (OnRequest)",
      "description": "Currently not used within the simulation: Units knots: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT SPEED SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT SPEED SLOT INDEX",
      "displaytitle": "AUTOPILOT SPEED SLOT INDEX (Poll)",
      "description": "Index of the managed references: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT SPEED SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT SPEED SLOT INDEX",
      "displaytitle": "AUTOPILOT SPEED SLOT INDEX (OnChange)",
      "description": "Index of the managed references: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT SPEED SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT SPEED SLOT INDEX",
      "displaytitle": "AUTOPILOT SPEED SLOT INDEX (OnRequest)",
      "description": "Index of the managed references: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT SPEED SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT TAKEOFF POWER ACTIVE",
      "displaytitle": "AUTOPILOT TAKEOFF POWER ACTIVE (Poll)",
      "description": "Takeoff / Go Around power mode active: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT TAKEOFF POWER ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT TAKEOFF POWER ACTIVE",
      "displaytitle": "AUTOPILOT TAKEOFF POWER ACTIVE (OnChange)",
      "description": "Takeoff / Go Around power mode active: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT TAKEOFF POWER ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT TAKEOFF POWER ACTIVE",
      "displaytitle": "AUTOPILOT TAKEOFF POWER ACTIVE (OnRequest)",
      "description": "Takeoff / Go Around power mode active: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT TAKEOFF POWER ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT THROTTLE ARM",
      "displaytitle": "AUTOPILOT THROTTLE ARM (Poll)",
      "description": "Returns whether the autopilot auto-throttle is armed (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT THROTTLE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT THROTTLE ARM",
      "displaytitle": "AUTOPILOT THROTTLE ARM (OnChange)",
      "description": "Returns whether the autopilot auto-throttle is armed (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT THROTTLE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT THROTTLE ARM",
      "displaytitle": "AUTOPILOT THROTTLE ARM (OnRequest)",
      "description": "Returns whether the autopilot auto-throttle is armed (1, TRUE) or not (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT THROTTLE ARM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT THROTTLE MAX THRUST",
      "displaytitle": "AUTOPILOT THROTTLE MAX THRUST (Poll)",
      "description": "This can be used to set/get the thrust lever position for autopilot maximum thrust: Units percent: settable true",
      "messagetype": "trigger_AUTOPILOT THROTTLE MAX THRUST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT THROTTLE MAX THRUST",
      "displaytitle": "AUTOPILOT THROTTLE MAX THRUST (OnChange)",
      "description": "This can be used to set/get the thrust lever position for autopilot maximum thrust: Units percent: settable true",
      "messagetype": "trigger_onChange_AUTOPILOT THROTTLE MAX THRUST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT THROTTLE MAX THRUST",
      "displaytitle": "AUTOPILOT THROTTLE MAX THRUST (OnRequest)",
      "description": "This can be used to set/get the thrust lever position for autopilot maximum thrust: Units percent: settable true",
      "messagetype": "trigger_onRequest_AUTOPILOT THROTTLE MAX THRUST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT VERTICAL HOLD",
      "displaytitle": "AUTOPILOT VERTICAL HOLD (Poll)",
      "description": "True if autopilot vertical hold applied: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT VERTICAL HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT VERTICAL HOLD",
      "displaytitle": "AUTOPILOT VERTICAL HOLD (OnChange)",
      "description": "True if autopilot vertical hold applied: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT VERTICAL HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT VERTICAL HOLD",
      "displaytitle": "AUTOPILOT VERTICAL HOLD (OnRequest)",
      "description": "True if autopilot vertical hold applied: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT VERTICAL HOLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT VERTICAL HOLD VAR",
      "displaytitle": "AUTOPILOT VERTICAL HOLD VAR (Poll)",
      "description": "Selected vertical speed: Units feet: settable true",
      "messagetype": "trigger_AUTOPILOT VERTICAL HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT VERTICAL HOLD VAR",
      "displaytitle": "AUTOPILOT VERTICAL HOLD VAR (OnChange)",
      "description": "Selected vertical speed: Units feet: settable true",
      "messagetype": "trigger_onChange_AUTOPILOT VERTICAL HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT VERTICAL HOLD VAR",
      "displaytitle": "AUTOPILOT VERTICAL HOLD VAR (OnRequest)",
      "description": "Selected vertical speed: Units feet: settable true",
      "messagetype": "trigger_onRequest_AUTOPILOT VERTICAL HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT VS SLOT INDEX",
      "displaytitle": "AUTOPILOT VS SLOT INDEX (Poll)",
      "description": "Index of the slot that the autopilot will use for the VS reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_AUTOPILOT VS SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT VS SLOT INDEX",
      "displaytitle": "AUTOPILOT VS SLOT INDEX (OnChange)",
      "description": "Index of the slot that the autopilot will use for the VS reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT VS SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT VS SLOT INDEX",
      "displaytitle": "AUTOPILOT VS SLOT INDEX (OnRequest)",
      "description": "Index of the slot that the autopilot will use for the VS reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT VS SLOT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT WING LEVELER",
      "displaytitle": "AUTOPILOT WING LEVELER (Poll)",
      "description": "Wing leveler active: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT WING LEVELER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT WING LEVELER",
      "displaytitle": "AUTOPILOT WING LEVELER (OnChange)",
      "description": "Wing leveler active: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT WING LEVELER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT WING LEVELER",
      "displaytitle": "AUTOPILOT WING LEVELER (OnRequest)",
      "description": "Wing leveler active: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT WING LEVELER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT YAW DAMPER",
      "displaytitle": "AUTOPILOT YAW DAMPER (Poll)",
      "description": "Yaw damper active: Units bool: settable false",
      "messagetype": "trigger_AUTOPILOT YAW DAMPER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOPILOT YAW DAMPER",
      "displaytitle": "AUTOPILOT YAW DAMPER (OnChange)",
      "description": "Yaw damper active: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOPILOT YAW DAMPER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOPILOT YAW DAMPER",
      "displaytitle": "AUTOPILOT YAW DAMPER (OnRequest)",
      "description": "Yaw damper active: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOPILOT YAW DAMPER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOTHROTTLE ACTIVE",
      "displaytitle": "AUTOTHROTTLE ACTIVE (Poll)",
      "description": "Auto-throttle active.: Units bool: settable false",
      "messagetype": "trigger_AUTOTHROTTLE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUTOTHROTTLE ACTIVE",
      "displaytitle": "AUTOTHROTTLE ACTIVE (OnChange)",
      "description": "Auto-throttle active.: Units bool: settable false",
      "messagetype": "trigger_onChange_AUTOTHROTTLE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUTOTHROTTLE ACTIVE",
      "displaytitle": "AUTOTHROTTLE ACTIVE (OnRequest)",
      "description": "Auto-throttle active.: Units bool: settable false",
      "messagetype": "trigger_onRequest_AUTOTHROTTLE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUX WHEEL ROTATION ANGLE",
      "displaytitle": "AUX WHEEL ROTATION ANGLE (Poll)",
      "description": "Aux wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_AUX WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUX WHEEL ROTATION ANGLE",
      "displaytitle": "AUX WHEEL ROTATION ANGLE (OnChange)",
      "description": "Aux wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onChange_AUX WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUX WHEEL ROTATION ANGLE",
      "displaytitle": "AUX WHEEL ROTATION ANGLE (OnRequest)",
      "description": "Aux wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onRequest_AUX WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUX WHEEL RPM",
      "displaytitle": "AUX WHEEL RPM (Poll)",
      "description": "Rpm of fourth set of gear wheels: Units RPM: settable false",
      "messagetype": "trigger_AUX WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_AUX WHEEL RPM",
      "displaytitle": "AUX WHEEL RPM (OnChange)",
      "description": "Rpm of fourth set of gear wheels: Units RPM: settable false",
      "messagetype": "trigger_onChange_AUX WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_AUX WHEEL RPM",
      "displaytitle": "AUX WHEEL RPM (OnRequest)",
      "description": "Rpm of fourth set of gear wheels: Units RPM: settable false",
      "messagetype": "trigger_onRequest_AUX WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AVIONICS MASTER SWITCH:index",
      "displaytitle": "AVIONICS MASTER SWITCH:index (Poll)",
      "description": "The avionics master switch position, true if the switch is ON. Use an avionics circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_AVIONICS MASTER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_AVIONICS MASTER SWITCH:index",
      "displaytitle": "AVIONICS MASTER SWITCH:index (OnChange)",
      "description": "The avionics master switch position, true if the switch is ON. Use an avionics circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_onChange_AVIONICS MASTER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_AVIONICS MASTER SWITCH:index",
      "displaytitle": "AVIONICS MASTER SWITCH:index (OnRequest)",
      "description": "The avionics master switch position, true if the switch is ON. Use an avionics circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_onRequest_AVIONICS MASTER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "BAGGAGELOADER ANGLE CURRENT",
      "displaytitle": "BAGGAGELOADER ANGLE CURRENT (Poll)",
      "description": "Current angle of the baggage loader ramp, relative to the ground.: Units degrees: settable false",
      "messagetype": "trigger_BAGGAGELOADER ANGLE CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BAGGAGELOADER ANGLE CURRENT",
      "displaytitle": "BAGGAGELOADER ANGLE CURRENT (OnChange)",
      "description": "Current angle of the baggage loader ramp, relative to the ground.: Units degrees: settable false",
      "messagetype": "trigger_onChange_BAGGAGELOADER ANGLE CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BAGGAGELOADER ANGLE CURRENT",
      "displaytitle": "BAGGAGELOADER ANGLE CURRENT (OnRequest)",
      "description": "Current angle of the baggage loader ramp, relative to the ground.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_BAGGAGELOADER ANGLE CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BAGGAGELOADER ANGLE TARGET",
      "displaytitle": "BAGGAGELOADER ANGLE TARGET (Poll)",
      "description": "Target angle of the baggage loader ramp, relative to the ground.: Units degrees: settable false",
      "messagetype": "trigger_BAGGAGELOADER ANGLE TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BAGGAGELOADER ANGLE TARGET",
      "displaytitle": "BAGGAGELOADER ANGLE TARGET (OnChange)",
      "description": "Target angle of the baggage loader ramp, relative to the ground.: Units degrees: settable false",
      "messagetype": "trigger_onChange_BAGGAGELOADER ANGLE TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BAGGAGELOADER ANGLE TARGET",
      "displaytitle": "BAGGAGELOADER ANGLE TARGET (OnRequest)",
      "description": "Target angle of the baggage loader ramp, relative to the ground.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_BAGGAGELOADER ANGLE TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BAGGAGELOADER END RAMP Y",
      "displaytitle": "BAGGAGELOADER END RAMP Y (Poll)",
      "description": "\"Y\" axis position of the end of the baggage loader ramp, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_BAGGAGELOADER END RAMP Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BAGGAGELOADER END RAMP Y",
      "displaytitle": "BAGGAGELOADER END RAMP Y (OnChange)",
      "description": "\"Y\" axis position of the end of the baggage loader ramp, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_BAGGAGELOADER END RAMP Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BAGGAGELOADER END RAMP Y",
      "displaytitle": "BAGGAGELOADER END RAMP Y (OnRequest)",
      "description": "\"Y\" axis position of the end of the baggage loader ramp, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BAGGAGELOADER END RAMP Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BAGGAGELOADER END RAMP Z",
      "displaytitle": "BAGGAGELOADER END RAMP Z (Poll)",
      "description": "\"Z\" axis position of the end of the baggage loader ramp, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_BAGGAGELOADER END RAMP Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BAGGAGELOADER END RAMP Z",
      "displaytitle": "BAGGAGELOADER END RAMP Z (OnChange)",
      "description": "\"Z\" axis position of the end of the baggage loader ramp, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_BAGGAGELOADER END RAMP Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BAGGAGELOADER END RAMP Z",
      "displaytitle": "BAGGAGELOADER END RAMP Z (OnRequest)",
      "description": "\"Z\" axis position of the end of the baggage loader ramp, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BAGGAGELOADER END RAMP Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BAGGAGELOADER PIVOT Y",
      "displaytitle": "BAGGAGELOADER PIVOT Y (Poll)",
      "description": "\"Y\" axis position of the baggage loader ramp pivot, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_BAGGAGELOADER PIVOT Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BAGGAGELOADER PIVOT Y",
      "displaytitle": "BAGGAGELOADER PIVOT Y (OnChange)",
      "description": "\"Y\" axis position of the baggage loader ramp pivot, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_BAGGAGELOADER PIVOT Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BAGGAGELOADER PIVOT Y",
      "displaytitle": "BAGGAGELOADER PIVOT Y (OnRequest)",
      "description": "\"Y\" axis position of the baggage loader ramp pivot, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BAGGAGELOADER PIVOT Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BAGGAGELOADER PIVOT Z",
      "displaytitle": "BAGGAGELOADER PIVOT Z (Poll)",
      "description": "\"Z\" axis position of the baggage loader ramp pivot, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_BAGGAGELOADER PIVOT Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BAGGAGELOADER PIVOT Z",
      "displaytitle": "BAGGAGELOADER PIVOT Z (OnChange)",
      "description": "\"Z\" axis position of the baggage loader ramp pivot, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_BAGGAGELOADER PIVOT Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BAGGAGELOADER PIVOT Z",
      "displaytitle": "BAGGAGELOADER PIVOT Z (OnRequest)",
      "description": "\"Z\" axis position of the baggage loader ramp pivot, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BAGGAGELOADER PIVOT Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BARBER POLE MACH",
      "displaytitle": "BARBER POLE MACH (Poll)",
      "description": "Mach associated with maximum airspeed.: Units mach: settable false",
      "messagetype": "trigger_BARBER POLE MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BARBER POLE MACH",
      "displaytitle": "BARBER POLE MACH (OnChange)",
      "description": "Mach associated with maximum airspeed.: Units mach: settable false",
      "messagetype": "trigger_onChange_BARBER POLE MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BARBER POLE MACH",
      "displaytitle": "BARBER POLE MACH (OnRequest)",
      "description": "Mach associated with maximum airspeed.: Units mach: settable false",
      "messagetype": "trigger_onRequest_BARBER POLE MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BAROMETER PRESSURE",
      "displaytitle": "BAROMETER PRESSURE (Poll)",
      "description": "Barometric pressure.: Units Millibars: settable false",
      "messagetype": "trigger_BAROMETER PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BAROMETER PRESSURE",
      "displaytitle": "BAROMETER PRESSURE (OnChange)",
      "description": "Barometric pressure.: Units Millibars: settable false",
      "messagetype": "trigger_onChange_BAROMETER PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BAROMETER PRESSURE",
      "displaytitle": "BAROMETER PRESSURE (OnRequest)",
      "description": "Barometric pressure.: Units Millibars: settable false",
      "messagetype": "trigger_onRequest_BAROMETER PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BATTERY BREAKER PULLED",
      "displaytitle": "BATTERY BREAKER PULLED (Poll)",
      "description": "This will be true if the battery breaker is pulled. Requires a BUS LOOKUP INDEX and a battery index: Units bool: settable true",
      "messagetype": "trigger_BATTERY BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BATTERY BREAKER PULLED",
      "displaytitle": "BATTERY BREAKER PULLED (OnChange)",
      "description": "This will be true if the battery breaker is pulled. Requires a BUS LOOKUP INDEX and a battery index: Units bool: settable true",
      "messagetype": "trigger_onChange_BATTERY BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BATTERY BREAKER PULLED",
      "displaytitle": "BATTERY BREAKER PULLED (OnRequest)",
      "description": "This will be true if the battery breaker is pulled. Requires a BUS LOOKUP INDEX and a battery index: Units bool: settable true",
      "messagetype": "trigger_onRequest_BATTERY BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BATTERY CONNECTION ON",
      "displaytitle": "BATTERY CONNECTION ON (Poll)",
      "description": "This will be true if the battery is connected. Requires a BUS_LOOKUP_INDEX and a battery index: Units bool: settable false",
      "messagetype": "trigger_BATTERY CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BATTERY CONNECTION ON",
      "displaytitle": "BATTERY CONNECTION ON (OnChange)",
      "description": "This will be true if the battery is connected. Requires a BUS_LOOKUP_INDEX and a battery index: Units bool: settable false",
      "messagetype": "trigger_onChange_BATTERY CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BATTERY CONNECTION ON",
      "displaytitle": "BATTERY CONNECTION ON (OnRequest)",
      "description": "This will be true if the battery is connected. Requires a BUS_LOOKUP_INDEX and a battery index: Units bool: settable false",
      "messagetype": "trigger_onRequest_BATTERY CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BETA DOT",
      "displaytitle": "BETA DOT (Poll)",
      "description": "Beta dot: Units radians per second: settable false",
      "messagetype": "trigger_BETA DOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BETA DOT",
      "displaytitle": "BETA DOT (OnChange)",
      "description": "Beta dot: Units radians per second: settable false",
      "messagetype": "trigger_onChange_BETA DOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BETA DOT",
      "displaytitle": "BETA DOT (OnRequest)",
      "description": "Beta dot: Units radians per second: settable false",
      "messagetype": "trigger_onRequest_BETA DOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BLAST SHIELD POSITION:index",
      "displaytitle": "BLAST SHIELD POSITION:index (Poll)",
      "description": "Indexed from 1, 100 is fully deployed, 0 flat on deck: Units percent Over 100: settable false",
      "messagetype": "trigger_BLAST SHIELD POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_BLAST SHIELD POSITION:index",
      "displaytitle": "BLAST SHIELD POSITION:index (OnChange)",
      "description": "Indexed from 1, 100 is fully deployed, 0 flat on deck: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_BLAST SHIELD POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_BLAST SHIELD POSITION:index",
      "displaytitle": "BLAST SHIELD POSITION:index (OnRequest)",
      "description": "Indexed from 1, 100 is fully deployed, 0 flat on deck: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_BLAST SHIELD POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "BLEED AIR APU",
      "displaytitle": "BLEED AIR APU (Poll)",
      "description": "Boolean, returns whether or not the APU attempts to provide Bleed Air: Units bool: settable false",
      "messagetype": "trigger_BLEED AIR APU",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BLEED AIR APU",
      "displaytitle": "BLEED AIR APU (OnChange)",
      "description": "Boolean, returns whether or not the APU attempts to provide Bleed Air: Units bool: settable false",
      "messagetype": "trigger_onChange_BLEED AIR APU",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BLEED AIR APU",
      "displaytitle": "BLEED AIR APU (OnRequest)",
      "description": "Boolean, returns whether or not the APU attempts to provide Bleed Air: Units bool: settable false",
      "messagetype": "trigger_onRequest_BLEED AIR APU",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BLEED AIR ENGINE:index",
      "displaytitle": "BLEED AIR ENGINE:index (Poll)",
      "description": "Returns whether or not the indexed engine attempts to provide bleed air: Units bool: settable false",
      "messagetype": "trigger_BLEED AIR ENGINE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_BLEED AIR ENGINE:index",
      "displaytitle": "BLEED AIR ENGINE:index (OnChange)",
      "description": "Returns whether or not the indexed engine attempts to provide bleed air: Units bool: settable false",
      "messagetype": "trigger_onChange_BLEED AIR ENGINE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_BLEED AIR ENGINE:index",
      "displaytitle": "BLEED AIR ENGINE:index (OnRequest)",
      "description": "Returns whether or not the indexed engine attempts to provide bleed air: Units bool: settable false",
      "messagetype": "trigger_onRequest_BLEED AIR ENGINE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "BLEED AIR SOURCE CONTROL:index",
      "displaytitle": "BLEED AIR SOURCE CONTROL:index (Poll)",
      "description": "The bleed air system source controller for an indexed engine: Units enum: settable false",
      "messagetype": "trigger_BLEED AIR SOURCE CONTROL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_BLEED AIR SOURCE CONTROL:index",
      "displaytitle": "BLEED AIR SOURCE CONTROL:index (OnChange)",
      "description": "The bleed air system source controller for an indexed engine: Units enum: settable false",
      "messagetype": "trigger_onChange_BLEED AIR SOURCE CONTROL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_BLEED AIR SOURCE CONTROL:index",
      "displaytitle": "BLEED AIR SOURCE CONTROL:index (OnRequest)",
      "description": "The bleed air system source controller for an indexed engine: Units enum: settable false",
      "messagetype": "trigger_onRequest_BLEED AIR SOURCE CONTROL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "BOARDINGRAMP ELEVATION CURRENT",
      "displaytitle": "BOARDINGRAMP ELEVATION CURRENT (Poll)",
      "description": "The current altitude AGL of the top of the boarding ramp stairs.: Units meters: settable false",
      "messagetype": "trigger_BOARDINGRAMP ELEVATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BOARDINGRAMP ELEVATION CURRENT",
      "displaytitle": "BOARDINGRAMP ELEVATION CURRENT (OnChange)",
      "description": "The current altitude AGL of the top of the boarding ramp stairs.: Units meters: settable false",
      "messagetype": "trigger_onChange_BOARDINGRAMP ELEVATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BOARDINGRAMP ELEVATION CURRENT",
      "displaytitle": "BOARDINGRAMP ELEVATION CURRENT (OnRequest)",
      "description": "The current altitude AGL of the top of the boarding ramp stairs.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BOARDINGRAMP ELEVATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BOARDINGRAMP ELEVATION TARGET",
      "displaytitle": "BOARDINGRAMP ELEVATION TARGET (Poll)",
      "description": "The target altitude AGL of the top of the boarding ramp stairs.: Units meters: settable false",
      "messagetype": "trigger_BOARDINGRAMP ELEVATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BOARDINGRAMP ELEVATION TARGET",
      "displaytitle": "BOARDINGRAMP ELEVATION TARGET (OnChange)",
      "description": "The target altitude AGL of the top of the boarding ramp stairs.: Units meters: settable false",
      "messagetype": "trigger_onChange_BOARDINGRAMP ELEVATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BOARDINGRAMP ELEVATION TARGET",
      "displaytitle": "BOARDINGRAMP ELEVATION TARGET (OnRequest)",
      "description": "The target altitude AGL of the top of the boarding ramp stairs.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BOARDINGRAMP ELEVATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BOARDINGRAMP END POSITION Y",
      "displaytitle": "BOARDINGRAMP END POSITION Y (Poll)",
      "description": "The \"Y\" axis position of the top of the boarding ramp stairs when extended at maximal capacity, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_BOARDINGRAMP END POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BOARDINGRAMP END POSITION Y",
      "displaytitle": "BOARDINGRAMP END POSITION Y (OnChange)",
      "description": "The \"Y\" axis position of the top of the boarding ramp stairs when extended at maximal capacity, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_BOARDINGRAMP END POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BOARDINGRAMP END POSITION Y",
      "displaytitle": "BOARDINGRAMP END POSITION Y (OnRequest)",
      "description": "The \"Y\" axis position of the top of the boarding ramp stairs when extended at maximal capacity, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BOARDINGRAMP END POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BOARDINGRAMP END POSITION Z",
      "displaytitle": "BOARDINGRAMP END POSITION Z (Poll)",
      "description": "The \"Z\" axis position of the top of the boarding ramp stairs when extended at maximal capacity, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_BOARDINGRAMP END POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BOARDINGRAMP END POSITION Z",
      "displaytitle": "BOARDINGRAMP END POSITION Z (OnChange)",
      "description": "The \"Z\" axis position of the top of the boarding ramp stairs when extended at maximal capacity, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_BOARDINGRAMP END POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BOARDINGRAMP END POSITION Z",
      "displaytitle": "BOARDINGRAMP END POSITION Z (OnRequest)",
      "description": "The \"Z\" axis position of the top of the boarding ramp stairs when extended at maximal capacity, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BOARDINGRAMP END POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BOARDINGRAMP ORIENTATION CURRENT",
      "displaytitle": "BOARDINGRAMP ORIENTATION CURRENT (Poll)",
      "description": "The current orientation of the boarding ramp stairs, where 0 is at rest and 1 is suited for boarding.: Units percent Over 100: settable false",
      "messagetype": "trigger_BOARDINGRAMP ORIENTATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BOARDINGRAMP ORIENTATION CURRENT",
      "displaytitle": "BOARDINGRAMP ORIENTATION CURRENT (OnChange)",
      "description": "The current orientation of the boarding ramp stairs, where 0 is at rest and 1 is suited for boarding.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_BOARDINGRAMP ORIENTATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BOARDINGRAMP ORIENTATION CURRENT",
      "displaytitle": "BOARDINGRAMP ORIENTATION CURRENT (OnRequest)",
      "description": "The current orientation of the boarding ramp stairs, where 0 is at rest and 1 is suited for boarding.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_BOARDINGRAMP ORIENTATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BOARDINGRAMP ORIENTATION TARGET",
      "displaytitle": "BOARDINGRAMP ORIENTATION TARGET (Poll)",
      "description": "The target orientation of of the boarding ramp stairs, where 0 is at rest and 1 is suited for boarding.: Units percent Over 100: settable false",
      "messagetype": "trigger_BOARDINGRAMP ORIENTATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BOARDINGRAMP ORIENTATION TARGET",
      "displaytitle": "BOARDINGRAMP ORIENTATION TARGET (OnChange)",
      "description": "The target orientation of of the boarding ramp stairs, where 0 is at rest and 1 is suited for boarding.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_BOARDINGRAMP ORIENTATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BOARDINGRAMP ORIENTATION TARGET",
      "displaytitle": "BOARDINGRAMP ORIENTATION TARGET (OnRequest)",
      "description": "The target orientation of of the boarding ramp stairs, where 0 is at rest and 1 is suited for boarding.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_BOARDINGRAMP ORIENTATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BOARDINGRAMP START POSITION Y",
      "displaytitle": "BOARDINGRAMP START POSITION Y (Poll)",
      "description": "The \"Y\" axis position of the top of the boarding ramp stairs when at minimal extension, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_BOARDINGRAMP START POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BOARDINGRAMP START POSITION Y",
      "displaytitle": "BOARDINGRAMP START POSITION Y (OnChange)",
      "description": "The \"Y\" axis position of the top of the boarding ramp stairs when at minimal extension, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_BOARDINGRAMP START POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BOARDINGRAMP START POSITION Y",
      "displaytitle": "BOARDINGRAMP START POSITION Y (OnRequest)",
      "description": "The \"Y\" axis position of the top of the boarding ramp stairs when at minimal extension, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BOARDINGRAMP START POSITION Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BOARDINGRAMP START POSITION Z",
      "displaytitle": "BOARDINGRAMP START POSITION Z (Poll)",
      "description": "The \"Z\" axis position of the top of the boarding ramp stairs when at minimal extension, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_BOARDINGRAMP START POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BOARDINGRAMP START POSITION Z",
      "displaytitle": "BOARDINGRAMP START POSITION Z (OnChange)",
      "description": "The \"Z\" axis position of the top of the boarding ramp stairs when at minimal extension, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_BOARDINGRAMP START POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BOARDINGRAMP START POSITION Z",
      "displaytitle": "BOARDINGRAMP START POSITION Z (OnRequest)",
      "description": "The \"Z\" axis position of the top of the boarding ramp stairs when at minimal extension, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_BOARDINGRAMP START POSITION Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE DEPENDENT HYDRAULIC PRESSURE",
      "displaytitle": "BRAKE DEPENDENT HYDRAULIC PRESSURE (Poll)",
      "description": "Brake dependent hydraulic pressure reading: Units pounds: settable false",
      "messagetype": "trigger_BRAKE DEPENDENT HYDRAULIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BRAKE DEPENDENT HYDRAULIC PRESSURE",
      "displaytitle": "BRAKE DEPENDENT HYDRAULIC PRESSURE (OnChange)",
      "description": "Brake dependent hydraulic pressure reading: Units pounds: settable false",
      "messagetype": "trigger_onChange_BRAKE DEPENDENT HYDRAULIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BRAKE DEPENDENT HYDRAULIC PRESSURE",
      "displaytitle": "BRAKE DEPENDENT HYDRAULIC PRESSURE (OnRequest)",
      "description": "Brake dependent hydraulic pressure reading: Units pounds: settable false",
      "messagetype": "trigger_onRequest_BRAKE DEPENDENT HYDRAULIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE INDICATOR",
      "displaytitle": "BRAKE INDICATOR (Poll)",
      "description": "Brake on indication: Units position: settable false",
      "messagetype": "trigger_BRAKE INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BRAKE INDICATOR",
      "displaytitle": "BRAKE INDICATOR (OnChange)",
      "description": "Brake on indication: Units position: settable false",
      "messagetype": "trigger_onChange_BRAKE INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BRAKE INDICATOR",
      "displaytitle": "BRAKE INDICATOR (OnRequest)",
      "description": "Brake on indication: Units position: settable false",
      "messagetype": "trigger_onRequest_BRAKE INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE LEFT POSITION",
      "displaytitle": "BRAKE LEFT POSITION (Poll)",
      "description": "Percent left brake: Units position: settable true",
      "messagetype": "trigger_BRAKE LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BRAKE LEFT POSITION",
      "displaytitle": "BRAKE LEFT POSITION (OnChange)",
      "description": "Percent left brake: Units position: settable true",
      "messagetype": "trigger_onChange_BRAKE LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BRAKE LEFT POSITION",
      "displaytitle": "BRAKE LEFT POSITION (OnRequest)",
      "description": "Percent left brake: Units position: settable true",
      "messagetype": "trigger_onRequest_BRAKE LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE LEFT POSITION EX1",
      "displaytitle": "BRAKE LEFT POSITION EX1 (Poll)",
      "description": "Percent left brake, ignoring the effect of the parking brake: Units position: settable true",
      "messagetype": "trigger_BRAKE LEFT POSITION EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BRAKE LEFT POSITION EX1",
      "displaytitle": "BRAKE LEFT POSITION EX1 (OnChange)",
      "description": "Percent left brake, ignoring the effect of the parking brake: Units position: settable true",
      "messagetype": "trigger_onChange_BRAKE LEFT POSITION EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BRAKE LEFT POSITION EX1",
      "displaytitle": "BRAKE LEFT POSITION EX1 (OnRequest)",
      "description": "Percent left brake, ignoring the effect of the parking brake: Units position: settable true",
      "messagetype": "trigger_onRequest_BRAKE LEFT POSITION EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE PARKING INDICATOR",
      "displaytitle": "BRAKE PARKING INDICATOR (Poll)",
      "description": "Parking brake indicator: Units bool: settable false",
      "messagetype": "trigger_BRAKE PARKING INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BRAKE PARKING INDICATOR",
      "displaytitle": "BRAKE PARKING INDICATOR (OnChange)",
      "description": "Parking brake indicator: Units bool: settable false",
      "messagetype": "trigger_onChange_BRAKE PARKING INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BRAKE PARKING INDICATOR",
      "displaytitle": "BRAKE PARKING INDICATOR (OnRequest)",
      "description": "Parking brake indicator: Units bool: settable false",
      "messagetype": "trigger_onRequest_BRAKE PARKING INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE PARKING POSITION",
      "displaytitle": "BRAKE PARKING POSITION (Poll)",
      "description": "Gets the parking brake position - either on (true) or off (false): Units bool: settable false",
      "messagetype": "trigger_BRAKE PARKING POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BRAKE PARKING POSITION",
      "displaytitle": "BRAKE PARKING POSITION (OnChange)",
      "description": "Gets the parking brake position - either on (true) or off (false): Units bool: settable false",
      "messagetype": "trigger_onChange_BRAKE PARKING POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BRAKE PARKING POSITION",
      "displaytitle": "BRAKE PARKING POSITION (OnRequest)",
      "description": "Gets the parking brake position - either on (true) or off (false): Units bool: settable false",
      "messagetype": "trigger_onRequest_BRAKE PARKING POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE RIGHT POSITION",
      "displaytitle": "BRAKE RIGHT POSITION (Poll)",
      "description": "Percent right brake: Units position: settable true",
      "messagetype": "trigger_BRAKE RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BRAKE RIGHT POSITION",
      "displaytitle": "BRAKE RIGHT POSITION (OnChange)",
      "description": "Percent right brake: Units position: settable true",
      "messagetype": "trigger_onChange_BRAKE RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BRAKE RIGHT POSITION",
      "displaytitle": "BRAKE RIGHT POSITION (OnRequest)",
      "description": "Percent right brake: Units position: settable true",
      "messagetype": "trigger_onRequest_BRAKE RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE RIGHT POSITION EX1",
      "displaytitle": "BRAKE RIGHT POSITION EX1 (Poll)",
      "description": "Percent right brake, ignoring the effect of the parking brake: Units position: settable true",
      "messagetype": "trigger_BRAKE RIGHT POSITION EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BRAKE RIGHT POSITION EX1",
      "displaytitle": "BRAKE RIGHT POSITION EX1 (OnChange)",
      "description": "Percent right brake, ignoring the effect of the parking brake: Units position: settable true",
      "messagetype": "trigger_onChange_BRAKE RIGHT POSITION EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BRAKE RIGHT POSITION EX1",
      "displaytitle": "BRAKE RIGHT POSITION EX1 (OnRequest)",
      "description": "Percent right brake, ignoring the effect of the parking brake: Units position: settable true",
      "messagetype": "trigger_onRequest_BRAKE RIGHT POSITION EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER ADF",
      "displaytitle": "BREAKER ADF (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER ADF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER ADF",
      "displaytitle": "BREAKER ADF (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER ADF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER ADF",
      "displaytitle": "BREAKER ADF (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER ADF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER ALTFLD",
      "displaytitle": "BREAKER ALTFLD (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER ALTFLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER ALTFLD",
      "displaytitle": "BREAKER ALTFLD (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER ALTFLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER ALTFLD",
      "displaytitle": "BREAKER ALTFLD (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER ALTFLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER AUTOPILOT",
      "displaytitle": "BREAKER AUTOPILOT (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER AUTOPILOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER AUTOPILOT",
      "displaytitle": "BREAKER AUTOPILOT (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER AUTOPILOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER AUTOPILOT",
      "displaytitle": "BREAKER AUTOPILOT (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER AUTOPILOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER AVNBUS1",
      "displaytitle": "BREAKER AVNBUS1 (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER AVNBUS1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER AVNBUS1",
      "displaytitle": "BREAKER AVNBUS1 (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER AVNBUS1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER AVNBUS1",
      "displaytitle": "BREAKER AVNBUS1 (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER AVNBUS1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER AVNBUS2",
      "displaytitle": "BREAKER AVNBUS2 (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER AVNBUS2",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER AVNBUS2",
      "displaytitle": "BREAKER AVNBUS2 (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER AVNBUS2",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER AVNBUS2",
      "displaytitle": "BREAKER AVNBUS2 (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER AVNBUS2",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER AVNFAN",
      "displaytitle": "BREAKER AVNFAN (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER AVNFAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER AVNFAN",
      "displaytitle": "BREAKER AVNFAN (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER AVNFAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER AVNFAN",
      "displaytitle": "BREAKER AVNFAN (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER AVNFAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER FLAP",
      "displaytitle": "BREAKER FLAP (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER FLAP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER FLAP",
      "displaytitle": "BREAKER FLAP (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER FLAP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER FLAP",
      "displaytitle": "BREAKER FLAP (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER FLAP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER GPS",
      "displaytitle": "BREAKER GPS (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER GPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER GPS",
      "displaytitle": "BREAKER GPS (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER GPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER GPS",
      "displaytitle": "BREAKER GPS (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER GPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER INST",
      "displaytitle": "BREAKER INST (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER INST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER INST",
      "displaytitle": "BREAKER INST (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER INST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER INST",
      "displaytitle": "BREAKER INST (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER INST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER INSTLTS",
      "displaytitle": "BREAKER INSTLTS (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER INSTLTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER INSTLTS",
      "displaytitle": "BREAKER INSTLTS (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER INSTLTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER INSTLTS",
      "displaytitle": "BREAKER INSTLTS (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER INSTLTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER NAVCOM1",
      "displaytitle": "BREAKER NAVCOM1 (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER NAVCOM1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER NAVCOM1",
      "displaytitle": "BREAKER NAVCOM1 (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER NAVCOM1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER NAVCOM1",
      "displaytitle": "BREAKER NAVCOM1 (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER NAVCOM1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER NAVCOM2",
      "displaytitle": "BREAKER NAVCOM2 (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER NAVCOM2",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER NAVCOM2",
      "displaytitle": "BREAKER NAVCOM2 (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER NAVCOM2",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER NAVCOM2",
      "displaytitle": "BREAKER NAVCOM2 (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER NAVCOM2",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER NAVCOM3",
      "displaytitle": "BREAKER NAVCOM3 (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER NAVCOM3",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER NAVCOM3",
      "displaytitle": "BREAKER NAVCOM3 (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER NAVCOM3",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER NAVCOM3",
      "displaytitle": "BREAKER NAVCOM3 (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER NAVCOM3",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER TURNCOORD",
      "displaytitle": "BREAKER TURNCOORD (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER TURNCOORD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER TURNCOORD",
      "displaytitle": "BREAKER TURNCOORD (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER TURNCOORD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER TURNCOORD",
      "displaytitle": "BREAKER TURNCOORD (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER TURNCOORD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER WARN",
      "displaytitle": "BREAKER WARN (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER WARN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER WARN",
      "displaytitle": "BREAKER WARN (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER WARN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER WARN",
      "displaytitle": "BREAKER WARN (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER WARN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER XPNDR",
      "displaytitle": "BREAKER XPNDR (Poll)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_BREAKER XPNDR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BREAKER XPNDR",
      "displaytitle": "BREAKER XPNDR (OnChange)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onChange_BREAKER XPNDR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BREAKER XPNDR",
      "displaytitle": "BREAKER XPNDR (OnRequest)",
      "description": "Can be used to get or set the breaker state for the electrical system: Units bool: settable true",
      "messagetype": "trigger_onRequest_BREAKER XPNDR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BUS BREAKER PULLED",
      "displaytitle": "BUS BREAKER PULLED (Poll)",
      "description": "This will be true if the bus breaker is pulled. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool: settable true",
      "messagetype": "trigger_BUS BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BUS BREAKER PULLED",
      "displaytitle": "BUS BREAKER PULLED (OnChange)",
      "description": "This will be true if the bus breaker is pulled. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool: settable true",
      "messagetype": "trigger_onChange_BUS BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BUS BREAKER PULLED",
      "displaytitle": "BUS BREAKER PULLED (OnRequest)",
      "description": "This will be true if the bus breaker is pulled. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool: settable true",
      "messagetype": "trigger_onRequest_BUS BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BUS CONNECTION ON",
      "displaytitle": "BUS CONNECTION ON (Poll)",
      "description": "This will be true if the bus is connected. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool: settable false",
      "messagetype": "trigger_BUS CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_BUS CONNECTION ON",
      "displaytitle": "BUS CONNECTION ON (OnChange)",
      "description": "This will be true if the bus is connected. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool: settable false",
      "messagetype": "trigger_onChange_BUS CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_BUS CONNECTION ON",
      "displaytitle": "BUS CONNECTION ON (OnRequest)",
      "description": "This will be true if the bus is connected. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool: settable false",
      "messagetype": "trigger_onRequest_BUS CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CABIN NO SMOKING ALERT SWITCH",
      "displaytitle": "CABIN NO SMOKING ALERT SWITCH (Poll)",
      "description": "True if the No Smoking switch is on.: Units bool: settable false",
      "messagetype": "trigger_CABIN NO SMOKING ALERT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CABIN NO SMOKING ALERT SWITCH",
      "displaytitle": "CABIN NO SMOKING ALERT SWITCH (OnChange)",
      "description": "True if the No Smoking switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_CABIN NO SMOKING ALERT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CABIN NO SMOKING ALERT SWITCH",
      "displaytitle": "CABIN NO SMOKING ALERT SWITCH (OnRequest)",
      "description": "True if the No Smoking switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CABIN NO SMOKING ALERT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CABIN SEATBELTS ALERT SWITCH",
      "displaytitle": "CABIN SEATBELTS ALERT SWITCH (Poll)",
      "description": "True if the Seatbelts switch is on.: Units bool: settable false",
      "messagetype": "trigger_CABIN SEATBELTS ALERT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CABIN SEATBELTS ALERT SWITCH",
      "displaytitle": "CABIN SEATBELTS ALERT SWITCH (OnChange)",
      "description": "True if the Seatbelts switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_CABIN SEATBELTS ALERT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CABIN SEATBELTS ALERT SWITCH",
      "displaytitle": "CABIN SEATBELTS ALERT SWITCH (OnRequest)",
      "description": "True if the Seatbelts switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CABIN SEATBELTS ALERT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CABLE CAUGHT BY TAILHOOK:index",
      "displaytitle": "CABLE CAUGHT BY TAILHOOK:index (Poll)",
      "description": "A number 1 through 4 for the cable number caught by the tailhook. Cable 1 is the one closest to the stern of the carrier. A value of 0 indicates no cable was caught: Units number: settable false",
      "messagetype": "trigger_CABLE CAUGHT BY TAILHOOK:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CABLE CAUGHT BY TAILHOOK:index",
      "displaytitle": "CABLE CAUGHT BY TAILHOOK:index (OnChange)",
      "description": "A number 1 through 4 for the cable number caught by the tailhook. Cable 1 is the one closest to the stern of the carrier. A value of 0 indicates no cable was caught: Units number: settable false",
      "messagetype": "trigger_onChange_CABLE CAUGHT BY TAILHOOK:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CABLE CAUGHT BY TAILHOOK:index",
      "displaytitle": "CABLE CAUGHT BY TAILHOOK:index (OnRequest)",
      "description": "A number 1 through 4 for the cable number caught by the tailhook. Cable 1 is the one closest to the stern of the carrier. A value of 0 indicates no cable was caught: Units number: settable false",
      "messagetype": "trigger_onRequest_CABLE CAUGHT BY TAILHOOK:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CAMERA ACTION COCKPIT VIEW RESET",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW RESET (Poll)",
      "description": "This can be used to reset the cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). Essentially the same as the user pressing the default reset keys CTRL + Space.: Units bool: settable true",
      "messagetype": "trigger_CAMERA ACTION COCKPIT VIEW RESET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CAMERA ACTION COCKPIT VIEW RESET",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW RESET (OnChange)",
      "description": "This can be used to reset the cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). Essentially the same as the user pressing the default reset keys CTRL + Space.: Units bool: settable true",
      "messagetype": "trigger_onChange_CAMERA ACTION COCKPIT VIEW RESET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CAMERA ACTION COCKPIT VIEW RESET",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW RESET (OnRequest)",
      "description": "This can be used to reset the cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). Essentially the same as the user pressing the default reset keys CTRL + Space.: Units bool: settable true",
      "messagetype": "trigger_onRequest_CAMERA ACTION COCKPIT VIEW RESET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CAMERA ACTION COCKPIT VIEW SAVE:index",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW SAVE:index (Poll)",
      "description": "This can be used to save a cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). The index value given is the save \"slot\" that will be used, from 0 to 9. Essentially this is the same as the user pressing the default save keys CTRL + Alt + 0-9.: Units bool: settable true",
      "messagetype": "trigger_CAMERA ACTION COCKPIT VIEW SAVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CAMERA ACTION COCKPIT VIEW SAVE:index",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW SAVE:index (OnChange)",
      "description": "This can be used to save a cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). The index value given is the save \"slot\" that will be used, from 0 to 9. Essentially this is the same as the user pressing the default save keys CTRL + Alt + 0-9.: Units bool: settable true",
      "messagetype": "trigger_onChange_CAMERA ACTION COCKPIT VIEW SAVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CAMERA ACTION COCKPIT VIEW SAVE:index",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW SAVE:index (OnRequest)",
      "description": "This can be used to save a cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). The index value given is the save \"slot\" that will be used, from 0 to 9. Essentially this is the same as the user pressing the default save keys CTRL + Alt + 0-9.: Units bool: settable true",
      "messagetype": "trigger_onRequest_CAMERA ACTION COCKPIT VIEW SAVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CAMERA GAMEPLAY PITCH YAW:index",
      "displaytitle": "CAMERA GAMEPLAY PITCH YAW:index (Poll)",
      "description": "Returns either the pitch (index 0) or the yaw (index 1) of the current gameplay camera.: Units radians: settable false",
      "messagetype": "trigger_CAMERA GAMEPLAY PITCH YAW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CAMERA GAMEPLAY PITCH YAW:index",
      "displaytitle": "CAMERA GAMEPLAY PITCH YAW:index (OnChange)",
      "description": "Returns either the pitch (index 0) or the yaw (index 1) of the current gameplay camera.: Units radians: settable false",
      "messagetype": "trigger_onChange_CAMERA GAMEPLAY PITCH YAW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CAMERA GAMEPLAY PITCH YAW:index",
      "displaytitle": "CAMERA GAMEPLAY PITCH YAW:index (OnRequest)",
      "description": "Returns either the pitch (index 0) or the yaw (index 1) of the current gameplay camera.: Units radians: settable false",
      "messagetype": "trigger_onRequest_CAMERA GAMEPLAY PITCH YAW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CAMERA REQUEST ACTION",
      "displaytitle": "CAMERA REQUEST ACTION (Poll)",
      "description": "This can be used to have the currently active camera perform a predefined action. Currently only 1 action is supported, but more may be added over time.: Units enum: settable true",
      "messagetype": "trigger_CAMERA REQUEST ACTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CAMERA REQUEST ACTION",
      "displaytitle": "CAMERA REQUEST ACTION (OnChange)",
      "description": "This can be used to have the currently active camera perform a predefined action. Currently only 1 action is supported, but more may be added over time.: Units enum: settable true",
      "messagetype": "trigger_onChange_CAMERA REQUEST ACTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CAMERA REQUEST ACTION",
      "displaytitle": "CAMERA REQUEST ACTION (OnRequest)",
      "description": "This can be used to have the currently active camera perform a predefined action. Currently only 1 action is supported, but more may be added over time.: Units enum: settable true",
      "messagetype": "trigger_onRequest_CAMERA REQUEST ACTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CAMERA STATE",
      "displaytitle": "CAMERA STATE (Poll)",
      "description": "This can be used to get or set the camera \"state\", which will be one of the listed enum values.: Units enum: settable true",
      "messagetype": "trigger_CAMERA STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CAMERA STATE",
      "displaytitle": "CAMERA STATE (OnChange)",
      "description": "This can be used to get or set the camera \"state\", which will be one of the listed enum values.: Units enum: settable true",
      "messagetype": "trigger_onChange_CAMERA STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CAMERA STATE",
      "displaytitle": "CAMERA STATE (OnRequest)",
      "description": "This can be used to get or set the camera \"state\", which will be one of the listed enum values.: Units enum: settable true",
      "messagetype": "trigger_onRequest_CAMERA STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CAMERA SUBSTATE",
      "displaytitle": "CAMERA SUBSTATE (Poll)",
      "description": "This variable can be used to get or set the camera \"sub-state\". The options here are generally only required when working with the in-sim panel UI. Note that the \"locked\" and \"unlocked\" state will be changed automatically if the following SimVars have their values changed: COCKPIT_CAMERA_HEADLOOK, CHASE_CAMERA_HEADLOOK.: Units enum: settable true",
      "messagetype": "trigger_CAMERA SUBSTATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CAMERA SUBSTATE",
      "displaytitle": "CAMERA SUBSTATE (OnChange)",
      "description": "This variable can be used to get or set the camera \"sub-state\". The options here are generally only required when working with the in-sim panel UI. Note that the \"locked\" and \"unlocked\" state will be changed automatically if the following SimVars have their values changed: COCKPIT_CAMERA_HEADLOOK, CHASE_CAMERA_HEADLOOK.: Units enum: settable true",
      "messagetype": "trigger_onChange_CAMERA SUBSTATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CAMERA SUBSTATE",
      "displaytitle": "CAMERA SUBSTATE (OnRequest)",
      "description": "This variable can be used to get or set the camera \"sub-state\". The options here are generally only required when working with the in-sim panel UI. Note that the \"locked\" and \"unlocked\" state will be changed automatically if the following SimVars have their values changed: COCKPIT_CAMERA_HEADLOOK, CHASE_CAMERA_HEADLOOK.: Units enum: settable true",
      "messagetype": "trigger_onRequest_CAMERA SUBSTATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CAMERA VIEW TYPE AND INDEX MAX:index",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX MAX:index (Poll)",
      "description": "This variable can get the number of option indices related to a specific camera view type. The index value supplied to the SimVar should be one of the camera view type Enum values (see CAMERA VIEW TYPE AND INDEX), and the SimVar will return the number of options available for that camera type (counting from 1, so - for example - if the camera view type is \"Quickview\" and has 8 quickview settings, then CAMERA VIEW TYPE AND INDEX MAX:4 will return 8). Note that this value can be set after a flight has started, but it will have no effect since the number of camera options is initilaised once only and not updated (and the simulation may overwrite the value again even after setting it).: Units number: settable true",
      "messagetype": "trigger_CAMERA VIEW TYPE AND INDEX MAX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CAMERA VIEW TYPE AND INDEX MAX:index",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX MAX:index (OnChange)",
      "description": "This variable can get the number of option indices related to a specific camera view type. The index value supplied to the SimVar should be one of the camera view type Enum values (see CAMERA VIEW TYPE AND INDEX), and the SimVar will return the number of options available for that camera type (counting from 1, so - for example - if the camera view type is \"Quickview\" and has 8 quickview settings, then CAMERA VIEW TYPE AND INDEX MAX:4 will return 8). Note that this value can be set after a flight has started, but it will have no effect since the number of camera options is initilaised once only and not updated (and the simulation may overwrite the value again even after setting it).: Units number: settable true",
      "messagetype": "trigger_onChange_CAMERA VIEW TYPE AND INDEX MAX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CAMERA VIEW TYPE AND INDEX MAX:index",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX MAX:index (OnRequest)",
      "description": "This variable can get the number of option indices related to a specific camera view type. The index value supplied to the SimVar should be one of the camera view type Enum values (see CAMERA VIEW TYPE AND INDEX), and the SimVar will return the number of options available for that camera type (counting from 1, so - for example - if the camera view type is \"Quickview\" and has 8 quickview settings, then CAMERA VIEW TYPE AND INDEX MAX:4 will return 8). Note that this value can be set after a flight has started, but it will have no effect since the number of camera options is initilaised once only and not updated (and the simulation may overwrite the value again even after setting it).: Units number: settable true",
      "messagetype": "trigger_onRequest_CAMERA VIEW TYPE AND INDEX MAX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CAMERA VIEW TYPE AND INDEX:index",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX:index (Poll)",
      "description": "With this you can get or set both the type of view for the current camera, as well as the option index, which will be between 0 and the maximum index value (as retrieved using the CAMERA VIEW TYPE AND INDEX MAX SimVar). Supplying an index of 0 to the SimVar will get/set the type (from the selection of enum values listed), and using an index of 1 will get/set the option index, which is an integer value.: Units enum: settable true",
      "messagetype": "trigger_CAMERA VIEW TYPE AND INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CAMERA VIEW TYPE AND INDEX:index",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX:index (OnChange)",
      "description": "With this you can get or set both the type of view for the current camera, as well as the option index, which will be between 0 and the maximum index value (as retrieved using the CAMERA VIEW TYPE AND INDEX MAX SimVar). Supplying an index of 0 to the SimVar will get/set the type (from the selection of enum values listed), and using an index of 1 will get/set the option index, which is an integer value.: Units enum: settable true",
      "messagetype": "trigger_onChange_CAMERA VIEW TYPE AND INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CAMERA VIEW TYPE AND INDEX:index",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX:index (OnRequest)",
      "description": "With this you can get or set both the type of view for the current camera, as well as the option index, which will be between 0 and the maximum index value (as retrieved using the CAMERA VIEW TYPE AND INDEX MAX SimVar). Supplying an index of 0 to the SimVar will get/set the type (from the selection of enum values listed), and using an index of 1 will get/set the option index, which is an integer value.: Units enum: settable true",
      "messagetype": "trigger_onRequest_CAMERA VIEW TYPE AND INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CANOPY OPEN",
      "displaytitle": "CANOPY OPEN (Poll)",
      "description": "Percent primary door/exit open.: Units percent Over 100: settable true",
      "messagetype": "trigger_CANOPY OPEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CANOPY OPEN",
      "displaytitle": "CANOPY OPEN (OnChange)",
      "description": "Percent primary door/exit open.: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_CANOPY OPEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CANOPY OPEN",
      "displaytitle": "CANOPY OPEN (OnRequest)",
      "description": "Percent primary door/exit open.: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_CANOPY OPEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CARB HEAT AVAILABLE",
      "displaytitle": "CARB HEAT AVAILABLE (Poll)",
      "description": "True if carburetor heat available.: Units bool: settable false",
      "messagetype": "trigger_CARB HEAT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CARB HEAT AVAILABLE",
      "displaytitle": "CARB HEAT AVAILABLE (OnChange)",
      "description": "True if carburetor heat available.: Units bool: settable false",
      "messagetype": "trigger_onChange_CARB HEAT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CARB HEAT AVAILABLE",
      "displaytitle": "CARB HEAT AVAILABLE (OnRequest)",
      "description": "True if carburetor heat available.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CARB HEAT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CATAPULT STROKE POSITION:index",
      "displaytitle": "CATAPULT STROKE POSITION:index (Poll)",
      "description": "Catapults are indexed from 1. This value will be 0 before the catapult fires, and then up to 100 as the aircraft is propelled down the catapult. The aircraft may takeoff before the value reaches 100 (depending on the aircraft weight, power applied, and other factors), in which case this value will not be further updated. This value could be used to drive a bogie animation: Units number: settable false",
      "messagetype": "trigger_CATAPULT STROKE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CATAPULT STROKE POSITION:index",
      "displaytitle": "CATAPULT STROKE POSITION:index (OnChange)",
      "description": "Catapults are indexed from 1. This value will be 0 before the catapult fires, and then up to 100 as the aircraft is propelled down the catapult. The aircraft may takeoff before the value reaches 100 (depending on the aircraft weight, power applied, and other factors), in which case this value will not be further updated. This value could be used to drive a bogie animation: Units number: settable false",
      "messagetype": "trigger_onChange_CATAPULT STROKE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CATAPULT STROKE POSITION:index",
      "displaytitle": "CATAPULT STROKE POSITION:index (OnRequest)",
      "description": "Catapults are indexed from 1. This value will be 0 before the catapult fires, and then up to 100 as the aircraft is propelled down the catapult. The aircraft may takeoff before the value reaches 100 (depending on the aircraft weight, power applied, and other factors), in which case this value will not be further updated. This value could be used to drive a bogie animation: Units number: settable false",
      "messagetype": "trigger_onRequest_CATAPULT STROKE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CATEGORY",
      "displaytitle": "CATEGORY (Poll)",
      "description": "Type of aircraft: Units null: settable false",
      "messagetype": "trigger_CATEGORY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CATEGORY",
      "displaytitle": "CATEGORY (OnChange)",
      "description": "Type of aircraft: Units null: settable false",
      "messagetype": "trigger_onChange_CATEGORY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CATEGORY",
      "displaytitle": "CATEGORY (OnRequest)",
      "description": "Type of aircraft: Units null: settable false",
      "messagetype": "trigger_onRequest_CATEGORY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z",
      "displaytitle": "CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z (Poll)",
      "description": "The \"Z\" axis position of the point of contact between the catering truck and the bottom of the aircraft door, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z",
      "displaytitle": "CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z (OnChange)",
      "description": "The \"Z\" axis position of the point of contact between the catering truck and the bottom of the aircraft door, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z",
      "displaytitle": "CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z (OnRequest)",
      "description": "The \"Z\" axis position of the point of contact between the catering truck and the bottom of the aircraft door, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CATERINGTRUCK ELEVATION CURRENT",
      "displaytitle": "CATERINGTRUCK ELEVATION CURRENT (Poll)",
      "description": "The current altitude AGL of the bottom of the catering truck container.: Units meters: settable false",
      "messagetype": "trigger_CATERINGTRUCK ELEVATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CATERINGTRUCK ELEVATION CURRENT",
      "displaytitle": "CATERINGTRUCK ELEVATION CURRENT (OnChange)",
      "description": "The current altitude AGL of the bottom of the catering truck container.: Units meters: settable false",
      "messagetype": "trigger_onChange_CATERINGTRUCK ELEVATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CATERINGTRUCK ELEVATION CURRENT",
      "displaytitle": "CATERINGTRUCK ELEVATION CURRENT (OnRequest)",
      "description": "The current altitude AGL of the bottom of the catering truck container.: Units meters: settable false",
      "messagetype": "trigger_onRequest_CATERINGTRUCK ELEVATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CATERINGTRUCK ELEVATION TARGET",
      "displaytitle": "CATERINGTRUCK ELEVATION TARGET (Poll)",
      "description": "The target altitude AGL of the bottom of the catering truck container.: Units meters: settable false",
      "messagetype": "trigger_CATERINGTRUCK ELEVATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CATERINGTRUCK ELEVATION TARGET",
      "displaytitle": "CATERINGTRUCK ELEVATION TARGET (OnChange)",
      "description": "The target altitude AGL of the bottom of the catering truck container.: Units meters: settable false",
      "messagetype": "trigger_onChange_CATERINGTRUCK ELEVATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CATERINGTRUCK ELEVATION TARGET",
      "displaytitle": "CATERINGTRUCK ELEVATION TARGET (OnRequest)",
      "description": "The target altitude AGL of the bottom of the catering truck container.: Units meters: settable false",
      "messagetype": "trigger_onRequest_CATERINGTRUCK ELEVATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CATERINGTRUCK OPENING CURRENT",
      "displaytitle": "CATERINGTRUCK OPENING CURRENT (Poll)",
      "description": "The current state of the catering truck when opening the container and deploying the bridge, where 0 is fully closed and 1 is fully opened and deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_CATERINGTRUCK OPENING CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CATERINGTRUCK OPENING CURRENT",
      "displaytitle": "CATERINGTRUCK OPENING CURRENT (OnChange)",
      "description": "The current state of the catering truck when opening the container and deploying the bridge, where 0 is fully closed and 1 is fully opened and deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_CATERINGTRUCK OPENING CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CATERINGTRUCK OPENING CURRENT",
      "displaytitle": "CATERINGTRUCK OPENING CURRENT (OnRequest)",
      "description": "The current state of the catering truck when opening the container and deploying the bridge, where 0 is fully closed and 1 is fully opened and deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_CATERINGTRUCK OPENING CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CATERINGTRUCK OPENING TARGET",
      "displaytitle": "CATERINGTRUCK OPENING TARGET (Poll)",
      "description": "The target state of the catering truck the container is opene and the bridge deployed, where 0 is fully closed and 1 is fully opened and deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_CATERINGTRUCK OPENING TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CATERINGTRUCK OPENING TARGET",
      "displaytitle": "CATERINGTRUCK OPENING TARGET (OnChange)",
      "description": "The target state of the catering truck the container is opene and the bridge deployed, where 0 is fully closed and 1 is fully opened and deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_CATERINGTRUCK OPENING TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CATERINGTRUCK OPENING TARGET",
      "displaytitle": "CATERINGTRUCK OPENING TARGET (OnRequest)",
      "description": "The target state of the catering truck the container is opene and the bridge deployed, where 0 is fully closed and 1 is fully opened and deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_CATERINGTRUCK OPENING TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CENTER WHEEL ROTATION ANGLE",
      "displaytitle": "CENTER WHEEL ROTATION ANGLE (Poll)",
      "description": "Center wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_CENTER WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CENTER WHEEL ROTATION ANGLE",
      "displaytitle": "CENTER WHEEL ROTATION ANGLE (OnChange)",
      "description": "Center wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onChange_CENTER WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CENTER WHEEL ROTATION ANGLE",
      "displaytitle": "CENTER WHEEL ROTATION ANGLE (OnRequest)",
      "description": "Center wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onRequest_CENTER WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CENTER WHEEL RPM",
      "displaytitle": "CENTER WHEEL RPM (Poll)",
      "description": "Center landing gear rpm: Units RPM: settable false",
      "messagetype": "trigger_CENTER WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CENTER WHEEL RPM",
      "displaytitle": "CENTER WHEEL RPM (OnChange)",
      "description": "Center landing gear rpm: Units RPM: settable false",
      "messagetype": "trigger_onChange_CENTER WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CENTER WHEEL RPM",
      "displaytitle": "CENTER WHEEL RPM (OnRequest)",
      "description": "Center landing gear rpm: Units RPM: settable false",
      "messagetype": "trigger_onRequest_CENTER WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG AFT LIMIT",
      "displaytitle": "CG AFT LIMIT (Poll)",
      "description": "Most backward authorized position of the CG according to the POH.: Units percent Over 100: settable false",
      "messagetype": "trigger_CG AFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG AFT LIMIT",
      "displaytitle": "CG AFT LIMIT (OnChange)",
      "description": "Most backward authorized position of the CG according to the POH.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_CG AFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG AFT LIMIT",
      "displaytitle": "CG AFT LIMIT (OnRequest)",
      "description": "Most backward authorized position of the CG according to the POH.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_CG AFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG FEET",
      "displaytitle": "CG FEET (Poll)",
      "description": "The longitudinal CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_CG FEET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG FEET",
      "displaytitle": "CG FEET (OnChange)",
      "description": "The longitudinal CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onChange_CG FEET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG FEET",
      "displaytitle": "CG FEET (OnRequest)",
      "description": "The longitudinal CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onRequest_CG FEET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG FEET AFT LIMIT",
      "displaytitle": "CG FEET AFT LIMIT (Poll)",
      "description": "The aft CG limit position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_CG FEET AFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG FEET AFT LIMIT",
      "displaytitle": "CG FEET AFT LIMIT (OnChange)",
      "description": "The aft CG limit position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onChange_CG FEET AFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG FEET AFT LIMIT",
      "displaytitle": "CG FEET AFT LIMIT (OnRequest)",
      "description": "The aft CG limit position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onRequest_CG FEET AFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG FEET FWD LIMIT",
      "displaytitle": "CG FEET FWD LIMIT (Poll)",
      "description": "The forward CG limit position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_CG FEET FWD LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG FEET FWD LIMIT",
      "displaytitle": "CG FEET FWD LIMIT (OnChange)",
      "description": "The forward CG limit position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onChange_CG FEET FWD LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG FEET FWD LIMIT",
      "displaytitle": "CG FEET FWD LIMIT (OnRequest)",
      "description": "The forward CG limit position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onRequest_CG FEET FWD LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG FEET LATERAL",
      "displaytitle": "CG FEET LATERAL (Poll)",
      "description": "The lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_CG FEET LATERAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG FEET LATERAL",
      "displaytitle": "CG FEET LATERAL (OnChange)",
      "description": "The lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onChange_CG FEET LATERAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG FEET LATERAL",
      "displaytitle": "CG FEET LATERAL (OnRequest)",
      "description": "The lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onRequest_CG FEET LATERAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG FEET LATERAL LEFT LIMIT",
      "displaytitle": "CG FEET LATERAL LEFT LIMIT (Poll)",
      "description": "The left hand lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_CG FEET LATERAL LEFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG FEET LATERAL LEFT LIMIT",
      "displaytitle": "CG FEET LATERAL LEFT LIMIT (OnChange)",
      "description": "The left hand lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onChange_CG FEET LATERAL LEFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG FEET LATERAL LEFT LIMIT",
      "displaytitle": "CG FEET LATERAL LEFT LIMIT (OnRequest)",
      "description": "The left hand lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onRequest_CG FEET LATERAL LEFT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG FEET LATERAL RIGHT LIMIT",
      "displaytitle": "CG FEET LATERAL RIGHT LIMIT (Poll)",
      "description": "The right hand lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_CG FEET LATERAL RIGHT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG FEET LATERAL RIGHT LIMIT",
      "displaytitle": "CG FEET LATERAL RIGHT LIMIT (OnChange)",
      "description": "The right hand lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onChange_CG FEET LATERAL RIGHT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG FEET LATERAL RIGHT LIMIT",
      "displaytitle": "CG FEET LATERAL RIGHT LIMIT (OnRequest)",
      "description": "The right hand lateral CG position relative to the Reference Datum Position.: Units feet: settable false",
      "messagetype": "trigger_onRequest_CG FEET LATERAL RIGHT LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG FWD LIMIT",
      "displaytitle": "CG FWD LIMIT (Poll)",
      "description": "Most forward authorized position of the CG according to the POH.: Units percent Over 100: settable false",
      "messagetype": "trigger_CG FWD LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG FWD LIMIT",
      "displaytitle": "CG FWD LIMIT (OnChange)",
      "description": "Most forward authorized position of the CG according to the POH.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_CG FWD LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG FWD LIMIT",
      "displaytitle": "CG FWD LIMIT (OnRequest)",
      "description": "Most forward authorized position of the CG according to the POH.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_CG FWD LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG MAX MACH",
      "displaytitle": "CG MAX MACH (Poll)",
      "description": "Deprecated, do not use!: Units mach: settable false",
      "messagetype": "trigger_CG MAX MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG MAX MACH",
      "displaytitle": "CG MAX MACH (OnChange)",
      "description": "Deprecated, do not use!: Units mach: settable false",
      "messagetype": "trigger_onChange_CG MAX MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG MAX MACH",
      "displaytitle": "CG MAX MACH (OnRequest)",
      "description": "Deprecated, do not use!: Units mach: settable false",
      "messagetype": "trigger_onRequest_CG MAX MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG MIN MACH",
      "displaytitle": "CG MIN MACH (Poll)",
      "description": "Deprecated, do not use!: Units mach: settable false",
      "messagetype": "trigger_CG MIN MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG MIN MACH",
      "displaytitle": "CG MIN MACH (OnChange)",
      "description": "Deprecated, do not use!: Units mach: settable false",
      "messagetype": "trigger_onChange_CG MIN MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG MIN MACH",
      "displaytitle": "CG MIN MACH (OnRequest)",
      "description": "Deprecated, do not use!: Units mach: settable false",
      "messagetype": "trigger_onRequest_CG MIN MACH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG PERCENT",
      "displaytitle": "CG PERCENT (Poll)",
      "description": "Longitudinal CG position as a percent of reference chord: Units percent Over 100: settable false",
      "messagetype": "trigger_CG PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG PERCENT",
      "displaytitle": "CG PERCENT (OnChange)",
      "description": "Longitudinal CG position as a percent of reference chord: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_CG PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG PERCENT",
      "displaytitle": "CG PERCENT (OnRequest)",
      "description": "Longitudinal CG position as a percent of reference chord: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_CG PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CG PERCENT LATERAL",
      "displaytitle": "CG PERCENT LATERAL (Poll)",
      "description": "Lateral CG position as a percent of reference chord: Units percent Over 100: settable false",
      "messagetype": "trigger_CG PERCENT LATERAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CG PERCENT LATERAL",
      "displaytitle": "CG PERCENT LATERAL (OnChange)",
      "description": "Lateral CG position as a percent of reference chord: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_CG PERCENT LATERAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CG PERCENT LATERAL",
      "displaytitle": "CG PERCENT LATERAL (OnRequest)",
      "description": "Lateral CG position as a percent of reference chord: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_CG PERCENT LATERAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA HEADLOOK",
      "displaytitle": "CHASE CAMERA HEADLOOK (Poll)",
      "description": "This is used to get/set the look state of the chase (external) camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 3 (External/Chase).: Units enum: settable true",
      "messagetype": "trigger_CHASE CAMERA HEADLOOK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CHASE CAMERA HEADLOOK",
      "displaytitle": "CHASE CAMERA HEADLOOK (OnChange)",
      "description": "This is used to get/set the look state of the chase (external) camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 3 (External/Chase).: Units enum: settable true",
      "messagetype": "trigger_onChange_CHASE CAMERA HEADLOOK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CHASE CAMERA HEADLOOK",
      "displaytitle": "CHASE CAMERA HEADLOOK (OnRequest)",
      "description": "This is used to get/set the look state of the chase (external) camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 3 (External/Chase).: Units enum: settable true",
      "messagetype": "trigger_onRequest_CHASE CAMERA HEADLOOK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA MOMENTUM",
      "displaytitle": "CHASE CAMERA MOMENTUM (Poll)",
      "description": "Sets/gets the momentum modifier of the chase (external) camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_CHASE CAMERA MOMENTUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CHASE CAMERA MOMENTUM",
      "displaytitle": "CHASE CAMERA MOMENTUM (OnChange)",
      "description": "Sets/gets the momentum modifier of the chase (external) camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_CHASE CAMERA MOMENTUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CHASE CAMERA MOMENTUM",
      "displaytitle": "CHASE CAMERA MOMENTUM (OnRequest)",
      "description": "Sets/gets the momentum modifier of the chase (external) camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_CHASE CAMERA MOMENTUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA SPEED",
      "displaytitle": "CHASE CAMERA SPEED (Poll)",
      "description": "Sets/gets the translation speed modifier of the chase (external) camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_CHASE CAMERA SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CHASE CAMERA SPEED",
      "displaytitle": "CHASE CAMERA SPEED (OnChange)",
      "description": "Sets/gets the translation speed modifier of the chase (external) camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_CHASE CAMERA SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CHASE CAMERA SPEED",
      "displaytitle": "CHASE CAMERA SPEED (OnRequest)",
      "description": "Sets/gets the translation speed modifier of the chase (external) camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_CHASE CAMERA SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA ZOOM",
      "displaytitle": "CHASE CAMERA ZOOM (Poll)",
      "description": "Sets/gets the zoom/FOV modifier for the chase (external) camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_CHASE CAMERA ZOOM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CHASE CAMERA ZOOM",
      "displaytitle": "CHASE CAMERA ZOOM (OnChange)",
      "description": "Sets/gets the zoom/FOV modifier for the chase (external) camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_CHASE CAMERA ZOOM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CHASE CAMERA ZOOM",
      "displaytitle": "CHASE CAMERA ZOOM (OnRequest)",
      "description": "Sets/gets the zoom/FOV modifier for the chase (external) camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_CHASE CAMERA ZOOM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA ZOOM SPEED",
      "displaytitle": "CHASE CAMERA ZOOM SPEED (Poll)",
      "description": "Sets/gets the speed modifier for when the zoom/FOV chase (external) camera changes zoom/FOV levels. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_CHASE CAMERA ZOOM SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CHASE CAMERA ZOOM SPEED",
      "displaytitle": "CHASE CAMERA ZOOM SPEED (OnChange)",
      "description": "Sets/gets the speed modifier for when the zoom/FOV chase (external) camera changes zoom/FOV levels. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_CHASE CAMERA ZOOM SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CHASE CAMERA ZOOM SPEED",
      "displaytitle": "CHASE CAMERA ZOOM SPEED (OnRequest)",
      "description": "Sets/gets the speed modifier for when the zoom/FOV chase (external) camera changes zoom/FOV levels. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_CHASE CAMERA ZOOM SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT AUTO BRAKES ON",
      "displaytitle": "CIRCUIT AUTO BRAKES ON (Poll)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT AUTO BRAKES ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT AUTO BRAKES ON",
      "displaytitle": "CIRCUIT AUTO BRAKES ON (OnChange)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT AUTO BRAKES ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT AUTO BRAKES ON",
      "displaytitle": "CIRCUIT AUTO BRAKES ON (OnRequest)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT AUTO BRAKES ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT AUTO FEATHER ON",
      "displaytitle": "CIRCUIT AUTO FEATHER ON (Poll)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT AUTO FEATHER ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT AUTO FEATHER ON",
      "displaytitle": "CIRCUIT AUTO FEATHER ON (OnChange)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT AUTO FEATHER ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT AUTO FEATHER ON",
      "displaytitle": "CIRCUIT AUTO FEATHER ON (OnRequest)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT AUTO FEATHER ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT AUTOPILOT ON",
      "displaytitle": "CIRCUIT AUTOPILOT ON (Poll)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT AUTOPILOT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT AUTOPILOT ON",
      "displaytitle": "CIRCUIT AUTOPILOT ON (OnChange)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT AUTOPILOT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT AUTOPILOT ON",
      "displaytitle": "CIRCUIT AUTOPILOT ON (OnRequest)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT AUTOPILOT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT AVIONICS ON",
      "displaytitle": "CIRCUIT AVIONICS ON (Poll)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT AVIONICS ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT AVIONICS ON",
      "displaytitle": "CIRCUIT AVIONICS ON (OnChange)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT AVIONICS ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT AVIONICS ON",
      "displaytitle": "CIRCUIT AVIONICS ON (OnRequest)",
      "description": "Is electrical power available to this circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT AVIONICS ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT BREAKER PULLED",
      "displaytitle": "CIRCUIT BREAKER PULLED (Poll)",
      "description": "This will be true if the circuit breaker is pulled. Requires a BUS_LOOKUP_INDEX and a circuit index.: Units bool: settable true",
      "messagetype": "trigger_CIRCUIT BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT BREAKER PULLED",
      "displaytitle": "CIRCUIT BREAKER PULLED (OnChange)",
      "description": "This will be true if the circuit breaker is pulled. Requires a BUS_LOOKUP_INDEX and a circuit index.: Units bool: settable true",
      "messagetype": "trigger_onChange_CIRCUIT BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT BREAKER PULLED",
      "displaytitle": "CIRCUIT BREAKER PULLED (OnRequest)",
      "description": "This will be true if the circuit breaker is pulled. Requires a BUS_LOOKUP_INDEX and a circuit index.: Units bool: settable true",
      "messagetype": "trigger_onRequest_CIRCUIT BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT CONNECTION ON",
      "displaytitle": "CIRCUIT CONNECTION ON (Poll)",
      "description": "This will be true if the circuit is connected. Requires a BUS_LOOKUP_INDEX and a circuit index: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT CONNECTION ON",
      "displaytitle": "CIRCUIT CONNECTION ON (OnChange)",
      "description": "This will be true if the circuit is connected. Requires a BUS_LOOKUP_INDEX and a circuit index: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT CONNECTION ON",
      "displaytitle": "CIRCUIT CONNECTION ON (OnRequest)",
      "description": "This will be true if the circuit is connected. Requires a BUS_LOOKUP_INDEX and a circuit index: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT FLAP MOTOR ON",
      "displaytitle": "CIRCUIT FLAP MOTOR ON (Poll)",
      "description": "Is electrical power available to the flap motor circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT FLAP MOTOR ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT FLAP MOTOR ON",
      "displaytitle": "CIRCUIT FLAP MOTOR ON (OnChange)",
      "description": "Is electrical power available to the flap motor circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT FLAP MOTOR ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT FLAP MOTOR ON",
      "displaytitle": "CIRCUIT FLAP MOTOR ON (OnRequest)",
      "description": "Is electrical power available to the flap motor circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT FLAP MOTOR ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT GEAR MOTOR ON",
      "displaytitle": "CIRCUIT GEAR MOTOR ON (Poll)",
      "description": "Is electrical power available to the gear motor circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT GEAR MOTOR ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT GEAR MOTOR ON",
      "displaytitle": "CIRCUIT GEAR MOTOR ON (OnChange)",
      "description": "Is electrical power available to the gear motor circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT GEAR MOTOR ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT GEAR MOTOR ON",
      "displaytitle": "CIRCUIT GEAR MOTOR ON (OnRequest)",
      "description": "Is electrical power available to the gear motor circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT GEAR MOTOR ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT GEAR WARNING ON",
      "displaytitle": "CIRCUIT GEAR WARNING ON (Poll)",
      "description": "Is electrical power available to gear warning circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT GEAR WARNING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT GEAR WARNING ON",
      "displaytitle": "CIRCUIT GEAR WARNING ON (OnChange)",
      "description": "Is electrical power available to gear warning circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT GEAR WARNING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT GEAR WARNING ON",
      "displaytitle": "CIRCUIT GEAR WARNING ON (OnRequest)",
      "description": "Is electrical power available to gear warning circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT GEAR WARNING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT GENERAL PANEL ON",
      "displaytitle": "CIRCUIT GENERAL PANEL ON (Poll)",
      "description": "Is electrical power available to the general panel circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT GENERAL PANEL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT GENERAL PANEL ON",
      "displaytitle": "CIRCUIT GENERAL PANEL ON (OnChange)",
      "description": "Is electrical power available to the general panel circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT GENERAL PANEL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT GENERAL PANEL ON",
      "displaytitle": "CIRCUIT GENERAL PANEL ON (OnRequest)",
      "description": "Is electrical power available to the general panel circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT GENERAL PANEL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT HYDRAULIC PUMP ON",
      "displaytitle": "CIRCUIT HYDRAULIC PUMP ON (Poll)",
      "description": "Is electrical power available to the hydraulic pump circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT HYDRAULIC PUMP ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT HYDRAULIC PUMP ON",
      "displaytitle": "CIRCUIT HYDRAULIC PUMP ON (OnChange)",
      "description": "Is electrical power available to the hydraulic pump circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT HYDRAULIC PUMP ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT HYDRAULIC PUMP ON",
      "displaytitle": "CIRCUIT HYDRAULIC PUMP ON (OnRequest)",
      "description": "Is electrical power available to the hydraulic pump circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT HYDRAULIC PUMP ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT MARKER BEACON ON",
      "displaytitle": "CIRCUIT MARKER BEACON ON (Poll)",
      "description": "Is electrical power available to the marker beacon circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT MARKER BEACON ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT MARKER BEACON ON",
      "displaytitle": "CIRCUIT MARKER BEACON ON (OnChange)",
      "description": "Is electrical power available to the marker beacon circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT MARKER BEACON ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT MARKER BEACON ON",
      "displaytitle": "CIRCUIT MARKER BEACON ON (OnRequest)",
      "description": "Is electrical power available to the marker beacon circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT MARKER BEACON ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT NAVCOM1 ON",
      "displaytitle": "CIRCUIT NAVCOM1 ON (Poll)",
      "description": "Whether or not power is available to the NAVCOM1 circuit.: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT NAVCOM1 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT NAVCOM1 ON",
      "displaytitle": "CIRCUIT NAVCOM1 ON (OnChange)",
      "description": "Whether or not power is available to the NAVCOM1 circuit.: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT NAVCOM1 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT NAVCOM1 ON",
      "displaytitle": "CIRCUIT NAVCOM1 ON (OnRequest)",
      "description": "Whether or not power is available to the NAVCOM1 circuit.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT NAVCOM1 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT NAVCOM2 ON",
      "displaytitle": "CIRCUIT NAVCOM2 ON (Poll)",
      "description": "Whether or not power is available to the NAVCOM2 circuit.: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT NAVCOM2 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT NAVCOM2 ON",
      "displaytitle": "CIRCUIT NAVCOM2 ON (OnChange)",
      "description": "Whether or not power is available to the NAVCOM2 circuit.: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT NAVCOM2 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT NAVCOM2 ON",
      "displaytitle": "CIRCUIT NAVCOM2 ON (OnRequest)",
      "description": "Whether or not power is available to the NAVCOM2 circuit.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT NAVCOM2 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT NAVCOM3 ON",
      "displaytitle": "CIRCUIT NAVCOM3 ON (Poll)",
      "description": "Whether or not power is available to the NAVCOM3 circuit.: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT NAVCOM3 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT NAVCOM3 ON",
      "displaytitle": "CIRCUIT NAVCOM3 ON (OnChange)",
      "description": "Whether or not power is available to the NAVCOM3 circuit.: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT NAVCOM3 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT NAVCOM3 ON",
      "displaytitle": "CIRCUIT NAVCOM3 ON (OnRequest)",
      "description": "Whether or not power is available to the NAVCOM3 circuit.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT NAVCOM3 ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT ON",
      "displaytitle": "CIRCUIT ON (Poll)",
      "description": "This will be true if the given circuit is functioning. Use a circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT ON",
      "displaytitle": "CIRCUIT ON (OnChange)",
      "description": "This will be true if the given circuit is functioning. Use a circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT ON",
      "displaytitle": "CIRCUIT ON (OnRequest)",
      "description": "This will be true if the given circuit is functioning. Use a circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT PITOT HEAT ON",
      "displaytitle": "CIRCUIT PITOT HEAT ON (Poll)",
      "description": "Is electrical power available to the pitot heat circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT PITOT HEAT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT PITOT HEAT ON",
      "displaytitle": "CIRCUIT PITOT HEAT ON (OnChange)",
      "description": "Is electrical power available to the pitot heat circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT PITOT HEAT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT PITOT HEAT ON",
      "displaytitle": "CIRCUIT PITOT HEAT ON (OnRequest)",
      "description": "Is electrical power available to the pitot heat circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT PITOT HEAT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT POWER SETTING",
      "displaytitle": "CIRCUIT POWER SETTING (Poll)",
      "description": "This returns the percentage of use that the circuit is getting. This requires a circuit index when referencing: Units percent: settable false",
      "messagetype": "trigger_CIRCUIT POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT POWER SETTING",
      "displaytitle": "CIRCUIT POWER SETTING (OnChange)",
      "description": "This returns the percentage of use that the circuit is getting. This requires a circuit index when referencing: Units percent: settable false",
      "messagetype": "trigger_onChange_CIRCUIT POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT POWER SETTING",
      "displaytitle": "CIRCUIT POWER SETTING (OnRequest)",
      "description": "This returns the percentage of use that the circuit is getting. This requires a circuit index when referencing: Units percent: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT PROP SYNC ON",
      "displaytitle": "CIRCUIT PROP SYNC ON (Poll)",
      "description": "Is electrical power available to the propeller sync circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT PROP SYNC ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT PROP SYNC ON",
      "displaytitle": "CIRCUIT PROP SYNC ON (OnChange)",
      "description": "Is electrical power available to the propeller sync circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT PROP SYNC ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT PROP SYNC ON",
      "displaytitle": "CIRCUIT PROP SYNC ON (OnRequest)",
      "description": "Is electrical power available to the propeller sync circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT PROP SYNC ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT STANDBY VACUUM ON",
      "displaytitle": "CIRCUIT STANDBY VACUUM ON (Poll)",
      "description": "Is electrical power available to the vacuum circuit: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT STANDBY VACUUM ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT STANDBY VACUUM ON",
      "displaytitle": "CIRCUIT STANDBY VACUUM ON (OnChange)",
      "description": "Is electrical power available to the vacuum circuit: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT STANDBY VACUUM ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT STANDBY VACUUM ON",
      "displaytitle": "CIRCUIT STANDBY VACUUM ON (OnRequest)",
      "description": "Is electrical power available to the vacuum circuit: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT STANDBY VACUUM ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT SWITCH ON",
      "displaytitle": "CIRCUIT SWITCH ON (Poll)",
      "description": "The circuit switch position, true if the switch is ON. Use a circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_CIRCUIT SWITCH ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CIRCUIT SWITCH ON",
      "displaytitle": "CIRCUIT SWITCH ON (OnChange)",
      "description": "The circuit switch position, true if the switch is ON. Use a circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_onChange_CIRCUIT SWITCH ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CIRCUIT SWITCH ON",
      "displaytitle": "CIRCUIT SWITCH ON (OnRequest)",
      "description": "The circuit switch position, true if the switch is ON. Use a circuit index when referencing.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CIRCUIT SWITCH ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA HEADLOOK",
      "displaytitle": "COCKPIT CAMERA HEADLOOK (Poll)",
      "description": "This is used to get/set the look state of the cockpit camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 2 (Cockpit).: Units enum: settable true",
      "messagetype": "trigger_COCKPIT CAMERA HEADLOOK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COCKPIT CAMERA HEADLOOK",
      "displaytitle": "COCKPIT CAMERA HEADLOOK (OnChange)",
      "description": "This is used to get/set the look state of the cockpit camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 2 (Cockpit).: Units enum: settable true",
      "messagetype": "trigger_onChange_COCKPIT CAMERA HEADLOOK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COCKPIT CAMERA HEADLOOK",
      "displaytitle": "COCKPIT CAMERA HEADLOOK (OnRequest)",
      "description": "This is used to get/set the look state of the cockpit camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 2 (Cockpit).: Units enum: settable true",
      "messagetype": "trigger_onRequest_COCKPIT CAMERA HEADLOOK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA HEIGHT",
      "displaytitle": "COCKPIT CAMERA HEIGHT (Poll)",
      "description": "This can be used to get/set the cockpit camera height modifier expressed as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_COCKPIT CAMERA HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COCKPIT CAMERA HEIGHT",
      "displaytitle": "COCKPIT CAMERA HEIGHT (OnChange)",
      "description": "This can be used to get/set the cockpit camera height modifier expressed as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_COCKPIT CAMERA HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COCKPIT CAMERA HEIGHT",
      "displaytitle": "COCKPIT CAMERA HEIGHT (OnRequest)",
      "description": "This can be used to get/set the cockpit camera height modifier expressed as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_COCKPIT CAMERA HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA INSTRUMENT AUTOSELECT",
      "displaytitle": "COCKPIT CAMERA INSTRUMENT AUTOSELECT (Poll)",
      "description": "This can be used to get or set the autoselect option for the cockpit camera when viewing the instruments (ie: the CAMERA_SUBSTATE is 5). When enabled the camera will move automatically if the player mouse reaches the edge of the screen and there are instrument panels available on that side.: Units bool: settable true",
      "messagetype": "trigger_COCKPIT CAMERA INSTRUMENT AUTOSELECT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COCKPIT CAMERA INSTRUMENT AUTOSELECT",
      "displaytitle": "COCKPIT CAMERA INSTRUMENT AUTOSELECT (OnChange)",
      "description": "This can be used to get or set the autoselect option for the cockpit camera when viewing the instruments (ie: the CAMERA_SUBSTATE is 5). When enabled the camera will move automatically if the player mouse reaches the edge of the screen and there are instrument panels available on that side.: Units bool: settable true",
      "messagetype": "trigger_onChange_COCKPIT CAMERA INSTRUMENT AUTOSELECT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COCKPIT CAMERA INSTRUMENT AUTOSELECT",
      "displaytitle": "COCKPIT CAMERA INSTRUMENT AUTOSELECT (OnRequest)",
      "description": "This can be used to get or set the autoselect option for the cockpit camera when viewing the instruments (ie: the CAMERA_SUBSTATE is 5). When enabled the camera will move automatically if the player mouse reaches the edge of the screen and there are instrument panels available on that side.: Units bool: settable true",
      "messagetype": "trigger_onRequest_COCKPIT CAMERA INSTRUMENT AUTOSELECT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA MOMENTUM",
      "displaytitle": "COCKPIT CAMERA MOMENTUM (Poll)",
      "description": "Sets/gets the momentum modifier of the cockpit camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_COCKPIT CAMERA MOMENTUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COCKPIT CAMERA MOMENTUM",
      "displaytitle": "COCKPIT CAMERA MOMENTUM (OnChange)",
      "description": "Sets/gets the momentum modifier of the cockpit camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_COCKPIT CAMERA MOMENTUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COCKPIT CAMERA MOMENTUM",
      "displaytitle": "COCKPIT CAMERA MOMENTUM (OnRequest)",
      "description": "Sets/gets the momentum modifier of the cockpit camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_COCKPIT CAMERA MOMENTUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA SPEED",
      "displaytitle": "COCKPIT CAMERA SPEED (Poll)",
      "description": "Sets/gets the translation speed modifier of the cockpit camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_COCKPIT CAMERA SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COCKPIT CAMERA SPEED",
      "displaytitle": "COCKPIT CAMERA SPEED (OnChange)",
      "description": "Sets/gets the translation speed modifier of the cockpit camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_COCKPIT CAMERA SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COCKPIT CAMERA SPEED",
      "displaytitle": "COCKPIT CAMERA SPEED (OnRequest)",
      "description": "Sets/gets the translation speed modifier of the cockpit camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_COCKPIT CAMERA SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA UPPER POSITION",
      "displaytitle": "COCKPIT CAMERA UPPER POSITION (Poll)",
      "description": "Sets/gets the current \"upper position\" cockpit camera toggle. When 1 (TRUE), the camera is is in the upper position, and when 0 (FALSE) it is in the default position.: Units bool: settable true",
      "messagetype": "trigger_COCKPIT CAMERA UPPER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COCKPIT CAMERA UPPER POSITION",
      "displaytitle": "COCKPIT CAMERA UPPER POSITION (OnChange)",
      "description": "Sets/gets the current \"upper position\" cockpit camera toggle. When 1 (TRUE), the camera is is in the upper position, and when 0 (FALSE) it is in the default position.: Units bool: settable true",
      "messagetype": "trigger_onChange_COCKPIT CAMERA UPPER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COCKPIT CAMERA UPPER POSITION",
      "displaytitle": "COCKPIT CAMERA UPPER POSITION (OnRequest)",
      "description": "Sets/gets the current \"upper position\" cockpit camera toggle. When 1 (TRUE), the camera is is in the upper position, and when 0 (FALSE) it is in the default position.: Units bool: settable true",
      "messagetype": "trigger_onRequest_COCKPIT CAMERA UPPER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA ZOOM",
      "displaytitle": "COCKPIT CAMERA ZOOM (Poll)",
      "description": "Sets/gets the zoom/FOV modifier for the cockpit camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_COCKPIT CAMERA ZOOM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COCKPIT CAMERA ZOOM",
      "displaytitle": "COCKPIT CAMERA ZOOM (OnChange)",
      "description": "Sets/gets the zoom/FOV modifier for the cockpit camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_COCKPIT CAMERA ZOOM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COCKPIT CAMERA ZOOM",
      "displaytitle": "COCKPIT CAMERA ZOOM (OnRequest)",
      "description": "Sets/gets the zoom/FOV modifier for the cockpit camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_COCKPIT CAMERA ZOOM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA ZOOM SPEED",
      "displaytitle": "COCKPIT CAMERA ZOOM SPEED (Poll)",
      "description": "Sets/gets the speed modifier for when the zoom/FOV cockpit camera changes zoom/FOV levels. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_COCKPIT CAMERA ZOOM SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COCKPIT CAMERA ZOOM SPEED",
      "displaytitle": "COCKPIT CAMERA ZOOM SPEED (OnChange)",
      "description": "Sets/gets the speed modifier for when the zoom/FOV cockpit camera changes zoom/FOV levels. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_COCKPIT CAMERA ZOOM SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COCKPIT CAMERA ZOOM SPEED",
      "displaytitle": "COCKPIT CAMERA ZOOM SPEED (OnRequest)",
      "description": "Sets/gets the speed modifier for when the zoom/FOV cockpit camera changes zoom/FOV levels. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_COCKPIT CAMERA ZOOM SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COLLECTIVE POSITION",
      "displaytitle": "COLLECTIVE POSITION (Poll)",
      "description": "The position of the helicopter's collective. 0 is fully up, 100 fully depressed.: Units percent Over 100: settable false",
      "messagetype": "trigger_COLLECTIVE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COLLECTIVE POSITION",
      "displaytitle": "COLLECTIVE POSITION (OnChange)",
      "description": "The position of the helicopter's collective. 0 is fully up, 100 fully depressed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_COLLECTIVE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COLLECTIVE POSITION",
      "displaytitle": "COLLECTIVE POSITION (OnRequest)",
      "description": "The position of the helicopter's collective. 0 is fully up, 100 fully depressed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_COLLECTIVE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COM ACTIVE BEARING:index",
      "displaytitle": "COM ACTIVE BEARING:index (Poll)",
      "description": "Gives the bearing (in degrees) of the active COM station (airport) or a value less than 0 if the station does not belong to an airport. Index is 1, 2 or 3.: Units degrees: settable false",
      "messagetype": "trigger_COM ACTIVE BEARING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM ACTIVE BEARING:index",
      "displaytitle": "COM ACTIVE BEARING:index (OnChange)",
      "description": "Gives the bearing (in degrees) of the active COM station (airport) or a value less than 0 if the station does not belong to an airport. Index is 1, 2 or 3.: Units degrees: settable false",
      "messagetype": "trigger_onChange_COM ACTIVE BEARING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM ACTIVE BEARING:index",
      "displaytitle": "COM ACTIVE BEARING:index (OnRequest)",
      "description": "Gives the bearing (in degrees) of the active COM station (airport) or a value less than 0 if the station does not belong to an airport. Index is 1, 2 or 3.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_COM ACTIVE BEARING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM ACTIVE DISTANCE:index",
      "displaytitle": "COM ACTIVE DISTANCE:index (Poll)",
      "description": "Gives the distance (in meters) to the active COM station (airport) or a value less than -180° if the station does not belong to an airport. Index is 1, 2 or 3.: Units meters: settable false",
      "messagetype": "trigger_COM ACTIVE DISTANCE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM ACTIVE DISTANCE:index",
      "displaytitle": "COM ACTIVE DISTANCE:index (OnChange)",
      "description": "Gives the distance (in meters) to the active COM station (airport) or a value less than -180° if the station does not belong to an airport. Index is 1, 2 or 3.: Units meters: settable false",
      "messagetype": "trigger_onChange_COM ACTIVE DISTANCE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM ACTIVE DISTANCE:index",
      "displaytitle": "COM ACTIVE DISTANCE:index (OnRequest)",
      "description": "Gives the distance (in meters) to the active COM station (airport) or a value less than -180° if the station does not belong to an airport. Index is 1, 2 or 3.: Units meters: settable false",
      "messagetype": "trigger_onRequest_COM ACTIVE DISTANCE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM ACTIVE FREQ IDENT:index",
      "displaytitle": "COM ACTIVE FREQ IDENT:index (Poll)",
      "description": "The identity of the station that is tuned on the indexed active COM radio. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_COM ACTIVE FREQ IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM ACTIVE FREQ IDENT:index",
      "displaytitle": "COM ACTIVE FREQ IDENT:index (OnChange)",
      "description": "The identity of the station that is tuned on the indexed active COM radio. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_onChange_COM ACTIVE FREQ IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM ACTIVE FREQ IDENT:index",
      "displaytitle": "COM ACTIVE FREQ IDENT:index (OnRequest)",
      "description": "The identity of the station that is tuned on the indexed active COM radio. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_onRequest_COM ACTIVE FREQ IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM ACTIVE FREQ TYPE:index",
      "displaytitle": "COM ACTIVE FREQ TYPE:index (Poll)",
      "description": "The type of COM frequency for the active indexed COM system. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_COM ACTIVE FREQ TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM ACTIVE FREQ TYPE:index",
      "displaytitle": "COM ACTIVE FREQ TYPE:index (OnChange)",
      "description": "The type of COM frequency for the active indexed COM system. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_onChange_COM ACTIVE FREQ TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM ACTIVE FREQ TYPE:index",
      "displaytitle": "COM ACTIVE FREQ TYPE:index (OnRequest)",
      "description": "The type of COM frequency for the active indexed COM system. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_onRequest_COM ACTIVE FREQ TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM ACTIVE FREQUENCY:index",
      "displaytitle": "COM ACTIVE FREQUENCY:index (Poll)",
      "description": "Com frequency. Index is 1, 2 or 3.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_COM ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM ACTIVE FREQUENCY:index",
      "displaytitle": "COM ACTIVE FREQUENCY:index (OnChange)",
      "description": "Com frequency. Index is 1, 2 or 3.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onChange_COM ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM ACTIVE FREQUENCY:index",
      "displaytitle": "COM ACTIVE FREQUENCY:index (OnRequest)",
      "description": "Com frequency. Index is 1, 2 or 3.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onRequest_COM ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM AVAILABLE:index",
      "displaytitle": "COM AVAILABLE:index (Poll)",
      "description": "True if COM1, COM2 or COM3 is available (depending on the index, either 1, 2, or 3): Units bool: settable false",
      "messagetype": "trigger_COM AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM AVAILABLE:index",
      "displaytitle": "COM AVAILABLE:index (OnChange)",
      "description": "True if COM1, COM2 or COM3 is available (depending on the index, either 1, 2, or 3): Units bool: settable false",
      "messagetype": "trigger_onChange_COM AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM AVAILABLE:index",
      "displaytitle": "COM AVAILABLE:index (OnRequest)",
      "description": "True if COM1, COM2 or COM3 is available (depending on the index, either 1, 2, or 3): Units bool: settable false",
      "messagetype": "trigger_onRequest_COM AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM RECEIVE ALL",
      "displaytitle": "COM RECEIVE ALL (Poll)",
      "description": "Toggles all COM radios to receive on: Units bool: settable false",
      "messagetype": "trigger_COM RECEIVE ALL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COM RECEIVE ALL",
      "displaytitle": "COM RECEIVE ALL (OnChange)",
      "description": "Toggles all COM radios to receive on: Units bool: settable false",
      "messagetype": "trigger_onChange_COM RECEIVE ALL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COM RECEIVE ALL",
      "displaytitle": "COM RECEIVE ALL (OnRequest)",
      "description": "Toggles all COM radios to receive on: Units bool: settable false",
      "messagetype": "trigger_onRequest_COM RECEIVE ALL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COM RECEIVE EX1:index",
      "displaytitle": "COM RECEIVE EX1:index (Poll)",
      "description": "Whether or not the plane is receiving on the indexed com channel. Index is 1, 2 or 3.: Units bool: settable false",
      "messagetype": "trigger_COM RECEIVE EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM RECEIVE EX1:index",
      "displaytitle": "COM RECEIVE EX1:index (OnChange)",
      "description": "Whether or not the plane is receiving on the indexed com channel. Index is 1, 2 or 3.: Units bool: settable false",
      "messagetype": "trigger_onChange_COM RECEIVE EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM RECEIVE EX1:index",
      "displaytitle": "COM RECEIVE EX1:index (OnRequest)",
      "description": "Whether or not the plane is receiving on the indexed com channel. Index is 1, 2 or 3.: Units bool: settable false",
      "messagetype": "trigger_onRequest_COM RECEIVE EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM RECEIVE:index",
      "displaytitle": "COM RECEIVE:index (Poll)",
      "description": "Whether or not the plane is receiving on the indexed com channel or not (either 1, 2, or 3 for the index).: Units bool: settable false",
      "messagetype": "trigger_COM RECEIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM RECEIVE:index",
      "displaytitle": "COM RECEIVE:index (OnChange)",
      "description": "Whether or not the plane is receiving on the indexed com channel or not (either 1, 2, or 3 for the index).: Units bool: settable false",
      "messagetype": "trigger_onChange_COM RECEIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM RECEIVE:index",
      "displaytitle": "COM RECEIVE:index (OnRequest)",
      "description": "Whether or not the plane is receiving on the indexed com channel or not (either 1, 2, or 3 for the index).: Units bool: settable false",
      "messagetype": "trigger_onRequest_COM RECEIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM SPACING MODE:index",
      "displaytitle": "COM SPACING MODE:index (Poll)",
      "description": "The COM radio frequency step. Index is 1, 2 or 3.: Units enum: settable false",
      "messagetype": "trigger_COM SPACING MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM SPACING MODE:index",
      "displaytitle": "COM SPACING MODE:index (OnChange)",
      "description": "The COM radio frequency step. Index is 1, 2 or 3.: Units enum: settable false",
      "messagetype": "trigger_onChange_COM SPACING MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM SPACING MODE:index",
      "displaytitle": "COM SPACING MODE:index (OnRequest)",
      "description": "The COM radio frequency step. Index is 1, 2 or 3.: Units enum: settable false",
      "messagetype": "trigger_onRequest_COM SPACING MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM STANDBY FREQ IDENT:index",
      "displaytitle": "COM STANDBY FREQ IDENT:index (Poll)",
      "description": "The identity of the station that is tuned on the indexed standby COM radio. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_COM STANDBY FREQ IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM STANDBY FREQ IDENT:index",
      "displaytitle": "COM STANDBY FREQ IDENT:index (OnChange)",
      "description": "The identity of the station that is tuned on the indexed standby COM radio. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_onChange_COM STANDBY FREQ IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM STANDBY FREQ IDENT:index",
      "displaytitle": "COM STANDBY FREQ IDENT:index (OnRequest)",
      "description": "The identity of the station that is tuned on the indexed standby COM radio. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_onRequest_COM STANDBY FREQ IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM STANDBY FREQ TYPE:index",
      "displaytitle": "COM STANDBY FREQ TYPE:index (Poll)",
      "description": "The type of COM frequency for the standby indexed COM system. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_COM STANDBY FREQ TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM STANDBY FREQ TYPE:index",
      "displaytitle": "COM STANDBY FREQ TYPE:index (OnChange)",
      "description": "The type of COM frequency for the standby indexed COM system. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_onChange_COM STANDBY FREQ TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM STANDBY FREQ TYPE:index",
      "displaytitle": "COM STANDBY FREQ TYPE:index (OnRequest)",
      "description": "The type of COM frequency for the standby indexed COM system. Index is 1, 2, or 3.: Units null: settable false",
      "messagetype": "trigger_onRequest_COM STANDBY FREQ TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM STANDBY FREQUENCY:index",
      "displaytitle": "COM STANDBY FREQUENCY:index (Poll)",
      "description": "Com standby frequency. Index is 1, 2 or 3.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_COM STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM STANDBY FREQUENCY:index",
      "displaytitle": "COM STANDBY FREQUENCY:index (OnChange)",
      "description": "Com standby frequency. Index is 1, 2 or 3.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onChange_COM STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM STANDBY FREQUENCY:index",
      "displaytitle": "COM STANDBY FREQUENCY:index (OnRequest)",
      "description": "Com standby frequency. Index is 1, 2 or 3.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onRequest_COM STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM STATUS:index",
      "displaytitle": "COM STATUS:index (Poll)",
      "description": "Radio status flag for the indexed com channel. Index is 1, 2 or 3.: Units enum: settable false",
      "messagetype": "trigger_COM STATUS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM STATUS:index",
      "displaytitle": "COM STATUS:index (OnChange)",
      "description": "Radio status flag for the indexed com channel. Index is 1, 2 or 3.: Units enum: settable false",
      "messagetype": "trigger_onChange_COM STATUS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM STATUS:index",
      "displaytitle": "COM STATUS:index (OnRequest)",
      "description": "Radio status flag for the indexed com channel. Index is 1, 2 or 3.: Units enum: settable false",
      "messagetype": "trigger_onRequest_COM STATUS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM TEST:index",
      "displaytitle": "COM TEST:index (Poll)",
      "description": "Enter an index of 1, 2 or 3. Will return TRUE if the COM system is working, FALSE otherwise.: Units bool: settable false",
      "messagetype": "trigger_COM TEST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM TEST:index",
      "displaytitle": "COM TEST:index (OnChange)",
      "description": "Enter an index of 1, 2 or 3. Will return TRUE if the COM system is working, FALSE otherwise.: Units bool: settable false",
      "messagetype": "trigger_onChange_COM TEST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM TEST:index",
      "displaytitle": "COM TEST:index (OnRequest)",
      "description": "Enter an index of 1, 2 or 3. Will return TRUE if the COM system is working, FALSE otherwise.: Units bool: settable false",
      "messagetype": "trigger_onRequest_COM TEST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM TRANSMIT:index",
      "displaytitle": "COM TRANSMIT:index (Poll)",
      "description": "Audio panel com transmit state. Index of 1, 2 or 3.: Units bool: settable false",
      "messagetype": "trigger_COM TRANSMIT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_COM TRANSMIT:index",
      "displaytitle": "COM TRANSMIT:index (OnChange)",
      "description": "Audio panel com transmit state. Index of 1, 2 or 3.: Units bool: settable false",
      "messagetype": "trigger_onChange_COM TRANSMIT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_COM TRANSMIT:index",
      "displaytitle": "COM TRANSMIT:index (OnRequest)",
      "description": "Audio panel com transmit state. Index of 1, 2 or 3.: Units bool: settable false",
      "messagetype": "trigger_onRequest_COM TRANSMIT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "COM VOLUME",
      "displaytitle": "COM VOLUME (Poll)",
      "description": "The volume of the COM Radio.: Units percent: settable false",
      "messagetype": "trigger_COM VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COM VOLUME",
      "displaytitle": "COM VOLUME (OnChange)",
      "description": "The volume of the COM Radio.: Units percent: settable false",
      "messagetype": "trigger_onChange_COM VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COM VOLUME",
      "displaytitle": "COM VOLUME (OnRequest)",
      "description": "The volume of the COM Radio.: Units percent: settable false",
      "messagetype": "trigger_onRequest_COM VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COM1 STORED FREQUENCY",
      "displaytitle": "COM1 STORED FREQUENCY (Poll)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_COM1 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COM1 STORED FREQUENCY",
      "displaytitle": "COM1 STORED FREQUENCY (OnChange)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onChange_COM1 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COM1 STORED FREQUENCY",
      "displaytitle": "COM1 STORED FREQUENCY (OnRequest)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onRequest_COM1 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COM2 STORED FREQUENCY",
      "displaytitle": "COM2 STORED FREQUENCY (Poll)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_COM2 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COM2 STORED FREQUENCY",
      "displaytitle": "COM2 STORED FREQUENCY (OnChange)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onChange_COM2 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COM2 STORED FREQUENCY",
      "displaytitle": "COM2 STORED FREQUENCY (OnRequest)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onRequest_COM2 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COM3 STORED FREQUENCY",
      "displaytitle": "COM3 STORED FREQUENCY (Poll)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_COM3 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COM3 STORED FREQUENCY",
      "displaytitle": "COM3 STORED FREQUENCY (OnChange)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onChange_COM3 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COM3 STORED FREQUENCY",
      "displaytitle": "COM3 STORED FREQUENCY (OnRequest)",
      "description": "The stored COM 1/2/3 frequency value.: Units Frequency BCD16: settable false",
      "messagetype": "trigger_onRequest_COM3 STORED FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CONTACT POINT COMPRESSION:index",
      "displaytitle": "CONTACT POINT COMPRESSION:index (Poll)",
      "description": "The percentage value representing the amount the contact point is compressed.: Units percent: settable false",
      "messagetype": "trigger_CONTACT POINT COMPRESSION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CONTACT POINT COMPRESSION:index",
      "displaytitle": "CONTACT POINT COMPRESSION:index (OnChange)",
      "description": "The percentage value representing the amount the contact point is compressed.: Units percent: settable false",
      "messagetype": "trigger_onChange_CONTACT POINT COMPRESSION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CONTACT POINT COMPRESSION:index",
      "displaytitle": "CONTACT POINT COMPRESSION:index (OnRequest)",
      "description": "The percentage value representing the amount the contact point is compressed.: Units percent: settable false",
      "messagetype": "trigger_onRequest_CONTACT POINT COMPRESSION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CONTACT POINT IS ON GROUND:index",
      "displaytitle": "CONTACT POINT IS ON GROUND:index (Poll)",
      "description": "Returns true if the indexed contact point is on the ground, or will return false otherwise.: Units bool: settable false",
      "messagetype": "trigger_CONTACT POINT IS ON GROUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CONTACT POINT IS ON GROUND:index",
      "displaytitle": "CONTACT POINT IS ON GROUND:index (OnChange)",
      "description": "Returns true if the indexed contact point is on the ground, or will return false otherwise.: Units bool: settable false",
      "messagetype": "trigger_onChange_CONTACT POINT IS ON GROUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CONTACT POINT IS ON GROUND:index",
      "displaytitle": "CONTACT POINT IS ON GROUND:index (OnRequest)",
      "description": "Returns true if the indexed contact point is on the ground, or will return false otherwise.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CONTACT POINT IS ON GROUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CONTACT POINT IS SKIDDING:index",
      "displaytitle": "CONTACT POINT IS SKIDDING:index (Poll)",
      "description": "Returns true if the indexed contact point is skidding, or will return false otherwise.: Units bool: settable false",
      "messagetype": "trigger_CONTACT POINT IS SKIDDING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CONTACT POINT IS SKIDDING:index",
      "displaytitle": "CONTACT POINT IS SKIDDING:index (OnChange)",
      "description": "Returns true if the indexed contact point is skidding, or will return false otherwise.: Units bool: settable false",
      "messagetype": "trigger_onChange_CONTACT POINT IS SKIDDING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CONTACT POINT IS SKIDDING:index",
      "displaytitle": "CONTACT POINT IS SKIDDING:index (OnRequest)",
      "description": "Returns true if the indexed contact point is skidding, or will return false otherwise.: Units bool: settable false",
      "messagetype": "trigger_onRequest_CONTACT POINT IS SKIDDING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CONTACT POINT POSITION:index",
      "displaytitle": "CONTACT POINT POSITION:index (Poll)",
      "description": "The currently extended position of the (retractable) contact point, expressed as a percentage.: Units position: settable false",
      "messagetype": "trigger_CONTACT POINT POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CONTACT POINT POSITION:index",
      "displaytitle": "CONTACT POINT POSITION:index (OnChange)",
      "description": "The currently extended position of the (retractable) contact point, expressed as a percentage.: Units position: settable false",
      "messagetype": "trigger_onChange_CONTACT POINT POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CONTACT POINT POSITION:index",
      "displaytitle": "CONTACT POINT POSITION:index (OnRequest)",
      "description": "The currently extended position of the (retractable) contact point, expressed as a percentage.: Units position: settable false",
      "messagetype": "trigger_onRequest_CONTACT POINT POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CONTACT POINT SKIDDING FACTOR:index",
      "displaytitle": "CONTACT POINT SKIDDING FACTOR:index (Poll)",
      "description": "The skidding factor associated with the indexed contact point, from 0 to 1.: Units percent Over 100: settable false",
      "messagetype": "trigger_CONTACT POINT SKIDDING FACTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CONTACT POINT SKIDDING FACTOR:index",
      "displaytitle": "CONTACT POINT SKIDDING FACTOR:index (OnChange)",
      "description": "The skidding factor associated with the indexed contact point, from 0 to 1.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_CONTACT POINT SKIDDING FACTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CONTACT POINT SKIDDING FACTOR:index",
      "displaytitle": "CONTACT POINT SKIDDING FACTOR:index (OnRequest)",
      "description": "The skidding factor associated with the indexed contact point, from 0 to 1.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_CONTACT POINT SKIDDING FACTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CONTACT POINT WATER DEPTH:index",
      "displaytitle": "CONTACT POINT WATER DEPTH:index (Poll)",
      "description": "This returns the depth of the water for the indexed contact point.: Units feet: settable false",
      "messagetype": "trigger_CONTACT POINT WATER DEPTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_CONTACT POINT WATER DEPTH:index",
      "displaytitle": "CONTACT POINT WATER DEPTH:index (OnChange)",
      "description": "This returns the depth of the water for the indexed contact point.: Units feet: settable false",
      "messagetype": "trigger_onChange_CONTACT POINT WATER DEPTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_CONTACT POINT WATER DEPTH:index",
      "displaytitle": "CONTACT POINT WATER DEPTH:index (OnRequest)",
      "description": "This returns the depth of the water for the indexed contact point.: Units feet: settable false",
      "messagetype": "trigger_onRequest_CONTACT POINT WATER DEPTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CONTRAILS CONDITIONS MET",
      "displaytitle": "CONTRAILS CONDITIONS MET (Poll)",
      "description": "True if the aircraft has met the conditions required to spawn the contrail VFX: Units bool: settable false",
      "messagetype": "trigger_CONTRAILS CONDITIONS MET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CONTRAILS CONDITIONS MET",
      "displaytitle": "CONTRAILS CONDITIONS MET (OnChange)",
      "description": "True if the aircraft has met the conditions required to spawn the contrail VFX: Units bool: settable false",
      "messagetype": "trigger_onChange_CONTRAILS CONDITIONS MET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CONTRAILS CONDITIONS MET",
      "displaytitle": "CONTRAILS CONDITIONS MET (OnRequest)",
      "description": "True if the aircraft has met the conditions required to spawn the contrail VFX: Units bool: settable false",
      "messagetype": "trigger_onRequest_CONTRAILS CONDITIONS MET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COPILOT TRANSMITTER TYPE",
      "displaytitle": "COPILOT TRANSMITTER TYPE (Poll)",
      "description": "On which channel the copilot is transmitting.: Units enum: settable false",
      "messagetype": "trigger_COPILOT TRANSMITTER TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COPILOT TRANSMITTER TYPE",
      "displaytitle": "COPILOT TRANSMITTER TYPE (OnChange)",
      "description": "On which channel the copilot is transmitting.: Units enum: settable false",
      "messagetype": "trigger_onChange_COPILOT TRANSMITTER TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COPILOT TRANSMITTER TYPE",
      "displaytitle": "COPILOT TRANSMITTER TYPE (OnRequest)",
      "description": "On which channel the copilot is transmitting.: Units enum: settable false",
      "messagetype": "trigger_onRequest_COPILOT TRANSMITTER TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COPILOT TRANSMITTING",
      "displaytitle": "COPILOT TRANSMITTING (Poll)",
      "description": "Whether or not the copilot is transmitting: Units bool: settable false",
      "messagetype": "trigger_COPILOT TRANSMITTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_COPILOT TRANSMITTING",
      "displaytitle": "COPILOT TRANSMITTING (OnChange)",
      "description": "Whether or not the copilot is transmitting: Units bool: settable false",
      "messagetype": "trigger_onChange_COPILOT TRANSMITTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_COPILOT TRANSMITTING",
      "displaytitle": "COPILOT TRANSMITTING (OnRequest)",
      "description": "Whether or not the copilot is transmitting: Units bool: settable false",
      "messagetype": "trigger_onRequest_COPILOT TRANSMITTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CRASH FLAG",
      "displaytitle": "CRASH FLAG (Poll)",
      "description": "Flag value that indicates the cause of a crash.: Units enum: settable false",
      "messagetype": "trigger_CRASH FLAG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CRASH FLAG",
      "displaytitle": "CRASH FLAG (OnChange)",
      "description": "Flag value that indicates the cause of a crash.: Units enum: settable false",
      "messagetype": "trigger_onChange_CRASH FLAG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CRASH FLAG",
      "displaytitle": "CRASH FLAG (OnRequest)",
      "description": "Flag value that indicates the cause of a crash.: Units enum: settable false",
      "messagetype": "trigger_onRequest_CRASH FLAG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CRASH SEQUENCE",
      "displaytitle": "CRASH SEQUENCE (Poll)",
      "description": "The state of the crash event sequence.: Units enum: settable false",
      "messagetype": "trigger_CRASH SEQUENCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_CRASH SEQUENCE",
      "displaytitle": "CRASH SEQUENCE (OnChange)",
      "description": "The state of the crash event sequence.: Units enum: settable false",
      "messagetype": "trigger_onChange_CRASH SEQUENCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_CRASH SEQUENCE",
      "displaytitle": "CRASH SEQUENCE (OnRequest)",
      "description": "The state of the crash event sequence.: Units enum: settable false",
      "messagetype": "trigger_onRequest_CRASH SEQUENCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DECISION ALTITUDE MSL",
      "displaytitle": "DECISION ALTITUDE MSL (Poll)",
      "description": "Design decision altitude above mean sea level: Units feet: settable false",
      "messagetype": "trigger_DECISION ALTITUDE MSL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DECISION ALTITUDE MSL",
      "displaytitle": "DECISION ALTITUDE MSL (OnChange)",
      "description": "Design decision altitude above mean sea level: Units feet: settable false",
      "messagetype": "trigger_onChange_DECISION ALTITUDE MSL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DECISION ALTITUDE MSL",
      "displaytitle": "DECISION ALTITUDE MSL (OnRequest)",
      "description": "Design decision altitude above mean sea level: Units feet: settable false",
      "messagetype": "trigger_onRequest_DECISION ALTITUDE MSL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DECISION HEIGHT",
      "displaytitle": "DECISION HEIGHT (Poll)",
      "description": "Design decision height: Units feet: settable false",
      "messagetype": "trigger_DECISION HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DECISION HEIGHT",
      "displaytitle": "DECISION HEIGHT (OnChange)",
      "description": "Design decision height: Units feet: settable false",
      "messagetype": "trigger_onChange_DECISION HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DECISION HEIGHT",
      "displaytitle": "DECISION HEIGHT (OnRequest)",
      "description": "Design decision height: Units feet: settable false",
      "messagetype": "trigger_onRequest_DECISION HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DELEGATE CONTROLS TO AI",
      "displaytitle": "DELEGATE CONTROLS TO AI (Poll)",
      "description": "Returns whether the AI control system is active or not: Units bool: settable true",
      "messagetype": "trigger_DELEGATE CONTROLS TO AI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DELEGATE CONTROLS TO AI",
      "displaytitle": "DELEGATE CONTROLS TO AI (OnChange)",
      "description": "Returns whether the AI control system is active or not: Units bool: settable true",
      "messagetype": "trigger_onChange_DELEGATE CONTROLS TO AI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DELEGATE CONTROLS TO AI",
      "displaytitle": "DELEGATE CONTROLS TO AI (OnRequest)",
      "description": "Returns whether the AI control system is active or not: Units bool: settable true",
      "messagetype": "trigger_onRequest_DELEGATE CONTROLS TO AI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DELTA HEADING RATE",
      "displaytitle": "DELTA HEADING RATE (Poll)",
      "description": "Rate of turn of heading indicator.: Units radians per second: settable true",
      "messagetype": "trigger_DELTA HEADING RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DELTA HEADING RATE",
      "displaytitle": "DELTA HEADING RATE (OnChange)",
      "description": "Rate of turn of heading indicator.: Units radians per second: settable true",
      "messagetype": "trigger_onChange_DELTA HEADING RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DELTA HEADING RATE",
      "displaytitle": "DELTA HEADING RATE (OnRequest)",
      "description": "Rate of turn of heading indicator.: Units radians per second: settable true",
      "messagetype": "trigger_onRequest_DELTA HEADING RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN CRUISE ALT",
      "displaytitle": "DESIGN CRUISE ALT (Poll)",
      "description": "This design constant represents the optimal altitude the aircraft should maintain when in cruise. It is derived from the cruise_alt setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 1500ft.: Units feet: settable false",
      "messagetype": "trigger_DESIGN CRUISE ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN CRUISE ALT",
      "displaytitle": "DESIGN CRUISE ALT (OnChange)",
      "description": "This design constant represents the optimal altitude the aircraft should maintain when in cruise. It is derived from the cruise_alt setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 1500ft.: Units feet: settable false",
      "messagetype": "trigger_onChange_DESIGN CRUISE ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN CRUISE ALT",
      "displaytitle": "DESIGN CRUISE ALT (OnRequest)",
      "description": "This design constant represents the optimal altitude the aircraft should maintain when in cruise. It is derived from the cruise_alt setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 1500ft.: Units feet: settable false",
      "messagetype": "trigger_onRequest_DESIGN CRUISE ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN SPAWN ALTITUDE CRUISE",
      "displaytitle": "DESIGN SPAWN ALTITUDE CRUISE (Poll)",
      "description": "This design constant represents the spawn altitude for the aircraft when spawning in cruise. It is derived from the spawn_cruise_altitude setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 1500ft.: Units feet: settable false",
      "messagetype": "trigger_DESIGN SPAWN ALTITUDE CRUISE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN SPAWN ALTITUDE CRUISE",
      "displaytitle": "DESIGN SPAWN ALTITUDE CRUISE (OnChange)",
      "description": "This design constant represents the spawn altitude for the aircraft when spawning in cruise. It is derived from the spawn_cruise_altitude setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 1500ft.: Units feet: settable false",
      "messagetype": "trigger_onChange_DESIGN SPAWN ALTITUDE CRUISE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN SPAWN ALTITUDE CRUISE",
      "displaytitle": "DESIGN SPAWN ALTITUDE CRUISE (OnRequest)",
      "description": "This design constant represents the spawn altitude for the aircraft when spawning in cruise. It is derived from the spawn_cruise_altitude setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 1500ft.: Units feet: settable false",
      "messagetype": "trigger_onRequest_DESIGN SPAWN ALTITUDE CRUISE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN SPAWN ALTITUDE DESCENT",
      "displaytitle": "DESIGN SPAWN ALTITUDE DESCENT (Poll)",
      "description": "This design constant represents the spawn altitude for the aircraft when spawning in descent. It is derived from the spawn_descent_altitude setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 500ft.: Units feet: settable false",
      "messagetype": "trigger_DESIGN SPAWN ALTITUDE DESCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN SPAWN ALTITUDE DESCENT",
      "displaytitle": "DESIGN SPAWN ALTITUDE DESCENT (OnChange)",
      "description": "This design constant represents the spawn altitude for the aircraft when spawning in descent. It is derived from the spawn_descent_altitude setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 500ft.: Units feet: settable false",
      "messagetype": "trigger_onChange_DESIGN SPAWN ALTITUDE DESCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN SPAWN ALTITUDE DESCENT",
      "displaytitle": "DESIGN SPAWN ALTITUDE DESCENT (OnRequest)",
      "description": "This design constant represents the spawn altitude for the aircraft when spawning in descent. It is derived from the spawn_descent_altitude setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 500ft.: Units feet: settable false",
      "messagetype": "trigger_onRequest_DESIGN SPAWN ALTITUDE DESCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN SPEED CLIMB",
      "displaytitle": "DESIGN SPEED CLIMB (Poll)",
      "description": "This design constant represents the optimal climb speed for the aircraft. It is derived from the climb_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is -1.: Units feet: settable false",
      "messagetype": "trigger_DESIGN SPEED CLIMB",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN SPEED CLIMB",
      "displaytitle": "DESIGN SPEED CLIMB (OnChange)",
      "description": "This design constant represents the optimal climb speed for the aircraft. It is derived from the climb_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is -1.: Units feet: settable false",
      "messagetype": "trigger_onChange_DESIGN SPEED CLIMB",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN SPEED CLIMB",
      "displaytitle": "DESIGN SPEED CLIMB (OnRequest)",
      "description": "This design constant represents the optimal climb speed for the aircraft. It is derived from the climb_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is -1.: Units feet: settable false",
      "messagetype": "trigger_onRequest_DESIGN SPEED CLIMB",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN SPEED MIN ROTATION",
      "displaytitle": "DESIGN SPEED MIN ROTATION (Poll)",
      "description": "This design constant represents the minimum speed required for aircraft rotation. It is derived from the rotation_speed_min setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is -1.: Units feet: settable false",
      "messagetype": "trigger_DESIGN SPEED MIN ROTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN SPEED MIN ROTATION",
      "displaytitle": "DESIGN SPEED MIN ROTATION (OnChange)",
      "description": "This design constant represents the minimum speed required for aircraft rotation. It is derived from the rotation_speed_min setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is -1.: Units feet: settable false",
      "messagetype": "trigger_onChange_DESIGN SPEED MIN ROTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN SPEED MIN ROTATION",
      "displaytitle": "DESIGN SPEED MIN ROTATION (OnRequest)",
      "description": "This design constant represents the minimum speed required for aircraft rotation. It is derived from the rotation_speed_min setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is -1.: Units feet: settable false",
      "messagetype": "trigger_onRequest_DESIGN SPEED MIN ROTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN SPEED VC",
      "displaytitle": "DESIGN SPEED VC (Poll)",
      "description": "This design constant represents the aircraft ideal cruising speed. It is derived from the cruise_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. The default value is computed an internal function that uses the estimated cruise altitude and estimated cruise percent power, according of the engine type, the number of engines, the density, the wing area and some drag parameters. Normally this value is set in the CFG file and the default value is never used.: Units feet: settable false",
      "messagetype": "trigger_DESIGN SPEED VC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN SPEED VC",
      "displaytitle": "DESIGN SPEED VC (OnChange)",
      "description": "This design constant represents the aircraft ideal cruising speed. It is derived from the cruise_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. The default value is computed an internal function that uses the estimated cruise altitude and estimated cruise percent power, according of the engine type, the number of engines, the density, the wing area and some drag parameters. Normally this value is set in the CFG file and the default value is never used.: Units feet: settable false",
      "messagetype": "trigger_onChange_DESIGN SPEED VC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN SPEED VC",
      "displaytitle": "DESIGN SPEED VC (OnRequest)",
      "description": "This design constant represents the aircraft ideal cruising speed. It is derived from the cruise_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. The default value is computed an internal function that uses the estimated cruise altitude and estimated cruise percent power, according of the engine type, the number of engines, the density, the wing area and some drag parameters. Normally this value is set in the CFG file and the default value is never used.: Units feet: settable false",
      "messagetype": "trigger_onRequest_DESIGN SPEED VC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN SPEED VS0",
      "displaytitle": "DESIGN SPEED VS0 (Poll)",
      "description": "This design constant represents the the stall speed when flaps are fully extended. It is derived from the full_flaps_stall_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is 0.8 x VS.: Units knots: settable false",
      "messagetype": "trigger_DESIGN SPEED VS0",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN SPEED VS0",
      "displaytitle": "DESIGN SPEED VS0 (OnChange)",
      "description": "This design constant represents the the stall speed when flaps are fully extended. It is derived from the full_flaps_stall_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is 0.8 x VS.: Units knots: settable false",
      "messagetype": "trigger_onChange_DESIGN SPEED VS0",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN SPEED VS0",
      "displaytitle": "DESIGN SPEED VS0 (OnRequest)",
      "description": "This design constant represents the the stall speed when flaps are fully extended. It is derived from the full_flaps_stall_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is 0.8 x VS.: Units knots: settable false",
      "messagetype": "trigger_onRequest_DESIGN SPEED VS0",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN SPEED VS1",
      "displaytitle": "DESIGN SPEED VS1 (Poll)",
      "description": "This design constant represents the stall speed when flaps are fully retracted. It is derived from the flaps_up_stall_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is 0.: Units knots: settable false",
      "messagetype": "trigger_DESIGN SPEED VS1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN SPEED VS1",
      "displaytitle": "DESIGN SPEED VS1 (OnChange)",
      "description": "This design constant represents the stall speed when flaps are fully retracted. It is derived from the flaps_up_stall_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is 0.: Units knots: settable false",
      "messagetype": "trigger_onChange_DESIGN SPEED VS1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN SPEED VS1",
      "displaytitle": "DESIGN SPEED VS1 (OnRequest)",
      "description": "This design constant represents the stall speed when flaps are fully retracted. It is derived from the flaps_up_stall_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is 0.: Units knots: settable false",
      "messagetype": "trigger_onRequest_DESIGN SPEED VS1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DESIGN TAKEOFF SPEED",
      "displaytitle": "DESIGN TAKEOFF SPEED (Poll)",
      "description": "This design constant represents the aircraft ideal takoff speed. It is derived from the takeoff_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg.: Units knots: settable false",
      "messagetype": "trigger_DESIGN TAKEOFF SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DESIGN TAKEOFF SPEED",
      "displaytitle": "DESIGN TAKEOFF SPEED (OnChange)",
      "description": "This design constant represents the aircraft ideal takoff speed. It is derived from the takeoff_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg.: Units knots: settable false",
      "messagetype": "trigger_onChange_DESIGN TAKEOFF SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DESIGN TAKEOFF SPEED",
      "displaytitle": "DESIGN TAKEOFF SPEED (OnRequest)",
      "description": "This design constant represents the aircraft ideal takoff speed. It is derived from the takeoff_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg.: Units knots: settable false",
      "messagetype": "trigger_onRequest_DESIGN TAKEOFF SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DISK BANK ANGLE:index",
      "displaytitle": "DISK BANK ANGLE:index (Poll)",
      "description": "Rotor bank angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_DISK BANK ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_DISK BANK ANGLE:index",
      "displaytitle": "DISK BANK ANGLE:index (OnChange)",
      "description": "Rotor bank angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_onChange_DISK BANK ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_DISK BANK ANGLE:index",
      "displaytitle": "DISK BANK ANGLE:index (OnRequest)",
      "description": "Rotor bank angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_onRequest_DISK BANK ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DISK BANK PCT:index",
      "displaytitle": "DISK BANK PCT:index (Poll)",
      "description": "Rotor bank percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_DISK BANK PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_DISK BANK PCT:index",
      "displaytitle": "DISK BANK PCT:index (OnChange)",
      "description": "Rotor bank percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_DISK BANK PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_DISK BANK PCT:index",
      "displaytitle": "DISK BANK PCT:index (OnRequest)",
      "description": "Rotor bank percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_DISK BANK PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DISK CONING PCT:index",
      "displaytitle": "DISK CONING PCT:index (Poll)",
      "description": "Rotor coning percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_DISK CONING PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_DISK CONING PCT:index",
      "displaytitle": "DISK CONING PCT:index (OnChange)",
      "description": "Rotor coning percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_DISK CONING PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_DISK CONING PCT:index",
      "displaytitle": "DISK CONING PCT:index (OnRequest)",
      "description": "Rotor coning percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_DISK CONING PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DISK PITCH ANGLE:index",
      "displaytitle": "DISK PITCH ANGLE:index (Poll)",
      "description": "Rotor pitch angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_DISK PITCH ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_DISK PITCH ANGLE:index",
      "displaytitle": "DISK PITCH ANGLE:index (OnChange)",
      "description": "Rotor pitch angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_onChange_DISK PITCH ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_DISK PITCH ANGLE:index",
      "displaytitle": "DISK PITCH ANGLE:index (OnRequest)",
      "description": "Rotor pitch angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_onRequest_DISK PITCH ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DISK PITCH PCT:index",
      "displaytitle": "DISK PITCH PCT:index (Poll)",
      "description": "Rotor pitch percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_DISK PITCH PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_DISK PITCH PCT:index",
      "displaytitle": "DISK PITCH PCT:index (OnChange)",
      "description": "Rotor pitch percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_DISK PITCH PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_DISK PITCH PCT:index",
      "displaytitle": "DISK PITCH PCT:index (OnRequest)",
      "description": "Rotor pitch percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_DISK PITCH PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DME SOUND",
      "displaytitle": "DME SOUND (Poll)",
      "description": "DME audio flag.: Units bool: settable false",
      "messagetype": "trigger_DME SOUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DME SOUND",
      "displaytitle": "DME SOUND (OnChange)",
      "description": "DME audio flag.: Units bool: settable false",
      "messagetype": "trigger_onChange_DME SOUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DME SOUND",
      "displaytitle": "DME SOUND (OnRequest)",
      "description": "DME audio flag.: Units bool: settable false",
      "messagetype": "trigger_onRequest_DME SOUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA FOCUS",
      "displaytitle": "DRONE CAMERA FOCUS (Poll)",
      "description": "Sets/gets the focus modifier for the drone camera. Default is 50%, and a lower value will set the drone focus to things in the foreground and a higher level will set the drone focus to things in the background. Note that this is only taken into account when the DRONE_CAMERA_FOCUS_MODE is set to 3 (manual).: Units percent: settable true",
      "messagetype": "trigger_DRONE CAMERA FOCUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DRONE CAMERA FOCUS",
      "displaytitle": "DRONE CAMERA FOCUS (OnChange)",
      "description": "Sets/gets the focus modifier for the drone camera. Default is 50%, and a lower value will set the drone focus to things in the foreground and a higher level will set the drone focus to things in the background. Note that this is only taken into account when the DRONE_CAMERA_FOCUS_MODE is set to 3 (manual).: Units percent: settable true",
      "messagetype": "trigger_onChange_DRONE CAMERA FOCUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DRONE CAMERA FOCUS",
      "displaytitle": "DRONE CAMERA FOCUS (OnRequest)",
      "description": "Sets/gets the focus modifier for the drone camera. Default is 50%, and a lower value will set the drone focus to things in the foreground and a higher level will set the drone focus to things in the background. Note that this is only taken into account when the DRONE_CAMERA_FOCUS_MODE is set to 3 (manual).: Units percent: settable true",
      "messagetype": "trigger_onRequest_DRONE CAMERA FOCUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA FOCUS MODE",
      "displaytitle": "DRONE CAMERA FOCUS MODE (Poll)",
      "description": "Sets/gets the current drone focus mode. When set to 3 (manual), the focus position will be based on the DRONE_CAMERA_FOCUS value.: Units enum: settable true",
      "messagetype": "trigger_DRONE CAMERA FOCUS MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DRONE CAMERA FOCUS MODE",
      "displaytitle": "DRONE CAMERA FOCUS MODE (OnChange)",
      "description": "Sets/gets the current drone focus mode. When set to 3 (manual), the focus position will be based on the DRONE_CAMERA_FOCUS value.: Units enum: settable true",
      "messagetype": "trigger_onChange_DRONE CAMERA FOCUS MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DRONE CAMERA FOCUS MODE",
      "displaytitle": "DRONE CAMERA FOCUS MODE (OnRequest)",
      "description": "Sets/gets the current drone focus mode. When set to 3 (manual), the focus position will be based on the DRONE_CAMERA_FOCUS value.: Units enum: settable true",
      "messagetype": "trigger_onRequest_DRONE CAMERA FOCUS MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA FOLLOW",
      "displaytitle": "DRONE CAMERA FOLLOW (Poll)",
      "description": "Sets/gets the whether the drone camera is in follow mode or not.: Units bool: settable true",
      "messagetype": "trigger_DRONE CAMERA FOLLOW",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DRONE CAMERA FOLLOW",
      "displaytitle": "DRONE CAMERA FOLLOW (OnChange)",
      "description": "Sets/gets the whether the drone camera is in follow mode or not.: Units bool: settable true",
      "messagetype": "trigger_onChange_DRONE CAMERA FOLLOW",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DRONE CAMERA FOLLOW",
      "displaytitle": "DRONE CAMERA FOLLOW (OnRequest)",
      "description": "Sets/gets the whether the drone camera is in follow mode or not.: Units bool: settable true",
      "messagetype": "trigger_onRequest_DRONE CAMERA FOLLOW",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA FOV",
      "displaytitle": "DRONE CAMERA FOV (Poll)",
      "description": "Sets/gets the zoom/FOV modifier for the drone camera. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_DRONE CAMERA FOV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DRONE CAMERA FOV",
      "displaytitle": "DRONE CAMERA FOV (OnChange)",
      "description": "Sets/gets the zoom/FOV modifier for the drone camera. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_DRONE CAMERA FOV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DRONE CAMERA FOV",
      "displaytitle": "DRONE CAMERA FOV (OnRequest)",
      "description": "Sets/gets the zoom/FOV modifier for the drone camera. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_DRONE CAMERA FOV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA LOCKED",
      "displaytitle": "DRONE CAMERA LOCKED (Poll)",
      "description": "Sets/gets the whether the drone camera is locked or not.: Units bool: settable true",
      "messagetype": "trigger_DRONE CAMERA LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DRONE CAMERA LOCKED",
      "displaytitle": "DRONE CAMERA LOCKED (OnChange)",
      "description": "Sets/gets the whether the drone camera is locked or not.: Units bool: settable true",
      "messagetype": "trigger_onChange_DRONE CAMERA LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DRONE CAMERA LOCKED",
      "displaytitle": "DRONE CAMERA LOCKED (OnRequest)",
      "description": "Sets/gets the whether the drone camera is locked or not.: Units bool: settable true",
      "messagetype": "trigger_onRequest_DRONE CAMERA LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA SPEED ROTATION",
      "displaytitle": "DRONE CAMERA SPEED ROTATION (Poll)",
      "description": "Sets/gets the rotation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_DRONE CAMERA SPEED ROTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DRONE CAMERA SPEED ROTATION",
      "displaytitle": "DRONE CAMERA SPEED ROTATION (OnChange)",
      "description": "Sets/gets the rotation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_DRONE CAMERA SPEED ROTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DRONE CAMERA SPEED ROTATION",
      "displaytitle": "DRONE CAMERA SPEED ROTATION (OnRequest)",
      "description": "Sets/gets the rotation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_DRONE CAMERA SPEED ROTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA SPEED TRAVELLING",
      "displaytitle": "DRONE CAMERA SPEED TRAVELLING (Poll)",
      "description": "Sets/gets the translation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_DRONE CAMERA SPEED TRAVELLING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DRONE CAMERA SPEED TRAVELLING",
      "displaytitle": "DRONE CAMERA SPEED TRAVELLING (OnChange)",
      "description": "Sets/gets the translation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onChange_DRONE CAMERA SPEED TRAVELLING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DRONE CAMERA SPEED TRAVELLING",
      "displaytitle": "DRONE CAMERA SPEED TRAVELLING (OnRequest)",
      "description": "Sets/gets the translation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent: settable true",
      "messagetype": "trigger_onRequest_DRONE CAMERA SPEED TRAVELLING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DROPPABLE OBJECTS COUNT:index",
      "displaytitle": "DROPPABLE OBJECTS COUNT:index (Poll)",
      "description": "The number of droppable objects at the station number identified by the index.: Units number: settable false",
      "messagetype": "trigger_DROPPABLE OBJECTS COUNT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_DROPPABLE OBJECTS COUNT:index",
      "displaytitle": "DROPPABLE OBJECTS COUNT:index (OnChange)",
      "description": "The number of droppable objects at the station number identified by the index.: Units number: settable false",
      "messagetype": "trigger_onChange_DROPPABLE OBJECTS COUNT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_DROPPABLE OBJECTS COUNT:index",
      "displaytitle": "DROPPABLE OBJECTS COUNT:index (OnRequest)",
      "description": "The number of droppable objects at the station number identified by the index.: Units number: settable false",
      "messagetype": "trigger_onRequest_DROPPABLE OBJECTS COUNT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DROPPABLE OBJECTS TYPE:index",
      "displaytitle": "DROPPABLE OBJECTS TYPE:index (Poll)",
      "description": "The type of droppable object at the station number identified by the index.: Units null: settable true",
      "messagetype": "trigger_DROPPABLE OBJECTS TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_DROPPABLE OBJECTS TYPE:index",
      "displaytitle": "DROPPABLE OBJECTS TYPE:index (OnChange)",
      "description": "The type of droppable object at the station number identified by the index.: Units null: settable true",
      "messagetype": "trigger_onChange_DROPPABLE OBJECTS TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_DROPPABLE OBJECTS TYPE:index",
      "displaytitle": "DROPPABLE OBJECTS TYPE:index (OnRequest)",
      "description": "The type of droppable object at the station number identified by the index.: Units null: settable true",
      "messagetype": "trigger_onRequest_DROPPABLE OBJECTS TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DROPPABLE OBJECTS UI NAME:index",
      "displaytitle": "DROPPABLE OBJECTS UI NAME:index (Poll)",
      "description": "Descriptive name, used in User Interface dialogs, of a droppable object, identified by index.: Units null: settable false",
      "messagetype": "trigger_DROPPABLE OBJECTS UI NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_DROPPABLE OBJECTS UI NAME:index",
      "displaytitle": "DROPPABLE OBJECTS UI NAME:index (OnChange)",
      "description": "Descriptive name, used in User Interface dialogs, of a droppable object, identified by index.: Units null: settable false",
      "messagetype": "trigger_onChange_DROPPABLE OBJECTS UI NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_DROPPABLE OBJECTS UI NAME:index",
      "displaytitle": "DROPPABLE OBJECTS UI NAME:index (OnRequest)",
      "description": "Descriptive name, used in User Interface dialogs, of a droppable object, identified by index.: Units null: settable false",
      "messagetype": "trigger_onRequest_DROPPABLE OBJECTS UI NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DYNAMIC PRESSURE",
      "displaytitle": "DYNAMIC PRESSURE (Poll)",
      "description": "Dynamic pressure: Units pounds: settable false",
      "messagetype": "trigger_DYNAMIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_DYNAMIC PRESSURE",
      "displaytitle": "DYNAMIC PRESSURE (OnChange)",
      "description": "Dynamic pressure: Units pounds: settable false",
      "messagetype": "trigger_onChange_DYNAMIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_DYNAMIC PRESSURE",
      "displaytitle": "DYNAMIC PRESSURE (OnRequest)",
      "description": "Dynamic pressure: Units pounds: settable false",
      "messagetype": "trigger_onRequest_DYNAMIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL AVIONICS BUS AMPS",
      "displaytitle": "ELECTRICAL AVIONICS BUS AMPS (Poll)",
      "description": "Avionics bus current: Units amperes: settable true",
      "messagetype": "trigger_ELECTRICAL AVIONICS BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL AVIONICS BUS AMPS",
      "displaytitle": "ELECTRICAL AVIONICS BUS AMPS (OnChange)",
      "description": "Avionics bus current: Units amperes: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL AVIONICS BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL AVIONICS BUS AMPS",
      "displaytitle": "ELECTRICAL AVIONICS BUS AMPS (OnRequest)",
      "description": "Avionics bus current: Units amperes: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL AVIONICS BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL AVIONICS BUS VOLTAGE",
      "displaytitle": "ELECTRICAL AVIONICS BUS VOLTAGE (Poll)",
      "description": "Avionics bus voltage: Units volts: settable true",
      "messagetype": "trigger_ELECTRICAL AVIONICS BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL AVIONICS BUS VOLTAGE",
      "displaytitle": "ELECTRICAL AVIONICS BUS VOLTAGE (OnChange)",
      "description": "Avionics bus voltage: Units volts: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL AVIONICS BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL AVIONICS BUS VOLTAGE",
      "displaytitle": "ELECTRICAL AVIONICS BUS VOLTAGE (OnRequest)",
      "description": "Avionics bus voltage: Units volts: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL AVIONICS BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY BUS AMPS",
      "displaytitle": "ELECTRICAL BATTERY BUS AMPS (Poll)",
      "description": "Battery bus current: Units amperes: settable true",
      "messagetype": "trigger_ELECTRICAL BATTERY BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL BATTERY BUS AMPS",
      "displaytitle": "ELECTRICAL BATTERY BUS AMPS (OnChange)",
      "description": "Battery bus current: Units amperes: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL BATTERY BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL BATTERY BUS AMPS",
      "displaytitle": "ELECTRICAL BATTERY BUS AMPS (OnRequest)",
      "description": "Battery bus current: Units amperes: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL BATTERY BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY BUS VOLTAGE",
      "displaytitle": "ELECTRICAL BATTERY BUS VOLTAGE (Poll)",
      "description": "Battery bus voltage: Units volts: settable true",
      "messagetype": "trigger_ELECTRICAL BATTERY BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL BATTERY BUS VOLTAGE",
      "displaytitle": "ELECTRICAL BATTERY BUS VOLTAGE (OnChange)",
      "description": "Battery bus voltage: Units volts: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL BATTERY BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL BATTERY BUS VOLTAGE",
      "displaytitle": "ELECTRICAL BATTERY BUS VOLTAGE (OnRequest)",
      "description": "Battery bus voltage: Units volts: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL BATTERY BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY ESTIMATED CAPACITY PCT",
      "displaytitle": "ELECTRICAL BATTERY ESTIMATED CAPACITY PCT (Poll)",
      "description": "Battery capacity over max capacity, 100 is full: Units percent: settable false",
      "messagetype": "trigger_ELECTRICAL BATTERY ESTIMATED CAPACITY PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL BATTERY ESTIMATED CAPACITY PCT",
      "displaytitle": "ELECTRICAL BATTERY ESTIMATED CAPACITY PCT (OnChange)",
      "description": "Battery capacity over max capacity, 100 is full: Units percent: settable false",
      "messagetype": "trigger_onChange_ELECTRICAL BATTERY ESTIMATED CAPACITY PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL BATTERY ESTIMATED CAPACITY PCT",
      "displaytitle": "ELECTRICAL BATTERY ESTIMATED CAPACITY PCT (OnRequest)",
      "description": "Battery capacity over max capacity, 100 is full: Units percent: settable false",
      "messagetype": "trigger_onRequest_ELECTRICAL BATTERY ESTIMATED CAPACITY PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY LOAD",
      "displaytitle": "ELECTRICAL BATTERY LOAD (Poll)",
      "description": "The load handled by the battery (negative values mean the battery is receiving current). Use a battery index when referencing: Units amperes: settable true",
      "messagetype": "trigger_ELECTRICAL BATTERY LOAD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL BATTERY LOAD",
      "displaytitle": "ELECTRICAL BATTERY LOAD (OnChange)",
      "description": "The load handled by the battery (negative values mean the battery is receiving current). Use a battery index when referencing: Units amperes: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL BATTERY LOAD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL BATTERY LOAD",
      "displaytitle": "ELECTRICAL BATTERY LOAD (OnRequest)",
      "description": "The load handled by the battery (negative values mean the battery is receiving current). Use a battery index when referencing: Units amperes: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL BATTERY LOAD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY VOLTAGE",
      "displaytitle": "ELECTRICAL BATTERY VOLTAGE (Poll)",
      "description": "The battery voltage. Use a battery index when referencing: Units volts: settable true",
      "messagetype": "trigger_ELECTRICAL BATTERY VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL BATTERY VOLTAGE",
      "displaytitle": "ELECTRICAL BATTERY VOLTAGE (OnChange)",
      "description": "The battery voltage. Use a battery index when referencing: Units volts: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL BATTERY VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL BATTERY VOLTAGE",
      "displaytitle": "ELECTRICAL BATTERY VOLTAGE (OnRequest)",
      "description": "The battery voltage. Use a battery index when referencing: Units volts: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL BATTERY VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL GENALT BUS AMPS",
      "displaytitle": "ELECTRICAL GENALT BUS AMPS (Poll)",
      "description": "The load handled by the alternator. This requires an alternator index when referencing: Units amperes: settable true",
      "messagetype": "trigger_ELECTRICAL GENALT BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL GENALT BUS AMPS",
      "displaytitle": "ELECTRICAL GENALT BUS AMPS (OnChange)",
      "description": "The load handled by the alternator. This requires an alternator index when referencing: Units amperes: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL GENALT BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL GENALT BUS AMPS",
      "displaytitle": "ELECTRICAL GENALT BUS AMPS (OnRequest)",
      "description": "The load handled by the alternator. This requires an alternator index when referencing: Units amperes: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL GENALT BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL GENALT BUS VOLTAGE",
      "displaytitle": "ELECTRICAL GENALT BUS VOLTAGE (Poll)",
      "description": "General alternator voltage. This requires an alternator index when referencing: Units volts: settable true",
      "messagetype": "trigger_ELECTRICAL GENALT BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL GENALT BUS VOLTAGE",
      "displaytitle": "ELECTRICAL GENALT BUS VOLTAGE (OnChange)",
      "description": "General alternator voltage. This requires an alternator index when referencing: Units volts: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL GENALT BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL GENALT BUS VOLTAGE",
      "displaytitle": "ELECTRICAL GENALT BUS VOLTAGE (OnRequest)",
      "description": "General alternator voltage. This requires an alternator index when referencing: Units volts: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL GENALT BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL GENALT LOAD",
      "displaytitle": "ELECTRICAL GENALT LOAD (Poll)",
      "description": "This returns the percentage of the load output that is being consumed. This requires an alternator index when referencing: Units percent: settable false",
      "messagetype": "trigger_ELECTRICAL GENALT LOAD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL GENALT LOAD",
      "displaytitle": "ELECTRICAL GENALT LOAD (OnChange)",
      "description": "This returns the percentage of the load output that is being consumed. This requires an alternator index when referencing: Units percent: settable false",
      "messagetype": "trigger_onChange_ELECTRICAL GENALT LOAD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL GENALT LOAD",
      "displaytitle": "ELECTRICAL GENALT LOAD (OnRequest)",
      "description": "This returns the percentage of the load output that is being consumed. This requires an alternator index when referencing: Units percent: settable false",
      "messagetype": "trigger_onRequest_ELECTRICAL GENALT LOAD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL HOT BATTERY BUS AMPS",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS AMPS (Poll)",
      "description": "Current available when battery switch is turned off: Units amperes: settable true",
      "messagetype": "trigger_ELECTRICAL HOT BATTERY BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL HOT BATTERY BUS AMPS",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS AMPS (OnChange)",
      "description": "Current available when battery switch is turned off: Units amperes: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL HOT BATTERY BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL HOT BATTERY BUS AMPS",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS AMPS (OnRequest)",
      "description": "Current available when battery switch is turned off: Units amperes: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL HOT BATTERY BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL HOT BATTERY BUS VOLTAGE",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS VOLTAGE (Poll)",
      "description": "Voltage available when battery switch is turned off: Units volts: settable true",
      "messagetype": "trigger_ELECTRICAL HOT BATTERY BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL HOT BATTERY BUS VOLTAGE",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS VOLTAGE (OnChange)",
      "description": "Voltage available when battery switch is turned off: Units volts: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL HOT BATTERY BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL HOT BATTERY BUS VOLTAGE",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS VOLTAGE (OnRequest)",
      "description": "Voltage available when battery switch is turned off: Units volts: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL HOT BATTERY BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL MAIN BUS AMPS",
      "displaytitle": "ELECTRICAL MAIN BUS AMPS (Poll)",
      "description": "Main bus current: Units amperes: settable true",
      "messagetype": "trigger_ELECTRICAL MAIN BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL MAIN BUS AMPS",
      "displaytitle": "ELECTRICAL MAIN BUS AMPS (OnChange)",
      "description": "Main bus current: Units amperes: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL MAIN BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL MAIN BUS AMPS",
      "displaytitle": "ELECTRICAL MAIN BUS AMPS (OnRequest)",
      "description": "Main bus current: Units amperes: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL MAIN BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL MAIN BUS VOLTAGE",
      "displaytitle": "ELECTRICAL MAIN BUS VOLTAGE (Poll)",
      "description": "The main bus voltage. Use a bus index when referencing: Units volts: settable true",
      "messagetype": "trigger_ELECTRICAL MAIN BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL MAIN BUS VOLTAGE",
      "displaytitle": "ELECTRICAL MAIN BUS VOLTAGE (OnChange)",
      "description": "The main bus voltage. Use a bus index when referencing: Units volts: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL MAIN BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL MAIN BUS VOLTAGE",
      "displaytitle": "ELECTRICAL MAIN BUS VOLTAGE (OnRequest)",
      "description": "The main bus voltage. Use a bus index when referencing: Units volts: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL MAIN BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL MASTER BATTERY",
      "displaytitle": "ELECTRICAL MASTER BATTERY (Poll)",
      "description": "The battery switch position, true if the switch is ON. Use a battery index when referencing: Units bool: settable true",
      "messagetype": "trigger_ELECTRICAL MASTER BATTERY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL MASTER BATTERY",
      "displaytitle": "ELECTRICAL MASTER BATTERY (OnChange)",
      "description": "The battery switch position, true if the switch is ON. Use a battery index when referencing: Units bool: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL MASTER BATTERY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL MASTER BATTERY",
      "displaytitle": "ELECTRICAL MASTER BATTERY (OnRequest)",
      "description": "The battery switch position, true if the switch is ON. Use a battery index when referencing: Units bool: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL MASTER BATTERY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL TOTAL LOAD AMPS",
      "displaytitle": "ELECTRICAL TOTAL LOAD AMPS (Poll)",
      "description": "Total load amps: Units amperes: settable true",
      "messagetype": "trigger_ELECTRICAL TOTAL LOAD AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELECTRICAL TOTAL LOAD AMPS",
      "displaytitle": "ELECTRICAL TOTAL LOAD AMPS (OnChange)",
      "description": "Total load amps: Units amperes: settable true",
      "messagetype": "trigger_onChange_ELECTRICAL TOTAL LOAD AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELECTRICAL TOTAL LOAD AMPS",
      "displaytitle": "ELECTRICAL TOTAL LOAD AMPS (OnRequest)",
      "description": "Total load amps: Units amperes: settable true",
      "messagetype": "trigger_onRequest_ELECTRICAL TOTAL LOAD AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR DEFLECTION",
      "displaytitle": "ELEVATOR DEFLECTION (Poll)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_ELEVATOR DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR DEFLECTION",
      "displaytitle": "ELEVATOR DEFLECTION (OnChange)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onChange_ELEVATOR DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR DEFLECTION",
      "displaytitle": "ELEVATOR DEFLECTION (OnRequest)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onRequest_ELEVATOR DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR DEFLECTION PCT",
      "displaytitle": "ELEVATOR DEFLECTION PCT (Poll)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_ELEVATOR DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR DEFLECTION PCT",
      "displaytitle": "ELEVATOR DEFLECTION PCT (OnChange)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ELEVATOR DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR DEFLECTION PCT",
      "displaytitle": "ELEVATOR DEFLECTION PCT (OnRequest)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ELEVATOR DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR POSITION",
      "displaytitle": "ELEVATOR POSITION (Poll)",
      "description": "Percent elevator input deflection: Units position: settable true",
      "messagetype": "trigger_ELEVATOR POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR POSITION",
      "displaytitle": "ELEVATOR POSITION (OnChange)",
      "description": "Percent elevator input deflection: Units position: settable true",
      "messagetype": "trigger_onChange_ELEVATOR POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR POSITION",
      "displaytitle": "ELEVATOR POSITION (OnRequest)",
      "description": "Percent elevator input deflection: Units position: settable true",
      "messagetype": "trigger_onRequest_ELEVATOR POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR TRIM DISABLED",
      "displaytitle": "ELEVATOR TRIM DISABLED (Poll)",
      "description": "Whether or not the Elevator Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_ELEVATOR TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR TRIM DISABLED",
      "displaytitle": "ELEVATOR TRIM DISABLED (OnChange)",
      "description": "Whether or not the Elevator Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_onChange_ELEVATOR TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR TRIM DISABLED",
      "displaytitle": "ELEVATOR TRIM DISABLED (OnRequest)",
      "description": "Whether or not the Elevator Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_onRequest_ELEVATOR TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR TRIM DOWN LIMIT",
      "displaytitle": "ELEVATOR TRIM DOWN LIMIT (Poll)",
      "description": "Returns the maximum elevator trim value. This corresponds to the elevator_trim_down_limit in the Flight Model Config file: Units degrees: settable false",
      "messagetype": "trigger_ELEVATOR TRIM DOWN LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR TRIM DOWN LIMIT",
      "displaytitle": "ELEVATOR TRIM DOWN LIMIT (OnChange)",
      "description": "Returns the maximum elevator trim value. This corresponds to the elevator_trim_down_limit in the Flight Model Config file: Units degrees: settable false",
      "messagetype": "trigger_onChange_ELEVATOR TRIM DOWN LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR TRIM DOWN LIMIT",
      "displaytitle": "ELEVATOR TRIM DOWN LIMIT (OnRequest)",
      "description": "Returns the maximum elevator trim value. This corresponds to the elevator_trim_down_limit in the Flight Model Config file: Units degrees: settable false",
      "messagetype": "trigger_onRequest_ELEVATOR TRIM DOWN LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR TRIM INDICATOR",
      "displaytitle": "ELEVATOR TRIM INDICATOR (Poll)",
      "description": "Percent elevator trim (for indication): Units position: settable false",
      "messagetype": "trigger_ELEVATOR TRIM INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR TRIM INDICATOR",
      "displaytitle": "ELEVATOR TRIM INDICATOR (OnChange)",
      "description": "Percent elevator trim (for indication): Units position: settable false",
      "messagetype": "trigger_onChange_ELEVATOR TRIM INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR TRIM INDICATOR",
      "displaytitle": "ELEVATOR TRIM INDICATOR (OnRequest)",
      "description": "Percent elevator trim (for indication): Units position: settable false",
      "messagetype": "trigger_onRequest_ELEVATOR TRIM INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR TRIM NEUTRAL",
      "displaytitle": "ELEVATOR TRIM NEUTRAL (Poll)",
      "description": "Elevator trim neutral: Units radians: settable false",
      "messagetype": "trigger_ELEVATOR TRIM NEUTRAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR TRIM NEUTRAL",
      "displaytitle": "ELEVATOR TRIM NEUTRAL (OnChange)",
      "description": "Elevator trim neutral: Units radians: settable false",
      "messagetype": "trigger_onChange_ELEVATOR TRIM NEUTRAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR TRIM NEUTRAL",
      "displaytitle": "ELEVATOR TRIM NEUTRAL (OnRequest)",
      "description": "Elevator trim neutral: Units radians: settable false",
      "messagetype": "trigger_onRequest_ELEVATOR TRIM NEUTRAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR TRIM PCT",
      "displaytitle": "ELEVATOR TRIM PCT (Poll)",
      "description": "Percent elevator trim: Units percent Over 100: settable false",
      "messagetype": "trigger_ELEVATOR TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR TRIM PCT",
      "displaytitle": "ELEVATOR TRIM PCT (OnChange)",
      "description": "Percent elevator trim: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ELEVATOR TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR TRIM PCT",
      "displaytitle": "ELEVATOR TRIM PCT (OnRequest)",
      "description": "Percent elevator trim: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ELEVATOR TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR TRIM POSITION",
      "displaytitle": "ELEVATOR TRIM POSITION (Poll)",
      "description": "Elevator trim deflection: Units radians: settable true",
      "messagetype": "trigger_ELEVATOR TRIM POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR TRIM POSITION",
      "displaytitle": "ELEVATOR TRIM POSITION (OnChange)",
      "description": "Elevator trim deflection: Units radians: settable true",
      "messagetype": "trigger_onChange_ELEVATOR TRIM POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR TRIM POSITION",
      "displaytitle": "ELEVATOR TRIM POSITION (OnRequest)",
      "description": "Elevator trim deflection: Units radians: settable true",
      "messagetype": "trigger_onRequest_ELEVATOR TRIM POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR TRIM UP LIMIT",
      "displaytitle": "ELEVATOR TRIM UP LIMIT (Poll)",
      "description": "Returns the maximum elevator trim value. This corresponds to the elevator_trim_up_limit in the Flight Model Config file: Units degrees: settable false",
      "messagetype": "trigger_ELEVATOR TRIM UP LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVATOR TRIM UP LIMIT",
      "displaytitle": "ELEVATOR TRIM UP LIMIT (OnChange)",
      "description": "Returns the maximum elevator trim value. This corresponds to the elevator_trim_up_limit in the Flight Model Config file: Units degrees: settable false",
      "messagetype": "trigger_onChange_ELEVATOR TRIM UP LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVATOR TRIM UP LIMIT",
      "displaytitle": "ELEVATOR TRIM UP LIMIT (OnRequest)",
      "description": "Returns the maximum elevator trim value. This corresponds to the elevator_trim_up_limit in the Flight Model Config file: Units degrees: settable false",
      "messagetype": "trigger_onRequest_ELEVATOR TRIM UP LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVON DEFLECTION",
      "displaytitle": "ELEVON DEFLECTION (Poll)",
      "description": "Elevon deflection: Units radians: settable false",
      "messagetype": "trigger_ELEVON DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELEVON DEFLECTION",
      "displaytitle": "ELEVON DEFLECTION (OnChange)",
      "description": "Elevon deflection: Units radians: settable false",
      "messagetype": "trigger_onChange_ELEVON DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELEVON DEFLECTION",
      "displaytitle": "ELEVON DEFLECTION (OnRequest)",
      "description": "Elevon deflection: Units radians: settable false",
      "messagetype": "trigger_onRequest_ELEVON DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELT ACTIVATED",
      "displaytitle": "ELT ACTIVATED (Poll)",
      "description": "Whether or not the Emergency Locator Transmitter is active.: Units bool: settable false",
      "messagetype": "trigger_ELT ACTIVATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ELT ACTIVATED",
      "displaytitle": "ELT ACTIVATED (OnChange)",
      "description": "Whether or not the Emergency Locator Transmitter is active.: Units bool: settable false",
      "messagetype": "trigger_onChange_ELT ACTIVATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ELT ACTIVATED",
      "displaytitle": "ELT ACTIVATED (OnRequest)",
      "description": "Whether or not the Emergency Locator Transmitter is active.: Units bool: settable false",
      "messagetype": "trigger_onRequest_ELT ACTIVATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EMPTY WEIGHT",
      "displaytitle": "EMPTY WEIGHT (Poll)",
      "description": "Empty weight of the aircraft: Units pounds: settable false",
      "messagetype": "trigger_EMPTY WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EMPTY WEIGHT",
      "displaytitle": "EMPTY WEIGHT (OnChange)",
      "description": "Empty weight of the aircraft: Units pounds: settable false",
      "messagetype": "trigger_onChange_EMPTY WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EMPTY WEIGHT",
      "displaytitle": "EMPTY WEIGHT (OnRequest)",
      "description": "Empty weight of the aircraft: Units pounds: settable false",
      "messagetype": "trigger_onRequest_EMPTY WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EMPTY WEIGHT CROSS COUPLED MOI",
      "displaytitle": "EMPTY WEIGHT CROSS COUPLED MOI (Poll)",
      "description": "Empty weight cross coupled moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_EMPTY WEIGHT CROSS COUPLED MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EMPTY WEIGHT CROSS COUPLED MOI",
      "displaytitle": "EMPTY WEIGHT CROSS COUPLED MOI (OnChange)",
      "description": "Empty weight cross coupled moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onChange_EMPTY WEIGHT CROSS COUPLED MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EMPTY WEIGHT CROSS COUPLED MOI",
      "displaytitle": "EMPTY WEIGHT CROSS COUPLED MOI (OnRequest)",
      "description": "Empty weight cross coupled moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onRequest_EMPTY WEIGHT CROSS COUPLED MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EMPTY WEIGHT PITCH MOI",
      "displaytitle": "EMPTY WEIGHT PITCH MOI (Poll)",
      "description": "Empty weight pitch moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_EMPTY WEIGHT PITCH MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EMPTY WEIGHT PITCH MOI",
      "displaytitle": "EMPTY WEIGHT PITCH MOI (OnChange)",
      "description": "Empty weight pitch moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onChange_EMPTY WEIGHT PITCH MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EMPTY WEIGHT PITCH MOI",
      "displaytitle": "EMPTY WEIGHT PITCH MOI (OnRequest)",
      "description": "Empty weight pitch moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onRequest_EMPTY WEIGHT PITCH MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EMPTY WEIGHT ROLL MOI",
      "displaytitle": "EMPTY WEIGHT ROLL MOI (Poll)",
      "description": "Empty weight roll moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_EMPTY WEIGHT ROLL MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EMPTY WEIGHT ROLL MOI",
      "displaytitle": "EMPTY WEIGHT ROLL MOI (OnChange)",
      "description": "Empty weight roll moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onChange_EMPTY WEIGHT ROLL MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EMPTY WEIGHT ROLL MOI",
      "displaytitle": "EMPTY WEIGHT ROLL MOI (OnRequest)",
      "description": "Empty weight roll moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onRequest_EMPTY WEIGHT ROLL MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EMPTY WEIGHT YAW MOI",
      "displaytitle": "EMPTY WEIGHT YAW MOI (Poll)",
      "description": "Empty weight yaw moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_EMPTY WEIGHT YAW MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EMPTY WEIGHT YAW MOI",
      "displaytitle": "EMPTY WEIGHT YAW MOI (OnChange)",
      "description": "Empty weight yaw moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onChange_EMPTY WEIGHT YAW MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EMPTY WEIGHT YAW MOI",
      "displaytitle": "EMPTY WEIGHT YAW MOI (OnRequest)",
      "description": "Empty weight yaw moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onRequest_EMPTY WEIGHT YAW MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ENG ANTI ICE:index",
      "displaytitle": "ENG ANTI ICE:index (Poll)",
      "description": "Anti-ice switch for the indexed engine, true if enabled false otherwise: Units bool: settable false",
      "messagetype": "trigger_ENG ANTI ICE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG ANTI ICE:index",
      "displaytitle": "ENG ANTI ICE:index (OnChange)",
      "description": "Anti-ice switch for the indexed engine, true if enabled false otherwise: Units bool: settable false",
      "messagetype": "trigger_onChange_ENG ANTI ICE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG ANTI ICE:index",
      "displaytitle": "ENG ANTI ICE:index (OnRequest)",
      "description": "Anti-ice switch for the indexed engine, true if enabled false otherwise: Units bool: settable false",
      "messagetype": "trigger_onRequest_ENG ANTI ICE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG COMBUSTION:index",
      "displaytitle": "ENG COMBUSTION:index (Poll)",
      "description": "True if the indexed engine is running, false otherwise: Units bool: settable false",
      "messagetype": "trigger_ENG COMBUSTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG COMBUSTION:index",
      "displaytitle": "ENG COMBUSTION:index (OnChange)",
      "description": "True if the indexed engine is running, false otherwise: Units bool: settable false",
      "messagetype": "trigger_onChange_ENG COMBUSTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG COMBUSTION:index",
      "displaytitle": "ENG COMBUSTION:index (OnRequest)",
      "description": "True if the indexed engine is running, false otherwise: Units bool: settable false",
      "messagetype": "trigger_onRequest_ENG COMBUSTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG CYLINDER HEAD TEMPERATURE:index",
      "displaytitle": "ENG CYLINDER HEAD TEMPERATURE:index (Poll)",
      "description": "The indexed engine cylinder head temperature: Units rankine: settable false",
      "messagetype": "trigger_ENG CYLINDER HEAD TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG CYLINDER HEAD TEMPERATURE:index",
      "displaytitle": "ENG CYLINDER HEAD TEMPERATURE:index (OnChange)",
      "description": "The indexed engine cylinder head temperature: Units rankine: settable false",
      "messagetype": "trigger_onChange_ENG CYLINDER HEAD TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG CYLINDER HEAD TEMPERATURE:index",
      "displaytitle": "ENG CYLINDER HEAD TEMPERATURE:index (OnRequest)",
      "description": "The indexed engine cylinder head temperature: Units rankine: settable false",
      "messagetype": "trigger_onRequest_ENG CYLINDER HEAD TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG EXHAUST GAS TEMPERATURE GES:index",
      "displaytitle": "ENG EXHAUST GAS TEMPERATURE GES:index (Poll)",
      "description": "Governed engine setting exhaust gas temperature for the indexed engine: Units percent Over 100: settable false",
      "messagetype": "trigger_ENG EXHAUST GAS TEMPERATURE GES:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG EXHAUST GAS TEMPERATURE GES:index",
      "displaytitle": "ENG EXHAUST GAS TEMPERATURE GES:index (OnChange)",
      "description": "Governed engine setting exhaust gas temperature for the indexed engine: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ENG EXHAUST GAS TEMPERATURE GES:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG EXHAUST GAS TEMPERATURE GES:index",
      "displaytitle": "ENG EXHAUST GAS TEMPERATURE GES:index (OnRequest)",
      "description": "Governed engine setting exhaust gas temperature for the indexed engine: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ENG EXHAUST GAS TEMPERATURE GES:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG EXHAUST GAS TEMPERATURE:index",
      "displaytitle": "ENG EXHAUST GAS TEMPERATURE:index (Poll)",
      "description": "Exhaust gas temperature for the indexed engine: Units rankine: settable false",
      "messagetype": "trigger_ENG EXHAUST GAS TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG EXHAUST GAS TEMPERATURE:index",
      "displaytitle": "ENG EXHAUST GAS TEMPERATURE:index (OnChange)",
      "description": "Exhaust gas temperature for the indexed engine: Units rankine: settable false",
      "messagetype": "trigger_onChange_ENG EXHAUST GAS TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG EXHAUST GAS TEMPERATURE:index",
      "displaytitle": "ENG EXHAUST GAS TEMPERATURE:index (OnRequest)",
      "description": "Exhaust gas temperature for the indexed engine: Units rankine: settable false",
      "messagetype": "trigger_onRequest_ENG EXHAUST GAS TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG FAILED:index",
      "displaytitle": "ENG FAILED:index (Poll)",
      "description": "Failure flag for the indexed engine that has failed: Units bool: settable false",
      "messagetype": "trigger_ENG FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG FAILED:index",
      "displaytitle": "ENG FAILED:index (OnChange)",
      "description": "Failure flag for the indexed engine that has failed: Units bool: settable false",
      "messagetype": "trigger_onChange_ENG FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG FAILED:index",
      "displaytitle": "ENG FAILED:index (OnRequest)",
      "description": "Failure flag for the indexed engine that has failed: Units bool: settable false",
      "messagetype": "trigger_onRequest_ENG FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG FUEL FLOW BUG POSITION:index",
      "displaytitle": "ENG FUEL FLOW BUG POSITION:index (Poll)",
      "description": "Fuel flow reference in pounds per hour for the indexed engine: Units pounds per hour: settable false",
      "messagetype": "trigger_ENG FUEL FLOW BUG POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG FUEL FLOW BUG POSITION:index",
      "displaytitle": "ENG FUEL FLOW BUG POSITION:index (OnChange)",
      "description": "Fuel flow reference in pounds per hour for the indexed engine: Units pounds per hour: settable false",
      "messagetype": "trigger_onChange_ENG FUEL FLOW BUG POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG FUEL FLOW BUG POSITION:index",
      "displaytitle": "ENG FUEL FLOW BUG POSITION:index (OnRequest)",
      "description": "Fuel flow reference in pounds per hour for the indexed engine: Units pounds per hour: settable false",
      "messagetype": "trigger_onRequest_ENG FUEL FLOW BUG POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG FUEL FLOW GPH:index",
      "displaytitle": "ENG FUEL FLOW GPH:index (Poll)",
      "description": "Engine fuel flow in gallons per hour for the indexed engine: Units gallons per hour: settable false",
      "messagetype": "trigger_ENG FUEL FLOW GPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG FUEL FLOW GPH:index",
      "displaytitle": "ENG FUEL FLOW GPH:index (OnChange)",
      "description": "Engine fuel flow in gallons per hour for the indexed engine: Units gallons per hour: settable false",
      "messagetype": "trigger_onChange_ENG FUEL FLOW GPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG FUEL FLOW GPH:index",
      "displaytitle": "ENG FUEL FLOW GPH:index (OnRequest)",
      "description": "Engine fuel flow in gallons per hour for the indexed engine: Units gallons per hour: settable false",
      "messagetype": "trigger_onRequest_ENG FUEL FLOW GPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG FUEL FLOW PPH:index",
      "displaytitle": "ENG FUEL FLOW PPH:index (Poll)",
      "description": "The indexed engine fuel flow in pounds per hour: Units pounds per hour: settable false",
      "messagetype": "trigger_ENG FUEL FLOW PPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG FUEL FLOW PPH:index",
      "displaytitle": "ENG FUEL FLOW PPH:index (OnChange)",
      "description": "The indexed engine fuel flow in pounds per hour: Units pounds per hour: settable false",
      "messagetype": "trigger_onChange_ENG FUEL FLOW PPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG FUEL FLOW PPH:index",
      "displaytitle": "ENG FUEL FLOW PPH:index (OnRequest)",
      "description": "The indexed engine fuel flow in pounds per hour: Units pounds per hour: settable false",
      "messagetype": "trigger_onRequest_ENG FUEL FLOW PPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG HYDRAULIC PRESSURE:index",
      "displaytitle": "ENG HYDRAULIC PRESSURE:index (Poll)",
      "description": "The indexed engine hydraulic pressure: Units pounds: settable false",
      "messagetype": "trigger_ENG HYDRAULIC PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG HYDRAULIC PRESSURE:index",
      "displaytitle": "ENG HYDRAULIC PRESSURE:index (OnChange)",
      "description": "The indexed engine hydraulic pressure: Units pounds: settable false",
      "messagetype": "trigger_onChange_ENG HYDRAULIC PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG HYDRAULIC PRESSURE:index",
      "displaytitle": "ENG HYDRAULIC PRESSURE:index (OnRequest)",
      "description": "The indexed engine hydraulic pressure: Units pounds: settable false",
      "messagetype": "trigger_onRequest_ENG HYDRAULIC PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG HYDRAULIC QUANTITY:index",
      "displaytitle": "ENG HYDRAULIC QUANTITY:index (Poll)",
      "description": "The indexed enginehydraulic fluid quantity, as a percentage of total capacity: Units percent Over 100: settable false",
      "messagetype": "trigger_ENG HYDRAULIC QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG HYDRAULIC QUANTITY:index",
      "displaytitle": "ENG HYDRAULIC QUANTITY:index (OnChange)",
      "description": "The indexed enginehydraulic fluid quantity, as a percentage of total capacity: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ENG HYDRAULIC QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG HYDRAULIC QUANTITY:index",
      "displaytitle": "ENG HYDRAULIC QUANTITY:index (OnRequest)",
      "description": "The indexed enginehydraulic fluid quantity, as a percentage of total capacity: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ENG HYDRAULIC QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG MANIFOLD PRESSURE:index",
      "displaytitle": "ENG MANIFOLD PRESSURE:index (Poll)",
      "description": "The indexed engine manifold pressure: Units inches: settable false",
      "messagetype": "trigger_ENG MANIFOLD PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG MANIFOLD PRESSURE:index",
      "displaytitle": "ENG MANIFOLD PRESSURE:index (OnChange)",
      "description": "The indexed engine manifold pressure: Units inches: settable false",
      "messagetype": "trigger_onChange_ENG MANIFOLD PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG MANIFOLD PRESSURE:index",
      "displaytitle": "ENG MANIFOLD PRESSURE:index (OnRequest)",
      "description": "The indexed engine manifold pressure: Units inches: settable false",
      "messagetype": "trigger_onRequest_ENG MANIFOLD PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG MAX RPM",
      "displaytitle": "ENG MAX RPM (Poll)",
      "description": "The indexed engine Maximum rpm: Units RPM: settable false",
      "messagetype": "trigger_ENG MAX RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ENG MAX RPM",
      "displaytitle": "ENG MAX RPM (OnChange)",
      "description": "The indexed engine Maximum rpm: Units RPM: settable false",
      "messagetype": "trigger_onChange_ENG MAX RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG MAX RPM",
      "displaytitle": "ENG MAX RPM (OnRequest)",
      "description": "The indexed engine Maximum rpm: Units RPM: settable false",
      "messagetype": "trigger_onRequest_ENG MAX RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ENG N1 RPM:index",
      "displaytitle": "ENG N1 RPM:index (Poll)",
      "description": "The indexed engine N1 rpm: Units RPM: settable false",
      "messagetype": "trigger_ENG N1 RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG N1 RPM:index",
      "displaytitle": "ENG N1 RPM:index (OnChange)",
      "description": "The indexed engine N1 rpm: Units RPM: settable false",
      "messagetype": "trigger_onChange_ENG N1 RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG N1 RPM:index",
      "displaytitle": "ENG N1 RPM:index (OnRequest)",
      "description": "The indexed engine N1 rpm: Units RPM: settable false",
      "messagetype": "trigger_onRequest_ENG N1 RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG N2 RPM:index",
      "displaytitle": "ENG N2 RPM:index (Poll)",
      "description": "The indexed engine N2 rpm: Units RPM: settable false",
      "messagetype": "trigger_ENG N2 RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG N2 RPM:index",
      "displaytitle": "ENG N2 RPM:index (OnChange)",
      "description": "The indexed engine N2 rpm: Units RPM: settable false",
      "messagetype": "trigger_onChange_ENG N2 RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG N2 RPM:index",
      "displaytitle": "ENG N2 RPM:index (OnRequest)",
      "description": "The indexed engine N2 rpm: Units RPM: settable false",
      "messagetype": "trigger_onRequest_ENG N2 RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG OIL PRESSURE:index",
      "displaytitle": "ENG OIL PRESSURE:index (Poll)",
      "description": "The indexed engine oil pressure: Units pounds: settable false",
      "messagetype": "trigger_ENG OIL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG OIL PRESSURE:index",
      "displaytitle": "ENG OIL PRESSURE:index (OnChange)",
      "description": "The indexed engine oil pressure: Units pounds: settable false",
      "messagetype": "trigger_onChange_ENG OIL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG OIL PRESSURE:index",
      "displaytitle": "ENG OIL PRESSURE:index (OnRequest)",
      "description": "The indexed engine oil pressure: Units pounds: settable false",
      "messagetype": "trigger_onRequest_ENG OIL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG OIL QUANTITY:index",
      "displaytitle": "ENG OIL QUANTITY:index (Poll)",
      "description": "The indexed engine oil quantity as a percentage of full capacity: Units percent Over 100: settable false",
      "messagetype": "trigger_ENG OIL QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG OIL QUANTITY:index",
      "displaytitle": "ENG OIL QUANTITY:index (OnChange)",
      "description": "The indexed engine oil quantity as a percentage of full capacity: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ENG OIL QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG OIL QUANTITY:index",
      "displaytitle": "ENG OIL QUANTITY:index (OnRequest)",
      "description": "The indexed engine oil quantity as a percentage of full capacity: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ENG OIL QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG OIL TEMPERATURE:index",
      "displaytitle": "ENG OIL TEMPERATURE:index (Poll)",
      "description": "The indexed engine oil temperature: Units rankine: settable false",
      "messagetype": "trigger_ENG OIL TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG OIL TEMPERATURE:index",
      "displaytitle": "ENG OIL TEMPERATURE:index (OnChange)",
      "description": "The indexed engine oil temperature: Units rankine: settable false",
      "messagetype": "trigger_onChange_ENG OIL TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG OIL TEMPERATURE:index",
      "displaytitle": "ENG OIL TEMPERATURE:index (OnRequest)",
      "description": "The indexed engine oil temperature: Units rankine: settable false",
      "messagetype": "trigger_onRequest_ENG OIL TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG ON FIRE:index",
      "displaytitle": "ENG ON FIRE:index (Poll)",
      "description": "The indexed engine on fire state: Units bool: settable true",
      "messagetype": "trigger_ENG ON FIRE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG ON FIRE:index",
      "displaytitle": "ENG ON FIRE:index (OnChange)",
      "description": "The indexed engine on fire state: Units bool: settable true",
      "messagetype": "trigger_onChange_ENG ON FIRE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG ON FIRE:index",
      "displaytitle": "ENG ON FIRE:index (OnRequest)",
      "description": "The indexed engine on fire state: Units bool: settable true",
      "messagetype": "trigger_onRequest_ENG ON FIRE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG PRESSURE RATIO:index",
      "displaytitle": "ENG PRESSURE RATIO:index (Poll)",
      "description": "The indexed engine pressure ratio: Units ratio: settable false",
      "messagetype": "trigger_ENG PRESSURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG PRESSURE RATIO:index",
      "displaytitle": "ENG PRESSURE RATIO:index (OnChange)",
      "description": "The indexed engine pressure ratio: Units ratio: settable false",
      "messagetype": "trigger_onChange_ENG PRESSURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG PRESSURE RATIO:index",
      "displaytitle": "ENG PRESSURE RATIO:index (OnRequest)",
      "description": "The indexed engine pressure ratio: Units ratio: settable false",
      "messagetype": "trigger_onRequest_ENG PRESSURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG RPM ANIMATION PERCENT:index",
      "displaytitle": "ENG RPM ANIMATION PERCENT:index (Poll)",
      "description": "The indexed engine percentage maximum rated rpm (used for visual animation): Units percent: settable false",
      "messagetype": "trigger_ENG RPM ANIMATION PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG RPM ANIMATION PERCENT:index",
      "displaytitle": "ENG RPM ANIMATION PERCENT:index (OnChange)",
      "description": "The indexed engine percentage maximum rated rpm (used for visual animation): Units percent: settable false",
      "messagetype": "trigger_onChange_ENG RPM ANIMATION PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG RPM ANIMATION PERCENT:index",
      "displaytitle": "ENG RPM ANIMATION PERCENT:index (OnRequest)",
      "description": "The indexed engine percentage maximum rated rpm (used for visual animation): Units percent: settable false",
      "messagetype": "trigger_onRequest_ENG RPM ANIMATION PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG TORQUE:index",
      "displaytitle": "ENG TORQUE:index (Poll)",
      "description": "The indexed engine torque: Units foot pounds: settable false",
      "messagetype": "trigger_ENG TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG TORQUE:index",
      "displaytitle": "ENG TORQUE:index (OnChange)",
      "description": "The indexed engine torque: Units foot pounds: settable false",
      "messagetype": "trigger_onChange_ENG TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG TORQUE:index",
      "displaytitle": "ENG TORQUE:index (OnRequest)",
      "description": "The indexed engine torque: Units foot pounds: settable false",
      "messagetype": "trigger_onRequest_ENG TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG VIBRATION:index",
      "displaytitle": "ENG VIBRATION:index (Poll)",
      "description": "The indexed engine vibration: Units number: settable false",
      "messagetype": "trigger_ENG VIBRATION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ENG VIBRATION:index",
      "displaytitle": "ENG VIBRATION:index (OnChange)",
      "description": "The indexed engine vibration: Units number: settable false",
      "messagetype": "trigger_onChange_ENG VIBRATION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ENG VIBRATION:index",
      "displaytitle": "ENG VIBRATION:index (OnRequest)",
      "description": "The indexed engine vibration: Units number: settable false",
      "messagetype": "trigger_onRequest_ENG VIBRATION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENGINE CONTROL SELECT",
      "displaytitle": "ENGINE CONTROL SELECT (Poll)",
      "description": "Selected engines (combination of bit flags): Units mask: settable true",
      "messagetype": "trigger_ENGINE CONTROL SELECT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ENGINE CONTROL SELECT",
      "displaytitle": "ENGINE CONTROL SELECT (OnChange)",
      "description": "Selected engines (combination of bit flags): Units mask: settable true",
      "messagetype": "trigger_onChange_ENGINE CONTROL SELECT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ENGINE CONTROL SELECT",
      "displaytitle": "ENGINE CONTROL SELECT (OnRequest)",
      "description": "Selected engines (combination of bit flags): Units mask: settable true",
      "messagetype": "trigger_onRequest_ENGINE CONTROL SELECT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ENGINE PRIMER",
      "displaytitle": "ENGINE PRIMER (Poll)",
      "description": "The engine primer position: Units position: settable true",
      "messagetype": "trigger_ENGINE PRIMER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ENGINE PRIMER",
      "displaytitle": "ENGINE PRIMER (OnChange)",
      "description": "The engine primer position: Units position: settable true",
      "messagetype": "trigger_onChange_ENGINE PRIMER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ENGINE PRIMER",
      "displaytitle": "ENGINE PRIMER (OnRequest)",
      "description": "The engine primer position: Units position: settable true",
      "messagetype": "trigger_onRequest_ENGINE PRIMER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ENGINE TYPE",
      "displaytitle": "ENGINE TYPE (Poll)",
      "description": "Engine type: Units enum: settable false",
      "messagetype": "trigger_ENGINE TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ENGINE TYPE",
      "displaytitle": "ENGINE TYPE (OnChange)",
      "description": "Engine type: Units enum: settable false",
      "messagetype": "trigger_onChange_ENGINE TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ENGINE TYPE",
      "displaytitle": "ENGINE TYPE (OnRequest)",
      "description": "Engine type: Units enum: settable false",
      "messagetype": "trigger_onRequest_ENGINE TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ESTIMATED CRUISE SPEED",
      "displaytitle": "ESTIMATED CRUISE SPEED (Poll)",
      "description": "Estimated cruise speed: Units feet: settable false",
      "messagetype": "trigger_ESTIMATED CRUISE SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ESTIMATED CRUISE SPEED",
      "displaytitle": "ESTIMATED CRUISE SPEED (OnChange)",
      "description": "Estimated cruise speed: Units feet: settable false",
      "messagetype": "trigger_onChange_ESTIMATED CRUISE SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ESTIMATED CRUISE SPEED",
      "displaytitle": "ESTIMATED CRUISE SPEED (OnRequest)",
      "description": "Estimated cruise speed: Units feet: settable false",
      "messagetype": "trigger_onRequest_ESTIMATED CRUISE SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ESTIMATED FUEL FLOW:index",
      "displaytitle": "ESTIMATED FUEL FLOW:index (Poll)",
      "description": "Estimated fuel flow to the indexed engine at cruise speed: Units pounds per hour: settable false",
      "messagetype": "trigger_ESTIMATED FUEL FLOW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ESTIMATED FUEL FLOW:index",
      "displaytitle": "ESTIMATED FUEL FLOW:index (OnChange)",
      "description": "Estimated fuel flow to the indexed engine at cruise speed: Units pounds per hour: settable false",
      "messagetype": "trigger_onChange_ESTIMATED FUEL FLOW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ESTIMATED FUEL FLOW:index",
      "displaytitle": "ESTIMATED FUEL FLOW:index (OnRequest)",
      "description": "Estimated fuel flow to the indexed engine at cruise speed: Units pounds per hour: settable false",
      "messagetype": "trigger_onRequest_ESTIMATED FUEL FLOW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "EXTERNAL POWER AVAILABLE",
      "displaytitle": "EXTERNAL POWER AVAILABLE (Poll)",
      "description": "This will be true if the given external power source is available. Use an external power index when referencing: Units bool: settable false",
      "messagetype": "trigger_EXTERNAL POWER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EXTERNAL POWER AVAILABLE",
      "displaytitle": "EXTERNAL POWER AVAILABLE (OnChange)",
      "description": "This will be true if the given external power source is available. Use an external power index when referencing: Units bool: settable false",
      "messagetype": "trigger_onChange_EXTERNAL POWER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EXTERNAL POWER AVAILABLE",
      "displaytitle": "EXTERNAL POWER AVAILABLE (OnRequest)",
      "description": "This will be true if the given external power source is available. Use an external power index when referencing: Units bool: settable false",
      "messagetype": "trigger_onRequest_EXTERNAL POWER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EXTERNAL POWER BREAKER PULLED",
      "displaytitle": "EXTERNAL POWER BREAKER PULLED (Poll)",
      "description": "Boolean, The state of the breaker of an external power source: Units bool: settable true",
      "messagetype": "trigger_EXTERNAL POWER BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EXTERNAL POWER BREAKER PULLED",
      "displaytitle": "EXTERNAL POWER BREAKER PULLED (OnChange)",
      "description": "Boolean, The state of the breaker of an external power source: Units bool: settable true",
      "messagetype": "trigger_onChange_EXTERNAL POWER BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EXTERNAL POWER BREAKER PULLED",
      "displaytitle": "EXTERNAL POWER BREAKER PULLED (OnRequest)",
      "description": "Boolean, The state of the breaker of an external power source: Units bool: settable true",
      "messagetype": "trigger_onRequest_EXTERNAL POWER BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EXTERNAL POWER CONNECTION ON",
      "displaytitle": "EXTERNAL POWER CONNECTION ON (Poll)",
      "description": "Boolean, The state of the connection between a bus and an external power source: Units bool: settable false",
      "messagetype": "trigger_EXTERNAL POWER CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EXTERNAL POWER CONNECTION ON",
      "displaytitle": "EXTERNAL POWER CONNECTION ON (OnChange)",
      "description": "Boolean, The state of the connection between a bus and an external power source: Units bool: settable false",
      "messagetype": "trigger_onChange_EXTERNAL POWER CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EXTERNAL POWER CONNECTION ON",
      "displaytitle": "EXTERNAL POWER CONNECTION ON (OnRequest)",
      "description": "Boolean, The state of the connection between a bus and an external power source: Units bool: settable false",
      "messagetype": "trigger_onRequest_EXTERNAL POWER CONNECTION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EXTERNAL POWER ON",
      "displaytitle": "EXTERNAL POWER ON (Poll)",
      "description": "The external power switch position, true if the switch is ON. Use an external power index when referencing: Units bool: settable false",
      "messagetype": "trigger_EXTERNAL POWER ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EXTERNAL POWER ON",
      "displaytitle": "EXTERNAL POWER ON (OnChange)",
      "description": "The external power switch position, true if the switch is ON. Use an external power index when referencing: Units bool: settable false",
      "messagetype": "trigger_onChange_EXTERNAL POWER ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EXTERNAL POWER ON",
      "displaytitle": "EXTERNAL POWER ON (OnRequest)",
      "description": "The external power switch position, true if the switch is ON. Use an external power index when referencing: Units bool: settable false",
      "messagetype": "trigger_onRequest_EXTERNAL POWER ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EXTERNAL SYSTEM VALUE",
      "displaytitle": "EXTERNAL SYSTEM VALUE (Poll)",
      "description": "Generic SimVar.: Units number: settable true",
      "messagetype": "trigger_EXTERNAL SYSTEM VALUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_EXTERNAL SYSTEM VALUE",
      "displaytitle": "EXTERNAL SYSTEM VALUE (OnChange)",
      "description": "Generic SimVar.: Units number: settable true",
      "messagetype": "trigger_onChange_EXTERNAL SYSTEM VALUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_EXTERNAL SYSTEM VALUE",
      "displaytitle": "EXTERNAL SYSTEM VALUE (OnRequest)",
      "description": "Generic SimVar.: Units number: settable true",
      "messagetype": "trigger_onRequest_EXTERNAL SYSTEM VALUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FIRE BOTTLE DISCHARGED",
      "displaytitle": "FIRE BOTTLE DISCHARGED (Poll)",
      "description": "True if the fire bottle is discharged.: Units bool: settable false",
      "messagetype": "trigger_FIRE BOTTLE DISCHARGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FIRE BOTTLE DISCHARGED",
      "displaytitle": "FIRE BOTTLE DISCHARGED (OnChange)",
      "description": "True if the fire bottle is discharged.: Units bool: settable false",
      "messagetype": "trigger_onChange_FIRE BOTTLE DISCHARGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FIRE BOTTLE DISCHARGED",
      "displaytitle": "FIRE BOTTLE DISCHARGED (OnRequest)",
      "description": "True if the fire bottle is discharged.: Units bool: settable false",
      "messagetype": "trigger_onRequest_FIRE BOTTLE DISCHARGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FIRE BOTTLE SWITCH",
      "displaytitle": "FIRE BOTTLE SWITCH (Poll)",
      "description": "True if the fire bottle switch is on.: Units bool: settable false",
      "messagetype": "trigger_FIRE BOTTLE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FIRE BOTTLE SWITCH",
      "displaytitle": "FIRE BOTTLE SWITCH (OnChange)",
      "description": "True if the fire bottle switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_FIRE BOTTLE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FIRE BOTTLE SWITCH",
      "displaytitle": "FIRE BOTTLE SWITCH (OnRequest)",
      "description": "True if the fire bottle switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_FIRE BOTTLE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLAP DAMAGE BY SPEED",
      "displaytitle": "FLAP DAMAGE BY SPEED (Poll)",
      "description": "True if flaps are damaged by excessive speed: Units bool: settable false",
      "messagetype": "trigger_FLAP DAMAGE BY SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLAP DAMAGE BY SPEED",
      "displaytitle": "FLAP DAMAGE BY SPEED (OnChange)",
      "description": "True if flaps are damaged by excessive speed: Units bool: settable false",
      "messagetype": "trigger_onChange_FLAP DAMAGE BY SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLAP DAMAGE BY SPEED",
      "displaytitle": "FLAP DAMAGE BY SPEED (OnRequest)",
      "description": "True if flaps are damaged by excessive speed: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLAP DAMAGE BY SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLAP POSITION SET",
      "displaytitle": "FLAP POSITION SET (Poll)",
      "description": "Set the position of the flaps control: Units position: settable true",
      "messagetype": "trigger_FLAP POSITION SET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLAP POSITION SET",
      "displaytitle": "FLAP POSITION SET (OnChange)",
      "description": "Set the position of the flaps control: Units position: settable true",
      "messagetype": "trigger_onChange_FLAP POSITION SET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLAP POSITION SET",
      "displaytitle": "FLAP POSITION SET (OnRequest)",
      "description": "Set the position of the flaps control: Units position: settable true",
      "messagetype": "trigger_onRequest_FLAP POSITION SET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLAP SPEED EXCEEDED",
      "displaytitle": "FLAP SPEED EXCEEDED (Poll)",
      "description": "True if safe speed limit for flaps exceeded: Units bool: settable false",
      "messagetype": "trigger_FLAP SPEED EXCEEDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLAP SPEED EXCEEDED",
      "displaytitle": "FLAP SPEED EXCEEDED (OnChange)",
      "description": "True if safe speed limit for flaps exceeded: Units bool: settable false",
      "messagetype": "trigger_onChange_FLAP SPEED EXCEEDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLAP SPEED EXCEEDED",
      "displaytitle": "FLAP SPEED EXCEEDED (OnRequest)",
      "description": "True if safe speed limit for flaps exceeded: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLAP SPEED EXCEEDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLAPS AVAILABLE",
      "displaytitle": "FLAPS AVAILABLE (Poll)",
      "description": "True if flaps available: Units bool: settable false",
      "messagetype": "trigger_FLAPS AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLAPS AVAILABLE",
      "displaytitle": "FLAPS AVAILABLE (OnChange)",
      "description": "True if flaps available: Units bool: settable false",
      "messagetype": "trigger_onChange_FLAPS AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLAPS AVAILABLE",
      "displaytitle": "FLAPS AVAILABLE (OnRequest)",
      "description": "True if flaps available: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLAPS AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLAPS EFFECTIVE HANDLE INDEX:index",
      "displaytitle": "FLAPS EFFECTIVE HANDLE INDEX:index (Poll)",
      "description": "This returns the effective flaps handle index, after some of the conditions have potentially forced the state to change: Units number: settable false",
      "messagetype": "trigger_FLAPS EFFECTIVE HANDLE INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_FLAPS EFFECTIVE HANDLE INDEX:index",
      "displaytitle": "FLAPS EFFECTIVE HANDLE INDEX:index (OnChange)",
      "description": "This returns the effective flaps handle index, after some of the conditions have potentially forced the state to change: Units number: settable false",
      "messagetype": "trigger_onChange_FLAPS EFFECTIVE HANDLE INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_FLAPS EFFECTIVE HANDLE INDEX:index",
      "displaytitle": "FLAPS EFFECTIVE HANDLE INDEX:index (OnRequest)",
      "description": "This returns the effective flaps handle index, after some of the conditions have potentially forced the state to change: Units number: settable false",
      "messagetype": "trigger_onRequest_FLAPS EFFECTIVE HANDLE INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "FLAPS HANDLE INDEX:index",
      "displaytitle": "FLAPS HANDLE INDEX:index (Poll)",
      "description": "Index of current flap position: Units number: settable true",
      "messagetype": "trigger_FLAPS HANDLE INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_FLAPS HANDLE INDEX:index",
      "displaytitle": "FLAPS HANDLE INDEX:index (OnChange)",
      "description": "Index of current flap position: Units number: settable true",
      "messagetype": "trigger_onChange_FLAPS HANDLE INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_FLAPS HANDLE INDEX:index",
      "displaytitle": "FLAPS HANDLE INDEX:index (OnRequest)",
      "description": "Index of current flap position: Units number: settable true",
      "messagetype": "trigger_onRequest_FLAPS HANDLE INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "FLAPS HANDLE PERCENT",
      "displaytitle": "FLAPS HANDLE PERCENT (Poll)",
      "description": "Percent flap handle extended: Units percent Over 100: settable false",
      "messagetype": "trigger_FLAPS HANDLE PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLAPS HANDLE PERCENT",
      "displaytitle": "FLAPS HANDLE PERCENT (OnChange)",
      "description": "Percent flap handle extended: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_FLAPS HANDLE PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLAPS HANDLE PERCENT",
      "displaytitle": "FLAPS HANDLE PERCENT (OnRequest)",
      "description": "Percent flap handle extended: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_FLAPS HANDLE PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLAPS NUM HANDLE POSITIONS",
      "displaytitle": "FLAPS NUM HANDLE POSITIONS (Poll)",
      "description": "Number of available flap positions: Units number: settable false",
      "messagetype": "trigger_FLAPS NUM HANDLE POSITIONS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLAPS NUM HANDLE POSITIONS",
      "displaytitle": "FLAPS NUM HANDLE POSITIONS (OnChange)",
      "description": "Number of available flap positions: Units number: settable false",
      "messagetype": "trigger_onChange_FLAPS NUM HANDLE POSITIONS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLAPS NUM HANDLE POSITIONS",
      "displaytitle": "FLAPS NUM HANDLE POSITIONS (OnRequest)",
      "description": "Number of available flap positions: Units number: settable false",
      "messagetype": "trigger_onRequest_FLAPS NUM HANDLE POSITIONS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLARM AVAILABLE",
      "displaytitle": "FLARM AVAILABLE (Poll)",
      "description": "Whether the FLARM is available (TRUE, 1) or not (FALSE, 0).: Units bool: settable true",
      "messagetype": "trigger_FLARM AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLARM AVAILABLE",
      "displaytitle": "FLARM AVAILABLE (OnChange)",
      "description": "Whether the FLARM is available (TRUE, 1) or not (FALSE, 0).: Units bool: settable true",
      "messagetype": "trigger_onChange_FLARM AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLARM AVAILABLE",
      "displaytitle": "FLARM AVAILABLE (OnRequest)",
      "description": "Whether the FLARM is available (TRUE, 1) or not (FALSE, 0).: Units bool: settable true",
      "messagetype": "trigger_onRequest_FLARM AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLARM THREAT BEARING",
      "displaytitle": "FLARM THREAT BEARING (Poll)",
      "description": "The bearing of the FLARM threat aircraft, relative to track.: Units degrees: settable false",
      "messagetype": "trigger_FLARM THREAT BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLARM THREAT BEARING",
      "displaytitle": "FLARM THREAT BEARING (OnChange)",
      "description": "The bearing of the FLARM threat aircraft, relative to track.: Units degrees: settable false",
      "messagetype": "trigger_onChange_FLARM THREAT BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLARM THREAT BEARING",
      "displaytitle": "FLARM THREAT BEARING (OnRequest)",
      "description": "The bearing of the FLARM threat aircraft, relative to track.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_FLARM THREAT BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLARM THREAT DISTANCE",
      "displaytitle": "FLARM THREAT DISTANCE (Poll)",
      "description": "The distance to the FLARM threat object.: Units meters: settable false",
      "messagetype": "trigger_FLARM THREAT DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLARM THREAT DISTANCE",
      "displaytitle": "FLARM THREAT DISTANCE (OnChange)",
      "description": "The distance to the FLARM threat object.: Units meters: settable false",
      "messagetype": "trigger_onChange_FLARM THREAT DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLARM THREAT DISTANCE",
      "displaytitle": "FLARM THREAT DISTANCE (OnRequest)",
      "description": "The distance to the FLARM threat object.: Units meters: settable false",
      "messagetype": "trigger_onRequest_FLARM THREAT DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLARM THREAT HEADING",
      "displaytitle": "FLARM THREAT HEADING (Poll)",
      "description": "The heading to the FLARM threat object.: Units degrees: settable false",
      "messagetype": "trigger_FLARM THREAT HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLARM THREAT HEADING",
      "displaytitle": "FLARM THREAT HEADING (OnChange)",
      "description": "The heading to the FLARM threat object.: Units degrees: settable false",
      "messagetype": "trigger_onChange_FLARM THREAT HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLARM THREAT HEADING",
      "displaytitle": "FLARM THREAT HEADING (OnRequest)",
      "description": "The heading to the FLARM threat object.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_FLARM THREAT HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLARM THREAT RELATIVE ALTITUDE",
      "displaytitle": "FLARM THREAT RELATIVE ALTITUDE (Poll)",
      "description": "The relative altitude of the threat object.: Units meters: settable false",
      "messagetype": "trigger_FLARM THREAT RELATIVE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLARM THREAT RELATIVE ALTITUDE",
      "displaytitle": "FLARM THREAT RELATIVE ALTITUDE (OnChange)",
      "description": "The relative altitude of the threat object.: Units meters: settable false",
      "messagetype": "trigger_onChange_FLARM THREAT RELATIVE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLARM THREAT RELATIVE ALTITUDE",
      "displaytitle": "FLARM THREAT RELATIVE ALTITUDE (OnRequest)",
      "description": "The relative altitude of the threat object.: Units meters: settable false",
      "messagetype": "trigger_onRequest_FLARM THREAT RELATIVE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLARM THREAT TIME TO COLLISION",
      "displaytitle": "FLARM THREAT TIME TO COLLISION (Poll)",
      "description": "The estimated time to a collision.: Units seconds: settable false",
      "messagetype": "trigger_FLARM THREAT TIME TO COLLISION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLARM THREAT TIME TO COLLISION",
      "displaytitle": "FLARM THREAT TIME TO COLLISION (OnChange)",
      "description": "The estimated time to a collision.: Units seconds: settable false",
      "messagetype": "trigger_onChange_FLARM THREAT TIME TO COLLISION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLARM THREAT TIME TO COLLISION",
      "displaytitle": "FLARM THREAT TIME TO COLLISION (OnRequest)",
      "description": "The estimated time to a collision.: Units seconds: settable false",
      "messagetype": "trigger_onRequest_FLARM THREAT TIME TO COLLISION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLARM THREAT VERTICAL BEARING",
      "displaytitle": "FLARM THREAT VERTICAL BEARING (Poll)",
      "description": "The vertical bearing towards the threat.: Units degrees: settable false",
      "messagetype": "trigger_FLARM THREAT VERTICAL BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLARM THREAT VERTICAL BEARING",
      "displaytitle": "FLARM THREAT VERTICAL BEARING (OnChange)",
      "description": "The vertical bearing towards the threat.: Units degrees: settable false",
      "messagetype": "trigger_onChange_FLARM THREAT VERTICAL BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLARM THREAT VERTICAL BEARING",
      "displaytitle": "FLARM THREAT VERTICAL BEARING (OnRequest)",
      "description": "The vertical bearing towards the threat.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_FLARM THREAT VERTICAL BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT CANCEL DESTINATION",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION (Poll)",
      "description": "When set with any value this will cancel the current flight assistant destination: Units number: settable true",
      "messagetype": "trigger_FLY ASSISTANT CANCEL DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT CANCEL DESTINATION",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION (OnChange)",
      "description": "When set with any value this will cancel the current flight assistant destination: Units number: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT CANCEL DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT CANCEL DESTINATION",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION (OnRequest)",
      "description": "When set with any value this will cancel the current flight assistant destination: Units number: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT CANCEL DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT CANCEL DESTINATION DISPLAY",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION DISPLAY (Poll)",
      "description": "When set with any value this will cancel the display of the current flight assistant destination: Units number: settable true",
      "messagetype": "trigger_FLY ASSISTANT CANCEL DESTINATION DISPLAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT CANCEL DESTINATION DISPLAY",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION DISPLAY (OnChange)",
      "description": "When set with any value this will cancel the display of the current flight assistant destination: Units number: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT CANCEL DESTINATION DISPLAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT CANCEL DESTINATION DISPLAY",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION DISPLAY (OnRequest)",
      "description": "When set with any value this will cancel the display of the current flight assistant destination: Units number: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT CANCEL DESTINATION DISPLAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT COM AI LOCKED",
      "displaytitle": "FLY ASSISTANT COM AI LOCKED (Poll)",
      "description": "Returns true when the copilot AI control is active and therefore COM AI is locked on active too: Units bool: settable false",
      "messagetype": "trigger_FLY ASSISTANT COM AI LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT COM AI LOCKED",
      "displaytitle": "FLY ASSISTANT COM AI LOCKED (OnChange)",
      "description": "Returns true when the copilot AI control is active and therefore COM AI is locked on active too: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY ASSISTANT COM AI LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT COM AI LOCKED",
      "displaytitle": "FLY ASSISTANT COM AI LOCKED (OnRequest)",
      "description": "Returns true when the copilot AI control is active and therefore COM AI is locked on active too: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY ASSISTANT COM AI LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT HAVE DESTINATION",
      "displaytitle": "FLY ASSISTANT HAVE DESTINATION (Poll)",
      "description": "Returns true when a destination has been set in the flight assistant: Units bool: settable false",
      "messagetype": "trigger_FLY ASSISTANT HAVE DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT HAVE DESTINATION",
      "displaytitle": "FLY ASSISTANT HAVE DESTINATION (OnChange)",
      "description": "Returns true when a destination has been set in the flight assistant: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY ASSISTANT HAVE DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT HAVE DESTINATION",
      "displaytitle": "FLY ASSISTANT HAVE DESTINATION (OnRequest)",
      "description": "Returns true when a destination has been set in the flight assistant: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY ASSISTANT HAVE DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT LANDING SPEED",
      "displaytitle": "FLY ASSISTANT LANDING SPEED (Poll)",
      "description": "Returns the POH range or an estimated value for this speed: Units null: settable false",
      "messagetype": "trigger_FLY ASSISTANT LANDING SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT LANDING SPEED",
      "displaytitle": "FLY ASSISTANT LANDING SPEED (OnChange)",
      "description": "Returns the POH range or an estimated value for this speed: Units null: settable false",
      "messagetype": "trigger_onChange_FLY ASSISTANT LANDING SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT LANDING SPEED",
      "displaytitle": "FLY ASSISTANT LANDING SPEED (OnRequest)",
      "description": "Returns the POH range or an estimated value for this speed: Units null: settable false",
      "messagetype": "trigger_onRequest_FLY ASSISTANT LANDING SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT LANDING SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT LANDING SPEED DISPLAY MODE (Poll)",
      "description": "Returns the display mode of the speed, CSS side (only STALL SPEED is working and will turn red when below): Units null: settable false",
      "messagetype": "trigger_FLY ASSISTANT LANDING SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT LANDING SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT LANDING SPEED DISPLAY MODE (OnChange)",
      "description": "Returns the display mode of the speed, CSS side (only STALL SPEED is working and will turn red when below): Units null: settable false",
      "messagetype": "trigger_onChange_FLY ASSISTANT LANDING SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT LANDING SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT LANDING SPEED DISPLAY MODE (OnRequest)",
      "description": "Returns the display mode of the speed, CSS side (only STALL SPEED is working and will turn red when below): Units null: settable false",
      "messagetype": "trigger_onRequest_FLY ASSISTANT LANDING SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT NEAREST CATEGORY",
      "displaytitle": "FLY ASSISTANT NEAREST CATEGORY (Poll)",
      "description": "Selected category: Units enum: settable true",
      "messagetype": "trigger_FLY ASSISTANT NEAREST CATEGORY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT NEAREST CATEGORY",
      "displaytitle": "FLY ASSISTANT NEAREST CATEGORY (OnChange)",
      "description": "Selected category: Units enum: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT NEAREST CATEGORY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT NEAREST CATEGORY",
      "displaytitle": "FLY ASSISTANT NEAREST CATEGORY (OnRequest)",
      "description": "Selected category: Units enum: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT NEAREST CATEGORY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT NEAREST COUNT",
      "displaytitle": "FLY ASSISTANT NEAREST COUNT (Poll)",
      "description": "Number of elements in this category: Units number: settable false",
      "messagetype": "trigger_FLY ASSISTANT NEAREST COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT NEAREST COUNT",
      "displaytitle": "FLY ASSISTANT NEAREST COUNT (OnChange)",
      "description": "Number of elements in this category: Units number: settable false",
      "messagetype": "trigger_onChange_FLY ASSISTANT NEAREST COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT NEAREST COUNT",
      "displaytitle": "FLY ASSISTANT NEAREST COUNT (OnRequest)",
      "description": "Number of elements in this category: Units number: settable false",
      "messagetype": "trigger_onRequest_FLY ASSISTANT NEAREST COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT NEAREST NAME",
      "displaytitle": "FLY ASSISTANT NEAREST NAME (Poll)",
      "description": "Returns the name of the element at the specified index: Units null: settable false",
      "messagetype": "trigger_FLY ASSISTANT NEAREST NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT NEAREST NAME",
      "displaytitle": "FLY ASSISTANT NEAREST NAME (OnChange)",
      "description": "Returns the name of the element at the specified index: Units null: settable false",
      "messagetype": "trigger_onChange_FLY ASSISTANT NEAREST NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT NEAREST NAME",
      "displaytitle": "FLY ASSISTANT NEAREST NAME (OnRequest)",
      "description": "Returns the name of the element at the specified index: Units null: settable false",
      "messagetype": "trigger_onRequest_FLY ASSISTANT NEAREST NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT NEAREST SELECTED",
      "displaytitle": "FLY ASSISTANT NEAREST SELECTED (Poll)",
      "description": "Returns the index of the currently selected element: Units number: settable true",
      "messagetype": "trigger_FLY ASSISTANT NEAREST SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT NEAREST SELECTED",
      "displaytitle": "FLY ASSISTANT NEAREST SELECTED (OnChange)",
      "description": "Returns the index of the currently selected element: Units number: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT NEAREST SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT NEAREST SELECTED",
      "displaytitle": "FLY ASSISTANT NEAREST SELECTED (OnRequest)",
      "description": "Returns the index of the currently selected element: Units number: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT NEAREST SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT RIBBONS ACTIVE",
      "displaytitle": "FLY ASSISTANT RIBBONS ACTIVE (Poll)",
      "description": "Returns true when both ribbon assistances are active (taxi and landing), and can also be used to set them: Units bool: settable true",
      "messagetype": "trigger_FLY ASSISTANT RIBBONS ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT RIBBONS ACTIVE",
      "displaytitle": "FLY ASSISTANT RIBBONS ACTIVE (OnChange)",
      "description": "Returns true when both ribbon assistances are active (taxi and landing), and can also be used to set them: Units bool: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT RIBBONS ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT RIBBONS ACTIVE",
      "displaytitle": "FLY ASSISTANT RIBBONS ACTIVE (OnRequest)",
      "description": "Returns true when both ribbon assistances are active (taxi and landing), and can also be used to set them: Units bool: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT RIBBONS ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT SET AS DESTINATION",
      "displaytitle": "FLY ASSISTANT SET AS DESTINATION (Poll)",
      "description": "When set with any value, it will set the selected element as the current destination: Units number: settable true",
      "messagetype": "trigger_FLY ASSISTANT SET AS DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT SET AS DESTINATION",
      "displaytitle": "FLY ASSISTANT SET AS DESTINATION (OnChange)",
      "description": "When set with any value, it will set the selected element as the current destination: Units number: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT SET AS DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT SET AS DESTINATION",
      "displaytitle": "FLY ASSISTANT SET AS DESTINATION (OnRequest)",
      "description": "When set with any value, it will set the selected element as the current destination: Units number: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT SET AS DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT STALL SPEED",
      "displaytitle": "FLY ASSISTANT STALL SPEED (Poll)",
      "description": "Returns the flight assistant stall speed: Units knots: settable true",
      "messagetype": "trigger_FLY ASSISTANT STALL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT STALL SPEED",
      "displaytitle": "FLY ASSISTANT STALL SPEED (OnChange)",
      "description": "Returns the flight assistant stall speed: Units knots: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT STALL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT STALL SPEED",
      "displaytitle": "FLY ASSISTANT STALL SPEED (OnRequest)",
      "description": "Returns the flight assistant stall speed: Units knots: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT STALL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT STALL SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT STALL SPEED DISPLAY MODE (Poll)",
      "description": "Returns the flight assistant stall speed display mode: Units null: settable false",
      "messagetype": "trigger_FLY ASSISTANT STALL SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT STALL SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT STALL SPEED DISPLAY MODE (OnChange)",
      "description": "Returns the flight assistant stall speed display mode: Units null: settable false",
      "messagetype": "trigger_onChange_FLY ASSISTANT STALL SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT STALL SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT STALL SPEED DISPLAY MODE (OnRequest)",
      "description": "Returns the flight assistant stall speed display mode: Units null: settable false",
      "messagetype": "trigger_onRequest_FLY ASSISTANT STALL SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT TAKEOFF SPEED",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED (Poll)",
      "description": "Returns the flight assistant takeoff speed: Units knots: settable true",
      "messagetype": "trigger_FLY ASSISTANT TAKEOFF SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT TAKEOFF SPEED",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED (OnChange)",
      "description": "Returns the flight assistant takeoff speed: Units knots: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT TAKEOFF SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT TAKEOFF SPEED",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED (OnRequest)",
      "description": "Returns the flight assistant takeoff speed: Units knots: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT TAKEOFF SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE (Poll)",
      "description": "Returns the flight assistant takeoff speed display mode: Units null: settable false",
      "messagetype": "trigger_FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE (OnChange)",
      "description": "Returns the flight assistant takeoff speed display mode: Units null: settable false",
      "messagetype": "trigger_onChange_FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE (OnRequest)",
      "description": "Returns the flight assistant takeoff speed display mode: Units null: settable false",
      "messagetype": "trigger_onRequest_FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT TAKEOFF SPEED ESTIMATED",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED ESTIMATED (Poll)",
      "description": "Can be set to override the estimated takeoff speed: Units knots: settable true",
      "messagetype": "trigger_FLY ASSISTANT TAKEOFF SPEED ESTIMATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY ASSISTANT TAKEOFF SPEED ESTIMATED",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED ESTIMATED (OnChange)",
      "description": "Can be set to override the estimated takeoff speed: Units knots: settable true",
      "messagetype": "trigger_onChange_FLY ASSISTANT TAKEOFF SPEED ESTIMATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY ASSISTANT TAKEOFF SPEED ESTIMATED",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED ESTIMATED (OnRequest)",
      "description": "Can be set to override the estimated takeoff speed: Units knots: settable true",
      "messagetype": "trigger_onRequest_FLY ASSISTANT TAKEOFF SPEED ESTIMATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY BY WIRE ALPHA PROTECTION",
      "displaytitle": "FLY BY WIRE ALPHA PROTECTION (Poll)",
      "description": "Returns true if the fly-by-wire alpha protection is enabled or false otherwise: Units bool: settable false",
      "messagetype": "trigger_FLY BY WIRE ALPHA PROTECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY BY WIRE ALPHA PROTECTION",
      "displaytitle": "FLY BY WIRE ALPHA PROTECTION (OnChange)",
      "description": "Returns true if the fly-by-wire alpha protection is enabled or false otherwise: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY BY WIRE ALPHA PROTECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY BY WIRE ALPHA PROTECTION",
      "displaytitle": "FLY BY WIRE ALPHA PROTECTION (OnRequest)",
      "description": "Returns true if the fly-by-wire alpha protection is enabled or false otherwise: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY BY WIRE ALPHA PROTECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY BY WIRE ELAC FAILED",
      "displaytitle": "FLY BY WIRE ELAC FAILED (Poll)",
      "description": "True if the Elevators and Ailerons computer has failed: Units bool: settable false",
      "messagetype": "trigger_FLY BY WIRE ELAC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY BY WIRE ELAC FAILED",
      "displaytitle": "FLY BY WIRE ELAC FAILED (OnChange)",
      "description": "True if the Elevators and Ailerons computer has failed: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY BY WIRE ELAC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY BY WIRE ELAC FAILED",
      "displaytitle": "FLY BY WIRE ELAC FAILED (OnRequest)",
      "description": "True if the Elevators and Ailerons computer has failed: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY BY WIRE ELAC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY BY WIRE ELAC SWITCH",
      "displaytitle": "FLY BY WIRE ELAC SWITCH (Poll)",
      "description": "True if the fly by wire Elevators and Ailerons computer is on: Units bool: settable false",
      "messagetype": "trigger_FLY BY WIRE ELAC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY BY WIRE ELAC SWITCH",
      "displaytitle": "FLY BY WIRE ELAC SWITCH (OnChange)",
      "description": "True if the fly by wire Elevators and Ailerons computer is on: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY BY WIRE ELAC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY BY WIRE ELAC SWITCH",
      "displaytitle": "FLY BY WIRE ELAC SWITCH (OnRequest)",
      "description": "True if the fly by wire Elevators and Ailerons computer is on: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY BY WIRE ELAC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY BY WIRE FAC FAILED",
      "displaytitle": "FLY BY WIRE FAC FAILED (Poll)",
      "description": "True if the Flight Augmentation computer has failed: Units bool: settable false",
      "messagetype": "trigger_FLY BY WIRE FAC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY BY WIRE FAC FAILED",
      "displaytitle": "FLY BY WIRE FAC FAILED (OnChange)",
      "description": "True if the Flight Augmentation computer has failed: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY BY WIRE FAC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY BY WIRE FAC FAILED",
      "displaytitle": "FLY BY WIRE FAC FAILED (OnRequest)",
      "description": "True if the Flight Augmentation computer has failed: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY BY WIRE FAC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY BY WIRE FAC SWITCH",
      "displaytitle": "FLY BY WIRE FAC SWITCH (Poll)",
      "description": "True if the fly by wire Flight Augmentation computer is on: Units bool: settable false",
      "messagetype": "trigger_FLY BY WIRE FAC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY BY WIRE FAC SWITCH",
      "displaytitle": "FLY BY WIRE FAC SWITCH (OnChange)",
      "description": "True if the fly by wire Flight Augmentation computer is on: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY BY WIRE FAC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY BY WIRE FAC SWITCH",
      "displaytitle": "FLY BY WIRE FAC SWITCH (OnRequest)",
      "description": "True if the fly by wire Flight Augmentation computer is on: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY BY WIRE FAC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY BY WIRE SEC FAILED",
      "displaytitle": "FLY BY WIRE SEC FAILED (Poll)",
      "description": "True if the Spoilers and Elevators computer has failed: Units bool: settable false",
      "messagetype": "trigger_FLY BY WIRE SEC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY BY WIRE SEC FAILED",
      "displaytitle": "FLY BY WIRE SEC FAILED (OnChange)",
      "description": "True if the Spoilers and Elevators computer has failed: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY BY WIRE SEC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY BY WIRE SEC FAILED",
      "displaytitle": "FLY BY WIRE SEC FAILED (OnRequest)",
      "description": "True if the Spoilers and Elevators computer has failed: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY BY WIRE SEC FAILED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY BY WIRE SEC SWITCH",
      "displaytitle": "FLY BY WIRE SEC SWITCH (Poll)",
      "description": "True if the fly by wire Spoilers and Elevators computer is on: Units bool: settable false",
      "messagetype": "trigger_FLY BY WIRE SEC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FLY BY WIRE SEC SWITCH",
      "displaytitle": "FLY BY WIRE SEC SWITCH (OnChange)",
      "description": "True if the fly by wire Spoilers and Elevators computer is on: Units bool: settable false",
      "messagetype": "trigger_onChange_FLY BY WIRE SEC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FLY BY WIRE SEC SWITCH",
      "displaytitle": "FLY BY WIRE SEC SWITCH (OnRequest)",
      "description": "True if the fly by wire Spoilers and Elevators computer is on: Units bool: settable false",
      "messagetype": "trigger_onRequest_FLY BY WIRE SEC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FOLDING WING HANDLE POSITION",
      "displaytitle": "FOLDING WING HANDLE POSITION (Poll)",
      "description": "True if the folding wing handle is engaged: Units bool: settable false",
      "messagetype": "trigger_FOLDING WING HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FOLDING WING HANDLE POSITION",
      "displaytitle": "FOLDING WING HANDLE POSITION (OnChange)",
      "description": "True if the folding wing handle is engaged: Units bool: settable false",
      "messagetype": "trigger_onChange_FOLDING WING HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FOLDING WING HANDLE POSITION",
      "displaytitle": "FOLDING WING HANDLE POSITION (OnRequest)",
      "description": "True if the folding wing handle is engaged: Units bool: settable false",
      "messagetype": "trigger_onRequest_FOLDING WING HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FOLDING WING LEFT PERCENT",
      "displaytitle": "FOLDING WING LEFT PERCENT (Poll)",
      "description": "Left folding wing position, 1.0 is fully folded: Units percent Over 100: settable false",
      "messagetype": "trigger_FOLDING WING LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FOLDING WING LEFT PERCENT",
      "displaytitle": "FOLDING WING LEFT PERCENT (OnChange)",
      "description": "Left folding wing position, 1.0 is fully folded: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_FOLDING WING LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FOLDING WING LEFT PERCENT",
      "displaytitle": "FOLDING WING LEFT PERCENT (OnRequest)",
      "description": "Left folding wing position, 1.0 is fully folded: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_FOLDING WING LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FOLDING WING RIGHT PERCENT",
      "displaytitle": "FOLDING WING RIGHT PERCENT (Poll)",
      "description": "Right folding wing position, 1.0 is fully folded: Units percent Over 100: settable false",
      "messagetype": "trigger_FOLDING WING RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FOLDING WING RIGHT PERCENT",
      "displaytitle": "FOLDING WING RIGHT PERCENT (OnChange)",
      "description": "Right folding wing position, 1.0 is fully folded: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_FOLDING WING RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FOLDING WING RIGHT PERCENT",
      "displaytitle": "FOLDING WING RIGHT PERCENT (OnRequest)",
      "description": "Right folding wing position, 1.0 is fully folded: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_FOLDING WING RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FUELTRUCK HOSE DEPLOYED",
      "displaytitle": "FUELTRUCK HOSE DEPLOYED (Poll)",
      "description": "The current deployment amount of the fuel truck hose. Currently can only be set to 0 (not deployed) and 1 (deployed).: Units percent Over 100: settable false",
      "messagetype": "trigger_FUELTRUCK HOSE DEPLOYED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FUELTRUCK HOSE DEPLOYED",
      "displaytitle": "FUELTRUCK HOSE DEPLOYED (OnChange)",
      "description": "The current deployment amount of the fuel truck hose. Currently can only be set to 0 (not deployed) and 1 (deployed).: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_FUELTRUCK HOSE DEPLOYED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FUELTRUCK HOSE DEPLOYED",
      "displaytitle": "FUELTRUCK HOSE DEPLOYED (OnRequest)",
      "description": "The current deployment amount of the fuel truck hose. Currently can only be set to 0 (not deployed) and 1 (deployed).: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_FUELTRUCK HOSE DEPLOYED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FUELTRUCK HOSE END POSX",
      "displaytitle": "FUELTRUCK HOSE END POSX (Poll)",
      "description": "The \"X\" axis position of the end of the fuel truck hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_FUELTRUCK HOSE END POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FUELTRUCK HOSE END POSX",
      "displaytitle": "FUELTRUCK HOSE END POSX (OnChange)",
      "description": "The \"X\" axis position of the end of the fuel truck hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_FUELTRUCK HOSE END POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FUELTRUCK HOSE END POSX",
      "displaytitle": "FUELTRUCK HOSE END POSX (OnRequest)",
      "description": "The \"X\" axis position of the end of the fuel truck hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_FUELTRUCK HOSE END POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FUELTRUCK HOSE END POSZ",
      "displaytitle": "FUELTRUCK HOSE END POSZ (Poll)",
      "description": "The \"Z\" axis position of the end of the fuel truck hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_FUELTRUCK HOSE END POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FUELTRUCK HOSE END POSZ",
      "displaytitle": "FUELTRUCK HOSE END POSZ (OnChange)",
      "description": "The \"Z\" axis position of the end of the fuel truck hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_FUELTRUCK HOSE END POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FUELTRUCK HOSE END POSZ",
      "displaytitle": "FUELTRUCK HOSE END POSZ (OnRequest)",
      "description": "The \"Z\" axis position of the end of the fuel truck hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_FUELTRUCK HOSE END POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FUELTRUCK HOSE END RELATIVE HEADING",
      "displaytitle": "FUELTRUCK HOSE END RELATIVE HEADING (Poll)",
      "description": "The heading of the end of the fuel truck hose, relative to the vehicle heading.: Units degrees: settable false",
      "messagetype": "trigger_FUELTRUCK HOSE END RELATIVE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FUELTRUCK HOSE END RELATIVE HEADING",
      "displaytitle": "FUELTRUCK HOSE END RELATIVE HEADING (OnChange)",
      "description": "The heading of the end of the fuel truck hose, relative to the vehicle heading.: Units degrees: settable false",
      "messagetype": "trigger_onChange_FUELTRUCK HOSE END RELATIVE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FUELTRUCK HOSE END RELATIVE HEADING",
      "displaytitle": "FUELTRUCK HOSE END RELATIVE HEADING (OnRequest)",
      "description": "The heading of the end of the fuel truck hose, relative to the vehicle heading.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_FUELTRUCK HOSE END RELATIVE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FULL THROTTLE THRUST TO WEIGHT RATIO",
      "displaytitle": "FULL THROTTLE THRUST TO WEIGHT RATIO (Poll)",
      "description": "Full throttle thrust to weight ratio: Units number: settable false",
      "messagetype": "trigger_FULL THROTTLE THRUST TO WEIGHT RATIO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_FULL THROTTLE THRUST TO WEIGHT RATIO",
      "displaytitle": "FULL THROTTLE THRUST TO WEIGHT RATIO (OnChange)",
      "description": "Full throttle thrust to weight ratio: Units number: settable false",
      "messagetype": "trigger_onChange_FULL THROTTLE THRUST TO WEIGHT RATIO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_FULL THROTTLE THRUST TO WEIGHT RATIO",
      "displaytitle": "FULL THROTTLE THRUST TO WEIGHT RATIO (OnRequest)",
      "description": "Full throttle thrust to weight ratio: Units number: settable false",
      "messagetype": "trigger_onRequest_FULL THROTTLE THRUST TO WEIGHT RATIO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "G FORCE",
      "displaytitle": "G FORCE (Poll)",
      "description": "Current g force: Units gforce: settable true",
      "messagetype": "trigger_G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_G FORCE",
      "displaytitle": "G FORCE (OnChange)",
      "description": "Current g force: Units gforce: settable true",
      "messagetype": "trigger_onChange_G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_G FORCE",
      "displaytitle": "G FORCE (OnRequest)",
      "description": "Current g force: Units gforce: settable true",
      "messagetype": "trigger_onRequest_G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "G LIMITER SETTING",
      "displaytitle": "G LIMITER SETTING (Poll)",
      "description": "This returns the setting of the G-limiter, as set using the GLimiterSetting parameter: Units enum: settable false",
      "messagetype": "trigger_G LIMITER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_G LIMITER SETTING",
      "displaytitle": "G LIMITER SETTING (OnChange)",
      "description": "This returns the setting of the G-limiter, as set using the GLimiterSetting parameter: Units enum: settable false",
      "messagetype": "trigger_onChange_G LIMITER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_G LIMITER SETTING",
      "displaytitle": "G LIMITER SETTING (OnRequest)",
      "description": "This returns the setting of the G-limiter, as set using the GLimiterSetting parameter: Units enum: settable false",
      "messagetype": "trigger_onRequest_G LIMITER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GAMEPLAY CAMERA FOCUS",
      "displaytitle": "GAMEPLAY CAMERA FOCUS (Poll)",
      "description": "This gets/sets the focus for the camera zoom, which can be either manual, or auto. The setting affects both the Cockpit and the External (Chase) cameras.: Units enum: settable true",
      "messagetype": "trigger_GAMEPLAY CAMERA FOCUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GAMEPLAY CAMERA FOCUS",
      "displaytitle": "GAMEPLAY CAMERA FOCUS (OnChange)",
      "description": "This gets/sets the focus for the camera zoom, which can be either manual, or auto. The setting affects both the Cockpit and the External (Chase) cameras.: Units enum: settable true",
      "messagetype": "trigger_onChange_GAMEPLAY CAMERA FOCUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GAMEPLAY CAMERA FOCUS",
      "displaytitle": "GAMEPLAY CAMERA FOCUS (OnRequest)",
      "description": "This gets/sets the focus for the camera zoom, which can be either manual, or auto. The setting affects both the Cockpit and the External (Chase) cameras.: Units enum: settable true",
      "messagetype": "trigger_onRequest_GAMEPLAY CAMERA FOCUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR ANIMATION POSITION:index",
      "displaytitle": "GEAR ANIMATION POSITION:index (Poll)",
      "description": "Percent indexed gear animation extended: Units percent: settable false",
      "messagetype": "trigger_GEAR ANIMATION POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR ANIMATION POSITION:index",
      "displaytitle": "GEAR ANIMATION POSITION:index (OnChange)",
      "description": "Percent indexed gear animation extended: Units percent: settable false",
      "messagetype": "trigger_onChange_GEAR ANIMATION POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR ANIMATION POSITION:index",
      "displaytitle": "GEAR ANIMATION POSITION:index (OnRequest)",
      "description": "Percent indexed gear animation extended: Units percent: settable false",
      "messagetype": "trigger_onRequest_GEAR ANIMATION POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GEAR AUX POSITION",
      "displaytitle": "GEAR AUX POSITION (Poll)",
      "description": "Percent auxiliary gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_GEAR AUX POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR AUX POSITION",
      "displaytitle": "GEAR AUX POSITION (OnChange)",
      "description": "Percent auxiliary gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_GEAR AUX POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR AUX POSITION",
      "displaytitle": "GEAR AUX POSITION (OnRequest)",
      "description": "Percent auxiliary gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_GEAR AUX POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR AUX STEER ANGLE",
      "displaytitle": "GEAR AUX STEER ANGLE (Poll)",
      "description": "Aux wheel angle, negative to the left, positive to the right. The aux wheel is the fourth set of landing gear, sometimes used on helicopters: Units radians: settable false",
      "messagetype": "trigger_GEAR AUX STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR AUX STEER ANGLE",
      "displaytitle": "GEAR AUX STEER ANGLE (OnChange)",
      "description": "Aux wheel angle, negative to the left, positive to the right. The aux wheel is the fourth set of landing gear, sometimes used on helicopters: Units radians: settable false",
      "messagetype": "trigger_onChange_GEAR AUX STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR AUX STEER ANGLE",
      "displaytitle": "GEAR AUX STEER ANGLE (OnRequest)",
      "description": "Aux wheel angle, negative to the left, positive to the right. The aux wheel is the fourth set of landing gear, sometimes used on helicopters: Units radians: settable false",
      "messagetype": "trigger_onRequest_GEAR AUX STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR AUX STEER ANGLE PCT",
      "displaytitle": "GEAR AUX STEER ANGLE PCT (Poll)",
      "description": "Aux steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_GEAR AUX STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR AUX STEER ANGLE PCT",
      "displaytitle": "GEAR AUX STEER ANGLE PCT (OnChange)",
      "description": "Aux steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_GEAR AUX STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR AUX STEER ANGLE PCT",
      "displaytitle": "GEAR AUX STEER ANGLE PCT (OnRequest)",
      "description": "Aux steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_GEAR AUX STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR CENTER POSITION",
      "displaytitle": "GEAR CENTER POSITION (Poll)",
      "description": "Percent center gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_GEAR CENTER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR CENTER POSITION",
      "displaytitle": "GEAR CENTER POSITION (OnChange)",
      "description": "Percent center gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_GEAR CENTER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR CENTER POSITION",
      "displaytitle": "GEAR CENTER POSITION (OnRequest)",
      "description": "Percent center gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_GEAR CENTER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR CENTER STEER ANGLE",
      "displaytitle": "GEAR CENTER STEER ANGLE (Poll)",
      "description": "Center wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_GEAR CENTER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR CENTER STEER ANGLE",
      "displaytitle": "GEAR CENTER STEER ANGLE (OnChange)",
      "description": "Center wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_onChange_GEAR CENTER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR CENTER STEER ANGLE",
      "displaytitle": "GEAR CENTER STEER ANGLE (OnRequest)",
      "description": "Center wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_onRequest_GEAR CENTER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR CENTER STEER ANGLE PCT",
      "displaytitle": "GEAR CENTER STEER ANGLE PCT (Poll)",
      "description": "Center steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_GEAR CENTER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR CENTER STEER ANGLE PCT",
      "displaytitle": "GEAR CENTER STEER ANGLE PCT (OnChange)",
      "description": "Center steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_GEAR CENTER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR CENTER STEER ANGLE PCT",
      "displaytitle": "GEAR CENTER STEER ANGLE PCT (OnRequest)",
      "description": "Center steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_GEAR CENTER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR DAMAGE BY SPEED",
      "displaytitle": "GEAR DAMAGE BY SPEED (Poll)",
      "description": "True if gear has been damaged by excessive speed: Units bool: settable false",
      "messagetype": "trigger_GEAR DAMAGE BY SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR DAMAGE BY SPEED",
      "displaytitle": "GEAR DAMAGE BY SPEED (OnChange)",
      "description": "True if gear has been damaged by excessive speed: Units bool: settable false",
      "messagetype": "trigger_onChange_GEAR DAMAGE BY SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR DAMAGE BY SPEED",
      "displaytitle": "GEAR DAMAGE BY SPEED (OnRequest)",
      "description": "True if gear has been damaged by excessive speed: Units bool: settable false",
      "messagetype": "trigger_onRequest_GEAR DAMAGE BY SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR EMERGENCY HANDLE POSITION",
      "displaytitle": "GEAR EMERGENCY HANDLE POSITION (Poll)",
      "description": "True if gear emergency handle applied: Units bool: settable false",
      "messagetype": "trigger_GEAR EMERGENCY HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR EMERGENCY HANDLE POSITION",
      "displaytitle": "GEAR EMERGENCY HANDLE POSITION (OnChange)",
      "description": "True if gear emergency handle applied: Units bool: settable false",
      "messagetype": "trigger_onChange_GEAR EMERGENCY HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR EMERGENCY HANDLE POSITION",
      "displaytitle": "GEAR EMERGENCY HANDLE POSITION (OnRequest)",
      "description": "True if gear emergency handle applied: Units bool: settable false",
      "messagetype": "trigger_onRequest_GEAR EMERGENCY HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR HANDLE POSITION",
      "displaytitle": "GEAR HANDLE POSITION (Poll)",
      "description": "The gear handle position, where 0 means the handle is retracted and 1 is the handle fully applied: Units percent Over 100: settable true",
      "messagetype": "trigger_GEAR HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR HANDLE POSITION",
      "displaytitle": "GEAR HANDLE POSITION (OnChange)",
      "description": "The gear handle position, where 0 means the handle is retracted and 1 is the handle fully applied: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_GEAR HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR HANDLE POSITION",
      "displaytitle": "GEAR HANDLE POSITION (OnRequest)",
      "description": "The gear handle position, where 0 means the handle is retracted and 1 is the handle fully applied: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_GEAR HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR HYDRAULIC PRESSURE",
      "displaytitle": "GEAR HYDRAULIC PRESSURE (Poll)",
      "description": "Gear hydraulic pressure: Units pounds: settable false",
      "messagetype": "trigger_GEAR HYDRAULIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR HYDRAULIC PRESSURE",
      "displaytitle": "GEAR HYDRAULIC PRESSURE (OnChange)",
      "description": "Gear hydraulic pressure: Units pounds: settable false",
      "messagetype": "trigger_onChange_GEAR HYDRAULIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR HYDRAULIC PRESSURE",
      "displaytitle": "GEAR HYDRAULIC PRESSURE (OnRequest)",
      "description": "Gear hydraulic pressure: Units pounds: settable false",
      "messagetype": "trigger_onRequest_GEAR HYDRAULIC PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR IS ON GROUND:index",
      "displaytitle": "GEAR IS ON GROUND:index (Poll)",
      "description": "True if the gear is on the ground: Units bool: settable false",
      "messagetype": "trigger_GEAR IS ON GROUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR IS ON GROUND:index",
      "displaytitle": "GEAR IS ON GROUND:index (OnChange)",
      "description": "True if the gear is on the ground: Units bool: settable false",
      "messagetype": "trigger_onChange_GEAR IS ON GROUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR IS ON GROUND:index",
      "displaytitle": "GEAR IS ON GROUND:index (OnRequest)",
      "description": "True if the gear is on the ground: Units bool: settable false",
      "messagetype": "trigger_onRequest_GEAR IS ON GROUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GEAR IS SKIDDING:index",
      "displaytitle": "GEAR IS SKIDDING:index (Poll)",
      "description": "True if the gear is skidding: Units bool: settable false",
      "messagetype": "trigger_GEAR IS SKIDDING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR IS SKIDDING:index",
      "displaytitle": "GEAR IS SKIDDING:index (OnChange)",
      "description": "True if the gear is skidding: Units bool: settable false",
      "messagetype": "trigger_onChange_GEAR IS SKIDDING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR IS SKIDDING:index",
      "displaytitle": "GEAR IS SKIDDING:index (OnRequest)",
      "description": "True if the gear is skidding: Units bool: settable false",
      "messagetype": "trigger_onRequest_GEAR IS SKIDDING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GEAR LEFT POSITION",
      "displaytitle": "GEAR LEFT POSITION (Poll)",
      "description": "Percent left gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_GEAR LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR LEFT POSITION",
      "displaytitle": "GEAR LEFT POSITION (OnChange)",
      "description": "Percent left gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_GEAR LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR LEFT POSITION",
      "displaytitle": "GEAR LEFT POSITION (OnRequest)",
      "description": "Percent left gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_GEAR LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR LEFT STEER ANGLE",
      "displaytitle": "GEAR LEFT STEER ANGLE (Poll)",
      "description": "Left wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_GEAR LEFT STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR LEFT STEER ANGLE",
      "displaytitle": "GEAR LEFT STEER ANGLE (OnChange)",
      "description": "Left wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_onChange_GEAR LEFT STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR LEFT STEER ANGLE",
      "displaytitle": "GEAR LEFT STEER ANGLE (OnRequest)",
      "description": "Left wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_onRequest_GEAR LEFT STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR LEFT STEER ANGLE PCT",
      "displaytitle": "GEAR LEFT STEER ANGLE PCT (Poll)",
      "description": "Left steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_GEAR LEFT STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR LEFT STEER ANGLE PCT",
      "displaytitle": "GEAR LEFT STEER ANGLE PCT (OnChange)",
      "description": "Left steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_GEAR LEFT STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR LEFT STEER ANGLE PCT",
      "displaytitle": "GEAR LEFT STEER ANGLE PCT (OnRequest)",
      "description": "Left steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_GEAR LEFT STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR POSITION:index",
      "displaytitle": "GEAR POSITION:index (Poll)",
      "description": "Position of landing gear: Units enum: settable true",
      "messagetype": "trigger_GEAR POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR POSITION:index",
      "displaytitle": "GEAR POSITION:index (OnChange)",
      "description": "Position of landing gear: Units enum: settable true",
      "messagetype": "trigger_onChange_GEAR POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR POSITION:index",
      "displaytitle": "GEAR POSITION:index (OnRequest)",
      "description": "Position of landing gear: Units enum: settable true",
      "messagetype": "trigger_onRequest_GEAR POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GEAR RIGHT POSITION",
      "displaytitle": "GEAR RIGHT POSITION (Poll)",
      "description": "Percent right gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_GEAR RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR RIGHT POSITION",
      "displaytitle": "GEAR RIGHT POSITION (OnChange)",
      "description": "Percent right gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_GEAR RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR RIGHT POSITION",
      "displaytitle": "GEAR RIGHT POSITION (OnRequest)",
      "description": "Percent right gear extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_GEAR RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR RIGHT STEER ANGLE",
      "displaytitle": "GEAR RIGHT STEER ANGLE (Poll)",
      "description": "Right wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_GEAR RIGHT STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR RIGHT STEER ANGLE",
      "displaytitle": "GEAR RIGHT STEER ANGLE (OnChange)",
      "description": "Right wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_onChange_GEAR RIGHT STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR RIGHT STEER ANGLE",
      "displaytitle": "GEAR RIGHT STEER ANGLE (OnRequest)",
      "description": "Right wheel angle, negative to the left, positive to the right: Units radians: settable false",
      "messagetype": "trigger_onRequest_GEAR RIGHT STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR RIGHT STEER ANGLE PCT",
      "displaytitle": "GEAR RIGHT STEER ANGLE PCT (Poll)",
      "description": "Right steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_GEAR RIGHT STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR RIGHT STEER ANGLE PCT",
      "displaytitle": "GEAR RIGHT STEER ANGLE PCT (OnChange)",
      "description": "Right steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_GEAR RIGHT STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR RIGHT STEER ANGLE PCT",
      "displaytitle": "GEAR RIGHT STEER ANGLE PCT (OnRequest)",
      "description": "Right steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_GEAR RIGHT STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR SPEED EXCEEDED",
      "displaytitle": "GEAR SPEED EXCEEDED (Poll)",
      "description": "True if safe speed limit for gear exceeded: Units bool: settable false",
      "messagetype": "trigger_GEAR SPEED EXCEEDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR SPEED EXCEEDED",
      "displaytitle": "GEAR SPEED EXCEEDED (OnChange)",
      "description": "True if safe speed limit for gear exceeded: Units bool: settable false",
      "messagetype": "trigger_onChange_GEAR SPEED EXCEEDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR SPEED EXCEEDED",
      "displaytitle": "GEAR SPEED EXCEEDED (OnRequest)",
      "description": "True if safe speed limit for gear exceeded: Units bool: settable false",
      "messagetype": "trigger_onRequest_GEAR SPEED EXCEEDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR STEER ANGLE PCT:index",
      "displaytitle": "GEAR STEER ANGLE PCT:index (Poll)",
      "description": "Alternative method of getting steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_GEAR STEER ANGLE PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR STEER ANGLE PCT:index",
      "displaytitle": "GEAR STEER ANGLE PCT:index (OnChange)",
      "description": "Alternative method of getting steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_GEAR STEER ANGLE PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR STEER ANGLE PCT:index",
      "displaytitle": "GEAR STEER ANGLE PCT:index (OnRequest)",
      "description": "Alternative method of getting steer angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_GEAR STEER ANGLE PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GEAR STEER ANGLE:index",
      "displaytitle": "GEAR STEER ANGLE:index (Poll)",
      "description": "Alternative method of getting the steer angle: Units radians: settable false",
      "messagetype": "trigger_GEAR STEER ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR STEER ANGLE:index",
      "displaytitle": "GEAR STEER ANGLE:index (OnChange)",
      "description": "Alternative method of getting the steer angle: Units radians: settable false",
      "messagetype": "trigger_onChange_GEAR STEER ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR STEER ANGLE:index",
      "displaytitle": "GEAR STEER ANGLE:index (OnRequest)",
      "description": "Alternative method of getting the steer angle: Units radians: settable false",
      "messagetype": "trigger_onRequest_GEAR STEER ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GEAR TOTAL PCT EXTENDED",
      "displaytitle": "GEAR TOTAL PCT EXTENDED (Poll)",
      "description": "Percent total gear extended: Units percent: settable false",
      "messagetype": "trigger_GEAR TOTAL PCT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR TOTAL PCT EXTENDED",
      "displaytitle": "GEAR TOTAL PCT EXTENDED (OnChange)",
      "description": "Percent total gear extended: Units percent: settable false",
      "messagetype": "trigger_onChange_GEAR TOTAL PCT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR TOTAL PCT EXTENDED",
      "displaytitle": "GEAR TOTAL PCT EXTENDED (OnRequest)",
      "description": "Percent total gear extended: Units percent: settable false",
      "messagetype": "trigger_onRequest_GEAR TOTAL PCT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR WARNING:index",
      "displaytitle": "GEAR WARNING:index (Poll)",
      "description": "Gear warnings: Units enum: settable false",
      "messagetype": "trigger_GEAR WARNING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR WARNING:index",
      "displaytitle": "GEAR WARNING:index (OnChange)",
      "description": "Gear warnings: Units enum: settable false",
      "messagetype": "trigger_onChange_GEAR WARNING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR WARNING:index",
      "displaytitle": "GEAR WARNING:index (OnRequest)",
      "description": "Gear warnings: Units enum: settable false",
      "messagetype": "trigger_onRequest_GEAR WARNING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GEAR WATER DEPTH",
      "displaytitle": "GEAR WATER DEPTH (Poll)",
      "description": "The depth of the gear in the water: Units centimeters: settable false",
      "messagetype": "trigger_GEAR WATER DEPTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GEAR WATER DEPTH",
      "displaytitle": "GEAR WATER DEPTH (OnChange)",
      "description": "The depth of the gear in the water: Units centimeters: settable false",
      "messagetype": "trigger_onChange_GEAR WATER DEPTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GEAR WATER DEPTH",
      "displaytitle": "GEAR WATER DEPTH (OnRequest)",
      "description": "The depth of the gear in the water: Units centimeters: settable false",
      "messagetype": "trigger_onRequest_GEAR WATER DEPTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG ANTI ICE POSITION:index",
      "displaytitle": "GENERAL ENG ANTI ICE POSITION:index (Poll)",
      "description": "The indexed engine anti-ice switch state: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG ANTI ICE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG ANTI ICE POSITION:index",
      "displaytitle": "GENERAL ENG ANTI ICE POSITION:index (OnChange)",
      "description": "The indexed engine anti-ice switch state: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG ANTI ICE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG ANTI ICE POSITION:index",
      "displaytitle": "GENERAL ENG ANTI ICE POSITION:index (OnRequest)",
      "description": "The indexed engine anti-ice switch state: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG ANTI ICE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG COMBUSTION EX1:index",
      "displaytitle": "GENERAL ENG COMBUSTION EX1:index (Poll)",
      "description": "This SimVar is similar to GENERAL ENG COMBUSTION, in that it can also be used to enable or disable engine combustion. However this SimVar will not interfere with the current state of ths simulation. For example, if the aircraft has a turbine engine with auto_ignition enabled or it's a propeller engine with magnetos, then in the subsequent simulation frames this SimVar may be set to 1 (TRUE) again as the engine restarts automatically: Units bool: settable true",
      "messagetype": "trigger_GENERAL ENG COMBUSTION EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG COMBUSTION EX1:index",
      "displaytitle": "GENERAL ENG COMBUSTION EX1:index (OnChange)",
      "description": "This SimVar is similar to GENERAL ENG COMBUSTION, in that it can also be used to enable or disable engine combustion. However this SimVar will not interfere with the current state of ths simulation. For example, if the aircraft has a turbine engine with auto_ignition enabled or it's a propeller engine with magnetos, then in the subsequent simulation frames this SimVar may be set to 1 (TRUE) again as the engine restarts automatically: Units bool: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG COMBUSTION EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG COMBUSTION EX1:index",
      "displaytitle": "GENERAL ENG COMBUSTION EX1:index (OnRequest)",
      "description": "This SimVar is similar to GENERAL ENG COMBUSTION, in that it can also be used to enable or disable engine combustion. However this SimVar will not interfere with the current state of ths simulation. For example, if the aircraft has a turbine engine with auto_ignition enabled or it's a propeller engine with magnetos, then in the subsequent simulation frames this SimVar may be set to 1 (TRUE) again as the engine restarts automatically: Units bool: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG COMBUSTION EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG COMBUSTION SOUND PERCENT:index",
      "displaytitle": "GENERAL ENG COMBUSTION SOUND PERCENT:index (Poll)",
      "description": "Percent of maximum sound being created by the indexed engine: Units percent: settable false",
      "messagetype": "trigger_GENERAL ENG COMBUSTION SOUND PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG COMBUSTION SOUND PERCENT:index",
      "displaytitle": "GENERAL ENG COMBUSTION SOUND PERCENT:index (OnChange)",
      "description": "Percent of maximum sound being created by the indexed engine: Units percent: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG COMBUSTION SOUND PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG COMBUSTION SOUND PERCENT:index",
      "displaytitle": "GENERAL ENG COMBUSTION SOUND PERCENT:index (OnRequest)",
      "description": "Percent of maximum sound being created by the indexed engine: Units percent: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG COMBUSTION SOUND PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG COMBUSTION:index",
      "displaytitle": "GENERAL ENG COMBUSTION:index (Poll)",
      "description": "Set the indexed engine combustion flag to TRUE or FALSE. Note that this will not only stop all combustion, but it will also set the engine RPM to 0, regardless of the actual state of the simulation: Units bool: settable true",
      "messagetype": "trigger_GENERAL ENG COMBUSTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG COMBUSTION:index",
      "displaytitle": "GENERAL ENG COMBUSTION:index (OnChange)",
      "description": "Set the indexed engine combustion flag to TRUE or FALSE. Note that this will not only stop all combustion, but it will also set the engine RPM to 0, regardless of the actual state of the simulation: Units bool: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG COMBUSTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG COMBUSTION:index",
      "displaytitle": "GENERAL ENG COMBUSTION:index (OnRequest)",
      "description": "Set the indexed engine combustion flag to TRUE or FALSE. Note that this will not only stop all combustion, but it will also set the engine RPM to 0, regardless of the actual state of the simulation: Units bool: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG COMBUSTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG DAMAGE PERCENT:index",
      "displaytitle": "GENERAL ENG DAMAGE PERCENT:index (Poll)",
      "description": "Percent of total damage to the indexed engine: Units percent: settable false",
      "messagetype": "trigger_GENERAL ENG DAMAGE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG DAMAGE PERCENT:index",
      "displaytitle": "GENERAL ENG DAMAGE PERCENT:index (OnChange)",
      "description": "Percent of total damage to the indexed engine: Units percent: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG DAMAGE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG DAMAGE PERCENT:index",
      "displaytitle": "GENERAL ENG DAMAGE PERCENT:index (OnRequest)",
      "description": "Percent of total damage to the indexed engine: Units percent: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG DAMAGE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG ELAPSED TIME:index",
      "displaytitle": "GENERAL ENG ELAPSED TIME:index (Poll)",
      "description": "Total elapsed time since the indexed engine was started: Units hours: settable false",
      "messagetype": "trigger_GENERAL ENG ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG ELAPSED TIME:index",
      "displaytitle": "GENERAL ENG ELAPSED TIME:index (OnChange)",
      "description": "Total elapsed time since the indexed engine was started: Units hours: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG ELAPSED TIME:index",
      "displaytitle": "GENERAL ENG ELAPSED TIME:index (OnRequest)",
      "description": "Total elapsed time since the indexed engine was started: Units hours: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG EXHAUST GAS TEMPERATURE:index",
      "displaytitle": "GENERAL ENG EXHAUST GAS TEMPERATURE:index (Poll)",
      "description": "The indexed engine exhaust gas temperature: Units rankine: settable true",
      "messagetype": "trigger_GENERAL ENG EXHAUST GAS TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG EXHAUST GAS TEMPERATURE:index",
      "displaytitle": "GENERAL ENG EXHAUST GAS TEMPERATURE:index (OnChange)",
      "description": "The indexed engine exhaust gas temperature: Units rankine: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG EXHAUST GAS TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG EXHAUST GAS TEMPERATURE:index",
      "displaytitle": "GENERAL ENG EXHAUST GAS TEMPERATURE:index (OnRequest)",
      "description": "The indexed engine exhaust gas temperature: Units rankine: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG EXHAUST GAS TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FAILED:index",
      "displaytitle": "GENERAL ENG FAILED:index (Poll)",
      "description": "The indexed engine fail flag: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG FAILED:index",
      "displaytitle": "GENERAL ENG FAILED:index (OnChange)",
      "description": "The indexed engine fail flag: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG FAILED:index",
      "displaytitle": "GENERAL ENG FAILED:index (OnRequest)",
      "description": "The indexed engine fail flag: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FIRE DETECTED:index",
      "displaytitle": "GENERAL ENG FIRE DETECTED:index (Poll)",
      "description": "Detects if a fire has been detected in an indexed engine or not. If 0 (FALSE) no fire has been detected and if 1 (TRUE) then it has: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG FIRE DETECTED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG FIRE DETECTED:index",
      "displaytitle": "GENERAL ENG FIRE DETECTED:index (OnChange)",
      "description": "Detects if a fire has been detected in an indexed engine or not. If 0 (FALSE) no fire has been detected and if 1 (TRUE) then it has: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG FIRE DETECTED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG FIRE DETECTED:index",
      "displaytitle": "GENERAL ENG FIRE DETECTED:index (OnRequest)",
      "description": "Detects if a fire has been detected in an indexed engine or not. If 0 (FALSE) no fire has been detected and if 1 (TRUE) then it has: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG FIRE DETECTED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FUEL PRESSURE:index",
      "displaytitle": "GENERAL ENG FUEL PRESSURE:index (Poll)",
      "description": "The indexed engine fuel pressure: Units pounds: settable true",
      "messagetype": "trigger_GENERAL ENG FUEL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG FUEL PRESSURE:index",
      "displaytitle": "GENERAL ENG FUEL PRESSURE:index (OnChange)",
      "description": "The indexed engine fuel pressure: Units pounds: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG FUEL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG FUEL PRESSURE:index",
      "displaytitle": "GENERAL ENG FUEL PRESSURE:index (OnRequest)",
      "description": "The indexed engine fuel pressure: Units pounds: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG FUEL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FUEL PUMP ON:index",
      "displaytitle": "GENERAL ENG FUEL PUMP ON:index (Poll)",
      "description": "Whether the indexed engine fuel pump on (1, TRUE) or off (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG FUEL PUMP ON:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG FUEL PUMP ON:index",
      "displaytitle": "GENERAL ENG FUEL PUMP ON:index (OnChange)",
      "description": "Whether the indexed engine fuel pump on (1, TRUE) or off (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG FUEL PUMP ON:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG FUEL PUMP ON:index",
      "displaytitle": "GENERAL ENG FUEL PUMP ON:index (OnRequest)",
      "description": "Whether the indexed engine fuel pump on (1, TRUE) or off (0, FALSE): Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG FUEL PUMP ON:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FUEL PUMP SWITCH EX1:index",
      "displaytitle": "GENERAL ENG FUEL PUMP SWITCH EX1:index (Poll)",
      "description": "Equivalent to GENERAL ENG FUEL PUMP SWITCH but differentiates between ON and AUTO: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG FUEL PUMP SWITCH EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG FUEL PUMP SWITCH EX1:index",
      "displaytitle": "GENERAL ENG FUEL PUMP SWITCH EX1:index (OnChange)",
      "description": "Equivalent to GENERAL ENG FUEL PUMP SWITCH but differentiates between ON and AUTO: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG FUEL PUMP SWITCH EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG FUEL PUMP SWITCH EX1:index",
      "displaytitle": "GENERAL ENG FUEL PUMP SWITCH EX1:index (OnRequest)",
      "description": "Equivalent to GENERAL ENG FUEL PUMP SWITCH but differentiates between ON and AUTO: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG FUEL PUMP SWITCH EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FUEL PUMP SWITCH:index",
      "displaytitle": "GENERAL ENG FUEL PUMP SWITCH:index (Poll)",
      "description": "Fuel pump switch state the indexed engine. If 0 (FALSE) the pump is off and if 1 (TRUE) then it is on: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG FUEL PUMP SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG FUEL PUMP SWITCH:index",
      "displaytitle": "GENERAL ENG FUEL PUMP SWITCH:index (OnChange)",
      "description": "Fuel pump switch state the indexed engine. If 0 (FALSE) the pump is off and if 1 (TRUE) then it is on: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG FUEL PUMP SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG FUEL PUMP SWITCH:index",
      "displaytitle": "GENERAL ENG FUEL PUMP SWITCH:index (OnRequest)",
      "description": "Fuel pump switch state the indexed engine. If 0 (FALSE) the pump is off and if 1 (TRUE) then it is on: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG FUEL PUMP SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FUEL USED SINCE START:index",
      "displaytitle": "GENERAL ENG FUEL USED SINCE START:index (Poll)",
      "description": "Fuel used since the indexed engine was last started: Units pounds: settable false",
      "messagetype": "trigger_GENERAL ENG FUEL USED SINCE START:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG FUEL USED SINCE START:index",
      "displaytitle": "GENERAL ENG FUEL USED SINCE START:index (OnChange)",
      "description": "Fuel used since the indexed engine was last started: Units pounds: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG FUEL USED SINCE START:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG FUEL USED SINCE START:index",
      "displaytitle": "GENERAL ENG FUEL USED SINCE START:index (OnRequest)",
      "description": "Fuel used since the indexed engine was last started: Units pounds: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG FUEL USED SINCE START:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FUEL VALVE:index",
      "displaytitle": "GENERAL ENG FUEL VALVE:index (Poll)",
      "description": "Fuel valve state for the indexed engine. If 0 (FALSE) then the valve is closed and if 1 (TRUE) then it is open: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG FUEL VALVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG FUEL VALVE:index",
      "displaytitle": "GENERAL ENG FUEL VALVE:index (OnChange)",
      "description": "Fuel valve state for the indexed engine. If 0 (FALSE) then the valve is closed and if 1 (TRUE) then it is open: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG FUEL VALVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG FUEL VALVE:index",
      "displaytitle": "GENERAL ENG FUEL VALVE:index (OnRequest)",
      "description": "Fuel valve state for the indexed engine. If 0 (FALSE) then the valve is closed and if 1 (TRUE) then it is open: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG FUEL VALVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG GENERATOR ACTIVE:index",
      "displaytitle": "GENERAL ENG GENERATOR ACTIVE:index (Poll)",
      "description": "Settable alternator (generator) on/off switch for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_GENERAL ENG GENERATOR ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG GENERATOR ACTIVE:index",
      "displaytitle": "GENERAL ENG GENERATOR ACTIVE:index (OnChange)",
      "description": "Settable alternator (generator) on/off switch for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG GENERATOR ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG GENERATOR ACTIVE:index",
      "displaytitle": "GENERAL ENG GENERATOR ACTIVE:index (OnRequest)",
      "description": "Settable alternator (generator) on/off switch for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG GENERATOR ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG GENERATOR SWITCH:index",
      "displaytitle": "GENERAL ENG GENERATOR SWITCH:index (Poll)",
      "description": "Alternator (generator) on/off switch state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG GENERATOR SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG GENERATOR SWITCH:index",
      "displaytitle": "GENERAL ENG GENERATOR SWITCH:index (OnChange)",
      "description": "Alternator (generator) on/off switch state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG GENERATOR SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG GENERATOR SWITCH:index",
      "displaytitle": "GENERAL ENG GENERATOR SWITCH:index (OnRequest)",
      "description": "Alternator (generator) on/off switch state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG GENERATOR SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG HOBBS ELAPSED TIME:index",
      "displaytitle": "GENERAL ENG HOBBS ELAPSED TIME:index (Poll)",
      "description": "This can be used to find the time since the indexed engine started running: Units seconds: settable false",
      "messagetype": "trigger_GENERAL ENG HOBBS ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG HOBBS ELAPSED TIME:index",
      "displaytitle": "GENERAL ENG HOBBS ELAPSED TIME:index (OnChange)",
      "description": "This can be used to find the time since the indexed engine started running: Units seconds: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG HOBBS ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG HOBBS ELAPSED TIME:index",
      "displaytitle": "GENERAL ENG HOBBS ELAPSED TIME:index (OnRequest)",
      "description": "This can be used to find the time since the indexed engine started running: Units seconds: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG HOBBS ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG MASTER ALTERNATOR",
      "displaytitle": "GENERAL ENG MASTER ALTERNATOR (Poll)",
      "description": "The alternator switch for a specific engine. Requires an engine index (1:4) when used: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG MASTER ALTERNATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG MASTER ALTERNATOR",
      "displaytitle": "GENERAL ENG MASTER ALTERNATOR (OnChange)",
      "description": "The alternator switch for a specific engine. Requires an engine index (1:4) when used: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG MASTER ALTERNATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG MASTER ALTERNATOR",
      "displaytitle": "GENERAL ENG MASTER ALTERNATOR (OnRequest)",
      "description": "The alternator switch for a specific engine. Requires an engine index (1:4) when used: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG MASTER ALTERNATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG MASTER ALTERNATOR:index",
      "displaytitle": "GENERAL ENG MASTER ALTERNATOR:index (Poll)",
      "description": "The alternator (generator) switch position, true if the switch is ON. Requires an engine index, and the use of an alternator index when referencing: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG MASTER ALTERNATOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG MASTER ALTERNATOR:index",
      "displaytitle": "GENERAL ENG MASTER ALTERNATOR:index (OnChange)",
      "description": "The alternator (generator) switch position, true if the switch is ON. Requires an engine index, and the use of an alternator index when referencing: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG MASTER ALTERNATOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG MASTER ALTERNATOR:index",
      "displaytitle": "GENERAL ENG MASTER ALTERNATOR:index (OnRequest)",
      "description": "The alternator (generator) switch position, true if the switch is ON. Requires an engine index, and the use of an alternator index when referencing: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG MASTER ALTERNATOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG MAX REACHED RPM:index",
      "displaytitle": "GENERAL ENG MAX REACHED RPM:index (Poll)",
      "description": "Maximum attained rpm for the indexed engine: Units RPM: settable false",
      "messagetype": "trigger_GENERAL ENG MAX REACHED RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG MAX REACHED RPM:index",
      "displaytitle": "GENERAL ENG MAX REACHED RPM:index (OnChange)",
      "description": "Maximum attained rpm for the indexed engine: Units RPM: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG MAX REACHED RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG MAX REACHED RPM:index",
      "displaytitle": "GENERAL ENG MAX REACHED RPM:index (OnRequest)",
      "description": "Maximum attained rpm for the indexed engine: Units RPM: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG MAX REACHED RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG MIXTURE LEVER POSITION:index",
      "displaytitle": "GENERAL ENG MIXTURE LEVER POSITION:index (Poll)",
      "description": "Percent of max mixture lever position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_GENERAL ENG MIXTURE LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG MIXTURE LEVER POSITION:index",
      "displaytitle": "GENERAL ENG MIXTURE LEVER POSITION:index (OnChange)",
      "description": "Percent of max mixture lever position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG MIXTURE LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG MIXTURE LEVER POSITION:index",
      "displaytitle": "GENERAL ENG MIXTURE LEVER POSITION:index (OnRequest)",
      "description": "Percent of max mixture lever position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG MIXTURE LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG OIL LEAKED PERCENT:index",
      "displaytitle": "GENERAL ENG OIL LEAKED PERCENT:index (Poll)",
      "description": "Percent of max oil capacity leaked for the indexed engine: Units percent: settable false",
      "messagetype": "trigger_GENERAL ENG OIL LEAKED PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG OIL LEAKED PERCENT:index",
      "displaytitle": "GENERAL ENG OIL LEAKED PERCENT:index (OnChange)",
      "description": "Percent of max oil capacity leaked for the indexed engine: Units percent: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG OIL LEAKED PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG OIL LEAKED PERCENT:index",
      "displaytitle": "GENERAL ENG OIL LEAKED PERCENT:index (OnRequest)",
      "description": "Percent of max oil capacity leaked for the indexed engine: Units percent: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG OIL LEAKED PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG OIL PRESSURE:index",
      "displaytitle": "GENERAL ENG OIL PRESSURE:index (Poll)",
      "description": "The indexed engine oil pressure: Units pounds: settable true",
      "messagetype": "trigger_GENERAL ENG OIL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG OIL PRESSURE:index",
      "displaytitle": "GENERAL ENG OIL PRESSURE:index (OnChange)",
      "description": "The indexed engine oil pressure: Units pounds: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG OIL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG OIL PRESSURE:index",
      "displaytitle": "GENERAL ENG OIL PRESSURE:index (OnRequest)",
      "description": "The indexed engine oil pressure: Units pounds: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG OIL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG OIL TEMPERATURE:index",
      "displaytitle": "GENERAL ENG OIL TEMPERATURE:index (Poll)",
      "description": "The indexed engine oil temperature: Units rankine: settable true",
      "messagetype": "trigger_GENERAL ENG OIL TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG OIL TEMPERATURE:index",
      "displaytitle": "GENERAL ENG OIL TEMPERATURE:index (OnChange)",
      "description": "The indexed engine oil temperature: Units rankine: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG OIL TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG OIL TEMPERATURE:index",
      "displaytitle": "GENERAL ENG OIL TEMPERATURE:index (OnRequest)",
      "description": "The indexed engine oil temperature: Units rankine: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG OIL TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG PCT MAX RPM:index",
      "displaytitle": "GENERAL ENG PCT MAX RPM:index (Poll)",
      "description": "Percent of max rated rpm for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_GENERAL ENG PCT MAX RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG PCT MAX RPM:index",
      "displaytitle": "GENERAL ENG PCT MAX RPM:index (OnChange)",
      "description": "Percent of max rated rpm for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG PCT MAX RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG PCT MAX RPM:index",
      "displaytitle": "GENERAL ENG PCT MAX RPM:index (OnRequest)",
      "description": "Percent of max rated rpm for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG PCT MAX RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG PROPELLER LEVER POSITION:index",
      "displaytitle": "GENERAL ENG PROPELLER LEVER POSITION:index (Poll)",
      "description": "Percent of max prop lever position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_GENERAL ENG PROPELLER LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG PROPELLER LEVER POSITION:index",
      "displaytitle": "GENERAL ENG PROPELLER LEVER POSITION:index (OnChange)",
      "description": "Percent of max prop lever position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG PROPELLER LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG PROPELLER LEVER POSITION:index",
      "displaytitle": "GENERAL ENG PROPELLER LEVER POSITION:index (OnRequest)",
      "description": "Percent of max prop lever position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG PROPELLER LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG REVERSE THRUST ENGAGED",
      "displaytitle": "GENERAL ENG REVERSE THRUST ENGAGED (Poll)",
      "description": "This will return 1 (TRUE) if the reverse thruster is engaged, or 0 (FALSE) otherwise: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG REVERSE THRUST ENGAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG REVERSE THRUST ENGAGED",
      "displaytitle": "GENERAL ENG REVERSE THRUST ENGAGED (OnChange)",
      "description": "This will return 1 (TRUE) if the reverse thruster is engaged, or 0 (FALSE) otherwise: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG REVERSE THRUST ENGAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG REVERSE THRUST ENGAGED",
      "displaytitle": "GENERAL ENG REVERSE THRUST ENGAGED (OnRequest)",
      "description": "This will return 1 (TRUE) if the reverse thruster is engaged, or 0 (FALSE) otherwise: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG REVERSE THRUST ENGAGED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG RPM:index",
      "displaytitle": "GENERAL ENG RPM:index (Poll)",
      "description": "The RPM for an indexed engine: Units RPM: settable true",
      "messagetype": "trigger_GENERAL ENG RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG RPM:index",
      "displaytitle": "GENERAL ENG RPM:index (OnChange)",
      "description": "The RPM for an indexed engine: Units RPM: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG RPM:index",
      "displaytitle": "GENERAL ENG RPM:index (OnRequest)",
      "description": "The RPM for an indexed engine: Units RPM: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG STARTER ACTIVE:index",
      "displaytitle": "GENERAL ENG STARTER ACTIVE:index (Poll)",
      "description": "True if the indexed engine starter is active: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG STARTER ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG STARTER ACTIVE:index",
      "displaytitle": "GENERAL ENG STARTER ACTIVE:index (OnChange)",
      "description": "True if the indexed engine starter is active: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG STARTER ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG STARTER ACTIVE:index",
      "displaytitle": "GENERAL ENG STARTER ACTIVE:index (OnRequest)",
      "description": "True if the indexed engine starter is active: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG STARTER ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG STARTER:index",
      "displaytitle": "GENERAL ENG STARTER:index (Poll)",
      "description": "The indexed engine starter on/off state: Units bool: settable false",
      "messagetype": "trigger_GENERAL ENG STARTER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG STARTER:index",
      "displaytitle": "GENERAL ENG STARTER:index (OnChange)",
      "description": "The indexed engine starter on/off state: Units bool: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG STARTER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG STARTER:index",
      "displaytitle": "GENERAL ENG STARTER:index (OnRequest)",
      "description": "The indexed engine starter on/off state: Units bool: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG STARTER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG THROTTLE LEVER POSITION:index",
      "displaytitle": "GENERAL ENG THROTTLE LEVER POSITION:index (Poll)",
      "description": "Percent of max throttle position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_GENERAL ENG THROTTLE LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG THROTTLE LEVER POSITION:index",
      "displaytitle": "GENERAL ENG THROTTLE LEVER POSITION:index (OnChange)",
      "description": "Percent of max throttle position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_GENERAL ENG THROTTLE LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG THROTTLE LEVER POSITION:index",
      "displaytitle": "GENERAL ENG THROTTLE LEVER POSITION:index (OnRequest)",
      "description": "Percent of max throttle position for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_GENERAL ENG THROTTLE LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG THROTTLE MANAGED MODE:index",
      "displaytitle": "GENERAL ENG THROTTLE MANAGED MODE:index (Poll)",
      "description": "Current mode of the managed throttle for the indexed engine: Units number: settable false",
      "messagetype": "trigger_GENERAL ENG THROTTLE MANAGED MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_GENERAL ENG THROTTLE MANAGED MODE:index",
      "displaytitle": "GENERAL ENG THROTTLE MANAGED MODE:index (OnChange)",
      "description": "Current mode of the managed throttle for the indexed engine: Units number: settable false",
      "messagetype": "trigger_onChange_GENERAL ENG THROTTLE MANAGED MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_GENERAL ENG THROTTLE MANAGED MODE:index",
      "displaytitle": "GENERAL ENG THROTTLE MANAGED MODE:index (OnRequest)",
      "description": "Current mode of the managed throttle for the indexed engine: Units number: settable false",
      "messagetype": "trigger_onRequest_GENERAL ENG THROTTLE MANAGED MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GLASSCOCKPIT AUTOMATIC BRIGHTNESS",
      "displaytitle": "GLASSCOCKPIT AUTOMATIC BRIGHTNESS (Poll)",
      "description": "This variable will return a value between 0 and 1 for the automatic brightness setting for glass cockpit displays, where 0 is the dimmest and 1 is the brightest. This value will vary depending on the time of day.: Units number: settable false",
      "messagetype": "trigger_GLASSCOCKPIT AUTOMATIC BRIGHTNESS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GLASSCOCKPIT AUTOMATIC BRIGHTNESS",
      "displaytitle": "GLASSCOCKPIT AUTOMATIC BRIGHTNESS (OnChange)",
      "description": "This variable will return a value between 0 and 1 for the automatic brightness setting for glass cockpit displays, where 0 is the dimmest and 1 is the brightest. This value will vary depending on the time of day.: Units number: settable false",
      "messagetype": "trigger_onChange_GLASSCOCKPIT AUTOMATIC BRIGHTNESS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GLASSCOCKPIT AUTOMATIC BRIGHTNESS",
      "displaytitle": "GLASSCOCKPIT AUTOMATIC BRIGHTNESS (OnRequest)",
      "description": "This variable will return a value between 0 and 1 for the automatic brightness setting for glass cockpit displays, where 0 is the dimmest and 1 is the brightest. This value will vary depending on the time of day.: Units number: settable false",
      "messagetype": "trigger_onRequest_GLASSCOCKPIT AUTOMATIC BRIGHTNESS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH AIRPORT ID",
      "displaytitle": "GPS APPROACH AIRPORT ID (Poll)",
      "description": "ID of airport.: Units null: settable false",
      "messagetype": "trigger_GPS APPROACH AIRPORT ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH AIRPORT ID",
      "displaytitle": "GPS APPROACH AIRPORT ID (OnChange)",
      "description": "ID of airport.: Units null: settable false",
      "messagetype": "trigger_onChange_GPS APPROACH AIRPORT ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH AIRPORT ID",
      "displaytitle": "GPS APPROACH AIRPORT ID (OnRequest)",
      "description": "ID of airport.: Units null: settable false",
      "messagetype": "trigger_onRequest_GPS APPROACH AIRPORT ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH APPROACH ID",
      "displaytitle": "GPS APPROACH APPROACH ID (Poll)",
      "description": "ID of approach.: Units null: settable false",
      "messagetype": "trigger_GPS APPROACH APPROACH ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH APPROACH ID",
      "displaytitle": "GPS APPROACH APPROACH ID (OnChange)",
      "description": "ID of approach.: Units null: settable false",
      "messagetype": "trigger_onChange_GPS APPROACH APPROACH ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH APPROACH ID",
      "displaytitle": "GPS APPROACH APPROACH ID (OnRequest)",
      "description": "ID of approach.: Units null: settable false",
      "messagetype": "trigger_onRequest_GPS APPROACH APPROACH ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH APPROACH INDEX",
      "displaytitle": "GPS APPROACH APPROACH INDEX (Poll)",
      "description": "Index of approach for given airport.: Units number: settable true",
      "messagetype": "trigger_GPS APPROACH APPROACH INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH APPROACH INDEX",
      "displaytitle": "GPS APPROACH APPROACH INDEX (OnChange)",
      "description": "Index of approach for given airport.: Units number: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH APPROACH INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH APPROACH INDEX",
      "displaytitle": "GPS APPROACH APPROACH INDEX (OnRequest)",
      "description": "Index of approach for given airport.: Units number: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH APPROACH INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH APPROACH TYPE",
      "displaytitle": "GPS APPROACH APPROACH TYPE (Poll)",
      "description": "Approach type.: Units enum: settable true",
      "messagetype": "trigger_GPS APPROACH APPROACH TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH APPROACH TYPE",
      "displaytitle": "GPS APPROACH APPROACH TYPE (OnChange)",
      "description": "Approach type.: Units enum: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH APPROACH TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH APPROACH TYPE",
      "displaytitle": "GPS APPROACH APPROACH TYPE (OnRequest)",
      "description": "Approach type.: Units enum: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH APPROACH TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH IS FINAL",
      "displaytitle": "GPS APPROACH IS FINAL (Poll)",
      "description": "Is approach transition final approach segment.: Units bool: settable true",
      "messagetype": "trigger_GPS APPROACH IS FINAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH IS FINAL",
      "displaytitle": "GPS APPROACH IS FINAL (OnChange)",
      "description": "Is approach transition final approach segment.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH IS FINAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH IS FINAL",
      "displaytitle": "GPS APPROACH IS FINAL (OnRequest)",
      "description": "Is approach transition final approach segment.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH IS FINAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH IS MISSED",
      "displaytitle": "GPS APPROACH IS MISSED (Poll)",
      "description": "Is approach segment missed approach segment.: Units bool: settable true",
      "messagetype": "trigger_GPS APPROACH IS MISSED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH IS MISSED",
      "displaytitle": "GPS APPROACH IS MISSED (OnChange)",
      "description": "Is approach segment missed approach segment.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH IS MISSED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH IS MISSED",
      "displaytitle": "GPS APPROACH IS MISSED (OnRequest)",
      "description": "Is approach segment missed approach segment.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH IS MISSED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH IS WP RUNWAY",
      "displaytitle": "GPS APPROACH IS WP RUNWAY (Poll)",
      "description": "Waypoint is the runway.: Units bool: settable true",
      "messagetype": "trigger_GPS APPROACH IS WP RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH IS WP RUNWAY",
      "displaytitle": "GPS APPROACH IS WP RUNWAY (OnChange)",
      "description": "Waypoint is the runway.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH IS WP RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH IS WP RUNWAY",
      "displaytitle": "GPS APPROACH IS WP RUNWAY (OnRequest)",
      "description": "Waypoint is the runway.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH IS WP RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH MODE",
      "displaytitle": "GPS APPROACH MODE (Poll)",
      "description": "Sub mode within approach mode.: Units enum: settable true",
      "messagetype": "trigger_GPS APPROACH MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH MODE",
      "displaytitle": "GPS APPROACH MODE (OnChange)",
      "description": "Sub mode within approach mode.: Units enum: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH MODE",
      "displaytitle": "GPS APPROACH MODE (OnRequest)",
      "description": "Sub mode within approach mode.: Units enum: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH SEGMENT TYPE",
      "displaytitle": "GPS APPROACH SEGMENT TYPE (Poll)",
      "description": "Segment type within approach.: Units enum: settable true",
      "messagetype": "trigger_GPS APPROACH SEGMENT TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH SEGMENT TYPE",
      "displaytitle": "GPS APPROACH SEGMENT TYPE (OnChange)",
      "description": "Segment type within approach.: Units enum: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH SEGMENT TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH SEGMENT TYPE",
      "displaytitle": "GPS APPROACH SEGMENT TYPE (OnRequest)",
      "description": "Segment type within approach.: Units enum: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH SEGMENT TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH TIMEZONE DEVIATION",
      "displaytitle": "GPS APPROACH TIMEZONE DEVIATION (Poll)",
      "description": "Deviation of local time from GMT.: Units seconds: settable false",
      "messagetype": "trigger_GPS APPROACH TIMEZONE DEVIATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH TIMEZONE DEVIATION",
      "displaytitle": "GPS APPROACH TIMEZONE DEVIATION (OnChange)",
      "description": "Deviation of local time from GMT.: Units seconds: settable false",
      "messagetype": "trigger_onChange_GPS APPROACH TIMEZONE DEVIATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH TIMEZONE DEVIATION",
      "displaytitle": "GPS APPROACH TIMEZONE DEVIATION (OnRequest)",
      "description": "Deviation of local time from GMT.: Units seconds: settable false",
      "messagetype": "trigger_onRequest_GPS APPROACH TIMEZONE DEVIATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH TRANSITION ID",
      "displaytitle": "GPS APPROACH TRANSITION ID (Poll)",
      "description": "ID of approach transition.: Units null: settable true",
      "messagetype": "trigger_GPS APPROACH TRANSITION ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH TRANSITION ID",
      "displaytitle": "GPS APPROACH TRANSITION ID (OnChange)",
      "description": "ID of approach transition.: Units null: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH TRANSITION ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH TRANSITION ID",
      "displaytitle": "GPS APPROACH TRANSITION ID (OnRequest)",
      "description": "ID of approach transition.: Units null: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH TRANSITION ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH TRANSITION INDEX",
      "displaytitle": "GPS APPROACH TRANSITION INDEX (Poll)",
      "description": "Index of approach transition.: Units number: settable true",
      "messagetype": "trigger_GPS APPROACH TRANSITION INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH TRANSITION INDEX",
      "displaytitle": "GPS APPROACH TRANSITION INDEX (OnChange)",
      "description": "Index of approach transition.: Units number: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH TRANSITION INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH TRANSITION INDEX",
      "displaytitle": "GPS APPROACH TRANSITION INDEX (OnRequest)",
      "description": "Index of approach transition.: Units number: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH TRANSITION INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH WP COUNT",
      "displaytitle": "GPS APPROACH WP COUNT (Poll)",
      "description": "Number of waypoints.: Units number: settable true",
      "messagetype": "trigger_GPS APPROACH WP COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH WP COUNT",
      "displaytitle": "GPS APPROACH WP COUNT (OnChange)",
      "description": "Number of waypoints.: Units number: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH WP COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH WP COUNT",
      "displaytitle": "GPS APPROACH WP COUNT (OnRequest)",
      "description": "Number of waypoints.: Units number: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH WP COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH WP INDEX",
      "displaytitle": "GPS APPROACH WP INDEX (Poll)",
      "description": "Index of current waypoint.: Units number: settable true",
      "messagetype": "trigger_GPS APPROACH WP INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH WP INDEX",
      "displaytitle": "GPS APPROACH WP INDEX (OnChange)",
      "description": "Index of current waypoint.: Units number: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH WP INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH WP INDEX",
      "displaytitle": "GPS APPROACH WP INDEX (OnRequest)",
      "description": "Index of current waypoint.: Units number: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH WP INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH WP TYPE",
      "displaytitle": "GPS APPROACH WP TYPE (Poll)",
      "description": "Waypoint type within approach mode.: Units enum: settable true",
      "messagetype": "trigger_GPS APPROACH WP TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS APPROACH WP TYPE",
      "displaytitle": "GPS APPROACH WP TYPE (OnChange)",
      "description": "Waypoint type within approach mode.: Units enum: settable true",
      "messagetype": "trigger_onChange_GPS APPROACH WP TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS APPROACH WP TYPE",
      "displaytitle": "GPS APPROACH WP TYPE (OnRequest)",
      "description": "Waypoint type within approach mode.: Units enum: settable true",
      "messagetype": "trigger_onRequest_GPS APPROACH WP TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS CDI NEEDLE",
      "displaytitle": "GPS CDI NEEDLE (Poll)",
      "description": "The course deviation of the needle for a CDI instrument. The SimVar displays the deviation from -127 to +127. It returns a value if a flight plan is set (otherwise it will return 0) even if the autopilot isn't on GPS mode. Scaling can also be set through the GPS CDI SCALING simvar.: Units number: settable false",
      "messagetype": "trigger_GPS CDI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS CDI NEEDLE",
      "displaytitle": "GPS CDI NEEDLE (OnChange)",
      "description": "The course deviation of the needle for a CDI instrument. The SimVar displays the deviation from -127 to +127. It returns a value if a flight plan is set (otherwise it will return 0) even if the autopilot isn't on GPS mode. Scaling can also be set through the GPS CDI SCALING simvar.: Units number: settable false",
      "messagetype": "trigger_onChange_GPS CDI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS CDI NEEDLE",
      "displaytitle": "GPS CDI NEEDLE (OnRequest)",
      "description": "The course deviation of the needle for a CDI instrument. The SimVar displays the deviation from -127 to +127. It returns a value if a flight plan is set (otherwise it will return 0) even if the autopilot isn't on GPS mode. Scaling can also be set through the GPS CDI SCALING simvar.: Units number: settable false",
      "messagetype": "trigger_onRequest_GPS CDI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS CDI SCALING",
      "displaytitle": "GPS CDI SCALING (Poll)",
      "description": "The full scale deflection of the CDI due to GPS cross-track error, in meters.: Units meters: settable true",
      "messagetype": "trigger_GPS CDI SCALING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS CDI SCALING",
      "displaytitle": "GPS CDI SCALING (OnChange)",
      "description": "The full scale deflection of the CDI due to GPS cross-track error, in meters.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS CDI SCALING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS CDI SCALING",
      "displaytitle": "GPS CDI SCALING (OnRequest)",
      "description": "The full scale deflection of the CDI due to GPS cross-track error, in meters.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS CDI SCALING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS COURSE TO STEER",
      "displaytitle": "GPS COURSE TO STEER (Poll)",
      "description": "Suggested heading to steer (for autopilot).: Units radians: settable true",
      "messagetype": "trigger_GPS COURSE TO STEER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS COURSE TO STEER",
      "displaytitle": "GPS COURSE TO STEER (OnChange)",
      "description": "Suggested heading to steer (for autopilot).: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS COURSE TO STEER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS COURSE TO STEER",
      "displaytitle": "GPS COURSE TO STEER (OnRequest)",
      "description": "Suggested heading to steer (for autopilot).: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS COURSE TO STEER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS DRIVES NAV1",
      "displaytitle": "GPS DRIVES NAV1 (Poll)",
      "description": "GPS is driving Nav 1 indicator. Note this setting will also affect the SimVars HSI_STATION_IDENT and HSI_BEARING.: Units bool: settable false",
      "messagetype": "trigger_GPS DRIVES NAV1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS DRIVES NAV1",
      "displaytitle": "GPS DRIVES NAV1 (OnChange)",
      "description": "GPS is driving Nav 1 indicator. Note this setting will also affect the SimVars HSI_STATION_IDENT and HSI_BEARING.: Units bool: settable false",
      "messagetype": "trigger_onChange_GPS DRIVES NAV1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS DRIVES NAV1",
      "displaytitle": "GPS DRIVES NAV1 (OnRequest)",
      "description": "GPS is driving Nav 1 indicator. Note this setting will also affect the SimVars HSI_STATION_IDENT and HSI_BEARING.: Units bool: settable false",
      "messagetype": "trigger_onRequest_GPS DRIVES NAV1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS ETA",
      "displaytitle": "GPS ETA (Poll)",
      "description": "Estimated time of arrival at destination.: Units seconds: settable false",
      "messagetype": "trigger_GPS ETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS ETA",
      "displaytitle": "GPS ETA (OnChange)",
      "description": "Estimated time of arrival at destination.: Units seconds: settable false",
      "messagetype": "trigger_onChange_GPS ETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS ETA",
      "displaytitle": "GPS ETA (OnRequest)",
      "description": "Estimated time of arrival at destination.: Units seconds: settable false",
      "messagetype": "trigger_onRequest_GPS ETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS ETE",
      "displaytitle": "GPS ETE (Poll)",
      "description": "Estimated time en route to destination.: Units seconds: settable false",
      "messagetype": "trigger_GPS ETE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS ETE",
      "displaytitle": "GPS ETE (OnChange)",
      "description": "Estimated time en route to destination.: Units seconds: settable false",
      "messagetype": "trigger_onChange_GPS ETE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS ETE",
      "displaytitle": "GPS ETE (OnRequest)",
      "description": "Estimated time en route to destination.: Units seconds: settable false",
      "messagetype": "trigger_onRequest_GPS ETE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS FLIGHT PLAN WP COUNT",
      "displaytitle": "GPS FLIGHT PLAN WP COUNT (Poll)",
      "description": "Number of waypoints.: Units number: settable true",
      "messagetype": "trigger_GPS FLIGHT PLAN WP COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS FLIGHT PLAN WP COUNT",
      "displaytitle": "GPS FLIGHT PLAN WP COUNT (OnChange)",
      "description": "Number of waypoints.: Units number: settable true",
      "messagetype": "trigger_onChange_GPS FLIGHT PLAN WP COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS FLIGHT PLAN WP COUNT",
      "displaytitle": "GPS FLIGHT PLAN WP COUNT (OnRequest)",
      "description": "Number of waypoints.: Units number: settable true",
      "messagetype": "trigger_onRequest_GPS FLIGHT PLAN WP COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS FLIGHT PLAN WP INDEX",
      "displaytitle": "GPS FLIGHT PLAN WP INDEX (Poll)",
      "description": "Index of waypoint.: Units number: settable true",
      "messagetype": "trigger_GPS FLIGHT PLAN WP INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS FLIGHT PLAN WP INDEX",
      "displaytitle": "GPS FLIGHT PLAN WP INDEX (OnChange)",
      "description": "Index of waypoint.: Units number: settable true",
      "messagetype": "trigger_onChange_GPS FLIGHT PLAN WP INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS FLIGHT PLAN WP INDEX",
      "displaytitle": "GPS FLIGHT PLAN WP INDEX (OnRequest)",
      "description": "Index of waypoint.: Units number: settable true",
      "messagetype": "trigger_onRequest_GPS FLIGHT PLAN WP INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS FLIGHTPLAN TOTAL DISTANCE",
      "displaytitle": "GPS FLIGHTPLAN TOTAL DISTANCE (Poll)",
      "description": "This is the complete flightplan length from start to end. Essentially the cumulative length of all the flight plan legs added together.: Units meters: settable false",
      "messagetype": "trigger_GPS FLIGHTPLAN TOTAL DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS FLIGHTPLAN TOTAL DISTANCE",
      "displaytitle": "GPS FLIGHTPLAN TOTAL DISTANCE (OnChange)",
      "description": "This is the complete flightplan length from start to end. Essentially the cumulative length of all the flight plan legs added together.: Units meters: settable false",
      "messagetype": "trigger_onChange_GPS FLIGHTPLAN TOTAL DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS FLIGHTPLAN TOTAL DISTANCE",
      "displaytitle": "GPS FLIGHTPLAN TOTAL DISTANCE (OnRequest)",
      "description": "This is the complete flightplan length from start to end. Essentially the cumulative length of all the flight plan legs added together.: Units meters: settable false",
      "messagetype": "trigger_onRequest_GPS FLIGHTPLAN TOTAL DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GROUND MAGNETIC TRACK",
      "displaytitle": "GPS GROUND MAGNETIC TRACK (Poll)",
      "description": "Current magnetic ground track.: Units radians: settable true",
      "messagetype": "trigger_GPS GROUND MAGNETIC TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS GROUND MAGNETIC TRACK",
      "displaytitle": "GPS GROUND MAGNETIC TRACK (OnChange)",
      "description": "Current magnetic ground track.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS GROUND MAGNETIC TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS GROUND MAGNETIC TRACK",
      "displaytitle": "GPS GROUND MAGNETIC TRACK (OnRequest)",
      "description": "Current magnetic ground track.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS GROUND MAGNETIC TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GROUND SPEED",
      "displaytitle": "GPS GROUND SPEED (Poll)",
      "description": "Current ground speed.: Units Meters per second: settable true",
      "messagetype": "trigger_GPS GROUND SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS GROUND SPEED",
      "displaytitle": "GPS GROUND SPEED (OnChange)",
      "description": "Current ground speed.: Units Meters per second: settable true",
      "messagetype": "trigger_onChange_GPS GROUND SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS GROUND SPEED",
      "displaytitle": "GPS GROUND SPEED (OnRequest)",
      "description": "Current ground speed.: Units Meters per second: settable true",
      "messagetype": "trigger_onRequest_GPS GROUND SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GROUND TRUE HEADING",
      "displaytitle": "GPS GROUND TRUE HEADING (Poll)",
      "description": "Current true heading.: Units radians: settable true",
      "messagetype": "trigger_GPS GROUND TRUE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS GROUND TRUE HEADING",
      "displaytitle": "GPS GROUND TRUE HEADING (OnChange)",
      "description": "Current true heading.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS GROUND TRUE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS GROUND TRUE HEADING",
      "displaytitle": "GPS GROUND TRUE HEADING (OnRequest)",
      "description": "Current true heading.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS GROUND TRUE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GROUND TRUE TRACK",
      "displaytitle": "GPS GROUND TRUE TRACK (Poll)",
      "description": "Current true ground track.: Units radians: settable true",
      "messagetype": "trigger_GPS GROUND TRUE TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS GROUND TRUE TRACK",
      "displaytitle": "GPS GROUND TRUE TRACK (OnChange)",
      "description": "Current true ground track.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS GROUND TRUE TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS GROUND TRUE TRACK",
      "displaytitle": "GPS GROUND TRUE TRACK (OnRequest)",
      "description": "Current true ground track.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS GROUND TRUE TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GSI SCALING",
      "displaytitle": "GPS GSI SCALING (Poll)",
      "description": "The full scale deflection of the vertical GSI due to GPS glidepath deviation, in meters.: Units meters: settable true",
      "messagetype": "trigger_GPS GSI SCALING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS GSI SCALING",
      "displaytitle": "GPS GSI SCALING (OnChange)",
      "description": "The full scale deflection of the vertical GSI due to GPS glidepath deviation, in meters.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS GSI SCALING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS GSI SCALING",
      "displaytitle": "GPS GSI SCALING (OnRequest)",
      "description": "The full scale deflection of the vertical GSI due to GPS glidepath deviation, in meters.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS GSI SCALING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS HAS GLIDEPATH",
      "displaytitle": "GPS HAS GLIDEPATH (Poll)",
      "description": "Whether or not the GPS system has a presently available glidepath for guidance. Only applicable with GPS_OVERRIDDEN. When true and in GPS OVERRIDDEN, HSI_GSI_NEEDLE_VALID will also be true.: Units bool: settable true",
      "messagetype": "trigger_GPS HAS GLIDEPATH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS HAS GLIDEPATH",
      "displaytitle": "GPS HAS GLIDEPATH (OnChange)",
      "description": "Whether or not the GPS system has a presently available glidepath for guidance. Only applicable with GPS_OVERRIDDEN. When true and in GPS OVERRIDDEN, HSI_GSI_NEEDLE_VALID will also be true.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS HAS GLIDEPATH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS HAS GLIDEPATH",
      "displaytitle": "GPS HAS GLIDEPATH (OnRequest)",
      "description": "Whether or not the GPS system has a presently available glidepath for guidance. Only applicable with GPS_OVERRIDDEN. When true and in GPS OVERRIDDEN, HSI_GSI_NEEDLE_VALID will also be true.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS HAS GLIDEPATH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS ACTIVE FLIGHT PLAN",
      "displaytitle": "GPS IS ACTIVE FLIGHT PLAN (Poll)",
      "description": "Flight plan mode active.: Units bool: settable true",
      "messagetype": "trigger_GPS IS ACTIVE FLIGHT PLAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS IS ACTIVE FLIGHT PLAN",
      "displaytitle": "GPS IS ACTIVE FLIGHT PLAN (OnChange)",
      "description": "Flight plan mode active.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS IS ACTIVE FLIGHT PLAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS IS ACTIVE FLIGHT PLAN",
      "displaytitle": "GPS IS ACTIVE FLIGHT PLAN (OnRequest)",
      "description": "Flight plan mode active.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS IS ACTIVE FLIGHT PLAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS ACTIVE WAY POINT",
      "displaytitle": "GPS IS ACTIVE WAY POINT (Poll)",
      "description": "Waypoint mode active.: Units bool: settable true",
      "messagetype": "trigger_GPS IS ACTIVE WAY POINT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS IS ACTIVE WAY POINT",
      "displaytitle": "GPS IS ACTIVE WAY POINT (OnChange)",
      "description": "Waypoint mode active.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS IS ACTIVE WAY POINT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS IS ACTIVE WAY POINT",
      "displaytitle": "GPS IS ACTIVE WAY POINT (OnRequest)",
      "description": "Waypoint mode active.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS IS ACTIVE WAY POINT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS ACTIVE WP LOCKED",
      "displaytitle": "GPS IS ACTIVE WP LOCKED (Poll)",
      "description": "Is switching to next waypoint locked.: Units bool: settable false",
      "messagetype": "trigger_GPS IS ACTIVE WP LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS IS ACTIVE WP LOCKED",
      "displaytitle": "GPS IS ACTIVE WP LOCKED (OnChange)",
      "description": "Is switching to next waypoint locked.: Units bool: settable false",
      "messagetype": "trigger_onChange_GPS IS ACTIVE WP LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS IS ACTIVE WP LOCKED",
      "displaytitle": "GPS IS ACTIVE WP LOCKED (OnRequest)",
      "description": "Is switching to next waypoint locked.: Units bool: settable false",
      "messagetype": "trigger_onRequest_GPS IS ACTIVE WP LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS APPROACH ACTIVE",
      "displaytitle": "GPS IS APPROACH ACTIVE (Poll)",
      "description": "Is approach mode active.: Units bool: settable false",
      "messagetype": "trigger_GPS IS APPROACH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS IS APPROACH ACTIVE",
      "displaytitle": "GPS IS APPROACH ACTIVE (OnChange)",
      "description": "Is approach mode active.: Units bool: settable false",
      "messagetype": "trigger_onChange_GPS IS APPROACH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS IS APPROACH ACTIVE",
      "displaytitle": "GPS IS APPROACH ACTIVE (OnRequest)",
      "description": "Is approach mode active.: Units bool: settable false",
      "messagetype": "trigger_onRequest_GPS IS APPROACH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS APPROACH LOADED",
      "displaytitle": "GPS IS APPROACH LOADED (Poll)",
      "description": "Is approach loaded.: Units bool: settable false",
      "messagetype": "trigger_GPS IS APPROACH LOADED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS IS APPROACH LOADED",
      "displaytitle": "GPS IS APPROACH LOADED (OnChange)",
      "description": "Is approach loaded.: Units bool: settable false",
      "messagetype": "trigger_onChange_GPS IS APPROACH LOADED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS IS APPROACH LOADED",
      "displaytitle": "GPS IS APPROACH LOADED (OnRequest)",
      "description": "Is approach loaded.: Units bool: settable false",
      "messagetype": "trigger_onRequest_GPS IS APPROACH LOADED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS ARRIVED",
      "displaytitle": "GPS IS ARRIVED (Poll)",
      "description": "Is flight plan destination reached.: Units bool: settable true",
      "messagetype": "trigger_GPS IS ARRIVED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS IS ARRIVED",
      "displaytitle": "GPS IS ARRIVED (OnChange)",
      "description": "Is flight plan destination reached.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS IS ARRIVED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS IS ARRIVED",
      "displaytitle": "GPS IS ARRIVED (OnRequest)",
      "description": "Is flight plan destination reached.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS IS ARRIVED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS DIRECTTO FLIGHTPLAN",
      "displaytitle": "GPS IS DIRECTTO FLIGHTPLAN (Poll)",
      "description": "Is Direct To Waypoint mode active.: Units bool: settable true",
      "messagetype": "trigger_GPS IS DIRECTTO FLIGHTPLAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS IS DIRECTTO FLIGHTPLAN",
      "displaytitle": "GPS IS DIRECTTO FLIGHTPLAN (OnChange)",
      "description": "Is Direct To Waypoint mode active.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS IS DIRECTTO FLIGHTPLAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS IS DIRECTTO FLIGHTPLAN",
      "displaytitle": "GPS IS DIRECTTO FLIGHTPLAN (OnRequest)",
      "description": "Is Direct To Waypoint mode active.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS IS DIRECTTO FLIGHTPLAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS MAGVAR",
      "displaytitle": "GPS MAGVAR (Poll)",
      "description": "Current GPS magnetic variation.: Units radians: settable true",
      "messagetype": "trigger_GPS MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS MAGVAR",
      "displaytitle": "GPS MAGVAR (OnChange)",
      "description": "Current GPS magnetic variation.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS MAGVAR",
      "displaytitle": "GPS MAGVAR (OnRequest)",
      "description": "Current GPS magnetic variation.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS OBS ACTIVE",
      "displaytitle": "GPS OBS ACTIVE (Poll)",
      "description": "Whether or not the OBS mode is currently active (disable the automatic sequencing of waypoints in GPS flight plan).: Units bool: settable true",
      "messagetype": "trigger_GPS OBS ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS OBS ACTIVE",
      "displaytitle": "GPS OBS ACTIVE (OnChange)",
      "description": "Whether or not the OBS mode is currently active (disable the automatic sequencing of waypoints in GPS flight plan).: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS OBS ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS OBS ACTIVE",
      "displaytitle": "GPS OBS ACTIVE (OnRequest)",
      "description": "Whether or not the OBS mode is currently active (disable the automatic sequencing of waypoints in GPS flight plan).: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS OBS ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS OBS VALUE",
      "displaytitle": "GPS OBS VALUE (Poll)",
      "description": "This is the currently selected OBS course in degrees, from 0 to 360.: Units degrees: settable true",
      "messagetype": "trigger_GPS OBS VALUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS OBS VALUE",
      "displaytitle": "GPS OBS VALUE (OnChange)",
      "description": "This is the currently selected OBS course in degrees, from 0 to 360.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS OBS VALUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS OBS VALUE",
      "displaytitle": "GPS OBS VALUE (OnRequest)",
      "description": "This is the currently selected OBS course in degrees, from 0 to 360.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS OBS VALUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS OVERRIDDEN",
      "displaytitle": "GPS OVERRIDDEN (Poll)",
      "description": "When it is active, all sim GPS system updates are suspended. This must be set to TRUE to be able to correctly set to any other GPS SimVar.: Units bool: settable true",
      "messagetype": "trigger_GPS OVERRIDDEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS OVERRIDDEN",
      "displaytitle": "GPS OVERRIDDEN (OnChange)",
      "description": "When it is active, all sim GPS system updates are suspended. This must be set to TRUE to be able to correctly set to any other GPS SimVar.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS OVERRIDDEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS OVERRIDDEN",
      "displaytitle": "GPS OVERRIDDEN (OnRequest)",
      "description": "When it is active, all sim GPS system updates are suspended. This must be set to TRUE to be able to correctly set to any other GPS SimVar.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS OVERRIDDEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS POSITION ALT",
      "displaytitle": "GPS POSITION ALT (Poll)",
      "description": "Current GPS altitude.: Units meters: settable true",
      "messagetype": "trigger_GPS POSITION ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS POSITION ALT",
      "displaytitle": "GPS POSITION ALT (OnChange)",
      "description": "Current GPS altitude.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS POSITION ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS POSITION ALT",
      "displaytitle": "GPS POSITION ALT (OnRequest)",
      "description": "Current GPS altitude.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS POSITION ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS POSITION LAT",
      "displaytitle": "GPS POSITION LAT (Poll)",
      "description": "Current GPS latitude.: Units degrees: settable true",
      "messagetype": "trigger_GPS POSITION LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS POSITION LAT",
      "displaytitle": "GPS POSITION LAT (OnChange)",
      "description": "Current GPS latitude.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS POSITION LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS POSITION LAT",
      "displaytitle": "GPS POSITION LAT (OnRequest)",
      "description": "Current GPS latitude.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS POSITION LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS POSITION LON",
      "displaytitle": "GPS POSITION LON (Poll)",
      "description": "Current GPS longitude.: Units degrees: settable true",
      "messagetype": "trigger_GPS POSITION LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS POSITION LON",
      "displaytitle": "GPS POSITION LON (OnChange)",
      "description": "Current GPS longitude.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS POSITION LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS POSITION LON",
      "displaytitle": "GPS POSITION LON (OnRequest)",
      "description": "Current GPS longitude.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS POSITION LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS TARGET ALTITUDE",
      "displaytitle": "GPS TARGET ALTITUDE (Poll)",
      "description": "Altitude of GPS target.: Units meters: settable true",
      "messagetype": "trigger_GPS TARGET ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS TARGET ALTITUDE",
      "displaytitle": "GPS TARGET ALTITUDE (OnChange)",
      "description": "Altitude of GPS target.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS TARGET ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS TARGET ALTITUDE",
      "displaytitle": "GPS TARGET ALTITUDE (OnRequest)",
      "description": "Altitude of GPS target.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS TARGET ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS TARGET DISTANCE",
      "displaytitle": "GPS TARGET DISTANCE (Poll)",
      "description": "Distance to target.: Units meters: settable true",
      "messagetype": "trigger_GPS TARGET DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS TARGET DISTANCE",
      "displaytitle": "GPS TARGET DISTANCE (OnChange)",
      "description": "Distance to target.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS TARGET DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS TARGET DISTANCE",
      "displaytitle": "GPS TARGET DISTANCE (OnRequest)",
      "description": "Distance to target.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS TARGET DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS VERTICAL ANGLE",
      "displaytitle": "GPS VERTICAL ANGLE (Poll)",
      "description": "Glidepath in degrees.: Units degrees: settable true",
      "messagetype": "trigger_GPS VERTICAL ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS VERTICAL ANGLE",
      "displaytitle": "GPS VERTICAL ANGLE (OnChange)",
      "description": "Glidepath in degrees.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS VERTICAL ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS VERTICAL ANGLE",
      "displaytitle": "GPS VERTICAL ANGLE (OnRequest)",
      "description": "Glidepath in degrees.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS VERTICAL ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS VERTICAL ANGLE ERROR",
      "displaytitle": "GPS VERTICAL ANGLE ERROR (Poll)",
      "description": "Vertical error in degrees from GlidePath.: Units degrees: settable true",
      "messagetype": "trigger_GPS VERTICAL ANGLE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS VERTICAL ANGLE ERROR",
      "displaytitle": "GPS VERTICAL ANGLE ERROR (OnChange)",
      "description": "Vertical error in degrees from GlidePath.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS VERTICAL ANGLE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS VERTICAL ANGLE ERROR",
      "displaytitle": "GPS VERTICAL ANGLE ERROR (OnRequest)",
      "description": "Vertical error in degrees from GlidePath.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS VERTICAL ANGLE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS VERTICAL ERROR",
      "displaytitle": "GPS VERTICAL ERROR (Poll)",
      "description": "Vertical deviation in meters from GlidePath.: Units meters: settable true",
      "messagetype": "trigger_GPS VERTICAL ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS VERTICAL ERROR",
      "displaytitle": "GPS VERTICAL ERROR (OnChange)",
      "description": "Vertical deviation in meters from GlidePath.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS VERTICAL ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS VERTICAL ERROR",
      "displaytitle": "GPS VERTICAL ERROR (OnRequest)",
      "description": "Vertical deviation in meters from GlidePath.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS VERTICAL ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP BEARING",
      "displaytitle": "GPS WP BEARING (Poll)",
      "description": "Magnetic bearing to waypoint.: Units radians: settable true",
      "messagetype": "trigger_GPS WP BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP BEARING",
      "displaytitle": "GPS WP BEARING (OnChange)",
      "description": "Magnetic bearing to waypoint.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS WP BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP BEARING",
      "displaytitle": "GPS WP BEARING (OnRequest)",
      "description": "Magnetic bearing to waypoint.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS WP BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP CROSS TRK",
      "displaytitle": "GPS WP CROSS TRK (Poll)",
      "description": "Cross track distance.: Units meters: settable true",
      "messagetype": "trigger_GPS WP CROSS TRK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP CROSS TRK",
      "displaytitle": "GPS WP CROSS TRK (OnChange)",
      "description": "Cross track distance.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS WP CROSS TRK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP CROSS TRK",
      "displaytitle": "GPS WP CROSS TRK (OnRequest)",
      "description": "Cross track distance.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS WP CROSS TRK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP DESIRED TRACK",
      "displaytitle": "GPS WP DESIRED TRACK (Poll)",
      "description": "The required heading (magnetic) from the previous waypoint to the next waypoint.: Units radians: settable true",
      "messagetype": "trigger_GPS WP DESIRED TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP DESIRED TRACK",
      "displaytitle": "GPS WP DESIRED TRACK (OnChange)",
      "description": "The required heading (magnetic) from the previous waypoint to the next waypoint.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS WP DESIRED TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP DESIRED TRACK",
      "displaytitle": "GPS WP DESIRED TRACK (OnRequest)",
      "description": "The required heading (magnetic) from the previous waypoint to the next waypoint.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS WP DESIRED TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP DISTANCE",
      "displaytitle": "GPS WP DISTANCE (Poll)",
      "description": "Distance to waypoint.: Units meters: settable true",
      "messagetype": "trigger_GPS WP DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP DISTANCE",
      "displaytitle": "GPS WP DISTANCE (OnChange)",
      "description": "Distance to waypoint.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS WP DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP DISTANCE",
      "displaytitle": "GPS WP DISTANCE (OnRequest)",
      "description": "Distance to waypoint.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS WP DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP ETA",
      "displaytitle": "GPS WP ETA (Poll)",
      "description": "Estimated time of arrival at waypoint.: Units seconds: settable true",
      "messagetype": "trigger_GPS WP ETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP ETA",
      "displaytitle": "GPS WP ETA (OnChange)",
      "description": "Estimated time of arrival at waypoint.: Units seconds: settable true",
      "messagetype": "trigger_onChange_GPS WP ETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP ETA",
      "displaytitle": "GPS WP ETA (OnRequest)",
      "description": "Estimated time of arrival at waypoint.: Units seconds: settable true",
      "messagetype": "trigger_onRequest_GPS WP ETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP ETE",
      "displaytitle": "GPS WP ETE (Poll)",
      "description": "Estimated time en route to waypoint.: Units seconds: settable true",
      "messagetype": "trigger_GPS WP ETE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP ETE",
      "displaytitle": "GPS WP ETE (OnChange)",
      "description": "Estimated time en route to waypoint.: Units seconds: settable true",
      "messagetype": "trigger_onChange_GPS WP ETE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP ETE",
      "displaytitle": "GPS WP ETE (OnRequest)",
      "description": "Estimated time en route to waypoint.: Units seconds: settable true",
      "messagetype": "trigger_onRequest_GPS WP ETE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP NEXT ALT",
      "displaytitle": "GPS WP NEXT ALT (Poll)",
      "description": "Altitude of next waypoint.: Units meters: settable true",
      "messagetype": "trigger_GPS WP NEXT ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP NEXT ALT",
      "displaytitle": "GPS WP NEXT ALT (OnChange)",
      "description": "Altitude of next waypoint.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS WP NEXT ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP NEXT ALT",
      "displaytitle": "GPS WP NEXT ALT (OnRequest)",
      "description": "Altitude of next waypoint.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS WP NEXT ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP NEXT ID",
      "displaytitle": "GPS WP NEXT ID (Poll)",
      "description": "ID of next GPS waypoint.: Units null: settable true",
      "messagetype": "trigger_GPS WP NEXT ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP NEXT ID",
      "displaytitle": "GPS WP NEXT ID (OnChange)",
      "description": "ID of next GPS waypoint.: Units null: settable true",
      "messagetype": "trigger_onChange_GPS WP NEXT ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP NEXT ID",
      "displaytitle": "GPS WP NEXT ID (OnRequest)",
      "description": "ID of next GPS waypoint.: Units null: settable true",
      "messagetype": "trigger_onRequest_GPS WP NEXT ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP NEXT LAT",
      "displaytitle": "GPS WP NEXT LAT (Poll)",
      "description": "Latitude of next waypoint.: Units degrees: settable true",
      "messagetype": "trigger_GPS WP NEXT LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP NEXT LAT",
      "displaytitle": "GPS WP NEXT LAT (OnChange)",
      "description": "Latitude of next waypoint.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS WP NEXT LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP NEXT LAT",
      "displaytitle": "GPS WP NEXT LAT (OnRequest)",
      "description": "Latitude of next waypoint.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS WP NEXT LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP NEXT LON",
      "displaytitle": "GPS WP NEXT LON (Poll)",
      "description": "Longitude of next waypoint.: Units degrees: settable true",
      "messagetype": "trigger_GPS WP NEXT LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP NEXT LON",
      "displaytitle": "GPS WP NEXT LON (OnChange)",
      "description": "Longitude of next waypoint.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS WP NEXT LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP NEXT LON",
      "displaytitle": "GPS WP NEXT LON (OnRequest)",
      "description": "Longitude of next waypoint.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS WP NEXT LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV ALT",
      "displaytitle": "GPS WP PREV ALT (Poll)",
      "description": "Altitude of previous waypoint.: Units meters: settable true",
      "messagetype": "trigger_GPS WP PREV ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP PREV ALT",
      "displaytitle": "GPS WP PREV ALT (OnChange)",
      "description": "Altitude of previous waypoint.: Units meters: settable true",
      "messagetype": "trigger_onChange_GPS WP PREV ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP PREV ALT",
      "displaytitle": "GPS WP PREV ALT (OnRequest)",
      "description": "Altitude of previous waypoint.: Units meters: settable true",
      "messagetype": "trigger_onRequest_GPS WP PREV ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV ID",
      "displaytitle": "GPS WP PREV ID (Poll)",
      "description": "ID of previous GPS waypoint.: Units null: settable true",
      "messagetype": "trigger_GPS WP PREV ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP PREV ID",
      "displaytitle": "GPS WP PREV ID (OnChange)",
      "description": "ID of previous GPS waypoint.: Units null: settable true",
      "messagetype": "trigger_onChange_GPS WP PREV ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP PREV ID",
      "displaytitle": "GPS WP PREV ID (OnRequest)",
      "description": "ID of previous GPS waypoint.: Units null: settable true",
      "messagetype": "trigger_onRequest_GPS WP PREV ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV LAT",
      "displaytitle": "GPS WP PREV LAT (Poll)",
      "description": "Latitude of previous waypoint.: Units degrees: settable true",
      "messagetype": "trigger_GPS WP PREV LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP PREV LAT",
      "displaytitle": "GPS WP PREV LAT (OnChange)",
      "description": "Latitude of previous waypoint.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS WP PREV LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP PREV LAT",
      "displaytitle": "GPS WP PREV LAT (OnRequest)",
      "description": "Latitude of previous waypoint.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS WP PREV LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV LON",
      "displaytitle": "GPS WP PREV LON (Poll)",
      "description": "Longitude of previous waypoint.: Units degrees: settable true",
      "messagetype": "trigger_GPS WP PREV LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP PREV LON",
      "displaytitle": "GPS WP PREV LON (OnChange)",
      "description": "Longitude of previous waypoint.: Units degrees: settable true",
      "messagetype": "trigger_onChange_GPS WP PREV LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP PREV LON",
      "displaytitle": "GPS WP PREV LON (OnRequest)",
      "description": "Longitude of previous waypoint.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_GPS WP PREV LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV VALID",
      "displaytitle": "GPS WP PREV VALID (Poll)",
      "description": "Is previous waypoint valid (i.e. current waypoint is not the first waypoint).: Units bool: settable true",
      "messagetype": "trigger_GPS WP PREV VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP PREV VALID",
      "displaytitle": "GPS WP PREV VALID (OnChange)",
      "description": "Is previous waypoint valid (i.e. current waypoint is not the first waypoint).: Units bool: settable true",
      "messagetype": "trigger_onChange_GPS WP PREV VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP PREV VALID",
      "displaytitle": "GPS WP PREV VALID (OnRequest)",
      "description": "Is previous waypoint valid (i.e. current waypoint is not the first waypoint).: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPS WP PREV VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP TRACK ANGLE ERROR",
      "displaytitle": "GPS WP TRACK ANGLE ERROR (Poll)",
      "description": "Tracking angle error to waypoint.: Units radians: settable true",
      "messagetype": "trigger_GPS WP TRACK ANGLE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP TRACK ANGLE ERROR",
      "displaytitle": "GPS WP TRACK ANGLE ERROR (OnChange)",
      "description": "Tracking angle error to waypoint.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS WP TRACK ANGLE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP TRACK ANGLE ERROR",
      "displaytitle": "GPS WP TRACK ANGLE ERROR (OnRequest)",
      "description": "Tracking angle error to waypoint.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS WP TRACK ANGLE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP TRUE BEARING",
      "displaytitle": "GPS WP TRUE BEARING (Poll)",
      "description": "True bearing to waypoint.: Units radians: settable true",
      "messagetype": "trigger_GPS WP TRUE BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP TRUE BEARING",
      "displaytitle": "GPS WP TRUE BEARING (OnChange)",
      "description": "True bearing to waypoint.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS WP TRUE BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP TRUE BEARING",
      "displaytitle": "GPS WP TRUE BEARING (OnRequest)",
      "description": "True bearing to waypoint.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS WP TRUE BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP TRUE REQ HDG",
      "displaytitle": "GPS WP TRUE REQ HDG (Poll)",
      "description": "Required true heading to waypoint.: Units radians: settable true",
      "messagetype": "trigger_GPS WP TRUE REQ HDG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP TRUE REQ HDG",
      "displaytitle": "GPS WP TRUE REQ HDG (OnChange)",
      "description": "Required true heading to waypoint.: Units radians: settable true",
      "messagetype": "trigger_onChange_GPS WP TRUE REQ HDG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP TRUE REQ HDG",
      "displaytitle": "GPS WP TRUE REQ HDG (OnRequest)",
      "description": "Required true heading to waypoint.: Units radians: settable true",
      "messagetype": "trigger_onRequest_GPS WP TRUE REQ HDG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP VERTICAL SPEED",
      "displaytitle": "GPS WP VERTICAL SPEED (Poll)",
      "description": "Vertical speed to waypoint.: Units Meters per second: settable true",
      "messagetype": "trigger_GPS WP VERTICAL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPS WP VERTICAL SPEED",
      "displaytitle": "GPS WP VERTICAL SPEED (OnChange)",
      "description": "Vertical speed to waypoint.: Units Meters per second: settable true",
      "messagetype": "trigger_onChange_GPS WP VERTICAL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPS WP VERTICAL SPEED",
      "displaytitle": "GPS WP VERTICAL SPEED (OnRequest)",
      "description": "Vertical speed to waypoint.: Units Meters per second: settable true",
      "messagetype": "trigger_onRequest_GPS WP VERTICAL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPWS SYSTEM ACTIVE",
      "displaytitle": "GPWS SYSTEM ACTIVE (Poll)",
      "description": "True if the Ground Proximity Warning System is active.: Units bool: settable true",
      "messagetype": "trigger_GPWS SYSTEM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPWS SYSTEM ACTIVE",
      "displaytitle": "GPWS SYSTEM ACTIVE (OnChange)",
      "description": "True if the Ground Proximity Warning System is active.: Units bool: settable true",
      "messagetype": "trigger_onChange_GPWS SYSTEM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPWS SYSTEM ACTIVE",
      "displaytitle": "GPWS SYSTEM ACTIVE (OnRequest)",
      "description": "True if the Ground Proximity Warning System is active.: Units bool: settable true",
      "messagetype": "trigger_onRequest_GPWS SYSTEM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPWS WARNING",
      "displaytitle": "GPWS WARNING (Poll)",
      "description": "True if Ground Proximity Warning System installed.: Units bool: settable false",
      "messagetype": "trigger_GPWS WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GPWS WARNING",
      "displaytitle": "GPWS WARNING (OnChange)",
      "description": "True if Ground Proximity Warning System installed.: Units bool: settable false",
      "messagetype": "trigger_onChange_GPWS WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GPWS WARNING",
      "displaytitle": "GPWS WARNING (OnRequest)",
      "description": "True if Ground Proximity Warning System installed.: Units bool: settable false",
      "messagetype": "trigger_onRequest_GPWS WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GROUND ALTITUDE",
      "displaytitle": "GROUND ALTITUDE (Poll)",
      "description": "Altitude of surface.: Units meters: settable false",
      "messagetype": "trigger_GROUND ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GROUND ALTITUDE",
      "displaytitle": "GROUND ALTITUDE (OnChange)",
      "description": "Altitude of surface.: Units meters: settable false",
      "messagetype": "trigger_onChange_GROUND ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GROUND ALTITUDE",
      "displaytitle": "GROUND ALTITUDE (OnRequest)",
      "description": "Altitude of surface.: Units meters: settable false",
      "messagetype": "trigger_onRequest_GROUND ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GROUND VELOCITY",
      "displaytitle": "GROUND VELOCITY (Poll)",
      "description": " relative to the earths surface: Units knots: settable false",
      "messagetype": "trigger_GROUND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GROUND VELOCITY",
      "displaytitle": "GROUND VELOCITY (OnChange)",
      "description": " relative to the earths surface: Units knots: settable false",
      "messagetype": "trigger_onChange_GROUND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GROUND VELOCITY",
      "displaytitle": "GROUND VELOCITY (OnRequest)",
      "description": " relative to the earths surface: Units knots: settable false",
      "messagetype": "trigger_onRequest_GROUND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GROUNDPOWERUNIT HOSE DEPLOYED",
      "displaytitle": "GROUNDPOWERUNIT HOSE DEPLOYED (Poll)",
      "description": "The current deployment amount of the ground power unit hose. Currently can only be set to 0 (not deployed) and 1 (deployed).: Units percent Over 100: settable false",
      "messagetype": "trigger_GROUNDPOWERUNIT HOSE DEPLOYED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GROUNDPOWERUNIT HOSE DEPLOYED",
      "displaytitle": "GROUNDPOWERUNIT HOSE DEPLOYED (OnChange)",
      "description": "The current deployment amount of the ground power unit hose. Currently can only be set to 0 (not deployed) and 1 (deployed).: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_GROUNDPOWERUNIT HOSE DEPLOYED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GROUNDPOWERUNIT HOSE DEPLOYED",
      "displaytitle": "GROUNDPOWERUNIT HOSE DEPLOYED (OnRequest)",
      "description": "The current deployment amount of the ground power unit hose. Currently can only be set to 0 (not deployed) and 1 (deployed).: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_GROUNDPOWERUNIT HOSE DEPLOYED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GROUNDPOWERUNIT HOSE END POSX",
      "displaytitle": "GROUNDPOWERUNIT HOSE END POSX (Poll)",
      "description": "The \"X\" axis position of the end of the ground power unit hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_GROUNDPOWERUNIT HOSE END POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GROUNDPOWERUNIT HOSE END POSX",
      "displaytitle": "GROUNDPOWERUNIT HOSE END POSX (OnChange)",
      "description": "The \"X\" axis position of the end of the ground power unit hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_GROUNDPOWERUNIT HOSE END POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GROUNDPOWERUNIT HOSE END POSX",
      "displaytitle": "GROUNDPOWERUNIT HOSE END POSX (OnRequest)",
      "description": "The \"X\" axis position of the end of the ground power unit hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_GROUNDPOWERUNIT HOSE END POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GROUNDPOWERUNIT HOSE END POSZ",
      "displaytitle": "GROUNDPOWERUNIT HOSE END POSZ (Poll)",
      "description": "The \"Z\" axis position of the end of the ground power unit hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_GROUNDPOWERUNIT HOSE END POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GROUNDPOWERUNIT HOSE END POSZ",
      "displaytitle": "GROUNDPOWERUNIT HOSE END POSZ (OnChange)",
      "description": "The \"Z\" axis position of the end of the ground power unit hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_GROUNDPOWERUNIT HOSE END POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GROUNDPOWERUNIT HOSE END POSZ",
      "displaytitle": "GROUNDPOWERUNIT HOSE END POSZ (OnRequest)",
      "description": "The \"Z\" axis position of the end of the ground power unit hose when fully deployed, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_GROUNDPOWERUNIT HOSE END POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GROUNDPOWERUNIT HOSE END RELATIVE HEADING",
      "displaytitle": "GROUNDPOWERUNIT HOSE END RELATIVE HEADING (Poll)",
      "description": "The heading of the end of the ground power unit hose, relative to the vehicle heading.: Units degrees: settable false",
      "messagetype": "trigger_GROUNDPOWERUNIT HOSE END RELATIVE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GROUNDPOWERUNIT HOSE END RELATIVE HEADING",
      "displaytitle": "GROUNDPOWERUNIT HOSE END RELATIVE HEADING (OnChange)",
      "description": "The heading of the end of the ground power unit hose, relative to the vehicle heading.: Units degrees: settable false",
      "messagetype": "trigger_onChange_GROUNDPOWERUNIT HOSE END RELATIVE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GROUNDPOWERUNIT HOSE END RELATIVE HEADING",
      "displaytitle": "GROUNDPOWERUNIT HOSE END RELATIVE HEADING (OnRequest)",
      "description": "The heading of the end of the ground power unit hose, relative to the vehicle heading.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_GROUNDPOWERUNIT HOSE END RELATIVE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GYRO DRIFT ERROR",
      "displaytitle": "GYRO DRIFT ERROR (Poll)",
      "description": "Angular error of heading indicator.: Units radians: settable false",
      "messagetype": "trigger_GYRO DRIFT ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_GYRO DRIFT ERROR",
      "displaytitle": "GYRO DRIFT ERROR (OnChange)",
      "description": "Angular error of heading indicator.: Units radians: settable false",
      "messagetype": "trigger_onChange_GYRO DRIFT ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_GYRO DRIFT ERROR",
      "displaytitle": "GYRO DRIFT ERROR (OnRequest)",
      "description": "Angular error of heading indicator.: Units radians: settable false",
      "messagetype": "trigger_onRequest_GYRO DRIFT ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HAND ANIM STATE",
      "displaytitle": "HAND ANIM STATE (Poll)",
      "description": "What frame of the hand is currently used.: Units enum: settable true",
      "messagetype": "trigger_HAND ANIM STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HAND ANIM STATE",
      "displaytitle": "HAND ANIM STATE (OnChange)",
      "description": "What frame of the hand is currently used.: Units enum: settable true",
      "messagetype": "trigger_onChange_HAND ANIM STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HAND ANIM STATE",
      "displaytitle": "HAND ANIM STATE (OnRequest)",
      "description": "What frame of the hand is currently used.: Units enum: settable true",
      "messagetype": "trigger_onRequest_HAND ANIM STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HAS STALL PROTECTION",
      "displaytitle": "HAS STALL PROTECTION (Poll)",
      "description": "Will return whether the aircraft has stall protection (true) or not (false).: Units bool: settable false",
      "messagetype": "trigger_HAS STALL PROTECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HAS STALL PROTECTION",
      "displaytitle": "HAS STALL PROTECTION (OnChange)",
      "description": "Will return whether the aircraft has stall protection (true) or not (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_HAS STALL PROTECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HAS STALL PROTECTION",
      "displaytitle": "HAS STALL PROTECTION (OnRequest)",
      "description": "Will return whether the aircraft has stall protection (true) or not (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_HAS STALL PROTECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HEADING INDICATOR",
      "displaytitle": "HEADING INDICATOR (Poll)",
      "description": "Heading indicator (directional gyro) indication.: Units radians: settable false",
      "messagetype": "trigger_HEADING INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HEADING INDICATOR",
      "displaytitle": "HEADING INDICATOR (OnChange)",
      "description": "Heading indicator (directional gyro) indication.: Units radians: settable false",
      "messagetype": "trigger_onChange_HEADING INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HEADING INDICATOR",
      "displaytitle": "HEADING INDICATOR (OnRequest)",
      "description": "Heading indicator (directional gyro) indication.: Units radians: settable false",
      "messagetype": "trigger_onRequest_HEADING INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HOLDBACK BAR INSTALLED",
      "displaytitle": "HOLDBACK BAR INSTALLED (Poll)",
      "description": "Holdback bars allow build up of thrust before takeoff from a catapult, and are installed by the deck crew of an aircraft carrier: Units bool: settable false",
      "messagetype": "trigger_HOLDBACK BAR INSTALLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HOLDBACK BAR INSTALLED",
      "displaytitle": "HOLDBACK BAR INSTALLED (OnChange)",
      "description": "Holdback bars allow build up of thrust before takeoff from a catapult, and are installed by the deck crew of an aircraft carrier: Units bool: settable false",
      "messagetype": "trigger_onChange_HOLDBACK BAR INSTALLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HOLDBACK BAR INSTALLED",
      "displaytitle": "HOLDBACK BAR INSTALLED (OnRequest)",
      "description": "Holdback bars allow build up of thrust before takeoff from a catapult, and are installed by the deck crew of an aircraft carrier: Units bool: settable false",
      "messagetype": "trigger_onRequest_HOLDBACK BAR INSTALLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI BEARING",
      "displaytitle": "HSI BEARING (Poll)",
      "description": "If the GPS_DRIVES_NAV1 variable is true and the HSI BEARING VALID variable is true, this variable contains the HSI needle bearing. If the GPS DRIVES NAV1 variable is false and the HSI BEARING VALID variable is true, this variable contains the ADF1 frequency.: Units degrees: settable false",
      "messagetype": "trigger_HSI BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI BEARING",
      "displaytitle": "HSI BEARING (OnChange)",
      "description": "If the GPS_DRIVES_NAV1 variable is true and the HSI BEARING VALID variable is true, this variable contains the HSI needle bearing. If the GPS DRIVES NAV1 variable is false and the HSI BEARING VALID variable is true, this variable contains the ADF1 frequency.: Units degrees: settable false",
      "messagetype": "trigger_onChange_HSI BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI BEARING",
      "displaytitle": "HSI BEARING (OnRequest)",
      "description": "If the GPS_DRIVES_NAV1 variable is true and the HSI BEARING VALID variable is true, this variable contains the HSI needle bearing. If the GPS DRIVES NAV1 variable is false and the HSI BEARING VALID variable is true, this variable contains the ADF1 frequency.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_HSI BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI BEARING VALID",
      "displaytitle": "HSI BEARING VALID (Poll)",
      "description": "This will return true if the HSI BEARING variable contains valid data.: Units bool: settable false",
      "messagetype": "trigger_HSI BEARING VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI BEARING VALID",
      "displaytitle": "HSI BEARING VALID (OnChange)",
      "description": "This will return true if the HSI BEARING variable contains valid data.: Units bool: settable false",
      "messagetype": "trigger_onChange_HSI BEARING VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI BEARING VALID",
      "displaytitle": "HSI BEARING VALID (OnRequest)",
      "description": "This will return true if the HSI BEARING variable contains valid data.: Units bool: settable false",
      "messagetype": "trigger_onRequest_HSI BEARING VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI CDI NEEDLE",
      "displaytitle": "HSI CDI NEEDLE (Poll)",
      "description": "Needle deflection (+/- 127).: Units number: settable false",
      "messagetype": "trigger_HSI CDI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI CDI NEEDLE",
      "displaytitle": "HSI CDI NEEDLE (OnChange)",
      "description": "Needle deflection (+/- 127).: Units number: settable false",
      "messagetype": "trigger_onChange_HSI CDI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI CDI NEEDLE",
      "displaytitle": "HSI CDI NEEDLE (OnRequest)",
      "description": "Needle deflection (+/- 127).: Units number: settable false",
      "messagetype": "trigger_onRequest_HSI CDI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI CDI NEEDLE VALID",
      "displaytitle": "HSI CDI NEEDLE VALID (Poll)",
      "description": "Signal valid.: Units bool: settable false",
      "messagetype": "trigger_HSI CDI NEEDLE VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI CDI NEEDLE VALID",
      "displaytitle": "HSI CDI NEEDLE VALID (OnChange)",
      "description": "Signal valid.: Units bool: settable false",
      "messagetype": "trigger_onChange_HSI CDI NEEDLE VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI CDI NEEDLE VALID",
      "displaytitle": "HSI CDI NEEDLE VALID (OnRequest)",
      "description": "Signal valid.: Units bool: settable false",
      "messagetype": "trigger_onRequest_HSI CDI NEEDLE VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI DISTANCE",
      "displaytitle": "HSI DISTANCE (Poll)",
      "description": "DME/GPS distance.: Units nautical miles: settable false",
      "messagetype": "trigger_HSI DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI DISTANCE",
      "displaytitle": "HSI DISTANCE (OnChange)",
      "description": "DME/GPS distance.: Units nautical miles: settable false",
      "messagetype": "trigger_onChange_HSI DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI DISTANCE",
      "displaytitle": "HSI DISTANCE (OnRequest)",
      "description": "DME/GPS distance.: Units nautical miles: settable false",
      "messagetype": "trigger_onRequest_HSI DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI GSI NEEDLE",
      "displaytitle": "HSI GSI NEEDLE (Poll)",
      "description": "Needle deflection (+/- 119).: Units number: settable false",
      "messagetype": "trigger_HSI GSI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI GSI NEEDLE",
      "displaytitle": "HSI GSI NEEDLE (OnChange)",
      "description": "Needle deflection (+/- 119).: Units number: settable false",
      "messagetype": "trigger_onChange_HSI GSI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI GSI NEEDLE",
      "displaytitle": "HSI GSI NEEDLE (OnRequest)",
      "description": "Needle deflection (+/- 119).: Units number: settable false",
      "messagetype": "trigger_onRequest_HSI GSI NEEDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI GSI NEEDLE VALID",
      "displaytitle": "HSI GSI NEEDLE VALID (Poll)",
      "description": "Signal valid.: Units bool: settable false",
      "messagetype": "trigger_HSI GSI NEEDLE VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI GSI NEEDLE VALID",
      "displaytitle": "HSI GSI NEEDLE VALID (OnChange)",
      "description": "Signal valid.: Units bool: settable false",
      "messagetype": "trigger_onChange_HSI GSI NEEDLE VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI GSI NEEDLE VALID",
      "displaytitle": "HSI GSI NEEDLE VALID (OnRequest)",
      "description": "Signal valid.: Units bool: settable false",
      "messagetype": "trigger_onRequest_HSI GSI NEEDLE VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI HAS LOCALIZER",
      "displaytitle": "HSI HAS LOCALIZER (Poll)",
      "description": "Station is a localizer.: Units bool: settable false",
      "messagetype": "trigger_HSI HAS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI HAS LOCALIZER",
      "displaytitle": "HSI HAS LOCALIZER (OnChange)",
      "description": "Station is a localizer.: Units bool: settable false",
      "messagetype": "trigger_onChange_HSI HAS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI HAS LOCALIZER",
      "displaytitle": "HSI HAS LOCALIZER (OnRequest)",
      "description": "Station is a localizer.: Units bool: settable false",
      "messagetype": "trigger_onRequest_HSI HAS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI SPEED",
      "displaytitle": "HSI SPEED (Poll)",
      "description": "DME/GPS speed.: Units knots: settable false",
      "messagetype": "trigger_HSI SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI SPEED",
      "displaytitle": "HSI SPEED (OnChange)",
      "description": "DME/GPS speed.: Units knots: settable false",
      "messagetype": "trigger_onChange_HSI SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI SPEED",
      "displaytitle": "HSI SPEED (OnRequest)",
      "description": "DME/GPS speed.: Units knots: settable false",
      "messagetype": "trigger_onRequest_HSI SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI STATION IDENT",
      "displaytitle": "HSI STATION IDENT (Poll)",
      "description": "Returns the ident of the the next GPS waypoint, if GPS_DRIVES_NAV1 is true. If GPS DRIVES NAV1 is false, it returns the identity of the station that is tuned on nav radio 1.: Units null: settable false",
      "messagetype": "trigger_HSI STATION IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI STATION IDENT",
      "displaytitle": "HSI STATION IDENT (OnChange)",
      "description": "Returns the ident of the the next GPS waypoint, if GPS_DRIVES_NAV1 is true. If GPS DRIVES NAV1 is false, it returns the identity of the station that is tuned on nav radio 1.: Units null: settable false",
      "messagetype": "trigger_onChange_HSI STATION IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI STATION IDENT",
      "displaytitle": "HSI STATION IDENT (OnRequest)",
      "description": "Returns the ident of the the next GPS waypoint, if GPS_DRIVES_NAV1 is true. If GPS DRIVES NAV1 is false, it returns the identity of the station that is tuned on nav radio 1.: Units null: settable false",
      "messagetype": "trigger_onRequest_HSI STATION IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HSI TF FLAGS",
      "displaytitle": "HSI TF FLAGS (Poll)",
      "description": "Nav TO/FROM flag.: Units enum: settable false",
      "messagetype": "trigger_HSI TF FLAGS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HSI TF FLAGS",
      "displaytitle": "HSI TF FLAGS (OnChange)",
      "description": "Nav TO/FROM flag.: Units enum: settable false",
      "messagetype": "trigger_onChange_HSI TF FLAGS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HSI TF FLAGS",
      "displaytitle": "HSI TF FLAGS (OnRequest)",
      "description": "Nav TO/FROM flag.: Units enum: settable false",
      "messagetype": "trigger_onRequest_HSI TF FLAGS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HYDRAULIC PRESSURE:index",
      "displaytitle": "HYDRAULIC PRESSURE:index (Poll)",
      "description": "Hydraulic system pressure. Indexes start at 1.: Units pounds: settable false",
      "messagetype": "trigger_HYDRAULIC PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_HYDRAULIC PRESSURE:index",
      "displaytitle": "HYDRAULIC PRESSURE:index (OnChange)",
      "description": "Hydraulic system pressure. Indexes start at 1.: Units pounds: settable false",
      "messagetype": "trigger_onChange_HYDRAULIC PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_HYDRAULIC PRESSURE:index",
      "displaytitle": "HYDRAULIC PRESSURE:index (OnRequest)",
      "description": "Hydraulic system pressure. Indexes start at 1.: Units pounds: settable false",
      "messagetype": "trigger_onRequest_HYDRAULIC PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "HYDRAULIC RESERVOIR PERCENT:index",
      "displaytitle": "HYDRAULIC RESERVOIR PERCENT:index (Poll)",
      "description": "Hydraulic pressure changes will follow changes to this variable. Indexes start at 1.: Units percent Over 100: settable true",
      "messagetype": "trigger_HYDRAULIC RESERVOIR PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_HYDRAULIC RESERVOIR PERCENT:index",
      "displaytitle": "HYDRAULIC RESERVOIR PERCENT:index (OnChange)",
      "description": "Hydraulic pressure changes will follow changes to this variable. Indexes start at 1.: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_HYDRAULIC RESERVOIR PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_HYDRAULIC RESERVOIR PERCENT:index",
      "displaytitle": "HYDRAULIC RESERVOIR PERCENT:index (OnRequest)",
      "description": "Hydraulic pressure changes will follow changes to this variable. Indexes start at 1.: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_HYDRAULIC RESERVOIR PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "HYDRAULIC SWITCH",
      "displaytitle": "HYDRAULIC SWITCH (Poll)",
      "description": "True if hydraulic switch is on.: Units bool: settable false",
      "messagetype": "trigger_HYDRAULIC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HYDRAULIC SWITCH",
      "displaytitle": "HYDRAULIC SWITCH (OnChange)",
      "description": "True if hydraulic switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_HYDRAULIC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HYDRAULIC SWITCH",
      "displaytitle": "HYDRAULIC SWITCH (OnRequest)",
      "description": "True if hydraulic switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_HYDRAULIC SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HYDRAULIC SYSTEM INTEGRITY",
      "displaytitle": "HYDRAULIC SYSTEM INTEGRITY (Poll)",
      "description": "Percent system functional.: Units percent Over 100: settable false",
      "messagetype": "trigger_HYDRAULIC SYSTEM INTEGRITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_HYDRAULIC SYSTEM INTEGRITY",
      "displaytitle": "HYDRAULIC SYSTEM INTEGRITY (OnChange)",
      "description": "Percent system functional.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_HYDRAULIC SYSTEM INTEGRITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_HYDRAULIC SYSTEM INTEGRITY",
      "displaytitle": "HYDRAULIC SYSTEM INTEGRITY (OnRequest)",
      "description": "Percent system functional.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_HYDRAULIC SYSTEM INTEGRITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IDLE ANIMATION ID",
      "displaytitle": "IDLE ANIMATION ID (Poll)",
      "description": "The ID of the idle animation for the sim object.: Units null: settable false",
      "messagetype": "trigger_IDLE ANIMATION ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IDLE ANIMATION ID",
      "displaytitle": "IDLE ANIMATION ID (OnChange)",
      "description": "The ID of the idle animation for the sim object.: Units null: settable false",
      "messagetype": "trigger_onChange_IDLE ANIMATION ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IDLE ANIMATION ID",
      "displaytitle": "IDLE ANIMATION ID (OnRequest)",
      "description": "The ID of the idle animation for the sim object.: Units null: settable false",
      "messagetype": "trigger_onRequest_IDLE ANIMATION ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INCIDENCE ALPHA",
      "displaytitle": "INCIDENCE ALPHA (Poll)",
      "description": "Angle of attack: Units radians: settable false",
      "messagetype": "trigger_INCIDENCE ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INCIDENCE ALPHA",
      "displaytitle": "INCIDENCE ALPHA (OnChange)",
      "description": "Angle of attack: Units radians: settable false",
      "messagetype": "trigger_onChange_INCIDENCE ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INCIDENCE ALPHA",
      "displaytitle": "INCIDENCE ALPHA (OnRequest)",
      "description": "Angle of attack: Units radians: settable false",
      "messagetype": "trigger_onRequest_INCIDENCE ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INCIDENCE BETA",
      "displaytitle": "INCIDENCE BETA (Poll)",
      "description": "Sideslip angle: Units radians: settable false",
      "messagetype": "trigger_INCIDENCE BETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INCIDENCE BETA",
      "displaytitle": "INCIDENCE BETA (OnChange)",
      "description": "Sideslip angle: Units radians: settable false",
      "messagetype": "trigger_onChange_INCIDENCE BETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INCIDENCE BETA",
      "displaytitle": "INCIDENCE BETA (OnRequest)",
      "description": "Sideslip angle: Units radians: settable false",
      "messagetype": "trigger_onRequest_INCIDENCE BETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INDICATED ALTITUDE",
      "displaytitle": "INDICATED ALTITUDE (Poll)",
      "description": "The indicated altitude.: Units feet: settable true",
      "messagetype": "trigger_INDICATED ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INDICATED ALTITUDE",
      "displaytitle": "INDICATED ALTITUDE (OnChange)",
      "description": "The indicated altitude.: Units feet: settable true",
      "messagetype": "trigger_onChange_INDICATED ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INDICATED ALTITUDE",
      "displaytitle": "INDICATED ALTITUDE (OnRequest)",
      "description": "The indicated altitude.: Units feet: settable true",
      "messagetype": "trigger_onRequest_INDICATED ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INDICATED ALTITUDE CALIBRATED",
      "displaytitle": "INDICATED ALTITUDE CALIBRATED (Poll)",
      "description": "Indicated altitude with the altimeter calibrated to current sea level pressure.: Units feet: settable false",
      "messagetype": "trigger_INDICATED ALTITUDE CALIBRATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INDICATED ALTITUDE CALIBRATED",
      "displaytitle": "INDICATED ALTITUDE CALIBRATED (OnChange)",
      "description": "Indicated altitude with the altimeter calibrated to current sea level pressure.: Units feet: settable false",
      "messagetype": "trigger_onChange_INDICATED ALTITUDE CALIBRATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INDICATED ALTITUDE CALIBRATED",
      "displaytitle": "INDICATED ALTITUDE CALIBRATED (OnRequest)",
      "description": "Indicated altitude with the altimeter calibrated to current sea level pressure.: Units feet: settable false",
      "messagetype": "trigger_onRequest_INDICATED ALTITUDE CALIBRATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INDICATED ALTITUDE EX1",
      "displaytitle": "INDICATED ALTITUDE EX1 (Poll)",
      "description": "Similar to INDICATED_ALTITUDE but doesn't affect actual plane position when setting this variable.: Units feet: settable false",
      "messagetype": "trigger_INDICATED ALTITUDE EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INDICATED ALTITUDE EX1",
      "displaytitle": "INDICATED ALTITUDE EX1 (OnChange)",
      "description": "Similar to INDICATED_ALTITUDE but doesn't affect actual plane position when setting this variable.: Units feet: settable false",
      "messagetype": "trigger_onChange_INDICATED ALTITUDE EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INDICATED ALTITUDE EX1",
      "displaytitle": "INDICATED ALTITUDE EX1 (OnRequest)",
      "description": "Similar to INDICATED_ALTITUDE but doesn't affect actual plane position when setting this variable.: Units feet: settable false",
      "messagetype": "trigger_onRequest_INDICATED ALTITUDE EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INDUCTOR COMPASS HEADING REF",
      "displaytitle": "INDUCTOR COMPASS HEADING REF (Poll)",
      "description": "Inductor compass heading.: Units radians: settable false",
      "messagetype": "trigger_INDUCTOR COMPASS HEADING REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INDUCTOR COMPASS HEADING REF",
      "displaytitle": "INDUCTOR COMPASS HEADING REF (OnChange)",
      "description": "Inductor compass heading.: Units radians: settable false",
      "messagetype": "trigger_onChange_INDUCTOR COMPASS HEADING REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INDUCTOR COMPASS HEADING REF",
      "displaytitle": "INDUCTOR COMPASS HEADING REF (OnRequest)",
      "description": "Inductor compass heading.: Units radians: settable false",
      "messagetype": "trigger_onRequest_INDUCTOR COMPASS HEADING REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INDUCTOR COMPASS PERCENT DEVIATION",
      "displaytitle": "INDUCTOR COMPASS PERCENT DEVIATION (Poll)",
      "description": "Inductor compass deviation reading.: Units percent Over 100: settable false",
      "messagetype": "trigger_INDUCTOR COMPASS PERCENT DEVIATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INDUCTOR COMPASS PERCENT DEVIATION",
      "displaytitle": "INDUCTOR COMPASS PERCENT DEVIATION (OnChange)",
      "description": "Inductor compass deviation reading.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_INDUCTOR COMPASS PERCENT DEVIATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INDUCTOR COMPASS PERCENT DEVIATION",
      "displaytitle": "INDUCTOR COMPASS PERCENT DEVIATION (OnRequest)",
      "description": "Inductor compass deviation reading.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_INDUCTOR COMPASS PERCENT DEVIATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INNER MARKER",
      "displaytitle": "INNER MARKER (Poll)",
      "description": "Inner marker state.: Units bool: settable true",
      "messagetype": "trigger_INNER MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INNER MARKER",
      "displaytitle": "INNER MARKER (OnChange)",
      "description": "Inner marker state.: Units bool: settable true",
      "messagetype": "trigger_onChange_INNER MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INNER MARKER",
      "displaytitle": "INNER MARKER (OnRequest)",
      "description": "Inner marker state.: Units bool: settable true",
      "messagetype": "trigger_onRequest_INNER MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT BANK",
      "displaytitle": "INTERACTIVE POINT BANK (Poll)",
      "description": "Interactive Point orientation: Bank: Units degrees: settable false",
      "messagetype": "trigger_INTERACTIVE POINT BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT BANK",
      "displaytitle": "INTERACTIVE POINT BANK (OnChange)",
      "description": "Interactive Point orientation: Bank: Units degrees: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT BANK",
      "displaytitle": "INTERACTIVE POINT BANK (OnRequest)",
      "description": "Interactive Point orientation: Bank: Units degrees: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT BANK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT GOAL",
      "displaytitle": "INTERACTIVE POINT GOAL (Poll)",
      "description": "The Interactive Point goal percentage of opening (if it's for a door) or percentage of deployment (if it's for a hose or cable).: Units percent Over 100: settable true",
      "messagetype": "trigger_INTERACTIVE POINT GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT GOAL",
      "displaytitle": "INTERACTIVE POINT GOAL (OnChange)",
      "description": "The Interactive Point goal percentage of opening (if it's for a door) or percentage of deployment (if it's for a hose or cable).: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_INTERACTIVE POINT GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT GOAL",
      "displaytitle": "INTERACTIVE POINT GOAL (OnRequest)",
      "description": "The Interactive Point goal percentage of opening (if it's for a door) or percentage of deployment (if it's for a hose or cable).: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT HEADING",
      "displaytitle": "INTERACTIVE POINT HEADING (Poll)",
      "description": "Interactive Point orientation: Heading: Units degrees: settable false",
      "messagetype": "trigger_INTERACTIVE POINT HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT HEADING",
      "displaytitle": "INTERACTIVE POINT HEADING (OnChange)",
      "description": "Interactive Point orientation: Heading: Units degrees: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT HEADING",
      "displaytitle": "INTERACTIVE POINT HEADING (OnRequest)",
      "description": "Interactive Point orientation: Heading: Units degrees: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT JETWAY LEFT BEND",
      "displaytitle": "INTERACTIVE POINT JETWAY LEFT BEND (Poll)",
      "description": "Interactive Point Jetway constant, determining the desired left bend ratio of jetway hood: Units percent: settable false",
      "messagetype": "trigger_INTERACTIVE POINT JETWAY LEFT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT JETWAY LEFT BEND",
      "displaytitle": "INTERACTIVE POINT JETWAY LEFT BEND (OnChange)",
      "description": "Interactive Point Jetway constant, determining the desired left bend ratio of jetway hood: Units percent: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT JETWAY LEFT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT JETWAY LEFT BEND",
      "displaytitle": "INTERACTIVE POINT JETWAY LEFT BEND (OnRequest)",
      "description": "Interactive Point Jetway constant, determining the desired left bend ratio of jetway hood: Units percent: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT JETWAY LEFT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT JETWAY LEFT DEPLOYMENT",
      "displaytitle": "INTERACTIVE POINT JETWAY LEFT DEPLOYMENT (Poll)",
      "description": "Interactive Point Jetway constant, determining the desired left deployment angle of jetway hood: Units degrees: settable false",
      "messagetype": "trigger_INTERACTIVE POINT JETWAY LEFT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT JETWAY LEFT DEPLOYMENT",
      "displaytitle": "INTERACTIVE POINT JETWAY LEFT DEPLOYMENT (OnChange)",
      "description": "Interactive Point Jetway constant, determining the desired left deployment angle of jetway hood: Units degrees: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT JETWAY LEFT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT JETWAY LEFT DEPLOYMENT",
      "displaytitle": "INTERACTIVE POINT JETWAY LEFT DEPLOYMENT (OnRequest)",
      "description": "Interactive Point Jetway constant, determining the desired left deployment angle of jetway hood: Units degrees: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT JETWAY LEFT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT JETWAY RIGHT BEND",
      "displaytitle": "INTERACTIVE POINT JETWAY RIGHT BEND (Poll)",
      "description": "Interactive Point Jetway constant, determining the desired right bend ratio of jetway hood: Units percent: settable false",
      "messagetype": "trigger_INTERACTIVE POINT JETWAY RIGHT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT JETWAY RIGHT BEND",
      "displaytitle": "INTERACTIVE POINT JETWAY RIGHT BEND (OnChange)",
      "description": "Interactive Point Jetway constant, determining the desired right bend ratio of jetway hood: Units percent: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT JETWAY RIGHT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT JETWAY RIGHT BEND",
      "displaytitle": "INTERACTIVE POINT JETWAY RIGHT BEND (OnRequest)",
      "description": "Interactive Point Jetway constant, determining the desired right bend ratio of jetway hood: Units percent: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT JETWAY RIGHT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT",
      "displaytitle": "INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT (Poll)",
      "description": "Interactive Point Jetway constant, determining the desired right deployment angle of jetway hood: Units degrees: settable false",
      "messagetype": "trigger_INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT",
      "displaytitle": "INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT (OnChange)",
      "description": "Interactive Point Jetway constant, determining the desired right deployment angle of jetway hood: Units degrees: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT",
      "displaytitle": "INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT (OnRequest)",
      "description": "Interactive Point Jetway constant, determining the desired right deployment angle of jetway hood: Units degrees: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT JETWAY TOP HORIZONTAL",
      "displaytitle": "INTERACTIVE POINT JETWAY TOP HORIZONTAL (Poll)",
      "description": "Interactive Point Jetway constant, determining the desired top horizontal ratio of displacement of jetway hood: Units percent: settable false",
      "messagetype": "trigger_INTERACTIVE POINT JETWAY TOP HORIZONTAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT JETWAY TOP HORIZONTAL",
      "displaytitle": "INTERACTIVE POINT JETWAY TOP HORIZONTAL (OnChange)",
      "description": "Interactive Point Jetway constant, determining the desired top horizontal ratio of displacement of jetway hood: Units percent: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT JETWAY TOP HORIZONTAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT JETWAY TOP HORIZONTAL",
      "displaytitle": "INTERACTIVE POINT JETWAY TOP HORIZONTAL (OnRequest)",
      "description": "Interactive Point Jetway constant, determining the desired top horizontal ratio of displacement of jetway hood: Units percent: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT JETWAY TOP HORIZONTAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT JETWAY TOP VERTICAL",
      "displaytitle": "INTERACTIVE POINT JETWAY TOP VERTICAL (Poll)",
      "description": "Interactive Point Jetway constant, determining the desired top vertical ratio of displacement of jetway hood: Units percent: settable false",
      "messagetype": "trigger_INTERACTIVE POINT JETWAY TOP VERTICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT JETWAY TOP VERTICAL",
      "displaytitle": "INTERACTIVE POINT JETWAY TOP VERTICAL (OnChange)",
      "description": "Interactive Point Jetway constant, determining the desired top vertical ratio of displacement of jetway hood: Units percent: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT JETWAY TOP VERTICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT JETWAY TOP VERTICAL",
      "displaytitle": "INTERACTIVE POINT JETWAY TOP VERTICAL (OnRequest)",
      "description": "Interactive Point Jetway constant, determining the desired top vertical ratio of displacement of jetway hood: Units percent: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT JETWAY TOP VERTICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT OPEN",
      "displaytitle": "INTERACTIVE POINT OPEN (Poll)",
      "description": "Interactive Point current percentage of opening (if door) or deployment (if hose/cable): Units percent Over 100: settable true",
      "messagetype": "trigger_INTERACTIVE POINT OPEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT OPEN",
      "displaytitle": "INTERACTIVE POINT OPEN (OnChange)",
      "description": "Interactive Point current percentage of opening (if door) or deployment (if hose/cable): Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_INTERACTIVE POINT OPEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT OPEN",
      "displaytitle": "INTERACTIVE POINT OPEN (OnRequest)",
      "description": "Interactive Point current percentage of opening (if door) or deployment (if hose/cable): Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT OPEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT PITCH",
      "displaytitle": "INTERACTIVE POINT PITCH (Poll)",
      "description": "Interactive Point orientation: Pitch: Units degrees: settable false",
      "messagetype": "trigger_INTERACTIVE POINT PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT PITCH",
      "displaytitle": "INTERACTIVE POINT PITCH (OnChange)",
      "description": "Interactive Point orientation: Pitch: Units degrees: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT PITCH",
      "displaytitle": "INTERACTIVE POINT PITCH (OnRequest)",
      "description": "Interactive Point orientation: Pitch: Units degrees: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT POSX",
      "displaytitle": "INTERACTIVE POINT POSX (Poll)",
      "description": "Interactive Point X position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_INTERACTIVE POINT POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT POSX",
      "displaytitle": "INTERACTIVE POINT POSX (OnChange)",
      "description": "Interactive Point X position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT POSX",
      "displaytitle": "INTERACTIVE POINT POSX (OnRequest)",
      "description": "Interactive Point X position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT POSX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT POSY",
      "displaytitle": "INTERACTIVE POINT POSY (Poll)",
      "description": "Interactive Point Y position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_INTERACTIVE POINT POSY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT POSY",
      "displaytitle": "INTERACTIVE POINT POSY (OnChange)",
      "description": "Interactive Point Y position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT POSY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT POSY",
      "displaytitle": "INTERACTIVE POINT POSY (OnRequest)",
      "description": "Interactive Point Y position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT POSY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT POSZ",
      "displaytitle": "INTERACTIVE POINT POSZ (Poll)",
      "description": "Interactive Point Z position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_INTERACTIVE POINT POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT POSZ",
      "displaytitle": "INTERACTIVE POINT POSZ (OnChange)",
      "description": "Interactive Point Z position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT POSZ",
      "displaytitle": "INTERACTIVE POINT POSZ (OnRequest)",
      "description": "Interactive Point Z position relative to datum reference point: Units feet: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT TYPE",
      "displaytitle": "INTERACTIVE POINT TYPE (Poll)",
      "description": "The type of interactive point: Units enum: settable false",
      "messagetype": "trigger_INTERACTIVE POINT TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERACTIVE POINT TYPE",
      "displaytitle": "INTERACTIVE POINT TYPE (OnChange)",
      "description": "The type of interactive point: Units enum: settable false",
      "messagetype": "trigger_onChange_INTERACTIVE POINT TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERACTIVE POINT TYPE",
      "displaytitle": "INTERACTIVE POINT TYPE (OnRequest)",
      "description": "The type of interactive point: Units enum: settable false",
      "messagetype": "trigger_onRequest_INTERACTIVE POINT TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERCOM MODE",
      "displaytitle": "INTERCOM MODE (Poll)",
      "description": "Intercom Mode: Units enum: settable false",
      "messagetype": "trigger_INTERCOM MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERCOM MODE",
      "displaytitle": "INTERCOM MODE (OnChange)",
      "description": "Intercom Mode: Units enum: settable false",
      "messagetype": "trigger_onChange_INTERCOM MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERCOM MODE",
      "displaytitle": "INTERCOM MODE (OnRequest)",
      "description": "Intercom Mode: Units enum: settable false",
      "messagetype": "trigger_onRequest_INTERCOM MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERCOM SYSTEM ACTIVE",
      "displaytitle": "INTERCOM SYSTEM ACTIVE (Poll)",
      "description": "Whether or not the intercom system is active.: Units bool: settable false",
      "messagetype": "trigger_INTERCOM SYSTEM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_INTERCOM SYSTEM ACTIVE",
      "displaytitle": "INTERCOM SYSTEM ACTIVE (OnChange)",
      "description": "Whether or not the intercom system is active.: Units bool: settable false",
      "messagetype": "trigger_onChange_INTERCOM SYSTEM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_INTERCOM SYSTEM ACTIVE",
      "displaytitle": "INTERCOM SYSTEM ACTIVE (OnRequest)",
      "description": "Whether or not the intercom system is active.: Units bool: settable false",
      "messagetype": "trigger_onRequest_INTERCOM SYSTEM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS ALTITUDE FREEZE ON",
      "displaytitle": "IS ALTITUDE FREEZE ON (Poll)",
      "description": "True if the altitude of the aircraft is frozen.: Units bool: settable false",
      "messagetype": "trigger_IS ALTITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS ALTITUDE FREEZE ON",
      "displaytitle": "IS ALTITUDE FREEZE ON (OnChange)",
      "description": "True if the altitude of the aircraft is frozen.: Units bool: settable false",
      "messagetype": "trigger_onChange_IS ALTITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS ALTITUDE FREEZE ON",
      "displaytitle": "IS ALTITUDE FREEZE ON (OnRequest)",
      "description": "True if the altitude of the aircraft is frozen.: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS ALTITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS ANY INTERIOR LIGHT ON",
      "displaytitle": "IS ANY INTERIOR LIGHT ON (Poll)",
      "description": "Will return true if any interior light is on or false otherwise.: Units bool: settable false",
      "messagetype": "trigger_IS ANY INTERIOR LIGHT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS ANY INTERIOR LIGHT ON",
      "displaytitle": "IS ANY INTERIOR LIGHT ON (OnChange)",
      "description": "Will return true if any interior light is on or false otherwise.: Units bool: settable false",
      "messagetype": "trigger_onChange_IS ANY INTERIOR LIGHT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS ANY INTERIOR LIGHT ON",
      "displaytitle": "IS ANY INTERIOR LIGHT ON (OnRequest)",
      "description": "Will return true if any interior light is on or false otherwise.: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS ANY INTERIOR LIGHT ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS ATTACHED TO SLING",
      "displaytitle": "IS ATTACHED TO SLING (Poll)",
      "description": "Set to true if this object is attached to a sling.: Units bool: settable false",
      "messagetype": "trigger_IS ATTACHED TO SLING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS ATTACHED TO SLING",
      "displaytitle": "IS ATTACHED TO SLING (OnChange)",
      "description": "Set to true if this object is attached to a sling.: Units bool: settable false",
      "messagetype": "trigger_onChange_IS ATTACHED TO SLING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS ATTACHED TO SLING",
      "displaytitle": "IS ATTACHED TO SLING (OnRequest)",
      "description": "Set to true if this object is attached to a sling.: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS ATTACHED TO SLING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS ATTITUDE FREEZE ON",
      "displaytitle": "IS ATTITUDE FREEZE ON (Poll)",
      "description": "True if the attitude (pitch, bank and heading) of the aircraft is frozen.: Units bool: settable false",
      "messagetype": "trigger_IS ATTITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS ATTITUDE FREEZE ON",
      "displaytitle": "IS ATTITUDE FREEZE ON (OnChange)",
      "description": "True if the attitude (pitch, bank and heading) of the aircraft is frozen.: Units bool: settable false",
      "messagetype": "trigger_onChange_IS ATTITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS ATTITUDE FREEZE ON",
      "displaytitle": "IS ATTITUDE FREEZE ON (OnRequest)",
      "description": "True if the attitude (pitch, bank and heading) of the aircraft is frozen.: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS ATTITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS CAMERA RAY INTERSECT WITH NODE",
      "displaytitle": "IS CAMERA RAY INTERSECT WITH NODE (Poll)",
      "description": "This SimVar is used to check for a collision along a ray from the center of the user FOV and a model node. The available nodes that can be checked using this SimVar must be previously defined in the [CAMERA_RAY_NODE_COLLISION] of the camera.cfg file. The SimVar requires a node index value between 1 and 10, corresponding to the node defined in the CFG file, and the SimVar will return 1 (TRUE) if there is a collision along the camera ray or 0 (FALSE) otherwise. You may also supply an index of 0 to perform a collision check for all defined nodes, in which case the SimVar will return 1 (TRUE) if there is a collision between the ray and any of the defined nodes. Supplying an index outside of the range of 1 to 10, or supplying an index for which no node has been defined, will return 0 (FALSE).: Units bool: settable false",
      "messagetype": "trigger_IS CAMERA RAY INTERSECT WITH NODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS CAMERA RAY INTERSECT WITH NODE",
      "displaytitle": "IS CAMERA RAY INTERSECT WITH NODE (OnChange)",
      "description": "This SimVar is used to check for a collision along a ray from the center of the user FOV and a model node. The available nodes that can be checked using this SimVar must be previously defined in the [CAMERA_RAY_NODE_COLLISION] of the camera.cfg file. The SimVar requires a node index value between 1 and 10, corresponding to the node defined in the CFG file, and the SimVar will return 1 (TRUE) if there is a collision along the camera ray or 0 (FALSE) otherwise. You may also supply an index of 0 to perform a collision check for all defined nodes, in which case the SimVar will return 1 (TRUE) if there is a collision between the ray and any of the defined nodes. Supplying an index outside of the range of 1 to 10, or supplying an index for which no node has been defined, will return 0 (FALSE).: Units bool: settable false",
      "messagetype": "trigger_onChange_IS CAMERA RAY INTERSECT WITH NODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS CAMERA RAY INTERSECT WITH NODE",
      "displaytitle": "IS CAMERA RAY INTERSECT WITH NODE (OnRequest)",
      "description": "This SimVar is used to check for a collision along a ray from the center of the user FOV and a model node. The available nodes that can be checked using this SimVar must be previously defined in the [CAMERA_RAY_NODE_COLLISION] of the camera.cfg file. The SimVar requires a node index value between 1 and 10, corresponding to the node defined in the CFG file, and the SimVar will return 1 (TRUE) if there is a collision along the camera ray or 0 (FALSE) otherwise. You may also supply an index of 0 to perform a collision check for all defined nodes, in which case the SimVar will return 1 (TRUE) if there is a collision between the ray and any of the defined nodes. Supplying an index outside of the range of 1 to 10, or supplying an index for which no node has been defined, will return 0 (FALSE).: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS CAMERA RAY INTERSECT WITH NODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS GEAR FLOATS",
      "displaytitle": "IS GEAR FLOATS (Poll)",
      "description": "True if landing gear are floats: Units bool: settable false",
      "messagetype": "trigger_IS GEAR FLOATS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS GEAR FLOATS",
      "displaytitle": "IS GEAR FLOATS (OnChange)",
      "description": "True if landing gear are floats: Units bool: settable false",
      "messagetype": "trigger_onChange_IS GEAR FLOATS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS GEAR FLOATS",
      "displaytitle": "IS GEAR FLOATS (OnRequest)",
      "description": "True if landing gear are floats: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS GEAR FLOATS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS GEAR RETRACTABLE",
      "displaytitle": "IS GEAR RETRACTABLE (Poll)",
      "description": "True if gear can be retracted: Units bool: settable false",
      "messagetype": "trigger_IS GEAR RETRACTABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS GEAR RETRACTABLE",
      "displaytitle": "IS GEAR RETRACTABLE (OnChange)",
      "description": "True if gear can be retracted: Units bool: settable false",
      "messagetype": "trigger_onChange_IS GEAR RETRACTABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS GEAR RETRACTABLE",
      "displaytitle": "IS GEAR RETRACTABLE (OnRequest)",
      "description": "True if gear can be retracted: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS GEAR RETRACTABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS GEAR SKIDS",
      "displaytitle": "IS GEAR SKIDS (Poll)",
      "description": "True if landing gear is skids: Units bool: settable false",
      "messagetype": "trigger_IS GEAR SKIDS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS GEAR SKIDS",
      "displaytitle": "IS GEAR SKIDS (OnChange)",
      "description": "True if landing gear is skids: Units bool: settable false",
      "messagetype": "trigger_onChange_IS GEAR SKIDS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS GEAR SKIDS",
      "displaytitle": "IS GEAR SKIDS (OnRequest)",
      "description": "True if landing gear is skids: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS GEAR SKIDS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS GEAR SKIS",
      "displaytitle": "IS GEAR SKIS (Poll)",
      "description": "True if landing gear is skis: Units bool: settable false",
      "messagetype": "trigger_IS GEAR SKIS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS GEAR SKIS",
      "displaytitle": "IS GEAR SKIS (OnChange)",
      "description": "True if landing gear is skis: Units bool: settable false",
      "messagetype": "trigger_onChange_IS GEAR SKIS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS GEAR SKIS",
      "displaytitle": "IS GEAR SKIS (OnRequest)",
      "description": "True if landing gear is skis: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS GEAR SKIS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS GEAR WHEELS",
      "displaytitle": "IS GEAR WHEELS (Poll)",
      "description": "True if landing gear is wheels: Units bool: settable false",
      "messagetype": "trigger_IS GEAR WHEELS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS GEAR WHEELS",
      "displaytitle": "IS GEAR WHEELS (OnChange)",
      "description": "True if landing gear is wheels: Units bool: settable false",
      "messagetype": "trigger_onChange_IS GEAR WHEELS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS GEAR WHEELS",
      "displaytitle": "IS GEAR WHEELS (OnRequest)",
      "description": "True if landing gear is wheels: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS GEAR WHEELS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS LATITUDE LONGITUDE FREEZE ON",
      "displaytitle": "IS LATITUDE LONGITUDE FREEZE ON (Poll)",
      "description": "True if the lat/lon of the aircraft (either user or AI controlled) is frozen. If this variable returns true, it means that the latitude and longitude of the aircraft are not being controlled by ESP, so enabling, for example, a SimConnect client to control the position of the aircraft. This can also apply to altitude and attitude. Also refer to the range of KEY_FREEZE..... Event IDs.: Units bool: settable false",
      "messagetype": "trigger_IS LATITUDE LONGITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS LATITUDE LONGITUDE FREEZE ON",
      "displaytitle": "IS LATITUDE LONGITUDE FREEZE ON (OnChange)",
      "description": "True if the lat/lon of the aircraft (either user or AI controlled) is frozen. If this variable returns true, it means that the latitude and longitude of the aircraft are not being controlled by ESP, so enabling, for example, a SimConnect client to control the position of the aircraft. This can also apply to altitude and attitude. Also refer to the range of KEY_FREEZE..... Event IDs.: Units bool: settable false",
      "messagetype": "trigger_onChange_IS LATITUDE LONGITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS LATITUDE LONGITUDE FREEZE ON",
      "displaytitle": "IS LATITUDE LONGITUDE FREEZE ON (OnRequest)",
      "description": "True if the lat/lon of the aircraft (either user or AI controlled) is frozen. If this variable returns true, it means that the latitude and longitude of the aircraft are not being controlled by ESP, so enabling, for example, a SimConnect client to control the position of the aircraft. This can also apply to altitude and attitude. Also refer to the range of KEY_FREEZE..... Event IDs.: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS LATITUDE LONGITUDE FREEZE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS SLEW ACTIVE",
      "displaytitle": "IS SLEW ACTIVE (Poll)",
      "description": "True if slew is active: Units bool: settable true",
      "messagetype": "trigger_IS SLEW ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS SLEW ACTIVE",
      "displaytitle": "IS SLEW ACTIVE (OnChange)",
      "description": "True if slew is active: Units bool: settable true",
      "messagetype": "trigger_onChange_IS SLEW ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS SLEW ACTIVE",
      "displaytitle": "IS SLEW ACTIVE (OnRequest)",
      "description": "True if slew is active: Units bool: settable true",
      "messagetype": "trigger_onRequest_IS SLEW ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS SLEW ALLOWED",
      "displaytitle": "IS SLEW ALLOWED (Poll)",
      "description": "True if slew is enabled: Units bool: settable true",
      "messagetype": "trigger_IS SLEW ALLOWED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS SLEW ALLOWED",
      "displaytitle": "IS SLEW ALLOWED (OnChange)",
      "description": "True if slew is enabled: Units bool: settable true",
      "messagetype": "trigger_onChange_IS SLEW ALLOWED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS SLEW ALLOWED",
      "displaytitle": "IS SLEW ALLOWED (OnRequest)",
      "description": "True if slew is enabled: Units bool: settable true",
      "messagetype": "trigger_onRequest_IS SLEW ALLOWED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS TAIL DRAGGER",
      "displaytitle": "IS TAIL DRAGGER (Poll)",
      "description": "True if the aircraft is a taildragger: Units bool: settable false",
      "messagetype": "trigger_IS TAIL DRAGGER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS TAIL DRAGGER",
      "displaytitle": "IS TAIL DRAGGER (OnChange)",
      "description": "True if the aircraft is a taildragger: Units bool: settable false",
      "messagetype": "trigger_onChange_IS TAIL DRAGGER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS TAIL DRAGGER",
      "displaytitle": "IS TAIL DRAGGER (OnRequest)",
      "description": "True if the aircraft is a taildragger: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS TAIL DRAGGER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS USER SIM",
      "displaytitle": "IS USER SIM (Poll)",
      "description": "Is this the user loaded aircraft: Units bool: settable false",
      "messagetype": "trigger_IS USER SIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_IS USER SIM",
      "displaytitle": "IS USER SIM (OnChange)",
      "description": "Is this the user loaded aircraft: Units bool: settable false",
      "messagetype": "trigger_onChange_IS USER SIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_IS USER SIM",
      "displaytitle": "IS USER SIM (OnRequest)",
      "description": "Is this the user loaded aircraft: Units bool: settable false",
      "messagetype": "trigger_onRequest_IS USER SIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY HOOD LEFT BEND",
      "displaytitle": "JETWAY HOOD LEFT BEND (Poll)",
      "description": "The target position for the left bend animation of the jetway hood.: Units percent: settable false",
      "messagetype": "trigger_JETWAY HOOD LEFT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY HOOD LEFT BEND",
      "displaytitle": "JETWAY HOOD LEFT BEND (OnChange)",
      "description": "The target position for the left bend animation of the jetway hood.: Units percent: settable false",
      "messagetype": "trigger_onChange_JETWAY HOOD LEFT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY HOOD LEFT BEND",
      "displaytitle": "JETWAY HOOD LEFT BEND (OnRequest)",
      "description": "The target position for the left bend animation of the jetway hood.: Units percent: settable false",
      "messagetype": "trigger_onRequest_JETWAY HOOD LEFT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY HOOD LEFT DEPLOYMENT",
      "displaytitle": "JETWAY HOOD LEFT DEPLOYMENT (Poll)",
      "description": "The target angle for the left deployment animation of the jetway hood, where 0 is considered vertical.: Units degrees: settable false",
      "messagetype": "trigger_JETWAY HOOD LEFT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY HOOD LEFT DEPLOYMENT",
      "displaytitle": "JETWAY HOOD LEFT DEPLOYMENT (OnChange)",
      "description": "The target angle for the left deployment animation of the jetway hood, where 0 is considered vertical.: Units degrees: settable false",
      "messagetype": "trigger_onChange_JETWAY HOOD LEFT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY HOOD LEFT DEPLOYMENT",
      "displaytitle": "JETWAY HOOD LEFT DEPLOYMENT (OnRequest)",
      "description": "The target angle for the left deployment animation of the jetway hood, where 0 is considered vertical.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_JETWAY HOOD LEFT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY HOOD RIGHT BEND",
      "displaytitle": "JETWAY HOOD RIGHT BEND (Poll)",
      "description": "The target position for the right bend animation of the jetway hood.: Units percent: settable false",
      "messagetype": "trigger_JETWAY HOOD RIGHT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY HOOD RIGHT BEND",
      "displaytitle": "JETWAY HOOD RIGHT BEND (OnChange)",
      "description": "The target position for the right bend animation of the jetway hood.: Units percent: settable false",
      "messagetype": "trigger_onChange_JETWAY HOOD RIGHT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY HOOD RIGHT BEND",
      "displaytitle": "JETWAY HOOD RIGHT BEND (OnRequest)",
      "description": "The target position for the right bend animation of the jetway hood.: Units percent: settable false",
      "messagetype": "trigger_onRequest_JETWAY HOOD RIGHT BEND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY HOOD RIGHT DEPLOYMENT",
      "displaytitle": "JETWAY HOOD RIGHT DEPLOYMENT (Poll)",
      "description": "The target angle for the right deployment animation of the jetway hood, where 0 is considered vertical.: Units degrees: settable false",
      "messagetype": "trigger_JETWAY HOOD RIGHT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY HOOD RIGHT DEPLOYMENT",
      "displaytitle": "JETWAY HOOD RIGHT DEPLOYMENT (OnChange)",
      "description": "The target angle for the right deployment animation of the jetway hood, where 0 is considered vertical.: Units degrees: settable false",
      "messagetype": "trigger_onChange_JETWAY HOOD RIGHT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY HOOD RIGHT DEPLOYMENT",
      "displaytitle": "JETWAY HOOD RIGHT DEPLOYMENT (OnRequest)",
      "description": "The target angle for the right deployment animation of the jetway hood, where 0 is considered vertical.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_JETWAY HOOD RIGHT DEPLOYMENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY HOOD TOP HORIZONTAL",
      "displaytitle": "JETWAY HOOD TOP HORIZONTAL (Poll)",
      "description": "Target position for the top horizontal animation of the jetway hood. Values can be between -100% and 100%.: Units percent: settable false",
      "messagetype": "trigger_JETWAY HOOD TOP HORIZONTAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY HOOD TOP HORIZONTAL",
      "displaytitle": "JETWAY HOOD TOP HORIZONTAL (OnChange)",
      "description": "Target position for the top horizontal animation of the jetway hood. Values can be between -100% and 100%.: Units percent: settable false",
      "messagetype": "trigger_onChange_JETWAY HOOD TOP HORIZONTAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY HOOD TOP HORIZONTAL",
      "displaytitle": "JETWAY HOOD TOP HORIZONTAL (OnRequest)",
      "description": "Target position for the top horizontal animation of the jetway hood. Values can be between -100% and 100%.: Units percent: settable false",
      "messagetype": "trigger_onRequest_JETWAY HOOD TOP HORIZONTAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY HOOD TOP VERTICAL",
      "displaytitle": "JETWAY HOOD TOP VERTICAL (Poll)",
      "description": "Target position for the top vertical animation of the jetway hood. Values can be between -100% and 100%.: Units percent: settable false",
      "messagetype": "trigger_JETWAY HOOD TOP VERTICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY HOOD TOP VERTICAL",
      "displaytitle": "JETWAY HOOD TOP VERTICAL (OnChange)",
      "description": "Target position for the top vertical animation of the jetway hood. Values can be between -100% and 100%.: Units percent: settable false",
      "messagetype": "trigger_onChange_JETWAY HOOD TOP VERTICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY HOOD TOP VERTICAL",
      "displaytitle": "JETWAY HOOD TOP VERTICAL (OnRequest)",
      "description": "Target position for the top vertical animation of the jetway hood. Values can be between -100% and 100%.: Units percent: settable false",
      "messagetype": "trigger_onRequest_JETWAY HOOD TOP VERTICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY MOVING",
      "displaytitle": "JETWAY MOVING (Poll)",
      "description": "This will be 1 (TRUE) id the jetway body is currently moving (it will not include checks on hood animation).: Units bool: settable false",
      "messagetype": "trigger_JETWAY MOVING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY MOVING",
      "displaytitle": "JETWAY MOVING (OnChange)",
      "description": "This will be 1 (TRUE) id the jetway body is currently moving (it will not include checks on hood animation).: Units bool: settable false",
      "messagetype": "trigger_onChange_JETWAY MOVING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY MOVING",
      "displaytitle": "JETWAY MOVING (OnRequest)",
      "description": "This will be 1 (TRUE) id the jetway body is currently moving (it will not include checks on hood animation).: Units bool: settable false",
      "messagetype": "trigger_onRequest_JETWAY MOVING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY WHEEL ORIENTATION CURRENT",
      "displaytitle": "JETWAY WHEEL ORIENTATION CURRENT (Poll)",
      "description": "The current angle of the jetway wheels.: Units degrees: settable false",
      "messagetype": "trigger_JETWAY WHEEL ORIENTATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY WHEEL ORIENTATION CURRENT",
      "displaytitle": "JETWAY WHEEL ORIENTATION CURRENT (OnChange)",
      "description": "The current angle of the jetway wheels.: Units degrees: settable false",
      "messagetype": "trigger_onChange_JETWAY WHEEL ORIENTATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY WHEEL ORIENTATION CURRENT",
      "displaytitle": "JETWAY WHEEL ORIENTATION CURRENT (OnRequest)",
      "description": "The current angle of the jetway wheels.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_JETWAY WHEEL ORIENTATION CURRENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY WHEEL ORIENTATION TARGET",
      "displaytitle": "JETWAY WHEEL ORIENTATION TARGET (Poll)",
      "description": "The (approximate) target angle for the jetway wheels.: Units degrees: settable false",
      "messagetype": "trigger_JETWAY WHEEL ORIENTATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY WHEEL ORIENTATION TARGET",
      "displaytitle": "JETWAY WHEEL ORIENTATION TARGET (OnChange)",
      "description": "The (approximate) target angle for the jetway wheels.: Units degrees: settable false",
      "messagetype": "trigger_onChange_JETWAY WHEEL ORIENTATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY WHEEL ORIENTATION TARGET",
      "displaytitle": "JETWAY WHEEL ORIENTATION TARGET (OnRequest)",
      "description": "The (approximate) target angle for the jetway wheels.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_JETWAY WHEEL ORIENTATION TARGET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "JETWAY WHEEL SPEED",
      "displaytitle": "JETWAY WHEEL SPEED (Poll)",
      "description": "The current speed of the jetway wheels.: Units Meters per second: settable false",
      "messagetype": "trigger_JETWAY WHEEL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_JETWAY WHEEL SPEED",
      "displaytitle": "JETWAY WHEEL SPEED (OnChange)",
      "description": "The current speed of the jetway wheels.: Units Meters per second: settable false",
      "messagetype": "trigger_onChange_JETWAY WHEEL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_JETWAY WHEEL SPEED",
      "displaytitle": "JETWAY WHEEL SPEED (OnRequest)",
      "description": "The current speed of the jetway wheels.: Units Meters per second: settable false",
      "messagetype": "trigger_onRequest_JETWAY WHEEL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "KOHLSMAN SETTING HG:index",
      "displaytitle": "KOHLSMAN SETTING HG:index (Poll)",
      "description": "The value for the given altimeter index in inches of mercury.: Units Inches of Mercury: settable false",
      "messagetype": "trigger_KOHLSMAN SETTING HG:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_KOHLSMAN SETTING HG:index",
      "displaytitle": "KOHLSMAN SETTING HG:index (OnChange)",
      "description": "The value for the given altimeter index in inches of mercury.: Units Inches of Mercury: settable false",
      "messagetype": "trigger_onChange_KOHLSMAN SETTING HG:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_KOHLSMAN SETTING HG:index",
      "displaytitle": "KOHLSMAN SETTING HG:index (OnRequest)",
      "description": "The value for the given altimeter index in inches of mercury.: Units Inches of Mercury: settable false",
      "messagetype": "trigger_onRequest_KOHLSMAN SETTING HG:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "KOHLSMAN SETTING MB:index",
      "displaytitle": "KOHLSMAN SETTING MB:index (Poll)",
      "description": "The value for the given altimeter index in millibars.: Units Millibars: settable false",
      "messagetype": "trigger_KOHLSMAN SETTING MB:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_KOHLSMAN SETTING MB:index",
      "displaytitle": "KOHLSMAN SETTING MB:index (OnChange)",
      "description": "The value for the given altimeter index in millibars.: Units Millibars: settable false",
      "messagetype": "trigger_onChange_KOHLSMAN SETTING MB:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_KOHLSMAN SETTING MB:index",
      "displaytitle": "KOHLSMAN SETTING MB:index (OnRequest)",
      "description": "The value for the given altimeter index in millibars.: Units Millibars: settable false",
      "messagetype": "trigger_onRequest_KOHLSMAN SETTING MB:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "KOHLSMAN SETTING STD:index",
      "displaytitle": "KOHLSMAN SETTING STD:index (Poll)",
      "description": "True if the indexed altimeter is in\"Standard\" mode, or false otherwise.: Units bool: settable false",
      "messagetype": "trigger_KOHLSMAN SETTING STD:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_KOHLSMAN SETTING STD:index",
      "displaytitle": "KOHLSMAN SETTING STD:index (OnChange)",
      "description": "True if the indexed altimeter is in\"Standard\" mode, or false otherwise.: Units bool: settable false",
      "messagetype": "trigger_onChange_KOHLSMAN SETTING STD:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_KOHLSMAN SETTING STD:index",
      "displaytitle": "KOHLSMAN SETTING STD:index (OnRequest)",
      "description": "True if the indexed altimeter is in\"Standard\" mode, or false otherwise.: Units bool: settable false",
      "messagetype": "trigger_onRequest_KOHLSMAN SETTING STD:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "LAUNCHBAR HELD EXTENDED",
      "displaytitle": "LAUNCHBAR HELD EXTENDED (Poll)",
      "description": "This will be True if the launchbar is fully extended, and can be used, for example, to change the color of an instrument light: Units bool: settable false",
      "messagetype": "trigger_LAUNCHBAR HELD EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LAUNCHBAR HELD EXTENDED",
      "displaytitle": "LAUNCHBAR HELD EXTENDED (OnChange)",
      "description": "This will be True if the launchbar is fully extended, and can be used, for example, to change the color of an instrument light: Units bool: settable false",
      "messagetype": "trigger_onChange_LAUNCHBAR HELD EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LAUNCHBAR HELD EXTENDED",
      "displaytitle": "LAUNCHBAR HELD EXTENDED (OnRequest)",
      "description": "This will be True if the launchbar is fully extended, and can be used, for example, to change the color of an instrument light: Units bool: settable false",
      "messagetype": "trigger_onRequest_LAUNCHBAR HELD EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LAUNCHBAR POSITION",
      "displaytitle": "LAUNCHBAR POSITION (Poll)",
      "description": "Installed on aircraft before takeoff from a carrier catapult. Note that gear cannot retract with this extended. 100 = fully extended: Units percent Over 100: settable false",
      "messagetype": "trigger_LAUNCHBAR POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LAUNCHBAR POSITION",
      "displaytitle": "LAUNCHBAR POSITION (OnChange)",
      "description": "Installed on aircraft before takeoff from a carrier catapult. Note that gear cannot retract with this extended. 100 = fully extended: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_LAUNCHBAR POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LAUNCHBAR POSITION",
      "displaytitle": "LAUNCHBAR POSITION (OnRequest)",
      "description": "Installed on aircraft before takeoff from a carrier catapult. Note that gear cannot retract with this extended. 100 = fully extended: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_LAUNCHBAR POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LAUNCHBAR SWITCH",
      "displaytitle": "LAUNCHBAR SWITCH (Poll)",
      "description": "If this is set to True the launch bar switch has been engaged: Units bool: settable false",
      "messagetype": "trigger_LAUNCHBAR SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LAUNCHBAR SWITCH",
      "displaytitle": "LAUNCHBAR SWITCH (OnChange)",
      "description": "If this is set to True the launch bar switch has been engaged: Units bool: settable false",
      "messagetype": "trigger_onChange_LAUNCHBAR SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LAUNCHBAR SWITCH",
      "displaytitle": "LAUNCHBAR SWITCH (OnRequest)",
      "description": "If this is set to True the launch bar switch has been engaged: Units bool: settable false",
      "messagetype": "trigger_onRequest_LAUNCHBAR SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEADING EDGE FLAPS LEFT ANGLE",
      "displaytitle": "LEADING EDGE FLAPS LEFT ANGLE (Poll)",
      "description": "Angle left leading edge flap extended. Use LEADING_EDGE_FLAPS_LEFT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_LEADING EDGE FLAPS LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LEADING EDGE FLAPS LEFT ANGLE",
      "displaytitle": "LEADING EDGE FLAPS LEFT ANGLE (OnChange)",
      "description": "Angle left leading edge flap extended. Use LEADING_EDGE_FLAPS_LEFT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_onChange_LEADING EDGE FLAPS LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LEADING EDGE FLAPS LEFT ANGLE",
      "displaytitle": "LEADING EDGE FLAPS LEFT ANGLE (OnRequest)",
      "description": "Angle left leading edge flap extended. Use LEADING_EDGE_FLAPS_LEFT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_onRequest_LEADING EDGE FLAPS LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEADING EDGE FLAPS LEFT INDEX",
      "displaytitle": "LEADING EDGE FLAPS LEFT INDEX (Poll)",
      "description": "Index of left leading edge flap position: Units number: settable false",
      "messagetype": "trigger_LEADING EDGE FLAPS LEFT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LEADING EDGE FLAPS LEFT INDEX",
      "displaytitle": "LEADING EDGE FLAPS LEFT INDEX (OnChange)",
      "description": "Index of left leading edge flap position: Units number: settable false",
      "messagetype": "trigger_onChange_LEADING EDGE FLAPS LEFT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LEADING EDGE FLAPS LEFT INDEX",
      "displaytitle": "LEADING EDGE FLAPS LEFT INDEX (OnRequest)",
      "description": "Index of left leading edge flap position: Units number: settable false",
      "messagetype": "trigger_onRequest_LEADING EDGE FLAPS LEFT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEADING EDGE FLAPS LEFT PERCENT",
      "displaytitle": "LEADING EDGE FLAPS LEFT PERCENT (Poll)",
      "description": "Percent left leading edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_LEADING EDGE FLAPS LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LEADING EDGE FLAPS LEFT PERCENT",
      "displaytitle": "LEADING EDGE FLAPS LEFT PERCENT (OnChange)",
      "description": "Percent left leading edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_LEADING EDGE FLAPS LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LEADING EDGE FLAPS LEFT PERCENT",
      "displaytitle": "LEADING EDGE FLAPS LEFT PERCENT (OnRequest)",
      "description": "Percent left leading edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_LEADING EDGE FLAPS LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEADING EDGE FLAPS RIGHT ANGLE",
      "displaytitle": "LEADING EDGE FLAPS RIGHT ANGLE (Poll)",
      "description": "Angle right leading edge flap extended. Use LEADING_EDGE_FLAPS_RIGHT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_LEADING EDGE FLAPS RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LEADING EDGE FLAPS RIGHT ANGLE",
      "displaytitle": "LEADING EDGE FLAPS RIGHT ANGLE (OnChange)",
      "description": "Angle right leading edge flap extended. Use LEADING_EDGE_FLAPS_RIGHT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_onChange_LEADING EDGE FLAPS RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LEADING EDGE FLAPS RIGHT ANGLE",
      "displaytitle": "LEADING EDGE FLAPS RIGHT ANGLE (OnRequest)",
      "description": "Angle right leading edge flap extended. Use LEADING_EDGE_FLAPS_RIGHT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_onRequest_LEADING EDGE FLAPS RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEADING EDGE FLAPS RIGHT INDEX",
      "displaytitle": "LEADING EDGE FLAPS RIGHT INDEX (Poll)",
      "description": "Index of right leading edge flap position: Units number: settable false",
      "messagetype": "trigger_LEADING EDGE FLAPS RIGHT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LEADING EDGE FLAPS RIGHT INDEX",
      "displaytitle": "LEADING EDGE FLAPS RIGHT INDEX (OnChange)",
      "description": "Index of right leading edge flap position: Units number: settable false",
      "messagetype": "trigger_onChange_LEADING EDGE FLAPS RIGHT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LEADING EDGE FLAPS RIGHT INDEX",
      "displaytitle": "LEADING EDGE FLAPS RIGHT INDEX (OnRequest)",
      "description": "Index of right leading edge flap position: Units number: settable false",
      "messagetype": "trigger_onRequest_LEADING EDGE FLAPS RIGHT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEADING EDGE FLAPS RIGHT PERCENT",
      "displaytitle": "LEADING EDGE FLAPS RIGHT PERCENT (Poll)",
      "description": "Percent right leading edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_LEADING EDGE FLAPS RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LEADING EDGE FLAPS RIGHT PERCENT",
      "displaytitle": "LEADING EDGE FLAPS RIGHT PERCENT (OnChange)",
      "description": "Percent right leading edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_LEADING EDGE FLAPS RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LEADING EDGE FLAPS RIGHT PERCENT",
      "displaytitle": "LEADING EDGE FLAPS RIGHT PERCENT (OnRequest)",
      "description": "Percent right leading edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_LEADING EDGE FLAPS RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEFT WHEEL ROTATION ANGLE",
      "displaytitle": "LEFT WHEEL ROTATION ANGLE (Poll)",
      "description": "Left wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_LEFT WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LEFT WHEEL ROTATION ANGLE",
      "displaytitle": "LEFT WHEEL ROTATION ANGLE (OnChange)",
      "description": "Left wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onChange_LEFT WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LEFT WHEEL ROTATION ANGLE",
      "displaytitle": "LEFT WHEEL ROTATION ANGLE (OnRequest)",
      "description": "Left wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onRequest_LEFT WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEFT WHEEL RPM",
      "displaytitle": "LEFT WHEEL RPM (Poll)",
      "description": "Left landing gear rpm: Units RPM: settable false",
      "messagetype": "trigger_LEFT WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LEFT WHEEL RPM",
      "displaytitle": "LEFT WHEEL RPM (OnChange)",
      "description": "Left landing gear rpm: Units RPM: settable false",
      "messagetype": "trigger_onChange_LEFT WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LEFT WHEEL RPM",
      "displaytitle": "LEFT WHEEL RPM (OnRequest)",
      "description": "Left landing gear rpm: Units RPM: settable false",
      "messagetype": "trigger_onRequest_LEFT WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT BACKLIGHT INTENSITY",
      "displaytitle": "LIGHT BACKLIGHT INTENSITY (Poll)",
      "description": "Vehicle backlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_LIGHT BACKLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT BACKLIGHT INTENSITY",
      "displaytitle": "LIGHT BACKLIGHT INTENSITY (OnChange)",
      "description": "Vehicle backlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_LIGHT BACKLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT BACKLIGHT INTENSITY",
      "displaytitle": "LIGHT BACKLIGHT INTENSITY (OnRequest)",
      "description": "Vehicle backlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_LIGHT BACKLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT BEACON",
      "displaytitle": "LIGHT BEACON (Poll)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_LIGHT BEACON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT BEACON",
      "displaytitle": "LIGHT BEACON (OnChange)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT BEACON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT BEACON",
      "displaytitle": "LIGHT BEACON (OnRequest)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT BEACON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT BEACON ON",
      "displaytitle": "LIGHT BEACON ON (Poll)",
      "description": "Returns true if the target beacon light is functioning or if the switch is ON. Use beacon lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT BEACON ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT BEACON ON",
      "displaytitle": "LIGHT BEACON ON (OnChange)",
      "description": "Returns true if the target beacon light is functioning or if the switch is ON. Use beacon lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT BEACON ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT BEACON ON",
      "displaytitle": "LIGHT BEACON ON (OnRequest)",
      "description": "Returns true if the target beacon light is functioning or if the switch is ON. Use beacon lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT BEACON ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT BRAKE ON",
      "displaytitle": "LIGHT BRAKE ON (Poll)",
      "description": "Returns true if the target brake light is functioning or if the switch is ON.: Units bool: settable false",
      "messagetype": "trigger_LIGHT BRAKE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT BRAKE ON",
      "displaytitle": "LIGHT BRAKE ON (OnChange)",
      "description": "Returns true if the target brake light is functioning or if the switch is ON.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT BRAKE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT BRAKE ON",
      "displaytitle": "LIGHT BRAKE ON (OnRequest)",
      "description": "Returns true if the target brake light is functioning or if the switch is ON.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT BRAKE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT CABIN",
      "displaytitle": "LIGHT CABIN (Poll)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_LIGHT CABIN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT CABIN",
      "displaytitle": "LIGHT CABIN (OnChange)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT CABIN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT CABIN",
      "displaytitle": "LIGHT CABIN (OnRequest)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT CABIN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT CABIN ON",
      "displaytitle": "LIGHT CABIN ON (Poll)",
      "description": "Returns true if the target cabin light is functioning or if the switch is ON. Use the cabin lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT CABIN ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT CABIN ON",
      "displaytitle": "LIGHT CABIN ON (OnChange)",
      "description": "Returns true if the target cabin light is functioning or if the switch is ON. Use the cabin lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT CABIN ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT CABIN ON",
      "displaytitle": "LIGHT CABIN ON (OnRequest)",
      "description": "Returns true if the target cabin light is functioning or if the switch is ON. Use the cabin lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT CABIN ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT CABIN POWER SETTING",
      "displaytitle": "LIGHT CABIN POWER SETTING (Poll)",
      "description": "The current cabin light power setting. Requires the cabin lightdef index.: Units percent: settable false",
      "messagetype": "trigger_LIGHT CABIN POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT CABIN POWER SETTING",
      "displaytitle": "LIGHT CABIN POWER SETTING (OnChange)",
      "description": "The current cabin light power setting. Requires the cabin lightdef index.: Units percent: settable false",
      "messagetype": "trigger_onChange_LIGHT CABIN POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT CABIN POWER SETTING",
      "displaytitle": "LIGHT CABIN POWER SETTING (OnRequest)",
      "description": "The current cabin light power setting. Requires the cabin lightdef index.: Units percent: settable false",
      "messagetype": "trigger_onRequest_LIGHT CABIN POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT GLARESHIELD",
      "displaytitle": "LIGHT GLARESHIELD (Poll)",
      "description": "Whether or not the Light switch for the Glareshield is enabled.: Units bool: settable true",
      "messagetype": "trigger_LIGHT GLARESHIELD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT GLARESHIELD",
      "displaytitle": "LIGHT GLARESHIELD (OnChange)",
      "description": "Whether or not the Light switch for the Glareshield is enabled.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT GLARESHIELD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT GLARESHIELD",
      "displaytitle": "LIGHT GLARESHIELD (OnRequest)",
      "description": "Whether or not the Light switch for the Glareshield is enabled.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT GLARESHIELD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT GLARESHIELD ON",
      "displaytitle": "LIGHT GLARESHIELD ON (Poll)",
      "description": "Returns true if the target glareshield light is functioning or if the switch is ON. Use the glareshield lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT GLARESHIELD ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT GLARESHIELD ON",
      "displaytitle": "LIGHT GLARESHIELD ON (OnChange)",
      "description": "Returns true if the target glareshield light is functioning or if the switch is ON. Use the glareshield lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT GLARESHIELD ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT GLARESHIELD ON",
      "displaytitle": "LIGHT GLARESHIELD ON (OnRequest)",
      "description": "Returns true if the target glareshield light is functioning or if the switch is ON. Use the glareshield lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT GLARESHIELD ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT GLARESHIELD POWER SETTING",
      "displaytitle": "LIGHT GLARESHIELD POWER SETTING (Poll)",
      "description": "The current glareshield light power setting. Requires the glareshield lightdef index.: Units percent: settable false",
      "messagetype": "trigger_LIGHT GLARESHIELD POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT GLARESHIELD POWER SETTING",
      "displaytitle": "LIGHT GLARESHIELD POWER SETTING (OnChange)",
      "description": "The current glareshield light power setting. Requires the glareshield lightdef index.: Units percent: settable false",
      "messagetype": "trigger_onChange_LIGHT GLARESHIELD POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT GLARESHIELD POWER SETTING",
      "displaytitle": "LIGHT GLARESHIELD POWER SETTING (OnRequest)",
      "description": "The current glareshield light power setting. Requires the glareshield lightdef index.: Units percent: settable false",
      "messagetype": "trigger_onRequest_LIGHT GLARESHIELD POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT GYROLIGHT INTENSITY",
      "displaytitle": "LIGHT GYROLIGHT INTENSITY (Poll)",
      "description": "Vehicle gyrolights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_LIGHT GYROLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT GYROLIGHT INTENSITY",
      "displaytitle": "LIGHT GYROLIGHT INTENSITY (OnChange)",
      "description": "Vehicle gyrolights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_LIGHT GYROLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT GYROLIGHT INTENSITY",
      "displaytitle": "LIGHT GYROLIGHT INTENSITY (OnRequest)",
      "description": "Vehicle gyrolights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_LIGHT GYROLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT HEAD ON",
      "displaytitle": "LIGHT HEAD ON (Poll)",
      "description": "Returns true if the target navigation light is functioning or if the switch is ON.: Units bool: settable false",
      "messagetype": "trigger_LIGHT HEAD ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT HEAD ON",
      "displaytitle": "LIGHT HEAD ON (OnChange)",
      "description": "Returns true if the target navigation light is functioning or if the switch is ON.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT HEAD ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT HEAD ON",
      "displaytitle": "LIGHT HEAD ON (OnRequest)",
      "description": "Returns true if the target navigation light is functioning or if the switch is ON.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT HEAD ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT HEADLIGHT INTENSITY",
      "displaytitle": "LIGHT HEADLIGHT INTENSITY (Poll)",
      "description": "Vehicle headlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_LIGHT HEADLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT HEADLIGHT INTENSITY",
      "displaytitle": "LIGHT HEADLIGHT INTENSITY (OnChange)",
      "description": "Vehicle headlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_LIGHT HEADLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT HEADLIGHT INTENSITY",
      "displaytitle": "LIGHT HEADLIGHT INTENSITY (OnRequest)",
      "description": "Vehicle headlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_LIGHT HEADLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT LANDING",
      "displaytitle": "LIGHT LANDING (Poll)",
      "description": "Light switch state for landing light.: Units bool: settable true",
      "messagetype": "trigger_LIGHT LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT LANDING",
      "displaytitle": "LIGHT LANDING (OnChange)",
      "description": "Light switch state for landing light.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT LANDING",
      "displaytitle": "LIGHT LANDING (OnRequest)",
      "description": "Light switch state for landing light.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT LANDING ON",
      "displaytitle": "LIGHT LANDING ON (Poll)",
      "description": "Returns true if the target landing light is functioning or if the switch is ON. Use landing lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT LANDING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT LANDING ON",
      "displaytitle": "LIGHT LANDING ON (OnChange)",
      "description": "Returns true if the target landing light is functioning or if the switch is ON. Use landing lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT LANDING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT LANDING ON",
      "displaytitle": "LIGHT LANDING ON (OnRequest)",
      "description": "Returns true if the target landing light is functioning or if the switch is ON. Use landing lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT LANDING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT LOGO",
      "displaytitle": "LIGHT LOGO (Poll)",
      "description": "Light switch state for logo light.: Units bool: settable true",
      "messagetype": "trigger_LIGHT LOGO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT LOGO",
      "displaytitle": "LIGHT LOGO (OnChange)",
      "description": "Light switch state for logo light.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT LOGO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT LOGO",
      "displaytitle": "LIGHT LOGO (OnRequest)",
      "description": "Light switch state for logo light.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT LOGO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT LOGO ON",
      "displaytitle": "LIGHT LOGO ON (Poll)",
      "description": "Returns true if the target logo light is functioning or if the switch is ON. Use the logo lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT LOGO ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT LOGO ON",
      "displaytitle": "LIGHT LOGO ON (OnChange)",
      "description": "Returns true if the target logo light is functioning or if the switch is ON. Use the logo lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT LOGO ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT LOGO ON",
      "displaytitle": "LIGHT LOGO ON (OnRequest)",
      "description": "Returns true if the target logo light is functioning or if the switch is ON. Use the logo lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT LOGO ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT NAV",
      "displaytitle": "LIGHT NAV (Poll)",
      "description": "Light switch state for the NAV light.: Units bool: settable true",
      "messagetype": "trigger_LIGHT NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT NAV",
      "displaytitle": "LIGHT NAV (OnChange)",
      "description": "Light switch state for the NAV light.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT NAV",
      "displaytitle": "LIGHT NAV (OnRequest)",
      "description": "Light switch state for the NAV light.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT NAV ON",
      "displaytitle": "LIGHT NAV ON (Poll)",
      "description": "Returns true if the target navigation light is functioning or if the switch is ON. Use navigation lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT NAV ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT NAV ON",
      "displaytitle": "LIGHT NAV ON (OnChange)",
      "description": "Returns true if the target navigation light is functioning or if the switch is ON. Use navigation lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT NAV ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT NAV ON",
      "displaytitle": "LIGHT NAV ON (OnRequest)",
      "description": "Returns true if the target navigation light is functioning or if the switch is ON. Use navigation lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT NAV ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT ON STATES",
      "displaytitle": "LIGHT ON STATES (Poll)",
      "description": "light on using bit mask (see documentation): Units mask: settable false",
      "messagetype": "trigger_LIGHT ON STATES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT ON STATES",
      "displaytitle": "LIGHT ON STATES (OnChange)",
      "description": "light on using bit mask (see documentation): Units mask: settable false",
      "messagetype": "trigger_onChange_LIGHT ON STATES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT ON STATES",
      "displaytitle": "LIGHT ON STATES (OnRequest)",
      "description": "light on using bit mask (see documentation): Units mask: settable false",
      "messagetype": "trigger_onRequest_LIGHT ON STATES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT PANEL",
      "displaytitle": "LIGHT PANEL (Poll)",
      "description": "Light switch state of the panel light.: Units bool: settable true",
      "messagetype": "trigger_LIGHT PANEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT PANEL",
      "displaytitle": "LIGHT PANEL (OnChange)",
      "description": "Light switch state of the panel light.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT PANEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT PANEL",
      "displaytitle": "LIGHT PANEL (OnRequest)",
      "description": "Light switch state of the panel light.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT PANEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT PANEL ON",
      "displaytitle": "LIGHT PANEL ON (Poll)",
      "description": "Returns true if the target panel light is functioning or if the switch is ON. Use the panel lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT PANEL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT PANEL ON",
      "displaytitle": "LIGHT PANEL ON (OnChange)",
      "description": "Returns true if the target panel light is functioning or if the switch is ON. Use the panel lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT PANEL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT PANEL ON",
      "displaytitle": "LIGHT PANEL ON (OnRequest)",
      "description": "Returns true if the target panel light is functioning or if the switch is ON. Use the panel lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT PANEL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT PANEL POWER SETTING",
      "displaytitle": "LIGHT PANEL POWER SETTING (Poll)",
      "description": "The current panel light power setting. Requires the panel lightdef index.: Units percent: settable false",
      "messagetype": "trigger_LIGHT PANEL POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT PANEL POWER SETTING",
      "displaytitle": "LIGHT PANEL POWER SETTING (OnChange)",
      "description": "The current panel light power setting. Requires the panel lightdef index.: Units percent: settable false",
      "messagetype": "trigger_onChange_LIGHT PANEL POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT PANEL POWER SETTING",
      "displaytitle": "LIGHT PANEL POWER SETTING (OnRequest)",
      "description": "The current panel light power setting. Requires the panel lightdef index.: Units percent: settable false",
      "messagetype": "trigger_onRequest_LIGHT PANEL POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT PEDESTRAL",
      "displaytitle": "LIGHT PEDESTRAL (Poll)",
      "description": "Whether or not the Light switch for the Pedestal is enabled.: Units bool: settable true",
      "messagetype": "trigger_LIGHT PEDESTRAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT PEDESTRAL",
      "displaytitle": "LIGHT PEDESTRAL (OnChange)",
      "description": "Whether or not the Light switch for the Pedestal is enabled.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT PEDESTRAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT PEDESTRAL",
      "displaytitle": "LIGHT PEDESTRAL (OnRequest)",
      "description": "Whether or not the Light switch for the Pedestal is enabled.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT PEDESTRAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT PEDESTRAL ON",
      "displaytitle": "LIGHT PEDESTRAL ON (Poll)",
      "description": "Returns true if the target pedestral light is functioning or if the switch is ON. Requires the pedestral lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT PEDESTRAL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT PEDESTRAL ON",
      "displaytitle": "LIGHT PEDESTRAL ON (OnChange)",
      "description": "Returns true if the target pedestral light is functioning or if the switch is ON. Requires the pedestral lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT PEDESTRAL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT PEDESTRAL ON",
      "displaytitle": "LIGHT PEDESTRAL ON (OnRequest)",
      "description": "Returns true if the target pedestral light is functioning or if the switch is ON. Requires the pedestral lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT PEDESTRAL ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT PEDESTRAL POWER SETTING",
      "displaytitle": "LIGHT PEDESTRAL POWER SETTING (Poll)",
      "description": "The current pedestral light power setting. Requires the pedestral lightdef index.: Units percent: settable false",
      "messagetype": "trigger_LIGHT PEDESTRAL POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT PEDESTRAL POWER SETTING",
      "displaytitle": "LIGHT PEDESTRAL POWER SETTING (OnChange)",
      "description": "The current pedestral light power setting. Requires the pedestral lightdef index.: Units percent: settable false",
      "messagetype": "trigger_onChange_LIGHT PEDESTRAL POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT PEDESTRAL POWER SETTING",
      "displaytitle": "LIGHT PEDESTRAL POWER SETTING (OnRequest)",
      "description": "The current pedestral light power setting. Requires the pedestral lightdef index.: Units percent: settable false",
      "messagetype": "trigger_onRequest_LIGHT PEDESTRAL POWER SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT POTENTIOMETER:index",
      "displaytitle": "LIGHT POTENTIOMETER:index (Poll)",
      "description": "Adjust the potentiometer of the indexed lighting. Index is defined in the appropriate lightdef hashmap setting.: Units percent Over 100: settable false",
      "messagetype": "trigger_LIGHT POTENTIOMETER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT POTENTIOMETER:index",
      "displaytitle": "LIGHT POTENTIOMETER:index (OnChange)",
      "description": "Adjust the potentiometer of the indexed lighting. Index is defined in the appropriate lightdef hashmap setting.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_LIGHT POTENTIOMETER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT POTENTIOMETER:index",
      "displaytitle": "LIGHT POTENTIOMETER:index (OnRequest)",
      "description": "Adjust the potentiometer of the indexed lighting. Index is defined in the appropriate lightdef hashmap setting.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_LIGHT POTENTIOMETER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "LIGHT RECOGNITION",
      "displaytitle": "LIGHT RECOGNITION (Poll)",
      "description": "Light switch state for the recognition light.: Units bool: settable true",
      "messagetype": "trigger_LIGHT RECOGNITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT RECOGNITION",
      "displaytitle": "LIGHT RECOGNITION (OnChange)",
      "description": "Light switch state for the recognition light.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT RECOGNITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT RECOGNITION",
      "displaytitle": "LIGHT RECOGNITION (OnRequest)",
      "description": "Light switch state for the recognition light.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT RECOGNITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT RECOGNITION ON",
      "displaytitle": "LIGHT RECOGNITION ON (Poll)",
      "description": "Returns true if the target recognition light is functioning or if the switch is ON. Use the recognition lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT RECOGNITION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT RECOGNITION ON",
      "displaytitle": "LIGHT RECOGNITION ON (OnChange)",
      "description": "Returns true if the target recognition light is functioning or if the switch is ON. Use the recognition lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT RECOGNITION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT RECOGNITION ON",
      "displaytitle": "LIGHT RECOGNITION ON (OnRequest)",
      "description": "Returns true if the target recognition light is functioning or if the switch is ON. Use the recognition lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT RECOGNITION ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT STATES",
      "displaytitle": "LIGHT STATES (Poll)",
      "description": "Same as LIGHT_ON_STATES.: Units mask: settable false",
      "messagetype": "trigger_LIGHT STATES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT STATES",
      "displaytitle": "LIGHT STATES (OnChange)",
      "description": "Same as LIGHT_ON_STATES.: Units mask: settable false",
      "messagetype": "trigger_onChange_LIGHT STATES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT STATES",
      "displaytitle": "LIGHT STATES (OnRequest)",
      "description": "Same as LIGHT_ON_STATES.: Units mask: settable false",
      "messagetype": "trigger_onRequest_LIGHT STATES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT STROBE",
      "displaytitle": "LIGHT STROBE (Poll)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_LIGHT STROBE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT STROBE",
      "displaytitle": "LIGHT STROBE (OnChange)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT STROBE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT STROBE",
      "displaytitle": "LIGHT STROBE (OnRequest)",
      "description": "Light switch state.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT STROBE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT STROBE ON",
      "displaytitle": "LIGHT STROBE ON (Poll)",
      "description": "Returns true if the target strobe light is functioning or if the switch is ON. Use the strobe lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT STROBE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT STROBE ON",
      "displaytitle": "LIGHT STROBE ON (OnChange)",
      "description": "Returns true if the target strobe light is functioning or if the switch is ON. Use the strobe lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT STROBE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT STROBE ON",
      "displaytitle": "LIGHT STROBE ON (OnRequest)",
      "description": "Returns true if the target strobe light is functioning or if the switch is ON. Use the strobe lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT STROBE ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT TAXI",
      "displaytitle": "LIGHT TAXI (Poll)",
      "description": "Light switch state for the taxi light.: Units bool: settable true",
      "messagetype": "trigger_LIGHT TAXI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT TAXI",
      "displaytitle": "LIGHT TAXI (OnChange)",
      "description": "Light switch state for the taxi light.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT TAXI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT TAXI",
      "displaytitle": "LIGHT TAXI (OnRequest)",
      "description": "Light switch state for the taxi light.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT TAXI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT TAXI ON",
      "displaytitle": "LIGHT TAXI ON (Poll)",
      "description": "Returns true if the target taxi light is functioning or if the switch is ON. Use taxi lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT TAXI ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT TAXI ON",
      "displaytitle": "LIGHT TAXI ON (OnChange)",
      "description": "Returns true if the target taxi light is functioning or if the switch is ON. Use taxi lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT TAXI ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT TAXI ON",
      "displaytitle": "LIGHT TAXI ON (OnRequest)",
      "description": "Returns true if the target taxi light is functioning or if the switch is ON. Use taxi lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT TAXI ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT WING",
      "displaytitle": "LIGHT WING (Poll)",
      "description": "Light switch state for the wing lights.: Units bool: settable true",
      "messagetype": "trigger_LIGHT WING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT WING",
      "displaytitle": "LIGHT WING (OnChange)",
      "description": "Light switch state for the wing lights.: Units bool: settable true",
      "messagetype": "trigger_onChange_LIGHT WING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT WING",
      "displaytitle": "LIGHT WING (OnRequest)",
      "description": "Light switch state for the wing lights.: Units bool: settable true",
      "messagetype": "trigger_onRequest_LIGHT WING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT WING ON",
      "displaytitle": "LIGHT WING ON (Poll)",
      "description": "Returns true if the target wing light is functioning or if the switch is ON. Use the wing lightdef index.: Units bool: settable false",
      "messagetype": "trigger_LIGHT WING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LIGHT WING ON",
      "displaytitle": "LIGHT WING ON (OnChange)",
      "description": "Returns true if the target wing light is functioning or if the switch is ON. Use the wing lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onChange_LIGHT WING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LIGHT WING ON",
      "displaytitle": "LIGHT WING ON (OnRequest)",
      "description": "Returns true if the target wing light is functioning or if the switch is ON. Use the wing lightdef index.: Units bool: settable false",
      "messagetype": "trigger_onRequest_LIGHT WING ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LINEAR CL ALPHA",
      "displaytitle": "LINEAR CL ALPHA (Poll)",
      "description": "Linear CL alpha: Units per radian: settable false",
      "messagetype": "trigger_LINEAR CL ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_LINEAR CL ALPHA",
      "displaytitle": "LINEAR CL ALPHA (OnChange)",
      "description": "Linear CL alpha: Units per radian: settable false",
      "messagetype": "trigger_onChange_LINEAR CL ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_LINEAR CL ALPHA",
      "displaytitle": "LINEAR CL ALPHA (OnRequest)",
      "description": "Linear CL alpha: Units per radian: settable false",
      "messagetype": "trigger_onRequest_LINEAR CL ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MACH MAX OPERATE",
      "displaytitle": "MACH MAX OPERATE (Poll)",
      "description": "Maximum design mach: Units mach: settable false",
      "messagetype": "trigger_MACH MAX OPERATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MACH MAX OPERATE",
      "displaytitle": "MACH MAX OPERATE (OnChange)",
      "description": "Maximum design mach: Units mach: settable false",
      "messagetype": "trigger_onChange_MACH MAX OPERATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MACH MAX OPERATE",
      "displaytitle": "MACH MAX OPERATE (OnRequest)",
      "description": "Maximum design mach: Units mach: settable false",
      "messagetype": "trigger_onRequest_MACH MAX OPERATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MAGNETIC COMPASS",
      "displaytitle": "MAGNETIC COMPASS (Poll)",
      "description": "Compass reading.: Units degrees: settable true",
      "messagetype": "trigger_MAGNETIC COMPASS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MAGNETIC COMPASS",
      "displaytitle": "MAGNETIC COMPASS (OnChange)",
      "description": "Compass reading.: Units degrees: settable true",
      "messagetype": "trigger_onChange_MAGNETIC COMPASS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MAGNETIC COMPASS",
      "displaytitle": "MAGNETIC COMPASS (OnRequest)",
      "description": "Compass reading.: Units degrees: settable true",
      "messagetype": "trigger_onRequest_MAGNETIC COMPASS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MAGVAR",
      "displaytitle": "MAGVAR (Poll)",
      "description": "Magnetic variation.: Units degrees: settable false",
      "messagetype": "trigger_MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MAGVAR",
      "displaytitle": "MAGVAR (OnChange)",
      "description": "Magnetic variation.: Units degrees: settable false",
      "messagetype": "trigger_onChange_MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MAGVAR",
      "displaytitle": "MAGVAR (OnRequest)",
      "description": "Magnetic variation.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MANUAL FUEL PUMP HANDLE",
      "displaytitle": "MANUAL FUEL PUMP HANDLE (Poll)",
      "description": "Position of manual fuel pump handle. 1 is fully deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_MANUAL FUEL PUMP HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MANUAL FUEL PUMP HANDLE",
      "displaytitle": "MANUAL FUEL PUMP HANDLE (OnChange)",
      "description": "Position of manual fuel pump handle. 1 is fully deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_MANUAL FUEL PUMP HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MANUAL FUEL PUMP HANDLE",
      "displaytitle": "MANUAL FUEL PUMP HANDLE (OnRequest)",
      "description": "Position of manual fuel pump handle. 1 is fully deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_MANUAL FUEL PUMP HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MANUAL INSTRUMENT LIGHTS",
      "displaytitle": "MANUAL INSTRUMENT LIGHTS (Poll)",
      "description": "True if instrument lights are set manually.: Units bool: settable false",
      "messagetype": "trigger_MANUAL INSTRUMENT LIGHTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MANUAL INSTRUMENT LIGHTS",
      "displaytitle": "MANUAL INSTRUMENT LIGHTS (OnChange)",
      "description": "True if instrument lights are set manually.: Units bool: settable false",
      "messagetype": "trigger_onChange_MANUAL INSTRUMENT LIGHTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MANUAL INSTRUMENT LIGHTS",
      "displaytitle": "MANUAL INSTRUMENT LIGHTS (OnRequest)",
      "description": "True if instrument lights are set manually.: Units bool: settable false",
      "messagetype": "trigger_onRequest_MANUAL INSTRUMENT LIGHTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARKER AVAILABLE",
      "displaytitle": "MARKER AVAILABLE (Poll)",
      "description": "True if Marker is available.: Units bool: settable false",
      "messagetype": "trigger_MARKER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARKER AVAILABLE",
      "displaytitle": "MARKER AVAILABLE (OnChange)",
      "description": "True if Marker is available.: Units bool: settable false",
      "messagetype": "trigger_onChange_MARKER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARKER AVAILABLE",
      "displaytitle": "MARKER AVAILABLE (OnRequest)",
      "description": "True if Marker is available.: Units bool: settable false",
      "messagetype": "trigger_onRequest_MARKER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARKER BEACON SENSITIVITY HIGH",
      "displaytitle": "MARKER BEACON SENSITIVITY HIGH (Poll)",
      "description": "Whether or not the Marker Beacon is in High Sensitivity mode.: Units bool: settable false",
      "messagetype": "trigger_MARKER BEACON SENSITIVITY HIGH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARKER BEACON SENSITIVITY HIGH",
      "displaytitle": "MARKER BEACON SENSITIVITY HIGH (OnChange)",
      "description": "Whether or not the Marker Beacon is in High Sensitivity mode.: Units bool: settable false",
      "messagetype": "trigger_onChange_MARKER BEACON SENSITIVITY HIGH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARKER BEACON SENSITIVITY HIGH",
      "displaytitle": "MARKER BEACON SENSITIVITY HIGH (OnRequest)",
      "description": "Whether or not the Marker Beacon is in High Sensitivity mode.: Units bool: settable false",
      "messagetype": "trigger_onRequest_MARKER BEACON SENSITIVITY HIGH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARKER BEACON STATE",
      "displaytitle": "MARKER BEACON STATE (Poll)",
      "description": "Marker beacon state.: Units enum: settable true",
      "messagetype": "trigger_MARKER BEACON STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARKER BEACON STATE",
      "displaytitle": "MARKER BEACON STATE (OnChange)",
      "description": "Marker beacon state.: Units enum: settable true",
      "messagetype": "trigger_onChange_MARKER BEACON STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARKER BEACON STATE",
      "displaytitle": "MARKER BEACON STATE (OnRequest)",
      "description": "Marker beacon state.: Units enum: settable true",
      "messagetype": "trigger_onRequest_MARKER BEACON STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARKER BEACON TEST MUTE",
      "displaytitle": "MARKER BEACON TEST MUTE (Poll)",
      "description": "Whether or not the Marker Beacon is in Test/Mute mode.: Units bool: settable false",
      "messagetype": "trigger_MARKER BEACON TEST MUTE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARKER BEACON TEST MUTE",
      "displaytitle": "MARKER BEACON TEST MUTE (OnChange)",
      "description": "Whether or not the Marker Beacon is in Test/Mute mode.: Units bool: settable false",
      "messagetype": "trigger_onChange_MARKER BEACON TEST MUTE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARKER BEACON TEST MUTE",
      "displaytitle": "MARKER BEACON TEST MUTE (OnRequest)",
      "description": "Whether or not the Marker Beacon is in Test/Mute mode.: Units bool: settable false",
      "messagetype": "trigger_onRequest_MARKER BEACON TEST MUTE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARKER SOUND",
      "displaytitle": "MARKER SOUND (Poll)",
      "description": "Marker audio flag.: Units bool: settable false",
      "messagetype": "trigger_MARKER SOUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARKER SOUND",
      "displaytitle": "MARKER SOUND (OnChange)",
      "description": "Marker audio flag.: Units bool: settable false",
      "messagetype": "trigger_onChange_MARKER SOUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARKER SOUND",
      "displaytitle": "MARKER SOUND (OnRequest)",
      "description": "Marker audio flag.: Units bool: settable false",
      "messagetype": "trigger_onRequest_MARKER SOUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE (Poll)",
      "description": "Currently not used in the simulation.: Units degrees: settable false",
      "messagetype": "trigger_MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE (OnChange)",
      "description": "Currently not used in the simulation.: Units degrees: settable false",
      "messagetype": "trigger_onChange_MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE (OnRequest)",
      "description": "Currently not used in the simulation.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARSHALLER AIRCRAFT DISTANCE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE (Poll)",
      "description": "The distance between the Marshaller and the aircraft.: Units meters: settable false",
      "messagetype": "trigger_MARSHALLER AIRCRAFT DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARSHALLER AIRCRAFT DISTANCE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE (OnChange)",
      "description": "The distance between the Marshaller and the aircraft.: Units meters: settable false",
      "messagetype": "trigger_onChange_MARSHALLER AIRCRAFT DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARSHALLER AIRCRAFT DISTANCE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE (OnRequest)",
      "description": "The distance between the Marshaller and the aircraft.: Units meters: settable false",
      "messagetype": "trigger_onRequest_MARSHALLER AIRCRAFT DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE (Poll)",
      "description": "Position on the X axis of the aircraft in the parking space (negative means the aircraft is on the left side and positive the right side).: Units meters: settable false",
      "messagetype": "trigger_MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE (OnChange)",
      "description": "Position on the X axis of the aircraft in the parking space (negative means the aircraft is on the left side and positive the right side).: Units meters: settable false",
      "messagetype": "trigger_onChange_MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE (OnRequest)",
      "description": "Position on the X axis of the aircraft in the parking space (negative means the aircraft is on the left side and positive the right side).: Units meters: settable false",
      "messagetype": "trigger_onRequest_MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE (Poll)",
      "description": "Position on the Z axis of the aircraft in the parking space (negative means the aircraft is behind the parking space and positive is in front of the parking space).: Units meters: settable false",
      "messagetype": "trigger_MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE (OnChange)",
      "description": "Position on the Z axis of the aircraft in the parking space (negative means the aircraft is behind the parking space and positive is in front of the parking space).: Units meters: settable false",
      "messagetype": "trigger_onChange_MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE (OnRequest)",
      "description": "Position on the Z axis of the aircraft in the parking space (negative means the aircraft is behind the parking space and positive is in front of the parking space).: Units meters: settable false",
      "messagetype": "trigger_onRequest_MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARSHALLER AIRCRAFT ENGINE SHUTDOWN",
      "displaytitle": "MARSHALLER AIRCRAFT ENGINE SHUTDOWN (Poll)",
      "description": "True if the engine(s) of the aircraft is (are) shut down.: Units bool: settable false",
      "messagetype": "trigger_MARSHALLER AIRCRAFT ENGINE SHUTDOWN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARSHALLER AIRCRAFT ENGINE SHUTDOWN",
      "displaytitle": "MARSHALLER AIRCRAFT ENGINE SHUTDOWN (OnChange)",
      "description": "True if the engine(s) of the aircraft is (are) shut down.: Units bool: settable false",
      "messagetype": "trigger_onChange_MARSHALLER AIRCRAFT ENGINE SHUTDOWN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARSHALLER AIRCRAFT ENGINE SHUTDOWN",
      "displaytitle": "MARSHALLER AIRCRAFT ENGINE SHUTDOWN (OnRequest)",
      "description": "True if the engine(s) of the aircraft is (are) shut down.: Units bool: settable false",
      "messagetype": "trigger_onRequest_MARSHALLER AIRCRAFT ENGINE SHUTDOWN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARSHALLER AIRCRAFT HEADING PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT HEADING PARKINGSPACE (Poll)",
      "description": "Angle between the direction of the aircraft and the direction of the parking place.: Units degrees: settable false",
      "messagetype": "trigger_MARSHALLER AIRCRAFT HEADING PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARSHALLER AIRCRAFT HEADING PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT HEADING PARKINGSPACE (OnChange)",
      "description": "Angle between the direction of the aircraft and the direction of the parking place.: Units degrees: settable false",
      "messagetype": "trigger_onChange_MARSHALLER AIRCRAFT HEADING PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARSHALLER AIRCRAFT HEADING PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT HEADING PARKINGSPACE (OnRequest)",
      "description": "Angle between the direction of the aircraft and the direction of the parking place.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_MARSHALLER AIRCRAFT HEADING PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE (Poll)",
      "description": "Value in Z axis of the projection from the aircraft position following the heading of the aircraft.  : Units meters: settable false",
      "messagetype": "trigger_MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE (OnChange)",
      "description": "Value in Z axis of the projection from the aircraft position following the heading of the aircraft.  : Units meters: settable false",
      "messagetype": "trigger_onChange_MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE",
      "displaytitle": "MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE (OnRequest)",
      "description": "Value in Z axis of the projection from the aircraft position following the heading of the aircraft.  : Units meters: settable false",
      "messagetype": "trigger_onRequest_MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARSHALLER AIRCRAFT VELOCITY",
      "displaytitle": "MARSHALLER AIRCRAFT VELOCITY (Poll)",
      "description": "The velocity of the aircraft.: Units knots: settable false",
      "messagetype": "trigger_MARSHALLER AIRCRAFT VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MARSHALLER AIRCRAFT VELOCITY",
      "displaytitle": "MARSHALLER AIRCRAFT VELOCITY (OnChange)",
      "description": "The velocity of the aircraft.: Units knots: settable false",
      "messagetype": "trigger_onChange_MARSHALLER AIRCRAFT VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MARSHALLER AIRCRAFT VELOCITY",
      "displaytitle": "MARSHALLER AIRCRAFT VELOCITY (OnRequest)",
      "description": "The velocity of the aircraft.: Units knots: settable false",
      "messagetype": "trigger_onRequest_MARSHALLER AIRCRAFT VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MASTER IGNITION SWITCH",
      "displaytitle": "MASTER IGNITION SWITCH (Poll)",
      "description": "Aircraft master ignition switch (grounds all engines magnetos): Units bool: settable false",
      "messagetype": "trigger_MASTER IGNITION SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MASTER IGNITION SWITCH",
      "displaytitle": "MASTER IGNITION SWITCH (OnChange)",
      "description": "Aircraft master ignition switch (grounds all engines magnetos): Units bool: settable false",
      "messagetype": "trigger_onChange_MASTER IGNITION SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MASTER IGNITION SWITCH",
      "displaytitle": "MASTER IGNITION SWITCH (OnRequest)",
      "description": "Aircraft master ignition switch (grounds all engines magnetos): Units bool: settable false",
      "messagetype": "trigger_onRequest_MASTER IGNITION SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MAX EGT",
      "displaytitle": "MAX EGT (Poll)",
      "description": "The maximum EGT, as set using the egt_peak_temperature parameter in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_MAX EGT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MAX EGT",
      "displaytitle": "MAX EGT (OnChange)",
      "description": "The maximum EGT, as set using the egt_peak_temperature parameter in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_onChange_MAX EGT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MAX EGT",
      "displaytitle": "MAX EGT (OnRequest)",
      "description": "The maximum EGT, as set using the egt_peak_temperature parameter in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_onRequest_MAX EGT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MAX G FORCE",
      "displaytitle": "MAX G FORCE (Poll)",
      "description": "Maximum G force attained: Units gforce: settable false",
      "messagetype": "trigger_MAX G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MAX G FORCE",
      "displaytitle": "MAX G FORCE (OnChange)",
      "description": "Maximum G force attained: Units gforce: settable false",
      "messagetype": "trigger_onChange_MAX G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MAX G FORCE",
      "displaytitle": "MAX G FORCE (OnRequest)",
      "description": "Maximum G force attained: Units gforce: settable false",
      "messagetype": "trigger_onRequest_MAX G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MAX GROSS WEIGHT",
      "displaytitle": "MAX GROSS WEIGHT (Poll)",
      "description": "Maximum gross weight of the aircaft: Units pounds: settable false",
      "messagetype": "trigger_MAX GROSS WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MAX GROSS WEIGHT",
      "displaytitle": "MAX GROSS WEIGHT (OnChange)",
      "description": "Maximum gross weight of the aircaft: Units pounds: settable false",
      "messagetype": "trigger_onChange_MAX GROSS WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MAX GROSS WEIGHT",
      "displaytitle": "MAX GROSS WEIGHT (OnRequest)",
      "description": "Maximum gross weight of the aircaft: Units pounds: settable false",
      "messagetype": "trigger_onRequest_MAX GROSS WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MAX OIL TEMPERATURE",
      "displaytitle": "MAX OIL TEMPERATURE (Poll)",
      "description": "The maximum oil temperature, as set using the parameter oil_temp_heating_constant in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_MAX OIL TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MAX OIL TEMPERATURE",
      "displaytitle": "MAX OIL TEMPERATURE (OnChange)",
      "description": "The maximum oil temperature, as set using the parameter oil_temp_heating_constant in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_onChange_MAX OIL TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MAX OIL TEMPERATURE",
      "displaytitle": "MAX OIL TEMPERATURE (OnRequest)",
      "description": "The maximum oil temperature, as set using the parameter oil_temp_heating_constant in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_onRequest_MAX OIL TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MAX RATED ENGINE RPM",
      "displaytitle": "MAX RATED ENGINE RPM (Poll)",
      "description": "Maximum rated rpm for the indexed engine: Units RPM: settable false",
      "messagetype": "trigger_MAX RATED ENGINE RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MAX RATED ENGINE RPM",
      "displaytitle": "MAX RATED ENGINE RPM (OnChange)",
      "description": "Maximum rated rpm for the indexed engine: Units RPM: settable false",
      "messagetype": "trigger_onChange_MAX RATED ENGINE RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MAX RATED ENGINE RPM",
      "displaytitle": "MAX RATED ENGINE RPM (OnRequest)",
      "description": "Maximum rated rpm for the indexed engine: Units RPM: settable false",
      "messagetype": "trigger_onRequest_MAX RATED ENGINE RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MIDDLE MARKER",
      "displaytitle": "MIDDLE MARKER (Poll)",
      "description": "Middle marker state.: Units bool: settable true",
      "messagetype": "trigger_MIDDLE MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MIDDLE MARKER",
      "displaytitle": "MIDDLE MARKER (OnChange)",
      "description": "Middle marker state.: Units bool: settable true",
      "messagetype": "trigger_onChange_MIDDLE MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MIDDLE MARKER",
      "displaytitle": "MIDDLE MARKER (OnRequest)",
      "description": "Middle marker state.: Units bool: settable true",
      "messagetype": "trigger_onRequest_MIDDLE MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MIN DRAG VELOCITY",
      "displaytitle": "MIN DRAG VELOCITY (Poll)",
      "description": "Minimum drag velocity, in clean, with no input and no gears, when at 10000ft.: Units feet: settable false",
      "messagetype": "trigger_MIN DRAG VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MIN DRAG VELOCITY",
      "displaytitle": "MIN DRAG VELOCITY (OnChange)",
      "description": "Minimum drag velocity, in clean, with no input and no gears, when at 10000ft.: Units feet: settable false",
      "messagetype": "trigger_onChange_MIN DRAG VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MIN DRAG VELOCITY",
      "displaytitle": "MIN DRAG VELOCITY (OnRequest)",
      "description": "Minimum drag velocity, in clean, with no input and no gears, when at 10000ft.: Units feet: settable false",
      "messagetype": "trigger_onRequest_MIN DRAG VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MIN G FORCE",
      "displaytitle": "MIN G FORCE (Poll)",
      "description": "Minimum G force attained: Units gforce: settable false",
      "messagetype": "trigger_MIN G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MIN G FORCE",
      "displaytitle": "MIN G FORCE (OnChange)",
      "description": "Minimum G force attained: Units gforce: settable false",
      "messagetype": "trigger_onChange_MIN G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MIN G FORCE",
      "displaytitle": "MIN G FORCE (OnRequest)",
      "description": "Minimum G force attained: Units gforce: settable false",
      "messagetype": "trigger_onRequest_MIN G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MISSION SCORE",
      "displaytitle": "MISSION SCORE (Poll)",
      "description": ": Units number: settable true",
      "messagetype": "trigger_MISSION SCORE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_MISSION SCORE",
      "displaytitle": "MISSION SCORE (OnChange)",
      "description": ": Units number: settable true",
      "messagetype": "trigger_onChange_MISSION SCORE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_MISSION SCORE",
      "displaytitle": "MISSION SCORE (OnRequest)",
      "description": ": Units number: settable true",
      "messagetype": "trigger_onRequest_MISSION SCORE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV ACTIVE FREQUENCY:index",
      "displaytitle": "NAV ACTIVE FREQUENCY:index (Poll)",
      "description": "Nav active frequency. Index is 1 or 2.: Units MHz: settable false",
      "messagetype": "trigger_NAV ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV ACTIVE FREQUENCY:index",
      "displaytitle": "NAV ACTIVE FREQUENCY:index (OnChange)",
      "description": "Nav active frequency. Index is 1 or 2.: Units MHz: settable false",
      "messagetype": "trigger_onChange_NAV ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV ACTIVE FREQUENCY:index",
      "displaytitle": "NAV ACTIVE FREQUENCY:index (OnRequest)",
      "description": "Nav active frequency. Index is 1 or 2.: Units MHz: settable false",
      "messagetype": "trigger_onRequest_NAV ACTIVE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV AVAILABLE:index",
      "displaytitle": "NAV AVAILABLE:index (Poll)",
      "description": "Flag if Nav equipped on aircraft.: Units bool: settable false",
      "messagetype": "trigger_NAV AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV AVAILABLE:index",
      "displaytitle": "NAV AVAILABLE:index (OnChange)",
      "description": "Flag if Nav equipped on aircraft.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV AVAILABLE:index",
      "displaytitle": "NAV AVAILABLE:index (OnRequest)",
      "description": "Flag if Nav equipped on aircraft.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV BACK COURSE FLAGS:index",
      "displaytitle": "NAV BACK COURSE FLAGS:index (Poll)",
      "description": "Returns the listed bit flags.: Units Flags: settable false",
      "messagetype": "trigger_NAV BACK COURSE FLAGS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV BACK COURSE FLAGS:index",
      "displaytitle": "NAV BACK COURSE FLAGS:index (OnChange)",
      "description": "Returns the listed bit flags.: Units Flags: settable false",
      "messagetype": "trigger_onChange_NAV BACK COURSE FLAGS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV BACK COURSE FLAGS:index",
      "displaytitle": "NAV BACK COURSE FLAGS:index (OnRequest)",
      "description": "Returns the listed bit flags.: Units Flags: settable false",
      "messagetype": "trigger_onRequest_NAV BACK COURSE FLAGS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV CDI:index",
      "displaytitle": "NAV CDI:index (Poll)",
      "description": "CDI needle deflection (+/- 127).: Units number: settable false",
      "messagetype": "trigger_NAV CDI:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV CDI:index",
      "displaytitle": "NAV CDI:index (OnChange)",
      "description": "CDI needle deflection (+/- 127).: Units number: settable false",
      "messagetype": "trigger_onChange_NAV CDI:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV CDI:index",
      "displaytitle": "NAV CDI:index (OnRequest)",
      "description": "CDI needle deflection (+/- 127).: Units number: settable false",
      "messagetype": "trigger_onRequest_NAV CDI:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV CLOSE DME:index",
      "displaytitle": "NAV CLOSE DME:index (Poll)",
      "description": "Closest DME distance. Requires an index value from 1 to 4 to set which NAV to target.: Units nautical miles: settable false",
      "messagetype": "trigger_NAV CLOSE DME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV CLOSE DME:index",
      "displaytitle": "NAV CLOSE DME:index (OnChange)",
      "description": "Closest DME distance. Requires an index value from 1 to 4 to set which NAV to target.: Units nautical miles: settable false",
      "messagetype": "trigger_onChange_NAV CLOSE DME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV CLOSE DME:index",
      "displaytitle": "NAV CLOSE DME:index (OnRequest)",
      "description": "Closest DME distance. Requires an index value from 1 to 4 to set which NAV to target.: Units nautical miles: settable false",
      "messagetype": "trigger_onRequest_NAV CLOSE DME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV CLOSE FREQUENCY:index",
      "displaytitle": "NAV CLOSE FREQUENCY:index (Poll)",
      "description": "Closest Localizer course frequency. Requires an index value from 1 to 4 to set which NAV to target.: Units Hz: settable false",
      "messagetype": "trigger_NAV CLOSE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV CLOSE FREQUENCY:index",
      "displaytitle": "NAV CLOSE FREQUENCY:index (OnChange)",
      "description": "Closest Localizer course frequency. Requires an index value from 1 to 4 to set which NAV to target.: Units Hz: settable false",
      "messagetype": "trigger_onChange_NAV CLOSE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV CLOSE FREQUENCY:index",
      "displaytitle": "NAV CLOSE FREQUENCY:index (OnRequest)",
      "description": "Closest Localizer course frequency. Requires an index value from 1 to 4 to set which NAV to target.: Units Hz: settable false",
      "messagetype": "trigger_onRequest_NAV CLOSE FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV CLOSE IDENT:index",
      "displaytitle": "NAV CLOSE IDENT:index (Poll)",
      "description": "ICAO code. Requires an index value from 1 to 4 to set which NAV to target.: Units null: settable false",
      "messagetype": "trigger_NAV CLOSE IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV CLOSE IDENT:index",
      "displaytitle": "NAV CLOSE IDENT:index (OnChange)",
      "description": "ICAO code. Requires an index value from 1 to 4 to set which NAV to target.: Units null: settable false",
      "messagetype": "trigger_onChange_NAV CLOSE IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV CLOSE IDENT:index",
      "displaytitle": "NAV CLOSE IDENT:index (OnRequest)",
      "description": "ICAO code. Requires an index value from 1 to 4 to set which NAV to target.: Units null: settable false",
      "messagetype": "trigger_onRequest_NAV CLOSE IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV CLOSE LOCALIZER:index",
      "displaytitle": "NAV CLOSE LOCALIZER:index (Poll)",
      "description": "Closest Localizer course heading. Requires an index value from 1 to 4 to set which NAV to target.: Units degrees: settable false",
      "messagetype": "trigger_NAV CLOSE LOCALIZER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV CLOSE LOCALIZER:index",
      "displaytitle": "NAV CLOSE LOCALIZER:index (OnChange)",
      "description": "Closest Localizer course heading. Requires an index value from 1 to 4 to set which NAV to target.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV CLOSE LOCALIZER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV CLOSE LOCALIZER:index",
      "displaytitle": "NAV CLOSE LOCALIZER:index (OnRequest)",
      "description": "Closest Localizer course heading. Requires an index value from 1 to 4 to set which NAV to target.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV CLOSE LOCALIZER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV CLOSE NAME:index",
      "displaytitle": "NAV CLOSE NAME:index (Poll)",
      "description": "Descriptive name. Requires an index value from 1 to 4 to set which NAV to target.: Units null: settable false",
      "messagetype": "trigger_NAV CLOSE NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV CLOSE NAME:index",
      "displaytitle": "NAV CLOSE NAME:index (OnChange)",
      "description": "Descriptive name. Requires an index value from 1 to 4 to set which NAV to target.: Units null: settable false",
      "messagetype": "trigger_onChange_NAV CLOSE NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV CLOSE NAME:index",
      "displaytitle": "NAV CLOSE NAME:index (OnRequest)",
      "description": "Descriptive name. Requires an index value from 1 to 4 to set which NAV to target.: Units null: settable false",
      "messagetype": "trigger_onRequest_NAV CLOSE NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV CODES",
      "displaytitle": "NAV CODES (Poll)",
      "description": "Returns bit flags with the listed meaning.: Units Flags: settable false",
      "messagetype": "trigger_NAV CODES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV CODES",
      "displaytitle": "NAV CODES (OnChange)",
      "description": "Returns bit flags with the listed meaning.: Units Flags: settable false",
      "messagetype": "trigger_onChange_NAV CODES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV CODES",
      "displaytitle": "NAV CODES (OnRequest)",
      "description": "Returns bit flags with the listed meaning.: Units Flags: settable false",
      "messagetype": "trigger_onRequest_NAV CODES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV DME",
      "displaytitle": "NAV DME (Poll)",
      "description": "DME distance.: Units nautical miles: settable false",
      "messagetype": "trigger_NAV DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV DME",
      "displaytitle": "NAV DME (OnChange)",
      "description": "DME distance.: Units nautical miles: settable false",
      "messagetype": "trigger_onChange_NAV DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV DME",
      "displaytitle": "NAV DME (OnRequest)",
      "description": "DME distance.: Units nautical miles: settable false",
      "messagetype": "trigger_onRequest_NAV DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV DMESPEED",
      "displaytitle": "NAV DMESPEED (Poll)",
      "description": "DME speed.: Units knots: settable false",
      "messagetype": "trigger_NAV DMESPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV DMESPEED",
      "displaytitle": "NAV DMESPEED (OnChange)",
      "description": "DME speed.: Units knots: settable false",
      "messagetype": "trigger_onChange_NAV DMESPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV DMESPEED",
      "displaytitle": "NAV DMESPEED (OnRequest)",
      "description": "DME speed.: Units knots: settable false",
      "messagetype": "trigger_onRequest_NAV DMESPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV FREQUENCY",
      "displaytitle": "NAV FREQUENCY (Poll)",
      "description": "Localizer course frequency: Units Hz: settable false",
      "messagetype": "trigger_NAV FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV FREQUENCY",
      "displaytitle": "NAV FREQUENCY (OnChange)",
      "description": "Localizer course frequency: Units Hz: settable false",
      "messagetype": "trigger_onChange_NAV FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV FREQUENCY",
      "displaytitle": "NAV FREQUENCY (OnRequest)",
      "description": "Localizer course frequency: Units Hz: settable false",
      "messagetype": "trigger_onRequest_NAV FREQUENCY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV GLIDE SLOPE",
      "displaytitle": "NAV GLIDE SLOPE (Poll)",
      "description": "The glide slope gradient. The value returned is an integer value formed as sin(slope) * 65536 * 2: Units number: settable false",
      "messagetype": "trigger_NAV GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV GLIDE SLOPE",
      "displaytitle": "NAV GLIDE SLOPE (OnChange)",
      "description": "The glide slope gradient. The value returned is an integer value formed as sin(slope) * 65536 * 2: Units number: settable false",
      "messagetype": "trigger_onChange_NAV GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV GLIDE SLOPE",
      "displaytitle": "NAV GLIDE SLOPE (OnRequest)",
      "description": "The glide slope gradient. The value returned is an integer value formed as sin(slope) * 65536 * 2: Units number: settable false",
      "messagetype": "trigger_onRequest_NAV GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV GLIDE SLOPE ERROR",
      "displaytitle": "NAV GLIDE SLOPE ERROR (Poll)",
      "description": "Difference between current position and glideslope angle. Note that this provides 32 bit floating point precision, rather than the 8 bit integer precision of NAV GSI.: Units degrees: settable false",
      "messagetype": "trigger_NAV GLIDE SLOPE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV GLIDE SLOPE ERROR",
      "displaytitle": "NAV GLIDE SLOPE ERROR (OnChange)",
      "description": "Difference between current position and glideslope angle. Note that this provides 32 bit floating point precision, rather than the 8 bit integer precision of NAV GSI.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV GLIDE SLOPE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV GLIDE SLOPE ERROR",
      "displaytitle": "NAV GLIDE SLOPE ERROR (OnRequest)",
      "description": "Difference between current position and glideslope angle. Note that this provides 32 bit floating point precision, rather than the 8 bit integer precision of NAV GSI.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV GLIDE SLOPE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV GLIDE SLOPE LENGTH",
      "displaytitle": "NAV GLIDE SLOPE LENGTH (Poll)",
      "description": "The distance between the plane and the Glide beacon.: Units feet: settable false",
      "messagetype": "trigger_NAV GLIDE SLOPE LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV GLIDE SLOPE LENGTH",
      "displaytitle": "NAV GLIDE SLOPE LENGTH (OnChange)",
      "description": "The distance between the plane and the Glide beacon.: Units feet: settable false",
      "messagetype": "trigger_onChange_NAV GLIDE SLOPE LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV GLIDE SLOPE LENGTH",
      "displaytitle": "NAV GLIDE SLOPE LENGTH (OnRequest)",
      "description": "The distance between the plane and the Glide beacon.: Units feet: settable false",
      "messagetype": "trigger_onRequest_NAV GLIDE SLOPE LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV GS FLAG",
      "displaytitle": "NAV GS FLAG (Poll)",
      "description": "Glideslope flag.: Units bool: settable false",
      "messagetype": "trigger_NAV GS FLAG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV GS FLAG",
      "displaytitle": "NAV GS FLAG (OnChange)",
      "description": "Glideslope flag.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV GS FLAG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV GS FLAG",
      "displaytitle": "NAV GS FLAG (OnRequest)",
      "description": "Glideslope flag.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV GS FLAG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV GSI",
      "displaytitle": "NAV GSI (Poll)",
      "description": "Glideslope needle deflection (+/- 119). Note that this provides only 8 bit precision, whereas NAV GLIDE SLOPE ERROR provides 32 bit floating point precision.: Units number: settable false",
      "messagetype": "trigger_NAV GSI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV GSI",
      "displaytitle": "NAV GSI (OnChange)",
      "description": "Glideslope needle deflection (+/- 119). Note that this provides only 8 bit precision, whereas NAV GLIDE SLOPE ERROR provides 32 bit floating point precision.: Units number: settable false",
      "messagetype": "trigger_onChange_NAV GSI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV GSI",
      "displaytitle": "NAV GSI (OnRequest)",
      "description": "Glideslope needle deflection (+/- 119). Note that this provides only 8 bit precision, whereas NAV GLIDE SLOPE ERROR provides 32 bit floating point precision.: Units number: settable false",
      "messagetype": "trigger_onRequest_NAV GSI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV HAS CLOSE DME",
      "displaytitle": "NAV HAS CLOSE DME (Poll)",
      "description": "Flag if found a close station with a DME.: Units bool: settable false",
      "messagetype": "trigger_NAV HAS CLOSE DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV HAS CLOSE DME",
      "displaytitle": "NAV HAS CLOSE DME (OnChange)",
      "description": "Flag if found a close station with a DME.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV HAS CLOSE DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV HAS CLOSE DME",
      "displaytitle": "NAV HAS CLOSE DME (OnRequest)",
      "description": "Flag if found a close station with a DME.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV HAS CLOSE DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV HAS CLOSE LOCALIZER",
      "displaytitle": "NAV HAS CLOSE LOCALIZER (Poll)",
      "description": "Flag if found a close localizer station.: Units bool: settable false",
      "messagetype": "trigger_NAV HAS CLOSE LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV HAS CLOSE LOCALIZER",
      "displaytitle": "NAV HAS CLOSE LOCALIZER (OnChange)",
      "description": "Flag if found a close localizer station.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV HAS CLOSE LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV HAS CLOSE LOCALIZER",
      "displaytitle": "NAV HAS CLOSE LOCALIZER (OnRequest)",
      "description": "Flag if found a close localizer station.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV HAS CLOSE LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV HAS DME",
      "displaytitle": "NAV HAS DME (Poll)",
      "description": "Flag if tuned station has a DME.: Units bool: settable false",
      "messagetype": "trigger_NAV HAS DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV HAS DME",
      "displaytitle": "NAV HAS DME (OnChange)",
      "description": "Flag if tuned station has a DME.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV HAS DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV HAS DME",
      "displaytitle": "NAV HAS DME (OnRequest)",
      "description": "Flag if tuned station has a DME.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV HAS DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV HAS GLIDE SLOPE",
      "displaytitle": "NAV HAS GLIDE SLOPE (Poll)",
      "description": "Flag if tuned station has a glide slope.: Units bool: settable false",
      "messagetype": "trigger_NAV HAS GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV HAS GLIDE SLOPE",
      "displaytitle": "NAV HAS GLIDE SLOPE (OnChange)",
      "description": "Flag if tuned station has a glide slope.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV HAS GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV HAS GLIDE SLOPE",
      "displaytitle": "NAV HAS GLIDE SLOPE (OnRequest)",
      "description": "Flag if tuned station has a glide slope.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV HAS GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV HAS LOCALIZER",
      "displaytitle": "NAV HAS LOCALIZER (Poll)",
      "description": "Flag if tuned station is a localizer.: Units bool: settable false",
      "messagetype": "trigger_NAV HAS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV HAS LOCALIZER",
      "displaytitle": "NAV HAS LOCALIZER (OnChange)",
      "description": "Flag if tuned station is a localizer.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV HAS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV HAS LOCALIZER",
      "displaytitle": "NAV HAS LOCALIZER (OnRequest)",
      "description": "Flag if tuned station is a localizer.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV HAS LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV HAS NAV",
      "displaytitle": "NAV HAS NAV (Poll)",
      "description": "Flag if Nav has signal.: Units bool: settable false",
      "messagetype": "trigger_NAV HAS NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV HAS NAV",
      "displaytitle": "NAV HAS NAV (OnChange)",
      "description": "Flag if Nav has signal.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV HAS NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV HAS NAV",
      "displaytitle": "NAV HAS NAV (OnRequest)",
      "description": "Flag if Nav has signal.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV HAS NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV HAS TACAN",
      "displaytitle": "NAV HAS TACAN (Poll)",
      "description": "Flag if Nav has a Tacan.: Units bool: settable false",
      "messagetype": "trigger_NAV HAS TACAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV HAS TACAN",
      "displaytitle": "NAV HAS TACAN (OnChange)",
      "description": "Flag if Nav has a Tacan.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV HAS TACAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV HAS TACAN",
      "displaytitle": "NAV HAS TACAN (OnRequest)",
      "description": "Flag if Nav has a Tacan.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV HAS TACAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV IDENT",
      "displaytitle": "NAV IDENT (Poll)",
      "description": "ICAO code.: Units null: settable false",
      "messagetype": "trigger_NAV IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV IDENT",
      "displaytitle": "NAV IDENT (OnChange)",
      "description": "ICAO code.: Units null: settable false",
      "messagetype": "trigger_onChange_NAV IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV IDENT",
      "displaytitle": "NAV IDENT (OnRequest)",
      "description": "ICAO code.: Units null: settable false",
      "messagetype": "trigger_onRequest_NAV IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV LOC AIRPORT IDENT",
      "displaytitle": "NAV LOC AIRPORT IDENT (Poll)",
      "description": "The airport ICAO ident for the localizer that is currently tuned on the nav radio (like 'EGLL' or 'KJFK'): Units null: settable false",
      "messagetype": "trigger_NAV LOC AIRPORT IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV LOC AIRPORT IDENT",
      "displaytitle": "NAV LOC AIRPORT IDENT (OnChange)",
      "description": "The airport ICAO ident for the localizer that is currently tuned on the nav radio (like 'EGLL' or 'KJFK'): Units null: settable false",
      "messagetype": "trigger_onChange_NAV LOC AIRPORT IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV LOC AIRPORT IDENT",
      "displaytitle": "NAV LOC AIRPORT IDENT (OnRequest)",
      "description": "The airport ICAO ident for the localizer that is currently tuned on the nav radio (like 'EGLL' or 'KJFK'): Units null: settable false",
      "messagetype": "trigger_onRequest_NAV LOC AIRPORT IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV LOC RUNWAY DESIGNATOR",
      "displaytitle": "NAV LOC RUNWAY DESIGNATOR (Poll)",
      "description": "The letter code for the runway that the currently tuned localizer is tuned to.: Units null: settable false",
      "messagetype": "trigger_NAV LOC RUNWAY DESIGNATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV LOC RUNWAY DESIGNATOR",
      "displaytitle": "NAV LOC RUNWAY DESIGNATOR (OnChange)",
      "description": "The letter code for the runway that the currently tuned localizer is tuned to.: Units null: settable false",
      "messagetype": "trigger_onChange_NAV LOC RUNWAY DESIGNATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV LOC RUNWAY DESIGNATOR",
      "displaytitle": "NAV LOC RUNWAY DESIGNATOR (OnRequest)",
      "description": "The letter code for the runway that the currently tuned localizer is tuned to.: Units null: settable false",
      "messagetype": "trigger_onRequest_NAV LOC RUNWAY DESIGNATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV LOC RUNWAY NUMBER",
      "displaytitle": "NAV LOC RUNWAY NUMBER (Poll)",
      "description": "NAV LOC RUNWAY NUMBER - The number portion of the runway that the currently tuned localizer is tuned to (so if the runway was 15L, this would be 15).: Units null: settable false",
      "messagetype": "trigger_NAV LOC RUNWAY NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV LOC RUNWAY NUMBER",
      "displaytitle": "NAV LOC RUNWAY NUMBER (OnChange)",
      "description": "NAV LOC RUNWAY NUMBER - The number portion of the runway that the currently tuned localizer is tuned to (so if the runway was 15L, this would be 15).: Units null: settable false",
      "messagetype": "trigger_onChange_NAV LOC RUNWAY NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV LOC RUNWAY NUMBER",
      "displaytitle": "NAV LOC RUNWAY NUMBER (OnRequest)",
      "description": "NAV LOC RUNWAY NUMBER - The number portion of the runway that the currently tuned localizer is tuned to (so if the runway was 15L, this would be 15).: Units null: settable false",
      "messagetype": "trigger_onRequest_NAV LOC RUNWAY NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV LOCALIZER",
      "displaytitle": "NAV LOCALIZER (Poll)",
      "description": "Localizer course heading.: Units degrees: settable false",
      "messagetype": "trigger_NAV LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV LOCALIZER",
      "displaytitle": "NAV LOCALIZER (OnChange)",
      "description": "Localizer course heading.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV LOCALIZER",
      "displaytitle": "NAV LOCALIZER (OnRequest)",
      "description": "Localizer course heading.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV LOCALIZER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV MAGVAR",
      "displaytitle": "NAV MAGVAR (Poll)",
      "description": "Magnetic variation of tuned Nav station.: Units degrees: settable false",
      "messagetype": "trigger_NAV MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV MAGVAR",
      "displaytitle": "NAV MAGVAR (OnChange)",
      "description": "Magnetic variation of tuned Nav station.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV MAGVAR",
      "displaytitle": "NAV MAGVAR (OnRequest)",
      "description": "Magnetic variation of tuned Nav station.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV NAME",
      "displaytitle": "NAV NAME (Poll)",
      "description": "Descriptive name.: Units null: settable false",
      "messagetype": "trigger_NAV NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV NAME",
      "displaytitle": "NAV NAME (OnChange)",
      "description": "Descriptive name.: Units null: settable false",
      "messagetype": "trigger_onChange_NAV NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV NAME",
      "displaytitle": "NAV NAME (OnRequest)",
      "description": "Descriptive name.: Units null: settable false",
      "messagetype": "trigger_onRequest_NAV NAME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV OBS",
      "displaytitle": "NAV OBS (Poll)",
      "description": "OBS setting. Index of 1 or 2.: Units degrees: settable false",
      "messagetype": "trigger_NAV OBS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV OBS",
      "displaytitle": "NAV OBS (OnChange)",
      "description": "OBS setting. Index of 1 or 2.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV OBS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV OBS",
      "displaytitle": "NAV OBS (OnRequest)",
      "description": "OBS setting. Index of 1 or 2.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV OBS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV RADIAL",
      "displaytitle": "NAV RADIAL (Poll)",
      "description": "Radial that aircraft is on.: Units degrees: settable false",
      "messagetype": "trigger_NAV RADIAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV RADIAL",
      "displaytitle": "NAV RADIAL (OnChange)",
      "description": "Radial that aircraft is on.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV RADIAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV RADIAL",
      "displaytitle": "NAV RADIAL (OnRequest)",
      "description": "Radial that aircraft is on.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV RADIAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV RADIAL ERROR",
      "displaytitle": "NAV RADIAL ERROR (Poll)",
      "description": "Difference between current radial and OBS tuned radial.: Units degrees: settable false",
      "messagetype": "trigger_NAV RADIAL ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV RADIAL ERROR",
      "displaytitle": "NAV RADIAL ERROR (OnChange)",
      "description": "Difference between current radial and OBS tuned radial.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV RADIAL ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV RADIAL ERROR",
      "displaytitle": "NAV RADIAL ERROR (OnRequest)",
      "description": "Difference between current radial and OBS tuned radial.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV RADIAL ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV RAW GLIDE SLOPE",
      "displaytitle": "NAV RAW GLIDE SLOPE (Poll)",
      "description": "The glide slope angle.: Units degrees: settable false",
      "messagetype": "trigger_NAV RAW GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV RAW GLIDE SLOPE",
      "displaytitle": "NAV RAW GLIDE SLOPE (OnChange)",
      "description": "The glide slope angle.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV RAW GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV RAW GLIDE SLOPE",
      "displaytitle": "NAV RAW GLIDE SLOPE (OnRequest)",
      "description": "The glide slope angle.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV RAW GLIDE SLOPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV RELATIVE BEARING TO STATION",
      "displaytitle": "NAV RELATIVE BEARING TO STATION (Poll)",
      "description": "Relative bearing to station.: Units degrees: settable false",
      "messagetype": "trigger_NAV RELATIVE BEARING TO STATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV RELATIVE BEARING TO STATION",
      "displaytitle": "NAV RELATIVE BEARING TO STATION (OnChange)",
      "description": "Relative bearing to station.: Units degrees: settable false",
      "messagetype": "trigger_onChange_NAV RELATIVE BEARING TO STATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV RELATIVE BEARING TO STATION",
      "displaytitle": "NAV RELATIVE BEARING TO STATION (OnRequest)",
      "description": "Relative bearing to station.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_NAV RELATIVE BEARING TO STATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV SIGNAL",
      "displaytitle": "NAV SIGNAL (Poll)",
      "description": "Nav signal strength.: Units number: settable false",
      "messagetype": "trigger_NAV SIGNAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV SIGNAL",
      "displaytitle": "NAV SIGNAL (OnChange)",
      "description": "Nav signal strength.: Units number: settable false",
      "messagetype": "trigger_onChange_NAV SIGNAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV SIGNAL",
      "displaytitle": "NAV SIGNAL (OnRequest)",
      "description": "Nav signal strength.: Units number: settable false",
      "messagetype": "trigger_onRequest_NAV SIGNAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV SOUND:index",
      "displaytitle": "NAV SOUND:index (Poll)",
      "description": "Nav audio flag. Index of 1 or 2.: Units bool: settable false",
      "messagetype": "trigger_NAV SOUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV SOUND:index",
      "displaytitle": "NAV SOUND:index (OnChange)",
      "description": "Nav audio flag. Index of 1 or 2.: Units bool: settable false",
      "messagetype": "trigger_onChange_NAV SOUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV SOUND:index",
      "displaytitle": "NAV SOUND:index (OnRequest)",
      "description": "Nav audio flag. Index of 1 or 2.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NAV SOUND:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV STANDBY FREQUENCY:index",
      "displaytitle": "NAV STANDBY FREQUENCY:index (Poll)",
      "description": "Nav standby frequency. Index is 1 or 2.: Units MHz: settable false",
      "messagetype": "trigger_NAV STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_NAV STANDBY FREQUENCY:index",
      "displaytitle": "NAV STANDBY FREQUENCY:index (OnChange)",
      "description": "Nav standby frequency. Index is 1 or 2.: Units MHz: settable false",
      "messagetype": "trigger_onChange_NAV STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV STANDBY FREQUENCY:index",
      "displaytitle": "NAV STANDBY FREQUENCY:index (OnRequest)",
      "description": "Nav standby frequency. Index is 1 or 2.: Units MHz: settable false",
      "messagetype": "trigger_onRequest_NAV STANDBY FREQUENCY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "NAV TOFROM",
      "displaytitle": "NAV TOFROM (Poll)",
      "description": "Returns whether the Nav is going to or from the current radial (or is off).: Units enum: settable false",
      "messagetype": "trigger_NAV TOFROM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV TOFROM",
      "displaytitle": "NAV TOFROM (OnChange)",
      "description": "Returns whether the Nav is going to or from the current radial (or is off).: Units enum: settable false",
      "messagetype": "trigger_onChange_NAV TOFROM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV TOFROM",
      "displaytitle": "NAV TOFROM (OnRequest)",
      "description": "Returns whether the Nav is going to or from the current radial (or is off).: Units enum: settable false",
      "messagetype": "trigger_onRequest_NAV TOFROM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV VOLUME",
      "displaytitle": "NAV VOLUME (Poll)",
      "description": "The volume of the Nav radio.: Units percent: settable false",
      "messagetype": "trigger_NAV VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV VOLUME",
      "displaytitle": "NAV VOLUME (OnChange)",
      "description": "The volume of the Nav radio.: Units percent: settable false",
      "messagetype": "trigger_onChange_NAV VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV VOLUME",
      "displaytitle": "NAV VOLUME (OnRequest)",
      "description": "The volume of the Nav radio.: Units percent: settable false",
      "messagetype": "trigger_onRequest_NAV VOLUME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NAV VOR DISTANCE",
      "displaytitle": "NAV VOR DISTANCE (Poll)",
      "description": "Distance of the VOR beacon.: Units meters: settable false",
      "messagetype": "trigger_NAV VOR DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NAV VOR DISTANCE",
      "displaytitle": "NAV VOR DISTANCE (OnChange)",
      "description": "Distance of the VOR beacon.: Units meters: settable false",
      "messagetype": "trigger_onChange_NAV VOR DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NAV VOR DISTANCE",
      "displaytitle": "NAV VOR DISTANCE (OnRequest)",
      "description": "Distance of the VOR beacon.: Units meters: settable false",
      "messagetype": "trigger_onRequest_NAV VOR DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NEW ELECTRICAL SYSTEM",
      "displaytitle": "NEW ELECTRICAL SYSTEM (Poll)",
      "description": "Is the aircraft using the new Electrical System or the legacy FSX one: Units bool: settable false",
      "messagetype": "trigger_NEW ELECTRICAL SYSTEM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NEW ELECTRICAL SYSTEM",
      "displaytitle": "NEW ELECTRICAL SYSTEM (OnChange)",
      "description": "Is the aircraft using the new Electrical System or the legacy FSX one: Units bool: settable false",
      "messagetype": "trigger_onChange_NEW ELECTRICAL SYSTEM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NEW ELECTRICAL SYSTEM",
      "displaytitle": "NEW ELECTRICAL SYSTEM (OnRequest)",
      "description": "Is the aircraft using the new Electrical System or the legacy FSX one: Units bool: settable false",
      "messagetype": "trigger_onRequest_NEW ELECTRICAL SYSTEM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NOSEWHEEL LOCK ON",
      "displaytitle": "NOSEWHEEL LOCK ON (Poll)",
      "description": "True if the nosewheel lock is engaged. This can be set using the NosewheelLock parameter.: Units bool: settable false",
      "messagetype": "trigger_NOSEWHEEL LOCK ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NOSEWHEEL LOCK ON",
      "displaytitle": "NOSEWHEEL LOCK ON (OnChange)",
      "description": "True if the nosewheel lock is engaged. This can be set using the NosewheelLock parameter.: Units bool: settable false",
      "messagetype": "trigger_onChange_NOSEWHEEL LOCK ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NOSEWHEEL LOCK ON",
      "displaytitle": "NOSEWHEEL LOCK ON (OnRequest)",
      "description": "True if the nosewheel lock is engaged. This can be set using the NosewheelLock parameter.: Units bool: settable false",
      "messagetype": "trigger_onRequest_NOSEWHEEL LOCK ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NOSEWHEEL MAX STEERING ANGLE",
      "displaytitle": "NOSEWHEEL MAX STEERING ANGLE (Poll)",
      "description": "Can be used to get or set the maximum permitted steering angle for the nose wheel of the aircraft: Units radians: settable true",
      "messagetype": "trigger_NOSEWHEEL MAX STEERING ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NOSEWHEEL MAX STEERING ANGLE",
      "displaytitle": "NOSEWHEEL MAX STEERING ANGLE (OnChange)",
      "description": "Can be used to get or set the maximum permitted steering angle for the nose wheel of the aircraft: Units radians: settable true",
      "messagetype": "trigger_onChange_NOSEWHEEL MAX STEERING ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NOSEWHEEL MAX STEERING ANGLE",
      "displaytitle": "NOSEWHEEL MAX STEERING ANGLE (OnRequest)",
      "description": "Can be used to get or set the maximum permitted steering angle for the nose wheel of the aircraft: Units radians: settable true",
      "messagetype": "trigger_onRequest_NOSEWHEEL MAX STEERING ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NUM SLING CABLES",
      "displaytitle": "NUM SLING CABLES (Poll)",
      "description": "The number of sling cables (not hoists) that are configured for the helicopter.: Units number: settable false",
      "messagetype": "trigger_NUM SLING CABLES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NUM SLING CABLES",
      "displaytitle": "NUM SLING CABLES (OnChange)",
      "description": "The number of sling cables (not hoists) that are configured for the helicopter.: Units number: settable false",
      "messagetype": "trigger_onChange_NUM SLING CABLES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NUM SLING CABLES",
      "displaytitle": "NUM SLING CABLES (OnRequest)",
      "description": "The number of sling cables (not hoists) that are configured for the helicopter.: Units number: settable false",
      "messagetype": "trigger_onRequest_NUM SLING CABLES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NUMBER OF CATAPULTS",
      "displaytitle": "NUMBER OF CATAPULTS (Poll)",
      "description": "Maximum of 4. A model can contain more than 4 catapults, but only the first four will be read and recognized by the simulation: Units number: settable false",
      "messagetype": "trigger_NUMBER OF CATAPULTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NUMBER OF CATAPULTS",
      "displaytitle": "NUMBER OF CATAPULTS (OnChange)",
      "description": "Maximum of 4. A model can contain more than 4 catapults, but only the first four will be read and recognized by the simulation: Units number: settable false",
      "messagetype": "trigger_onChange_NUMBER OF CATAPULTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NUMBER OF CATAPULTS",
      "displaytitle": "NUMBER OF CATAPULTS (OnRequest)",
      "description": "Maximum of 4. A model can contain more than 4 catapults, but only the first four will be read and recognized by the simulation: Units number: settable false",
      "messagetype": "trigger_onRequest_NUMBER OF CATAPULTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NUMBER OF ENGINES",
      "displaytitle": "NUMBER OF ENGINES (Poll)",
      "description": "Number of engines (minimum 0, maximum 4): Units number: settable false",
      "messagetype": "trigger_NUMBER OF ENGINES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_NUMBER OF ENGINES",
      "displaytitle": "NUMBER OF ENGINES (OnChange)",
      "description": "Number of engines (minimum 0, maximum 4): Units number: settable false",
      "messagetype": "trigger_onChange_NUMBER OF ENGINES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_NUMBER OF ENGINES",
      "displaytitle": "NUMBER OF ENGINES (OnRequest)",
      "description": "Number of engines (minimum 0, maximum 4): Units number: settable false",
      "messagetype": "trigger_onRequest_NUMBER OF ENGINES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ON ANY RUNWAY",
      "displaytitle": "ON ANY RUNWAY (Poll)",
      "description": "Whether or not the plane is currently on a runway: Units bool: settable false",
      "messagetype": "trigger_ON ANY RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ON ANY RUNWAY",
      "displaytitle": "ON ANY RUNWAY (OnChange)",
      "description": "Whether or not the plane is currently on a runway: Units bool: settable false",
      "messagetype": "trigger_onChange_ON ANY RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ON ANY RUNWAY",
      "displaytitle": "ON ANY RUNWAY (OnRequest)",
      "description": "Whether or not the plane is currently on a runway: Units bool: settable false",
      "messagetype": "trigger_onRequest_ON ANY RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "OUTER MARKER",
      "displaytitle": "OUTER MARKER (Poll)",
      "description": "Outer marker state.: Units bool: settable true",
      "messagetype": "trigger_OUTER MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_OUTER MARKER",
      "displaytitle": "OUTER MARKER (OnChange)",
      "description": "Outer marker state.: Units bool: settable true",
      "messagetype": "trigger_onChange_OUTER MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_OUTER MARKER",
      "displaytitle": "OUTER MARKER (OnRequest)",
      "description": "Outer marker state.: Units bool: settable true",
      "messagetype": "trigger_onRequest_OUTER MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "OVERSPEED WARNING",
      "displaytitle": "OVERSPEED WARNING (Poll)",
      "description": "Overspeed warning state.: Units bool: settable false",
      "messagetype": "trigger_OVERSPEED WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_OVERSPEED WARNING",
      "displaytitle": "OVERSPEED WARNING (OnChange)",
      "description": "Overspeed warning state.: Units bool: settable false",
      "messagetype": "trigger_onChange_OVERSPEED WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_OVERSPEED WARNING",
      "displaytitle": "OVERSPEED WARNING (OnRequest)",
      "description": "Overspeed warning state.: Units bool: settable false",
      "messagetype": "trigger_onRequest_OVERSPEED WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PANEL ANTI ICE SWITCH",
      "displaytitle": "PANEL ANTI ICE SWITCH (Poll)",
      "description": "True if panel anti-ice switch is on.: Units bool: settable false",
      "messagetype": "trigger_PANEL ANTI ICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PANEL ANTI ICE SWITCH",
      "displaytitle": "PANEL ANTI ICE SWITCH (OnChange)",
      "description": "True if panel anti-ice switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_PANEL ANTI ICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PANEL ANTI ICE SWITCH",
      "displaytitle": "PANEL ANTI ICE SWITCH (OnRequest)",
      "description": "True if panel anti-ice switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_PANEL ANTI ICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PANEL AUTO FEATHER SWITCH:index",
      "displaytitle": "PANEL AUTO FEATHER SWITCH:index (Poll)",
      "description": "Auto-feather arming switch for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_PANEL AUTO FEATHER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PANEL AUTO FEATHER SWITCH:index",
      "displaytitle": "PANEL AUTO FEATHER SWITCH:index (OnChange)",
      "description": "Auto-feather arming switch for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_PANEL AUTO FEATHER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PANEL AUTO FEATHER SWITCH:index",
      "displaytitle": "PANEL AUTO FEATHER SWITCH:index (OnRequest)",
      "description": "Auto-feather arming switch for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_PANEL AUTO FEATHER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ADF",
      "displaytitle": "PARTIAL PANEL ADF (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL ADF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL ADF",
      "displaytitle": "PARTIAL PANEL ADF (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL ADF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL ADF",
      "displaytitle": "PARTIAL PANEL ADF (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL ADF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL AIRSPEED",
      "displaytitle": "PARTIAL PANEL AIRSPEED (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL AIRSPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL AIRSPEED",
      "displaytitle": "PARTIAL PANEL AIRSPEED (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL AIRSPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL AIRSPEED",
      "displaytitle": "PARTIAL PANEL AIRSPEED (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL AIRSPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ALTIMETER",
      "displaytitle": "PARTIAL PANEL ALTIMETER (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL ALTIMETER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL ALTIMETER",
      "displaytitle": "PARTIAL PANEL ALTIMETER (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL ALTIMETER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL ALTIMETER",
      "displaytitle": "PARTIAL PANEL ALTIMETER (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL ALTIMETER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ATTITUDE",
      "displaytitle": "PARTIAL PANEL ATTITUDE (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL ATTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL ATTITUDE",
      "displaytitle": "PARTIAL PANEL ATTITUDE (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL ATTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL ATTITUDE",
      "displaytitle": "PARTIAL PANEL ATTITUDE (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL ATTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL AVIONICS",
      "displaytitle": "PARTIAL PANEL AVIONICS (Poll)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_PARTIAL PANEL AVIONICS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL AVIONICS",
      "displaytitle": "PARTIAL PANEL AVIONICS (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_onChange_PARTIAL PANEL AVIONICS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL AVIONICS",
      "displaytitle": "PARTIAL PANEL AVIONICS (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_onRequest_PARTIAL PANEL AVIONICS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL COMM",
      "displaytitle": "PARTIAL PANEL COMM (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL COMM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL COMM",
      "displaytitle": "PARTIAL PANEL COMM (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL COMM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL COMM",
      "displaytitle": "PARTIAL PANEL COMM (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL COMM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL COMPASS",
      "displaytitle": "PARTIAL PANEL COMPASS (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL COMPASS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL COMPASS",
      "displaytitle": "PARTIAL PANEL COMPASS (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL COMPASS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL COMPASS",
      "displaytitle": "PARTIAL PANEL COMPASS (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL COMPASS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ELECTRICAL",
      "displaytitle": "PARTIAL PANEL ELECTRICAL (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL ELECTRICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL ELECTRICAL",
      "displaytitle": "PARTIAL PANEL ELECTRICAL (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL ELECTRICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL ELECTRICAL",
      "displaytitle": "PARTIAL PANEL ELECTRICAL (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL ELECTRICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ENGINE",
      "displaytitle": "PARTIAL PANEL ENGINE (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL ENGINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL ENGINE",
      "displaytitle": "PARTIAL PANEL ENGINE (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL ENGINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL ENGINE",
      "displaytitle": "PARTIAL PANEL ENGINE (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL ENGINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL FUEL INDICATOR",
      "displaytitle": "PARTIAL PANEL FUEL INDICATOR (Poll)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_PARTIAL PANEL FUEL INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL FUEL INDICATOR",
      "displaytitle": "PARTIAL PANEL FUEL INDICATOR (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_onChange_PARTIAL PANEL FUEL INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL FUEL INDICATOR",
      "displaytitle": "PARTIAL PANEL FUEL INDICATOR (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_onRequest_PARTIAL PANEL FUEL INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL HEADING",
      "displaytitle": "PARTIAL PANEL HEADING (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL HEADING",
      "displaytitle": "PARTIAL PANEL HEADING (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL HEADING",
      "displaytitle": "PARTIAL PANEL HEADING (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL NAV",
      "displaytitle": "PARTIAL PANEL NAV (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL NAV",
      "displaytitle": "PARTIAL PANEL NAV (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL NAV",
      "displaytitle": "PARTIAL PANEL NAV (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL PITOT",
      "displaytitle": "PARTIAL PANEL PITOT (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL PITOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL PITOT",
      "displaytitle": "PARTIAL PANEL PITOT (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL PITOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL PITOT",
      "displaytitle": "PARTIAL PANEL PITOT (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL PITOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL TRANSPONDER",
      "displaytitle": "PARTIAL PANEL TRANSPONDER (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL TRANSPONDER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL TRANSPONDER",
      "displaytitle": "PARTIAL PANEL TRANSPONDER (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL TRANSPONDER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL TRANSPONDER",
      "displaytitle": "PARTIAL PANEL TRANSPONDER (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL TRANSPONDER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL TURN COORDINATOR",
      "displaytitle": "PARTIAL PANEL TURN COORDINATOR (Poll)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_PARTIAL PANEL TURN COORDINATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL TURN COORDINATOR",
      "displaytitle": "PARTIAL PANEL TURN COORDINATOR (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_onChange_PARTIAL PANEL TURN COORDINATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL TURN COORDINATOR",
      "displaytitle": "PARTIAL PANEL TURN COORDINATOR (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable false",
      "messagetype": "trigger_onRequest_PARTIAL PANEL TURN COORDINATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL VACUUM",
      "displaytitle": "PARTIAL PANEL VACUUM (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL VACUUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL VACUUM",
      "displaytitle": "PARTIAL PANEL VACUUM (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL VACUUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL VACUUM",
      "displaytitle": "PARTIAL PANEL VACUUM (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL VACUUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL VERTICAL VELOCITY",
      "displaytitle": "PARTIAL PANEL VERTICAL VELOCITY (Poll)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_PARTIAL PANEL VERTICAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PARTIAL PANEL VERTICAL VELOCITY",
      "displaytitle": "PARTIAL PANEL VERTICAL VELOCITY (OnChange)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onChange_PARTIAL PANEL VERTICAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PARTIAL PANEL VERTICAL VELOCITY",
      "displaytitle": "PARTIAL PANEL VERTICAL VELOCITY (OnRequest)",
      "description": "Gauge fail flag.: Units enum: settable true",
      "messagetype": "trigger_onRequest_PARTIAL PANEL VERTICAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PAYLOAD STATION COUNT",
      "displaytitle": "PAYLOAD STATION COUNT (Poll)",
      "description": "Number of payload stations (1 to 15).: Units number: settable false",
      "messagetype": "trigger_PAYLOAD STATION COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PAYLOAD STATION COUNT",
      "displaytitle": "PAYLOAD STATION COUNT (OnChange)",
      "description": "Number of payload stations (1 to 15).: Units number: settable false",
      "messagetype": "trigger_onChange_PAYLOAD STATION COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PAYLOAD STATION COUNT",
      "displaytitle": "PAYLOAD STATION COUNT (OnRequest)",
      "description": "Number of payload stations (1 to 15).: Units number: settable false",
      "messagetype": "trigger_onRequest_PAYLOAD STATION COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PAYLOAD STATION NAME:index",
      "displaytitle": "PAYLOAD STATION NAME:index (Poll)",
      "description": "Descriptive name for payload station.: Units null: settable false",
      "messagetype": "trigger_PAYLOAD STATION NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PAYLOAD STATION NAME:index",
      "displaytitle": "PAYLOAD STATION NAME:index (OnChange)",
      "description": "Descriptive name for payload station.: Units null: settable false",
      "messagetype": "trigger_onChange_PAYLOAD STATION NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PAYLOAD STATION NAME:index",
      "displaytitle": "PAYLOAD STATION NAME:index (OnRequest)",
      "description": "Descriptive name for payload station.: Units null: settable false",
      "messagetype": "trigger_onRequest_PAYLOAD STATION NAME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PAYLOAD STATION NUM SIMOBJECTS:index",
      "displaytitle": "PAYLOAD STATION NUM SIMOBJECTS:index (Poll)",
      "description": "The number of objects at the payload station.: Units number: settable false",
      "messagetype": "trigger_PAYLOAD STATION NUM SIMOBJECTS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PAYLOAD STATION NUM SIMOBJECTS:index",
      "displaytitle": "PAYLOAD STATION NUM SIMOBJECTS:index (OnChange)",
      "description": "The number of objects at the payload station.: Units number: settable false",
      "messagetype": "trigger_onChange_PAYLOAD STATION NUM SIMOBJECTS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PAYLOAD STATION NUM SIMOBJECTS:index",
      "displaytitle": "PAYLOAD STATION NUM SIMOBJECTS:index (OnRequest)",
      "description": "The number of objects at the payload station.: Units number: settable false",
      "messagetype": "trigger_onRequest_PAYLOAD STATION NUM SIMOBJECTS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PAYLOAD STATION OBJECT:index",
      "displaytitle": "PAYLOAD STATION OBJECT:index (Poll)",
      "description": "Places the named object at the payload station identified by the index (starting from 1). The string is the Container name (refer to the title property of Simulation Object Configuration Files).: Units null: settable false",
      "messagetype": "trigger_PAYLOAD STATION OBJECT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PAYLOAD STATION OBJECT:index",
      "displaytitle": "PAYLOAD STATION OBJECT:index (OnChange)",
      "description": "Places the named object at the payload station identified by the index (starting from 1). The string is the Container name (refer to the title property of Simulation Object Configuration Files).: Units null: settable false",
      "messagetype": "trigger_onChange_PAYLOAD STATION OBJECT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PAYLOAD STATION OBJECT:index",
      "displaytitle": "PAYLOAD STATION OBJECT:index (OnRequest)",
      "description": "Places the named object at the payload station identified by the index (starting from 1). The string is the Container name (refer to the title property of Simulation Object Configuration Files).: Units null: settable false",
      "messagetype": "trigger_onRequest_PAYLOAD STATION OBJECT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PAYLOAD STATION WEIGHT:index",
      "displaytitle": "PAYLOAD STATION WEIGHT:index (Poll)",
      "description": "Individual payload station weight.: Units pounds: settable true",
      "messagetype": "trigger_PAYLOAD STATION WEIGHT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PAYLOAD STATION WEIGHT:index",
      "displaytitle": "PAYLOAD STATION WEIGHT:index (OnChange)",
      "description": "Individual payload station weight.: Units pounds: settable true",
      "messagetype": "trigger_onChange_PAYLOAD STATION WEIGHT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PAYLOAD STATION WEIGHT:index",
      "displaytitle": "PAYLOAD STATION WEIGHT:index (OnRequest)",
      "description": "Individual payload station weight.: Units pounds: settable true",
      "messagetype": "trigger_onRequest_PAYLOAD STATION WEIGHT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PILOT TRANSMITTER TYPE",
      "displaytitle": "PILOT TRANSMITTER TYPE (Poll)",
      "description": "On which channel the pilot is transmitting.: Units enum: settable false",
      "messagetype": "trigger_PILOT TRANSMITTER TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PILOT TRANSMITTER TYPE",
      "displaytitle": "PILOT TRANSMITTER TYPE (OnChange)",
      "description": "On which channel the pilot is transmitting.: Units enum: settable false",
      "messagetype": "trigger_onChange_PILOT TRANSMITTER TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PILOT TRANSMITTER TYPE",
      "displaytitle": "PILOT TRANSMITTER TYPE (OnRequest)",
      "description": "On which channel the pilot is transmitting.: Units enum: settable false",
      "messagetype": "trigger_onRequest_PILOT TRANSMITTER TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PILOT TRANSMITTING",
      "displaytitle": "PILOT TRANSMITTING (Poll)",
      "description": "Whether or not the pilot is transmitting.: Units bool: settable false",
      "messagetype": "trigger_PILOT TRANSMITTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PILOT TRANSMITTING",
      "displaytitle": "PILOT TRANSMITTING (OnChange)",
      "description": "Whether or not the pilot is transmitting.: Units bool: settable false",
      "messagetype": "trigger_onChange_PILOT TRANSMITTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PILOT TRANSMITTING",
      "displaytitle": "PILOT TRANSMITTING (OnRequest)",
      "description": "Whether or not the pilot is transmitting.: Units bool: settable false",
      "messagetype": "trigger_onRequest_PILOT TRANSMITTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PITOT HEAT",
      "displaytitle": "PITOT HEAT (Poll)",
      "description": "Pitot heat active.: Units bool: settable false",
      "messagetype": "trigger_PITOT HEAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PITOT HEAT",
      "displaytitle": "PITOT HEAT (OnChange)",
      "description": "Pitot heat active.: Units bool: settable false",
      "messagetype": "trigger_onChange_PITOT HEAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PITOT HEAT",
      "displaytitle": "PITOT HEAT (OnRequest)",
      "description": "Pitot heat active.: Units bool: settable false",
      "messagetype": "trigger_onRequest_PITOT HEAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PITOT HEAT SWITCH:index",
      "displaytitle": "PITOT HEAT SWITCH:index (Poll)",
      "description": "Pitot heat switch state.: Units enum: settable false",
      "messagetype": "trigger_PITOT HEAT SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PITOT HEAT SWITCH:index",
      "displaytitle": "PITOT HEAT SWITCH:index (OnChange)",
      "description": "Pitot heat switch state.: Units enum: settable false",
      "messagetype": "trigger_onChange_PITOT HEAT SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PITOT HEAT SWITCH:index",
      "displaytitle": "PITOT HEAT SWITCH:index (OnRequest)",
      "description": "Pitot heat switch state.: Units enum: settable false",
      "messagetype": "trigger_onRequest_PITOT HEAT SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PITOT ICE PCT",
      "displaytitle": "PITOT ICE PCT (Poll)",
      "description": "Amount of pitot ice. 100 is fully iced.: Units percent Over 100: settable false",
      "messagetype": "trigger_PITOT ICE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PITOT ICE PCT",
      "displaytitle": "PITOT ICE PCT (OnChange)",
      "description": "Amount of pitot ice. 100 is fully iced.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_PITOT ICE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PITOT ICE PCT",
      "displaytitle": "PITOT ICE PCT (OnRequest)",
      "description": "Amount of pitot ice. 100 is fully iced.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_PITOT ICE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE ALT ABOVE GROUND",
      "displaytitle": "PLANE ALT ABOVE GROUND (Poll)",
      "description": "Altitude above the surface: Units feet: settable true",
      "messagetype": "trigger_PLANE ALT ABOVE GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE ALT ABOVE GROUND",
      "displaytitle": "PLANE ALT ABOVE GROUND (OnChange)",
      "description": "Altitude above the surface: Units feet: settable true",
      "messagetype": "trigger_onChange_PLANE ALT ABOVE GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE ALT ABOVE GROUND",
      "displaytitle": "PLANE ALT ABOVE GROUND (OnRequest)",
      "description": "Altitude above the surface: Units feet: settable true",
      "messagetype": "trigger_onRequest_PLANE ALT ABOVE GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE ALT ABOVE GROUND MINUS CG",
      "displaytitle": "PLANE ALT ABOVE GROUND MINUS CG (Poll)",
      "description": "Altitude above the surface minus CG: Units feet: settable true",
      "messagetype": "trigger_PLANE ALT ABOVE GROUND MINUS CG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE ALT ABOVE GROUND MINUS CG",
      "displaytitle": "PLANE ALT ABOVE GROUND MINUS CG (OnChange)",
      "description": "Altitude above the surface minus CG: Units feet: settable true",
      "messagetype": "trigger_onChange_PLANE ALT ABOVE GROUND MINUS CG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE ALT ABOVE GROUND MINUS CG",
      "displaytitle": "PLANE ALT ABOVE GROUND MINUS CG (OnRequest)",
      "description": "Altitude above the surface minus CG: Units feet: settable true",
      "messagetype": "trigger_onRequest_PLANE ALT ABOVE GROUND MINUS CG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE ALTITUDE",
      "displaytitle": "PLANE ALTITUDE (Poll)",
      "description": "Altitude of aircraft: Units feet: settable true",
      "messagetype": "trigger_PLANE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE ALTITUDE",
      "displaytitle": "PLANE ALTITUDE (OnChange)",
      "description": "Altitude of aircraft: Units feet: settable true",
      "messagetype": "trigger_onChange_PLANE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE ALTITUDE",
      "displaytitle": "PLANE ALTITUDE (OnRequest)",
      "description": "Altitude of aircraft: Units feet: settable true",
      "messagetype": "trigger_onRequest_PLANE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE BANK DEGREES",
      "displaytitle": "PLANE BANK DEGREES (Poll)",
      "description": "Bank angle, although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_PLANE BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE BANK DEGREES",
      "displaytitle": "PLANE BANK DEGREES (OnChange)",
      "description": "Bank angle, although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_onChange_PLANE BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE BANK DEGREES",
      "displaytitle": "PLANE BANK DEGREES (OnRequest)",
      "description": "Bank angle, although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_onRequest_PLANE BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE HEADING DEGREES GYRO",
      "displaytitle": "PLANE HEADING DEGREES GYRO (Poll)",
      "description": "Heading indicator (directional gyro) indication.: Units radians: settable true",
      "messagetype": "trigger_PLANE HEADING DEGREES GYRO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE HEADING DEGREES GYRO",
      "displaytitle": "PLANE HEADING DEGREES GYRO (OnChange)",
      "description": "Heading indicator (directional gyro) indication.: Units radians: settable true",
      "messagetype": "trigger_onChange_PLANE HEADING DEGREES GYRO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE HEADING DEGREES GYRO",
      "displaytitle": "PLANE HEADING DEGREES GYRO (OnRequest)",
      "description": "Heading indicator (directional gyro) indication.: Units radians: settable true",
      "messagetype": "trigger_onRequest_PLANE HEADING DEGREES GYRO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE HEADING DEGREES MAGNETIC",
      "displaytitle": "PLANE HEADING DEGREES MAGNETIC (Poll)",
      "description": "Heading relative to magnetic north - although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_PLANE HEADING DEGREES MAGNETIC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE HEADING DEGREES MAGNETIC",
      "displaytitle": "PLANE HEADING DEGREES MAGNETIC (OnChange)",
      "description": "Heading relative to magnetic north - although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_onChange_PLANE HEADING DEGREES MAGNETIC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE HEADING DEGREES MAGNETIC",
      "displaytitle": "PLANE HEADING DEGREES MAGNETIC (OnRequest)",
      "description": "Heading relative to magnetic north - although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_onRequest_PLANE HEADING DEGREES MAGNETIC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE HEADING DEGREES TRUE",
      "displaytitle": "PLANE HEADING DEGREES TRUE (Poll)",
      "description": "Heading relative to true north - although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_PLANE HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE HEADING DEGREES TRUE",
      "displaytitle": "PLANE HEADING DEGREES TRUE (OnChange)",
      "description": "Heading relative to true north - although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_onChange_PLANE HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE HEADING DEGREES TRUE",
      "displaytitle": "PLANE HEADING DEGREES TRUE (OnRequest)",
      "description": "Heading relative to true north - although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_onRequest_PLANE HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE IN PARKING STATE",
      "displaytitle": "PLANE IN PARKING STATE (Poll)",
      "description": "Whether or not the plane is currently parked (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_PLANE IN PARKING STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE IN PARKING STATE",
      "displaytitle": "PLANE IN PARKING STATE (OnChange)",
      "description": "Whether or not the plane is currently parked (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_onChange_PLANE IN PARKING STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE IN PARKING STATE",
      "displaytitle": "PLANE IN PARKING STATE (OnRequest)",
      "description": "Whether or not the plane is currently parked (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_onRequest_PLANE IN PARKING STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE LATITUDE",
      "displaytitle": "PLANE LATITUDE (Poll)",
      "description": "Latitude of aircraft, North is positive, South negative: Units radians: settable true",
      "messagetype": "trigger_PLANE LATITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE LATITUDE",
      "displaytitle": "PLANE LATITUDE (OnChange)",
      "description": "Latitude of aircraft, North is positive, South negative: Units radians: settable true",
      "messagetype": "trigger_onChange_PLANE LATITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE LATITUDE",
      "displaytitle": "PLANE LATITUDE (OnRequest)",
      "description": "Latitude of aircraft, North is positive, South negative: Units radians: settable true",
      "messagetype": "trigger_onRequest_PLANE LATITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE LONGITUDE",
      "displaytitle": "PLANE LONGITUDE (Poll)",
      "description": "Longitude of aircraft, East is positive, West negative: Units radians: settable true",
      "messagetype": "trigger_PLANE LONGITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE LONGITUDE",
      "displaytitle": "PLANE LONGITUDE (OnChange)",
      "description": "Longitude of aircraft, East is positive, West negative: Units radians: settable true",
      "messagetype": "trigger_onChange_PLANE LONGITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE LONGITUDE",
      "displaytitle": "PLANE LONGITUDE (OnRequest)",
      "description": "Longitude of aircraft, East is positive, West negative: Units radians: settable true",
      "messagetype": "trigger_onRequest_PLANE LONGITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE PITCH DEGREES",
      "displaytitle": "PLANE PITCH DEGREES (Poll)",
      "description": "Pitch angle, although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_PLANE PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE PITCH DEGREES",
      "displaytitle": "PLANE PITCH DEGREES (OnChange)",
      "description": "Pitch angle, although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_onChange_PLANE PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE PITCH DEGREES",
      "displaytitle": "PLANE PITCH DEGREES (OnRequest)",
      "description": "Pitch angle, although the name mentions degrees the units used are radians: Units radians: settable true",
      "messagetype": "trigger_onRequest_PLANE PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE TOUCHDOWN BANK DEGREES",
      "displaytitle": "PLANE TOUCHDOWN BANK DEGREES (Poll)",
      "description": "This float represents the bank of the player's plane from the last touchdown: Units degrees: settable true",
      "messagetype": "trigger_PLANE TOUCHDOWN BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE TOUCHDOWN BANK DEGREES",
      "displaytitle": "PLANE TOUCHDOWN BANK DEGREES (OnChange)",
      "description": "This float represents the bank of the player's plane from the last touchdown: Units degrees: settable true",
      "messagetype": "trigger_onChange_PLANE TOUCHDOWN BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE TOUCHDOWN BANK DEGREES",
      "displaytitle": "PLANE TOUCHDOWN BANK DEGREES (OnRequest)",
      "description": "This float represents the bank of the player's plane from the last touchdown: Units degrees: settable true",
      "messagetype": "trigger_onRequest_PLANE TOUCHDOWN BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE TOUCHDOWN HEADING DEGREES MAGNETIC",
      "displaytitle": "PLANE TOUCHDOWN HEADING DEGREES MAGNETIC (Poll)",
      "description": "This float represents the magnetic heading of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_PLANE TOUCHDOWN HEADING DEGREES MAGNETIC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE TOUCHDOWN HEADING DEGREES MAGNETIC",
      "displaytitle": "PLANE TOUCHDOWN HEADING DEGREES MAGNETIC (OnChange)",
      "description": "This float represents the magnetic heading of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_onChange_PLANE TOUCHDOWN HEADING DEGREES MAGNETIC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE TOUCHDOWN HEADING DEGREES MAGNETIC",
      "displaytitle": "PLANE TOUCHDOWN HEADING DEGREES MAGNETIC (OnRequest)",
      "description": "This float represents the magnetic heading of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_onRequest_PLANE TOUCHDOWN HEADING DEGREES MAGNETIC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE TOUCHDOWN HEADING DEGREES TRUE",
      "displaytitle": "PLANE TOUCHDOWN HEADING DEGREES TRUE (Poll)",
      "description": "This float represents the true heading of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_PLANE TOUCHDOWN HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE TOUCHDOWN HEADING DEGREES TRUE",
      "displaytitle": "PLANE TOUCHDOWN HEADING DEGREES TRUE (OnChange)",
      "description": "This float represents the true heading of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_onChange_PLANE TOUCHDOWN HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE TOUCHDOWN HEADING DEGREES TRUE",
      "displaytitle": "PLANE TOUCHDOWN HEADING DEGREES TRUE (OnRequest)",
      "description": "This float represents the true heading of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_onRequest_PLANE TOUCHDOWN HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE TOUCHDOWN LATITUDE",
      "displaytitle": "PLANE TOUCHDOWN LATITUDE (Poll)",
      "description": "This float represents the plane latitude for the last touchdown: Units radians: settable false",
      "messagetype": "trigger_PLANE TOUCHDOWN LATITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE TOUCHDOWN LATITUDE",
      "displaytitle": "PLANE TOUCHDOWN LATITUDE (OnChange)",
      "description": "This float represents the plane latitude for the last touchdown: Units radians: settable false",
      "messagetype": "trigger_onChange_PLANE TOUCHDOWN LATITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE TOUCHDOWN LATITUDE",
      "displaytitle": "PLANE TOUCHDOWN LATITUDE (OnRequest)",
      "description": "This float represents the plane latitude for the last touchdown: Units radians: settable false",
      "messagetype": "trigger_onRequest_PLANE TOUCHDOWN LATITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE TOUCHDOWN LONGITUDE",
      "displaytitle": "PLANE TOUCHDOWN LONGITUDE (Poll)",
      "description": "This float represents the plane longitude for the last touchdown: Units radians: settable false",
      "messagetype": "trigger_PLANE TOUCHDOWN LONGITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE TOUCHDOWN LONGITUDE",
      "displaytitle": "PLANE TOUCHDOWN LONGITUDE (OnChange)",
      "description": "This float represents the plane longitude for the last touchdown: Units radians: settable false",
      "messagetype": "trigger_onChange_PLANE TOUCHDOWN LONGITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE TOUCHDOWN LONGITUDE",
      "displaytitle": "PLANE TOUCHDOWN LONGITUDE (OnRequest)",
      "description": "This float represents the plane longitude for the last touchdown: Units radians: settable false",
      "messagetype": "trigger_onRequest_PLANE TOUCHDOWN LONGITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE TOUCHDOWN NORMAL VELOCITY",
      "displaytitle": "PLANE TOUCHDOWN NORMAL VELOCITY (Poll)",
      "description": "This float represents the player's plane speed according to ground normal from the last touchdown: Units feet: settable false",
      "messagetype": "trigger_PLANE TOUCHDOWN NORMAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE TOUCHDOWN NORMAL VELOCITY",
      "displaytitle": "PLANE TOUCHDOWN NORMAL VELOCITY (OnChange)",
      "description": "This float represents the player's plane speed according to ground normal from the last touchdown: Units feet: settable false",
      "messagetype": "trigger_onChange_PLANE TOUCHDOWN NORMAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE TOUCHDOWN NORMAL VELOCITY",
      "displaytitle": "PLANE TOUCHDOWN NORMAL VELOCITY (OnRequest)",
      "description": "This float represents the player's plane speed according to ground normal from the last touchdown: Units feet: settable false",
      "messagetype": "trigger_onRequest_PLANE TOUCHDOWN NORMAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE TOUCHDOWN PITCH DEGREES",
      "displaytitle": "PLANE TOUCHDOWN PITCH DEGREES (Poll)",
      "description": "This float represents the pitch of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_PLANE TOUCHDOWN PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PLANE TOUCHDOWN PITCH DEGREES",
      "displaytitle": "PLANE TOUCHDOWN PITCH DEGREES (OnChange)",
      "description": "This float represents the pitch of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_onChange_PLANE TOUCHDOWN PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PLANE TOUCHDOWN PITCH DEGREES",
      "displaytitle": "PLANE TOUCHDOWN PITCH DEGREES (OnRequest)",
      "description": "This float represents the pitch of the player's plane from the last touchdown: Units degrees: settable false",
      "messagetype": "trigger_onRequest_PLANE TOUCHDOWN PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PRESSURE ALTITUDE",
      "displaytitle": "PRESSURE ALTITUDE (Poll)",
      "description": "Standard Altitude, ie: at a 1013.25 hPa (1 atmosphere) setting.: Units meters: settable false",
      "messagetype": "trigger_PRESSURE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PRESSURE ALTITUDE",
      "displaytitle": "PRESSURE ALTITUDE (OnChange)",
      "description": "Standard Altitude, ie: at a 1013.25 hPa (1 atmosphere) setting.: Units meters: settable false",
      "messagetype": "trigger_onChange_PRESSURE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PRESSURE ALTITUDE",
      "displaytitle": "PRESSURE ALTITUDE (OnRequest)",
      "description": "Standard Altitude, ie: at a 1013.25 hPa (1 atmosphere) setting.: Units meters: settable false",
      "messagetype": "trigger_onRequest_PRESSURE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PRESSURIZATION CABIN ALTITUDE",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE (Poll)",
      "description": "The current altitude of the cabin pressurization.: Units feet: settable false",
      "messagetype": "trigger_PRESSURIZATION CABIN ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PRESSURIZATION CABIN ALTITUDE",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE (OnChange)",
      "description": "The current altitude of the cabin pressurization.: Units feet: settable false",
      "messagetype": "trigger_onChange_PRESSURIZATION CABIN ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PRESSURIZATION CABIN ALTITUDE",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE (OnRequest)",
      "description": "The current altitude of the cabin pressurization.: Units feet: settable false",
      "messagetype": "trigger_onRequest_PRESSURIZATION CABIN ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PRESSURIZATION CABIN ALTITUDE GOAL",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE GOAL (Poll)",
      "description": "The set altitude of the cabin pressurization.: Units feet: settable false",
      "messagetype": "trigger_PRESSURIZATION CABIN ALTITUDE GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PRESSURIZATION CABIN ALTITUDE GOAL",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE GOAL (OnChange)",
      "description": "The set altitude of the cabin pressurization.: Units feet: settable false",
      "messagetype": "trigger_onChange_PRESSURIZATION CABIN ALTITUDE GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PRESSURIZATION CABIN ALTITUDE GOAL",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE GOAL (OnRequest)",
      "description": "The set altitude of the cabin pressurization.: Units feet: settable false",
      "messagetype": "trigger_onRequest_PRESSURIZATION CABIN ALTITUDE GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PRESSURIZATION CABIN ALTITUDE RATE",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE RATE (Poll)",
      "description": "The rate at which cabin pressurization changes.: Units feet per second: settable false",
      "messagetype": "trigger_PRESSURIZATION CABIN ALTITUDE RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PRESSURIZATION CABIN ALTITUDE RATE",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE RATE (OnChange)",
      "description": "The rate at which cabin pressurization changes.: Units feet per second: settable false",
      "messagetype": "trigger_onChange_PRESSURIZATION CABIN ALTITUDE RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PRESSURIZATION CABIN ALTITUDE RATE",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE RATE (OnRequest)",
      "description": "The rate at which cabin pressurization changes.: Units feet per second: settable false",
      "messagetype": "trigger_onRequest_PRESSURIZATION CABIN ALTITUDE RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PRESSURIZATION DUMP SWITCH",
      "displaytitle": "PRESSURIZATION DUMP SWITCH (Poll)",
      "description": "True if the cabin pressurization dump switch is on.: Units bool: settable false",
      "messagetype": "trigger_PRESSURIZATION DUMP SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PRESSURIZATION DUMP SWITCH",
      "displaytitle": "PRESSURIZATION DUMP SWITCH (OnChange)",
      "description": "True if the cabin pressurization dump switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_PRESSURIZATION DUMP SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PRESSURIZATION DUMP SWITCH",
      "displaytitle": "PRESSURIZATION DUMP SWITCH (OnRequest)",
      "description": "True if the cabin pressurization dump switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_PRESSURIZATION DUMP SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PRESSURIZATION PRESSURE DIFFERENTIAL",
      "displaytitle": "PRESSURIZATION PRESSURE DIFFERENTIAL (Poll)",
      "description": "The difference in pressure between the set altitude pressurization and the current pressurization.: Units pounds: settable false",
      "messagetype": "trigger_PRESSURIZATION PRESSURE DIFFERENTIAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PRESSURIZATION PRESSURE DIFFERENTIAL",
      "displaytitle": "PRESSURIZATION PRESSURE DIFFERENTIAL (OnChange)",
      "description": "The difference in pressure between the set altitude pressurization and the current pressurization.: Units pounds: settable false",
      "messagetype": "trigger_onChange_PRESSURIZATION PRESSURE DIFFERENTIAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PRESSURIZATION PRESSURE DIFFERENTIAL",
      "displaytitle": "PRESSURIZATION PRESSURE DIFFERENTIAL (OnRequest)",
      "description": "The difference in pressure between the set altitude pressurization and the current pressurization.: Units pounds: settable false",
      "messagetype": "trigger_onRequest_PRESSURIZATION PRESSURE DIFFERENTIAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP AUTO CRUISE ACTIVE",
      "displaytitle": "PROP AUTO CRUISE ACTIVE (Poll)",
      "description": "True if prop auto cruise active: Units bool: settable false",
      "messagetype": "trigger_PROP AUTO CRUISE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PROP AUTO CRUISE ACTIVE",
      "displaytitle": "PROP AUTO CRUISE ACTIVE (OnChange)",
      "description": "True if prop auto cruise active: Units bool: settable false",
      "messagetype": "trigger_onChange_PROP AUTO CRUISE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP AUTO CRUISE ACTIVE",
      "displaytitle": "PROP AUTO CRUISE ACTIVE (OnRequest)",
      "description": "True if prop auto cruise active: Units bool: settable false",
      "messagetype": "trigger_onRequest_PROP AUTO CRUISE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP AUTO FEATHER ARMED:index",
      "displaytitle": "PROP AUTO FEATHER ARMED:index (Poll)",
      "description": "Auto-feather armed state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_PROP AUTO FEATHER ARMED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP AUTO FEATHER ARMED:index",
      "displaytitle": "PROP AUTO FEATHER ARMED:index (OnChange)",
      "description": "Auto-feather armed state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_PROP AUTO FEATHER ARMED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP AUTO FEATHER ARMED:index",
      "displaytitle": "PROP AUTO FEATHER ARMED:index (OnRequest)",
      "description": "Auto-feather armed state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_PROP AUTO FEATHER ARMED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP BETA FORCED ACTIVE",
      "displaytitle": "PROP BETA FORCED ACTIVE (Poll)",
      "description": "This can be used to enable the propeller forced beta mode (1, TRUE) or disable it (0, FALSE), when being written to. When being read from, it will return TRUE (1) if the forced beta mode is enabled or FALSE (0) if it isn't. When enabled, the PROP BETA FORCED POSITION value will be used to drive the prop beta, while the internal coded simulation logic is used when this is disabled: Units bool: settable true",
      "messagetype": "trigger_PROP BETA FORCED ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PROP BETA FORCED ACTIVE",
      "displaytitle": "PROP BETA FORCED ACTIVE (OnChange)",
      "description": "This can be used to enable the propeller forced beta mode (1, TRUE) or disable it (0, FALSE), when being written to. When being read from, it will return TRUE (1) if the forced beta mode is enabled or FALSE (0) if it isn't. When enabled, the PROP BETA FORCED POSITION value will be used to drive the prop beta, while the internal coded simulation logic is used when this is disabled: Units bool: settable true",
      "messagetype": "trigger_onChange_PROP BETA FORCED ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP BETA FORCED ACTIVE",
      "displaytitle": "PROP BETA FORCED ACTIVE (OnRequest)",
      "description": "This can be used to enable the propeller forced beta mode (1, TRUE) or disable it (0, FALSE), when being written to. When being read from, it will return TRUE (1) if the forced beta mode is enabled or FALSE (0) if it isn't. When enabled, the PROP BETA FORCED POSITION value will be used to drive the prop beta, while the internal coded simulation logic is used when this is disabled: Units bool: settable true",
      "messagetype": "trigger_onRequest_PROP BETA FORCED ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP BETA FORCED POSITION",
      "displaytitle": "PROP BETA FORCED POSITION (Poll)",
      "description": "Get or set the beta at which the prop is forced. Only valid when PROP BETA FORCED ACTIVE is TRUE (1): Units radians: settable false",
      "messagetype": "trigger_PROP BETA FORCED POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PROP BETA FORCED POSITION",
      "displaytitle": "PROP BETA FORCED POSITION (OnChange)",
      "description": "Get or set the beta at which the prop is forced. Only valid when PROP BETA FORCED ACTIVE is TRUE (1): Units radians: settable false",
      "messagetype": "trigger_onChange_PROP BETA FORCED POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP BETA FORCED POSITION",
      "displaytitle": "PROP BETA FORCED POSITION (OnRequest)",
      "description": "Get or set the beta at which the prop is forced. Only valid when PROP BETA FORCED ACTIVE is TRUE (1): Units radians: settable false",
      "messagetype": "trigger_onRequest_PROP BETA FORCED POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP BETA MAX",
      "displaytitle": "PROP BETA MAX (Poll)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the maximum possible pitch value for all engines: Units radians: settable false",
      "messagetype": "trigger_PROP BETA MAX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PROP BETA MAX",
      "displaytitle": "PROP BETA MAX (OnChange)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the maximum possible pitch value for all engines: Units radians: settable false",
      "messagetype": "trigger_onChange_PROP BETA MAX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP BETA MAX",
      "displaytitle": "PROP BETA MAX (OnRequest)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the maximum possible pitch value for all engines: Units radians: settable false",
      "messagetype": "trigger_onRequest_PROP BETA MAX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP BETA MIN",
      "displaytitle": "PROP BETA MIN (Poll)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the minimum possible pitch value for all engines: Units radians: settable false",
      "messagetype": "trigger_PROP BETA MIN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PROP BETA MIN",
      "displaytitle": "PROP BETA MIN (OnChange)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the minimum possible pitch value for all engines: Units radians: settable false",
      "messagetype": "trigger_onChange_PROP BETA MIN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP BETA MIN",
      "displaytitle": "PROP BETA MIN (OnRequest)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the minimum possible pitch value for all engines: Units radians: settable false",
      "messagetype": "trigger_onRequest_PROP BETA MIN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP BETA MIN REVERSE",
      "displaytitle": "PROP BETA MIN REVERSE (Poll)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the minimum possible pitch value when the propeller is in reverse for all engines: Units radians: settable false",
      "messagetype": "trigger_PROP BETA MIN REVERSE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PROP BETA MIN REVERSE",
      "displaytitle": "PROP BETA MIN REVERSE (OnChange)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the minimum possible pitch value when the propeller is in reverse for all engines: Units radians: settable false",
      "messagetype": "trigger_onChange_PROP BETA MIN REVERSE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP BETA MIN REVERSE",
      "displaytitle": "PROP BETA MIN REVERSE (OnRequest)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller. This retrieves the minimum possible pitch value when the propeller is in reverse for all engines: Units radians: settable false",
      "messagetype": "trigger_onRequest_PROP BETA MIN REVERSE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP BETA:index",
      "displaytitle": "PROP BETA:index (Poll)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller, and this can be used to retrieve the current pitch setting, per indexed engine: Units radians: settable true",
      "messagetype": "trigger_PROP BETA:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP BETA:index",
      "displaytitle": "PROP BETA:index (OnChange)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller, and this can be used to retrieve the current pitch setting, per indexed engine: Units radians: settable true",
      "messagetype": "trigger_onChange_PROP BETA:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP BETA:index",
      "displaytitle": "PROP BETA:index (OnRequest)",
      "description": "The \"prop beta\" is the pitch of the blades of the propeller, and this can be used to retrieve the current pitch setting, per indexed engine: Units radians: settable true",
      "messagetype": "trigger_onRequest_PROP BETA:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP DEICE SWITCH:index",
      "displaytitle": "PROP DEICE SWITCH:index (Poll)",
      "description": "True if prop deice switch on for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_PROP DEICE SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP DEICE SWITCH:index",
      "displaytitle": "PROP DEICE SWITCH:index (OnChange)",
      "description": "True if prop deice switch on for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_PROP DEICE SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP DEICE SWITCH:index",
      "displaytitle": "PROP DEICE SWITCH:index (OnRequest)",
      "description": "True if prop deice switch on for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_PROP DEICE SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP FEATHER SWITCH:index",
      "displaytitle": "PROP FEATHER SWITCH:index (Poll)",
      "description": "Prop feather switch for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_PROP FEATHER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP FEATHER SWITCH:index",
      "displaytitle": "PROP FEATHER SWITCH:index (OnChange)",
      "description": "Prop feather switch for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_PROP FEATHER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP FEATHER SWITCH:index",
      "displaytitle": "PROP FEATHER SWITCH:index (OnRequest)",
      "description": "Prop feather switch for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_PROP FEATHER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP FEATHERED:index",
      "displaytitle": "PROP FEATHERED:index (Poll)",
      "description": "This will return the feathered state of the propeller for an indexed engine. The state is either feathered (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_PROP FEATHERED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP FEATHERED:index",
      "displaytitle": "PROP FEATHERED:index (OnChange)",
      "description": "This will return the feathered state of the propeller for an indexed engine. The state is either feathered (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_onChange_PROP FEATHERED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP FEATHERED:index",
      "displaytitle": "PROP FEATHERED:index (OnRequest)",
      "description": "This will return the feathered state of the propeller for an indexed engine. The state is either feathered (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_onRequest_PROP FEATHERED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP FEATHERING INHIBIT:index",
      "displaytitle": "PROP FEATHERING INHIBIT:index (Poll)",
      "description": "Feathering inhibit flag for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_PROP FEATHERING INHIBIT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP FEATHERING INHIBIT:index",
      "displaytitle": "PROP FEATHERING INHIBIT:index (OnChange)",
      "description": "Feathering inhibit flag for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_PROP FEATHERING INHIBIT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP FEATHERING INHIBIT:index",
      "displaytitle": "PROP FEATHERING INHIBIT:index (OnRequest)",
      "description": "Feathering inhibit flag for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_PROP FEATHERING INHIBIT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP MAX RPM PERCENT:index",
      "displaytitle": "PROP MAX RPM PERCENT:index (Poll)",
      "description": "Percent of max rated rpm for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_PROP MAX RPM PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP MAX RPM PERCENT:index",
      "displaytitle": "PROP MAX RPM PERCENT:index (OnChange)",
      "description": "Percent of max rated rpm for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_PROP MAX RPM PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP MAX RPM PERCENT:index",
      "displaytitle": "PROP MAX RPM PERCENT:index (OnRequest)",
      "description": "Percent of max rated rpm for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_PROP MAX RPM PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP ROTATION ANGLE",
      "displaytitle": "PROP ROTATION ANGLE (Poll)",
      "description": "Prop rotation angle: Units radians: settable false",
      "messagetype": "trigger_PROP ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PROP ROTATION ANGLE",
      "displaytitle": "PROP ROTATION ANGLE (OnChange)",
      "description": "Prop rotation angle: Units radians: settable false",
      "messagetype": "trigger_onChange_PROP ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP ROTATION ANGLE",
      "displaytitle": "PROP ROTATION ANGLE (OnRequest)",
      "description": "Prop rotation angle: Units radians: settable false",
      "messagetype": "trigger_onRequest_PROP ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP RPM:index",
      "displaytitle": "PROP RPM:index (Poll)",
      "description": "Propeller rpm for the indexed engine: Units RPM: settable true",
      "messagetype": "trigger_PROP RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP RPM:index",
      "displaytitle": "PROP RPM:index (OnChange)",
      "description": "Propeller rpm for the indexed engine: Units RPM: settable true",
      "messagetype": "trigger_onChange_PROP RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP RPM:index",
      "displaytitle": "PROP RPM:index (OnRequest)",
      "description": "Propeller rpm for the indexed engine: Units RPM: settable true",
      "messagetype": "trigger_onRequest_PROP RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP SYNC ACTIVE:index",
      "displaytitle": "PROP SYNC ACTIVE:index (Poll)",
      "description": "True if prop sync is active the indexed engine: Units bool: settable false",
      "messagetype": "trigger_PROP SYNC ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP SYNC ACTIVE:index",
      "displaytitle": "PROP SYNC ACTIVE:index (OnChange)",
      "description": "True if prop sync is active the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_PROP SYNC ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP SYNC ACTIVE:index",
      "displaytitle": "PROP SYNC ACTIVE:index (OnRequest)",
      "description": "True if prop sync is active the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_PROP SYNC ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP SYNC DELTA LEVER:index",
      "displaytitle": "PROP SYNC DELTA LEVER:index (Poll)",
      "description": "Corrected prop correction input on slaved engine for the indexed engine: Units position: settable false",
      "messagetype": "trigger_PROP SYNC DELTA LEVER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP SYNC DELTA LEVER:index",
      "displaytitle": "PROP SYNC DELTA LEVER:index (OnChange)",
      "description": "Corrected prop correction input on slaved engine for the indexed engine: Units position: settable false",
      "messagetype": "trigger_onChange_PROP SYNC DELTA LEVER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP SYNC DELTA LEVER:index",
      "displaytitle": "PROP SYNC DELTA LEVER:index (OnRequest)",
      "description": "Corrected prop correction input on slaved engine for the indexed engine: Units position: settable false",
      "messagetype": "trigger_onRequest_PROP SYNC DELTA LEVER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP THRUST:index",
      "displaytitle": "PROP THRUST:index (Poll)",
      "description": "Propeller thrust for the indexed engine: Units pounds: settable false",
      "messagetype": "trigger_PROP THRUST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PROP THRUST:index",
      "displaytitle": "PROP THRUST:index (OnChange)",
      "description": "Propeller thrust for the indexed engine: Units pounds: settable false",
      "messagetype": "trigger_onChange_PROP THRUST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PROP THRUST:index",
      "displaytitle": "PROP THRUST:index (OnRequest)",
      "description": "Propeller thrust for the indexed engine: Units pounds: settable false",
      "messagetype": "trigger_onRequest_PROP THRUST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PUSHBACK ANGLE",
      "displaytitle": "PUSHBACK ANGLE (Poll)",
      "description": "Pushback angle (the heading of the tug).: Units radians: settable false",
      "messagetype": "trigger_PUSHBACK ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PUSHBACK ANGLE",
      "displaytitle": "PUSHBACK ANGLE (OnChange)",
      "description": "Pushback angle (the heading of the tug).: Units radians: settable false",
      "messagetype": "trigger_onChange_PUSHBACK ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PUSHBACK ANGLE",
      "displaytitle": "PUSHBACK ANGLE (OnRequest)",
      "description": "Pushback angle (the heading of the tug).: Units radians: settable false",
      "messagetype": "trigger_onRequest_PUSHBACK ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PUSHBACK ATTACHED",
      "displaytitle": "PUSHBACK ATTACHED (Poll)",
      "description": "True if this vehicle is attached to an aircraft.: Units bool: settable false",
      "messagetype": "trigger_PUSHBACK ATTACHED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PUSHBACK ATTACHED",
      "displaytitle": "PUSHBACK ATTACHED (OnChange)",
      "description": "True if this vehicle is attached to an aircraft.: Units bool: settable false",
      "messagetype": "trigger_onChange_PUSHBACK ATTACHED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PUSHBACK ATTACHED",
      "displaytitle": "PUSHBACK ATTACHED (OnRequest)",
      "description": "True if this vehicle is attached to an aircraft.: Units bool: settable false",
      "messagetype": "trigger_onRequest_PUSHBACK ATTACHED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PUSHBACK AVAILABLE",
      "displaytitle": "PUSHBACK AVAILABLE (Poll)",
      "description": "True if a push back is available on the parking space.: Units bool: settable false",
      "messagetype": "trigger_PUSHBACK AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PUSHBACK AVAILABLE",
      "displaytitle": "PUSHBACK AVAILABLE (OnChange)",
      "description": "True if a push back is available on the parking space.: Units bool: settable false",
      "messagetype": "trigger_onChange_PUSHBACK AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PUSHBACK AVAILABLE",
      "displaytitle": "PUSHBACK AVAILABLE (OnRequest)",
      "description": "True if a push back is available on the parking space.: Units bool: settable false",
      "messagetype": "trigger_onRequest_PUSHBACK AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PUSHBACK CONTACTX",
      "displaytitle": "PUSHBACK CONTACTX (Poll)",
      "description": "The towpoint position, relative to the aircrafts datum reference point.: Units feet: settable false",
      "messagetype": "trigger_PUSHBACK CONTACTX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PUSHBACK CONTACTX",
      "displaytitle": "PUSHBACK CONTACTX (OnChange)",
      "description": "The towpoint position, relative to the aircrafts datum reference point.: Units feet: settable false",
      "messagetype": "trigger_onChange_PUSHBACK CONTACTX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PUSHBACK CONTACTX",
      "displaytitle": "PUSHBACK CONTACTX (OnRequest)",
      "description": "The towpoint position, relative to the aircrafts datum reference point.: Units feet: settable false",
      "messagetype": "trigger_onRequest_PUSHBACK CONTACTX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PUSHBACK CONTACTY",
      "displaytitle": "PUSHBACK CONTACTY (Poll)",
      "description": "Pushback contact position in vertical direction.: Units feet: settable false",
      "messagetype": "trigger_PUSHBACK CONTACTY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PUSHBACK CONTACTY",
      "displaytitle": "PUSHBACK CONTACTY (OnChange)",
      "description": "Pushback contact position in vertical direction.: Units feet: settable false",
      "messagetype": "trigger_onChange_PUSHBACK CONTACTY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PUSHBACK CONTACTY",
      "displaytitle": "PUSHBACK CONTACTY (OnRequest)",
      "description": "Pushback contact position in vertical direction.: Units feet: settable false",
      "messagetype": "trigger_onRequest_PUSHBACK CONTACTY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PUSHBACK CONTACTZ",
      "displaytitle": "PUSHBACK CONTACTZ (Poll)",
      "description": "Pushback contact position in fore/aft direction.: Units feet: settable false",
      "messagetype": "trigger_PUSHBACK CONTACTZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PUSHBACK CONTACTZ",
      "displaytitle": "PUSHBACK CONTACTZ (OnChange)",
      "description": "Pushback contact position in fore/aft direction.: Units feet: settable false",
      "messagetype": "trigger_onChange_PUSHBACK CONTACTZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PUSHBACK CONTACTZ",
      "displaytitle": "PUSHBACK CONTACTZ (OnRequest)",
      "description": "Pushback contact position in fore/aft direction.: Units feet: settable false",
      "messagetype": "trigger_onRequest_PUSHBACK CONTACTZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PUSHBACK STATE:index",
      "displaytitle": "PUSHBACK STATE:index (Poll)",
      "description": "Type of pushback.: Units enum: settable false",
      "messagetype": "trigger_PUSHBACK STATE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_PUSHBACK STATE:index",
      "displaytitle": "PUSHBACK STATE:index (OnChange)",
      "description": "Type of pushback.: Units enum: settable false",
      "messagetype": "trigger_onChange_PUSHBACK STATE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_PUSHBACK STATE:index",
      "displaytitle": "PUSHBACK STATE:index (OnRequest)",
      "description": "Type of pushback.: Units enum: settable false",
      "messagetype": "trigger_onRequest_PUSHBACK STATE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PUSHBACK WAIT",
      "displaytitle": "PUSHBACK WAIT (Poll)",
      "description": "True if waiting for pushback.: Units bool: settable false",
      "messagetype": "trigger_PUSHBACK WAIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_PUSHBACK WAIT",
      "displaytitle": "PUSHBACK WAIT (OnChange)",
      "description": "True if waiting for pushback.: Units bool: settable false",
      "messagetype": "trigger_onChange_PUSHBACK WAIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_PUSHBACK WAIT",
      "displaytitle": "PUSHBACK WAIT (OnRequest)",
      "description": "True if waiting for pushback.: Units bool: settable false",
      "messagetype": "trigger_onRequest_PUSHBACK WAIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RAD INS SWITCH",
      "displaytitle": "RAD INS SWITCH (Poll)",
      "description": "True if Rad INS switch on.: Units bool: settable false",
      "messagetype": "trigger_RAD INS SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RAD INS SWITCH",
      "displaytitle": "RAD INS SWITCH (OnChange)",
      "description": "True if Rad INS switch on.: Units bool: settable false",
      "messagetype": "trigger_onChange_RAD INS SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RAD INS SWITCH",
      "displaytitle": "RAD INS SWITCH (OnRequest)",
      "description": "True if Rad INS switch on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_RAD INS SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RADIO HEIGHT",
      "displaytitle": "RADIO HEIGHT (Poll)",
      "description": "Radar altitude.: Units feet: settable false",
      "messagetype": "trigger_RADIO HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RADIO HEIGHT",
      "displaytitle": "RADIO HEIGHT (OnChange)",
      "description": "Radar altitude.: Units feet: settable false",
      "messagetype": "trigger_onChange_RADIO HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RADIO HEIGHT",
      "displaytitle": "RADIO HEIGHT (OnRequest)",
      "description": "Radar altitude.: Units feet: settable false",
      "messagetype": "trigger_onRequest_RADIO HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "REALISM",
      "displaytitle": "REALISM (Poll)",
      "description": "General realism percent.: Units number: settable true",
      "messagetype": "trigger_REALISM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_REALISM",
      "displaytitle": "REALISM (OnChange)",
      "description": "General realism percent.: Units number: settable true",
      "messagetype": "trigger_onChange_REALISM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_REALISM",
      "displaytitle": "REALISM (OnRequest)",
      "description": "General realism percent.: Units number: settable true",
      "messagetype": "trigger_onRequest_REALISM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "REALISM CRASH DETECTION",
      "displaytitle": "REALISM CRASH DETECTION (Poll)",
      "description": "True indicates crash detection is turned on.: Units bool: settable false",
      "messagetype": "trigger_REALISM CRASH DETECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_REALISM CRASH DETECTION",
      "displaytitle": "REALISM CRASH DETECTION (OnChange)",
      "description": "True indicates crash detection is turned on.: Units bool: settable false",
      "messagetype": "trigger_onChange_REALISM CRASH DETECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_REALISM CRASH DETECTION",
      "displaytitle": "REALISM CRASH DETECTION (OnRequest)",
      "description": "True indicates crash detection is turned on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_REALISM CRASH DETECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "REALISM CRASH WITH OTHERS",
      "displaytitle": "REALISM CRASH WITH OTHERS (Poll)",
      "description": "True indicates crashing with other aircraft is possible.: Units bool: settable false",
      "messagetype": "trigger_REALISM CRASH WITH OTHERS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_REALISM CRASH WITH OTHERS",
      "displaytitle": "REALISM CRASH WITH OTHERS (OnChange)",
      "description": "True indicates crashing with other aircraft is possible.: Units bool: settable false",
      "messagetype": "trigger_onChange_REALISM CRASH WITH OTHERS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_REALISM CRASH WITH OTHERS",
      "displaytitle": "REALISM CRASH WITH OTHERS (OnRequest)",
      "description": "True indicates crashing with other aircraft is possible.: Units bool: settable false",
      "messagetype": "trigger_onRequest_REALISM CRASH WITH OTHERS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RECIP CARBURETOR TEMPERATURE:index",
      "displaytitle": "RECIP CARBURETOR TEMPERATURE:index (Poll)",
      "description": "Carburetor temperature the indexed engine: Units celsius: settable true",
      "messagetype": "trigger_RECIP CARBURETOR TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP CARBURETOR TEMPERATURE:index",
      "displaytitle": "RECIP CARBURETOR TEMPERATURE:index (OnChange)",
      "description": "Carburetor temperature the indexed engine: Units celsius: settable true",
      "messagetype": "trigger_onChange_RECIP CARBURETOR TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP CARBURETOR TEMPERATURE:index",
      "displaytitle": "RECIP CARBURETOR TEMPERATURE:index (OnRequest)",
      "description": "Carburetor temperature the indexed engine: Units celsius: settable true",
      "messagetype": "trigger_onRequest_RECIP CARBURETOR TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ALTERNATE AIR POSITION:index",
      "displaytitle": "RECIP ENG ALTERNATE AIR POSITION:index (Poll)",
      "description": "Alternate air control the indexed engine: Units position: settable true",
      "messagetype": "trigger_RECIP ENG ALTERNATE AIR POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG ALTERNATE AIR POSITION:index",
      "displaytitle": "RECIP ENG ALTERNATE AIR POSITION:index (OnChange)",
      "description": "Alternate air control the indexed engine: Units position: settable true",
      "messagetype": "trigger_onChange_RECIP ENG ALTERNATE AIR POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG ALTERNATE AIR POSITION:index",
      "displaytitle": "RECIP ENG ALTERNATE AIR POSITION:index (OnRequest)",
      "description": "Alternate air control the indexed engine: Units position: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG ALTERNATE AIR POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION FLOW RATE:index",
      "displaytitle": "RECIP ENG ANTIDETONATION FLOW RATE:index (Poll)",
      "description": "This gives the actual flow rate of the Anti Detonation system for the indexed engine: Units gallons per hour: settable false",
      "messagetype": "trigger_RECIP ENG ANTIDETONATION FLOW RATE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG ANTIDETONATION FLOW RATE:index",
      "displaytitle": "RECIP ENG ANTIDETONATION FLOW RATE:index (OnChange)",
      "description": "This gives the actual flow rate of the Anti Detonation system for the indexed engine: Units gallons per hour: settable false",
      "messagetype": "trigger_onChange_RECIP ENG ANTIDETONATION FLOW RATE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG ANTIDETONATION FLOW RATE:index",
      "displaytitle": "RECIP ENG ANTIDETONATION FLOW RATE:index (OnRequest)",
      "description": "This gives the actual flow rate of the Anti Detonation system for the indexed engine: Units gallons per hour: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG ANTIDETONATION FLOW RATE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index (Poll)",
      "description": "The maximum quantity of water/methanol mixture in the ADI tank for the indexed engine. This value is set as part of the [ANTIDETONATION_SYSTEM.N] section in the aircraft configuration files: Units gallons: settable false",
      "messagetype": "trigger_RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index (OnChange)",
      "description": "The maximum quantity of water/methanol mixture in the ADI tank for the indexed engine. This value is set as part of the [ANTIDETONATION_SYSTEM.N] section in the aircraft configuration files: Units gallons: settable false",
      "messagetype": "trigger_onChange_RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index (OnRequest)",
      "description": "The maximum quantity of water/methanol mixture in the ADI tank for the indexed engine. This value is set as part of the [ANTIDETONATION_SYSTEM.N] section in the aircraft configuration files: Units gallons: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION TANK QUANTITY:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK QUANTITY:index (Poll)",
      "description": "The quantity of water/methanol mixture currently in the ADI tank for the indexed engine: Units gallons: settable true",
      "messagetype": "trigger_RECIP ENG ANTIDETONATION TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG ANTIDETONATION TANK QUANTITY:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK QUANTITY:index (OnChange)",
      "description": "The quantity of water/methanol mixture currently in the ADI tank for the indexed engine: Units gallons: settable true",
      "messagetype": "trigger_onChange_RECIP ENG ANTIDETONATION TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG ANTIDETONATION TANK QUANTITY:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK QUANTITY:index (OnRequest)",
      "description": "The quantity of water/methanol mixture currently in the ADI tank for the indexed engine: Units gallons: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG ANTIDETONATION TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION TANK VALVE:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK VALVE:index (Poll)",
      "description": "The status of the ADI tank valve for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_RECIP ENG ANTIDETONATION TANK VALVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG ANTIDETONATION TANK VALVE:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK VALVE:index (OnChange)",
      "description": "The status of the ADI tank valve for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onChange_RECIP ENG ANTIDETONATION TANK VALVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG ANTIDETONATION TANK VALVE:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK VALVE:index (OnRequest)",
      "description": "The status of the ADI tank valve for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG ANTIDETONATION TANK VALVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG BRAKE POWER:index",
      "displaytitle": "RECIP ENG BRAKE POWER:index (Poll)",
      "description": "Brake power produced by the indexed engine: Units pounds: settable true",
      "messagetype": "trigger_RECIP ENG BRAKE POWER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG BRAKE POWER:index",
      "displaytitle": "RECIP ENG BRAKE POWER:index (OnChange)",
      "description": "Brake power produced by the indexed engine: Units pounds: settable true",
      "messagetype": "trigger_onChange_RECIP ENG BRAKE POWER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG BRAKE POWER:index",
      "displaytitle": "RECIP ENG BRAKE POWER:index (OnRequest)",
      "description": "Brake power produced by the indexed engine: Units pounds: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG BRAKE POWER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG COOLANT RESERVOIR PERCENT:index",
      "displaytitle": "RECIP ENG COOLANT RESERVOIR PERCENT:index (Poll)",
      "description": "Percent coolant available for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_RECIP ENG COOLANT RESERVOIR PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG COOLANT RESERVOIR PERCENT:index",
      "displaytitle": "RECIP ENG COOLANT RESERVOIR PERCENT:index (OnChange)",
      "description": "Percent coolant available for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_RECIP ENG COOLANT RESERVOIR PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG COOLANT RESERVOIR PERCENT:index",
      "displaytitle": "RECIP ENG COOLANT RESERVOIR PERCENT:index (OnRequest)",
      "description": "Percent coolant available for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG COOLANT RESERVOIR PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG COWL FLAP POSITION:index",
      "displaytitle": "RECIP ENG COWL FLAP POSITION:index (Poll)",
      "description": "Percent cowl flap opened for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_RECIP ENG COWL FLAP POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG COWL FLAP POSITION:index",
      "displaytitle": "RECIP ENG COWL FLAP POSITION:index (OnChange)",
      "description": "Percent cowl flap opened for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_RECIP ENG COWL FLAP POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG COWL FLAP POSITION:index",
      "displaytitle": "RECIP ENG COWL FLAP POSITION:index (OnRequest)",
      "description": "Percent cowl flap opened for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG COWL FLAP POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG CYLINDER HEAD TEMPERATURE:index",
      "displaytitle": "RECIP ENG CYLINDER HEAD TEMPERATURE:index (Poll)",
      "description": "Engine cylinder head temperature for the indexed engine: Units celsius: settable true",
      "messagetype": "trigger_RECIP ENG CYLINDER HEAD TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG CYLINDER HEAD TEMPERATURE:index",
      "displaytitle": "RECIP ENG CYLINDER HEAD TEMPERATURE:index (OnChange)",
      "description": "Engine cylinder head temperature for the indexed engine: Units celsius: settable true",
      "messagetype": "trigger_onChange_RECIP ENG CYLINDER HEAD TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG CYLINDER HEAD TEMPERATURE:index",
      "displaytitle": "RECIP ENG CYLINDER HEAD TEMPERATURE:index (OnRequest)",
      "description": "Engine cylinder head temperature for the indexed engine: Units celsius: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG CYLINDER HEAD TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG CYLINDER HEALTH:index",
      "displaytitle": "RECIP ENG CYLINDER HEALTH:index (Poll)",
      "description": "Index high 16 bits is engine number, low16 cylinder number, both indexed from 1: Units percent Over 100: settable false",
      "messagetype": "trigger_RECIP ENG CYLINDER HEALTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG CYLINDER HEALTH:index",
      "displaytitle": "RECIP ENG CYLINDER HEALTH:index (OnChange)",
      "description": "Index high 16 bits is engine number, low16 cylinder number, both indexed from 1: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_RECIP ENG CYLINDER HEALTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG CYLINDER HEALTH:index",
      "displaytitle": "RECIP ENG CYLINDER HEALTH:index (OnRequest)",
      "description": "Index high 16 bits is engine number, low16 cylinder number, both indexed from 1: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG CYLINDER HEALTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG DETONATING:index",
      "displaytitle": "RECIP ENG DETONATING:index (Poll)",
      "description": "Set to 1 (TRUE) if the indexed engine is detonating: Units bool: settable false",
      "messagetype": "trigger_RECIP ENG DETONATING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG DETONATING:index",
      "displaytitle": "RECIP ENG DETONATING:index (OnChange)",
      "description": "Set to 1 (TRUE) if the indexed engine is detonating: Units bool: settable false",
      "messagetype": "trigger_onChange_RECIP ENG DETONATING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG DETONATING:index",
      "displaytitle": "RECIP ENG DETONATING:index (OnRequest)",
      "description": "Set to 1 (TRUE) if the indexed engine is detonating: Units bool: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG DETONATING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG EMERGENCY BOOST ACTIVE:index",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ACTIVE:index (Poll)",
      "description": "Whether emergency boost is active (1, TRUE) or not (0, FALSE) for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_RECIP ENG EMERGENCY BOOST ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG EMERGENCY BOOST ACTIVE:index",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ACTIVE:index (OnChange)",
      "description": "Whether emergency boost is active (1, TRUE) or not (0, FALSE) for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onChange_RECIP ENG EMERGENCY BOOST ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG EMERGENCY BOOST ACTIVE:index",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ACTIVE:index (OnRequest)",
      "description": "Whether emergency boost is active (1, TRUE) or not (0, FALSE) for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG EMERGENCY BOOST ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG EMERGENCY BOOST ELAPSED TIME:index",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ELAPSED TIME:index (Poll)",
      "description": " The elapsed time that emergency boost has been active on the indexed engine. The timer will start when boost is first activated: Units hours: settable true",
      "messagetype": "trigger_RECIP ENG EMERGENCY BOOST ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG EMERGENCY BOOST ELAPSED TIME:index",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ELAPSED TIME:index (OnChange)",
      "description": " The elapsed time that emergency boost has been active on the indexed engine. The timer will start when boost is first activated: Units hours: settable true",
      "messagetype": "trigger_onChange_RECIP ENG EMERGENCY BOOST ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG EMERGENCY BOOST ELAPSED TIME:index",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ELAPSED TIME:index (OnRequest)",
      "description": " The elapsed time that emergency boost has been active on the indexed engine. The timer will start when boost is first activated: Units hours: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG EMERGENCY BOOST ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ENGINE MASTER SWITCH:index",
      "displaytitle": "RECIP ENG ENGINE MASTER SWITCH:index (Poll)",
      "description": "Whether or not the Engine Master switch is active on an indexed engine: Units bool: settable false",
      "messagetype": "trigger_RECIP ENG ENGINE MASTER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG ENGINE MASTER SWITCH:index",
      "displaytitle": "RECIP ENG ENGINE MASTER SWITCH:index (OnChange)",
      "description": "Whether or not the Engine Master switch is active on an indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_RECIP ENG ENGINE MASTER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG ENGINE MASTER SWITCH:index",
      "displaytitle": "RECIP ENG ENGINE MASTER SWITCH:index (OnRequest)",
      "description": "Whether or not the Engine Master switch is active on an indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG ENGINE MASTER SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG FUEL AVAILABLE:index",
      "displaytitle": "RECIP ENG FUEL AVAILABLE:index (Poll)",
      "description": "True if fuel is available for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_RECIP ENG FUEL AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG FUEL AVAILABLE:index",
      "displaytitle": "RECIP ENG FUEL AVAILABLE:index (OnChange)",
      "description": "True if fuel is available for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onChange_RECIP ENG FUEL AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG FUEL AVAILABLE:index",
      "displaytitle": "RECIP ENG FUEL AVAILABLE:index (OnRequest)",
      "description": "True if fuel is available for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG FUEL AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG FUEL FLOW:index",
      "displaytitle": "RECIP ENG FUEL FLOW:index (Poll)",
      "description": "The indexed engine fuel flow: Units pounds per hour: settable true",
      "messagetype": "trigger_RECIP ENG FUEL FLOW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG FUEL FLOW:index",
      "displaytitle": "RECIP ENG FUEL FLOW:index (OnChange)",
      "description": "The indexed engine fuel flow: Units pounds per hour: settable true",
      "messagetype": "trigger_onChange_RECIP ENG FUEL FLOW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG FUEL FLOW:index",
      "displaytitle": "RECIP ENG FUEL FLOW:index (OnRequest)",
      "description": "The indexed engine fuel flow: Units pounds per hour: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG FUEL FLOW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG FUEL NUMBER TANKS USED:index",
      "displaytitle": "RECIP ENG FUEL NUMBER TANKS USED:index (Poll)",
      "description": "Number of tanks currently being used by the indexed engine: Units number: settable false",
      "messagetype": "trigger_RECIP ENG FUEL NUMBER TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG FUEL NUMBER TANKS USED:index",
      "displaytitle": "RECIP ENG FUEL NUMBER TANKS USED:index (OnChange)",
      "description": "Number of tanks currently being used by the indexed engine: Units number: settable false",
      "messagetype": "trigger_onChange_RECIP ENG FUEL NUMBER TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG FUEL NUMBER TANKS USED:index",
      "displaytitle": "RECIP ENG FUEL NUMBER TANKS USED:index (OnRequest)",
      "description": "Number of tanks currently being used by the indexed engine: Units number: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG FUEL NUMBER TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG FUEL TANK SELECTOR:index",
      "displaytitle": "RECIP ENG FUEL TANK SELECTOR:index (Poll)",
      "description": "Fuel tank selected for the indexed engine. See Fuel Tank Selection for a list of values: Units enum: settable false",
      "messagetype": "trigger_RECIP ENG FUEL TANK SELECTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG FUEL TANK SELECTOR:index",
      "displaytitle": "RECIP ENG FUEL TANK SELECTOR:index (OnChange)",
      "description": "Fuel tank selected for the indexed engine. See Fuel Tank Selection for a list of values: Units enum: settable false",
      "messagetype": "trigger_onChange_RECIP ENG FUEL TANK SELECTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG FUEL TANK SELECTOR:index",
      "displaytitle": "RECIP ENG FUEL TANK SELECTOR:index (OnRequest)",
      "description": "Fuel tank selected for the indexed engine. See Fuel Tank Selection for a list of values: Units enum: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG FUEL TANK SELECTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG FUEL TANKS USED:index",
      "displaytitle": "RECIP ENG FUEL TANKS USED:index (Poll)",
      "description": "Fuel tanks used by the indexed engine, one or more bit flags: Units mask: settable true",
      "messagetype": "trigger_RECIP ENG FUEL TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG FUEL TANKS USED:index",
      "displaytitle": "RECIP ENG FUEL TANKS USED:index (OnChange)",
      "description": "Fuel tanks used by the indexed engine, one or more bit flags: Units mask: settable true",
      "messagetype": "trigger_onChange_RECIP ENG FUEL TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG FUEL TANKS USED:index",
      "displaytitle": "RECIP ENG FUEL TANKS USED:index (OnRequest)",
      "description": "Fuel tanks used by the indexed engine, one or more bit flags: Units mask: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG FUEL TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG GLOW PLUG ACTIVE:index",
      "displaytitle": "RECIP ENG GLOW PLUG ACTIVE:index (Poll)",
      "description": "Whether or not the Glow Plug is active on the indexed engine: Units bool: settable false",
      "messagetype": "trigger_RECIP ENG GLOW PLUG ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG GLOW PLUG ACTIVE:index",
      "displaytitle": "RECIP ENG GLOW PLUG ACTIVE:index (OnChange)",
      "description": "Whether or not the Glow Plug is active on the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_RECIP ENG GLOW PLUG ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG GLOW PLUG ACTIVE:index",
      "displaytitle": "RECIP ENG GLOW PLUG ACTIVE:index (OnRequest)",
      "description": "Whether or not the Glow Plug is active on the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG GLOW PLUG ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG LEFT MAGNETO:index",
      "displaytitle": "RECIP ENG LEFT MAGNETO:index (Poll)",
      "description": " Left magneto state for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_RECIP ENG LEFT MAGNETO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG LEFT MAGNETO:index",
      "displaytitle": "RECIP ENG LEFT MAGNETO:index (OnChange)",
      "description": " Left magneto state for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onChange_RECIP ENG LEFT MAGNETO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG LEFT MAGNETO:index",
      "displaytitle": "RECIP ENG LEFT MAGNETO:index (OnRequest)",
      "description": " Left magneto state for the indexed engine: Units bool: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG LEFT MAGNETO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG MANIFOLD PRESSURE:index",
      "displaytitle": "RECIP ENG MANIFOLD PRESSURE:index (Poll)",
      "description": "The indexed engine manifold pressure: Units pounds: settable true",
      "messagetype": "trigger_RECIP ENG MANIFOLD PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG MANIFOLD PRESSURE:index",
      "displaytitle": "RECIP ENG MANIFOLD PRESSURE:index (OnChange)",
      "description": "The indexed engine manifold pressure: Units pounds: settable true",
      "messagetype": "trigger_onChange_RECIP ENG MANIFOLD PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG MANIFOLD PRESSURE:index",
      "displaytitle": "RECIP ENG MANIFOLD PRESSURE:index (OnRequest)",
      "description": "The indexed engine manifold pressure: Units pounds: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG MANIFOLD PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG NITROUS TANK MAX QUANTITY:index",
      "displaytitle": "RECIP ENG NITROUS TANK MAX QUANTITY:index (Poll)",
      "description": "The maximum quantity of nitrous permitted per indexed engine: Units gallons: settable false",
      "messagetype": "trigger_RECIP ENG NITROUS TANK MAX QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG NITROUS TANK MAX QUANTITY:index",
      "displaytitle": "RECIP ENG NITROUS TANK MAX QUANTITY:index (OnChange)",
      "description": "The maximum quantity of nitrous permitted per indexed engine: Units gallons: settable false",
      "messagetype": "trigger_onChange_RECIP ENG NITROUS TANK MAX QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG NITROUS TANK MAX QUANTITY:index",
      "displaytitle": "RECIP ENG NITROUS TANK MAX QUANTITY:index (OnRequest)",
      "description": "The maximum quantity of nitrous permitted per indexed engine: Units gallons: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG NITROUS TANK MAX QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG NITROUS TANK QUANTITY:index",
      "displaytitle": "RECIP ENG NITROUS TANK QUANTITY:index (Poll)",
      "description": "The quantity of nitrous per indexed engine: Units gallons: settable true",
      "messagetype": "trigger_RECIP ENG NITROUS TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG NITROUS TANK QUANTITY:index",
      "displaytitle": "RECIP ENG NITROUS TANK QUANTITY:index (OnChange)",
      "description": "The quantity of nitrous per indexed engine: Units gallons: settable true",
      "messagetype": "trigger_onChange_RECIP ENG NITROUS TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG NITROUS TANK QUANTITY:index",
      "displaytitle": "RECIP ENG NITROUS TANK QUANTITY:index (OnRequest)",
      "description": "The quantity of nitrous per indexed engine: Units gallons: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG NITROUS TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG NITROUS TANK VALVE",
      "displaytitle": "RECIP ENG NITROUS TANK VALVE (Poll)",
      "description": "The statte of the nitrous tank valve for the indexed engine. Either 1 (TRUE) for open or 0 (FALSE) for closed: Units bool: settable true",
      "messagetype": "trigger_RECIP ENG NITROUS TANK VALVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG NITROUS TANK VALVE",
      "displaytitle": "RECIP ENG NITROUS TANK VALVE (OnChange)",
      "description": "The statte of the nitrous tank valve for the indexed engine. Either 1 (TRUE) for open or 0 (FALSE) for closed: Units bool: settable true",
      "messagetype": "trigger_onChange_RECIP ENG NITROUS TANK VALVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG NITROUS TANK VALVE",
      "displaytitle": "RECIP ENG NITROUS TANK VALVE (OnRequest)",
      "description": "The statte of the nitrous tank valve for the indexed engine. Either 1 (TRUE) for open or 0 (FALSE) for closed: Units bool: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG NITROUS TANK VALVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RECIP ENG NUM CYLINDERS FAILED:index",
      "displaytitle": "RECIP ENG NUM CYLINDERS FAILED:index (Poll)",
      "description": "The number of cylinders that have failed in the indexed engine: Units number: settable false",
      "messagetype": "trigger_RECIP ENG NUM CYLINDERS FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG NUM CYLINDERS FAILED:index",
      "displaytitle": "RECIP ENG NUM CYLINDERS FAILED:index (OnChange)",
      "description": "The number of cylinders that have failed in the indexed engine: Units number: settable false",
      "messagetype": "trigger_onChange_RECIP ENG NUM CYLINDERS FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG NUM CYLINDERS FAILED:index",
      "displaytitle": "RECIP ENG NUM CYLINDERS FAILED:index (OnRequest)",
      "description": "The number of cylinders that have failed in the indexed engine: Units number: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG NUM CYLINDERS FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG NUM CYLINDERS:index",
      "displaytitle": "RECIP ENG NUM CYLINDERS:index (Poll)",
      "description": "The number of cylinders for the indexed engine: Units number: settable false",
      "messagetype": "trigger_RECIP ENG NUM CYLINDERS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG NUM CYLINDERS:index",
      "displaytitle": "RECIP ENG NUM CYLINDERS:index (OnChange)",
      "description": "The number of cylinders for the indexed engine: Units number: settable false",
      "messagetype": "trigger_onChange_RECIP ENG NUM CYLINDERS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG NUM CYLINDERS:index",
      "displaytitle": "RECIP ENG NUM CYLINDERS:index (OnRequest)",
      "description": "The number of cylinders for the indexed engine: Units number: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG NUM CYLINDERS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG PRIMER:index",
      "displaytitle": "RECIP ENG PRIMER:index (Poll)",
      "description": "The indexed engine primer state: Units bool: settable true",
      "messagetype": "trigger_RECIP ENG PRIMER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG PRIMER:index",
      "displaytitle": "RECIP ENG PRIMER:index (OnChange)",
      "description": "The indexed engine primer state: Units bool: settable true",
      "messagetype": "trigger_onChange_RECIP ENG PRIMER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG PRIMER:index",
      "displaytitle": "RECIP ENG PRIMER:index (OnRequest)",
      "description": "The indexed engine primer state: Units bool: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG PRIMER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG RADIATOR TEMPERATURE:index",
      "displaytitle": "RECIP ENG RADIATOR TEMPERATURE:index (Poll)",
      "description": "The indexed engine radiator temperature: Units celsius: settable true",
      "messagetype": "trigger_RECIP ENG RADIATOR TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG RADIATOR TEMPERATURE:index",
      "displaytitle": "RECIP ENG RADIATOR TEMPERATURE:index (OnChange)",
      "description": "The indexed engine radiator temperature: Units celsius: settable true",
      "messagetype": "trigger_onChange_RECIP ENG RADIATOR TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG RADIATOR TEMPERATURE:index",
      "displaytitle": "RECIP ENG RADIATOR TEMPERATURE:index (OnRequest)",
      "description": "The indexed engine radiator temperature: Units celsius: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG RADIATOR TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG RIGHT MAGNETO:index",
      "displaytitle": "RECIP ENG RIGHT MAGNETO:index (Poll)",
      "description": " The indexed engine right magneto state: Units bool: settable true",
      "messagetype": "trigger_RECIP ENG RIGHT MAGNETO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG RIGHT MAGNETO:index",
      "displaytitle": "RECIP ENG RIGHT MAGNETO:index (OnChange)",
      "description": " The indexed engine right magneto state: Units bool: settable true",
      "messagetype": "trigger_onChange_RECIP ENG RIGHT MAGNETO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG RIGHT MAGNETO:index",
      "displaytitle": "RECIP ENG RIGHT MAGNETO:index (OnRequest)",
      "description": " The indexed engine right magneto state: Units bool: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG RIGHT MAGNETO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG STARTER TORQUE:index",
      "displaytitle": "RECIP ENG STARTER TORQUE:index (Poll)",
      "description": "Torque produced by the indexed engine: Units foot pound: settable true",
      "messagetype": "trigger_RECIP ENG STARTER TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG STARTER TORQUE:index",
      "displaytitle": "RECIP ENG STARTER TORQUE:index (OnChange)",
      "description": "Torque produced by the indexed engine: Units foot pound: settable true",
      "messagetype": "trigger_onChange_RECIP ENG STARTER TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG STARTER TORQUE:index",
      "displaytitle": "RECIP ENG STARTER TORQUE:index (OnRequest)",
      "description": "Torque produced by the indexed engine: Units foot pound: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG STARTER TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG SUPERCHARGER ACTIVE GEAR:index",
      "displaytitle": "RECIP ENG SUPERCHARGER ACTIVE GEAR:index (Poll)",
      "description": "Returns which of the supercharger gears is engaged for the indexed engine: Units number: settable false",
      "messagetype": "trigger_RECIP ENG SUPERCHARGER ACTIVE GEAR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG SUPERCHARGER ACTIVE GEAR:index",
      "displaytitle": "RECIP ENG SUPERCHARGER ACTIVE GEAR:index (OnChange)",
      "description": "Returns which of the supercharger gears is engaged for the indexed engine: Units number: settable false",
      "messagetype": "trigger_onChange_RECIP ENG SUPERCHARGER ACTIVE GEAR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG SUPERCHARGER ACTIVE GEAR:index",
      "displaytitle": "RECIP ENG SUPERCHARGER ACTIVE GEAR:index (OnRequest)",
      "description": "Returns which of the supercharger gears is engaged for the indexed engine: Units number: settable false",
      "messagetype": "trigger_onRequest_RECIP ENG SUPERCHARGER ACTIVE GEAR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG TURBINE INLET TEMPERATURE:index",
      "displaytitle": "RECIP ENG TURBINE INLET TEMPERATURE:index (Poll)",
      "description": "The indexed engine turbine inlet temperature: Units celsius: settable true",
      "messagetype": "trigger_RECIP ENG TURBINE INLET TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG TURBINE INLET TEMPERATURE:index",
      "displaytitle": "RECIP ENG TURBINE INLET TEMPERATURE:index (OnChange)",
      "description": "The indexed engine turbine inlet temperature: Units celsius: settable true",
      "messagetype": "trigger_onChange_RECIP ENG TURBINE INLET TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG TURBINE INLET TEMPERATURE:index",
      "displaytitle": "RECIP ENG TURBINE INLET TEMPERATURE:index (OnRequest)",
      "description": "The indexed engine turbine inlet temperature: Units celsius: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG TURBINE INLET TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG TURBOCHARGER FAILED:index",
      "displaytitle": "RECIP ENG TURBOCHARGER FAILED:index (Poll)",
      "description": "The indexed engine turbo failed state: Units bool: settable true",
      "messagetype": "trigger_RECIP ENG TURBOCHARGER FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG TURBOCHARGER FAILED:index",
      "displaytitle": "RECIP ENG TURBOCHARGER FAILED:index (OnChange)",
      "description": "The indexed engine turbo failed state: Units bool: settable true",
      "messagetype": "trigger_onChange_RECIP ENG TURBOCHARGER FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG TURBOCHARGER FAILED:index",
      "displaytitle": "RECIP ENG TURBOCHARGER FAILED:index (OnRequest)",
      "description": "The indexed engine turbo failed state: Units bool: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG TURBOCHARGER FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG WASTEGATE POSITION:index",
      "displaytitle": "RECIP ENG WASTEGATE POSITION:index (Poll)",
      "description": "When the engine.cfg parameter turbocharged is TRUE, this SimVar will return the percentage that the turbo waste gate is closed for the indexed engine. If the turbocharged variable is FALSE and the manifold_pressure_regulator parameter is TRUE, then this will return the percentage that the manifold pressure regulator is closed for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_RECIP ENG WASTEGATE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP ENG WASTEGATE POSITION:index",
      "displaytitle": "RECIP ENG WASTEGATE POSITION:index (OnChange)",
      "description": "When the engine.cfg parameter turbocharged is TRUE, this SimVar will return the percentage that the turbo waste gate is closed for the indexed engine. If the turbocharged variable is FALSE and the manifold_pressure_regulator parameter is TRUE, then this will return the percentage that the manifold pressure regulator is closed for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_RECIP ENG WASTEGATE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP ENG WASTEGATE POSITION:index",
      "displaytitle": "RECIP ENG WASTEGATE POSITION:index (OnRequest)",
      "description": "When the engine.cfg parameter turbocharged is TRUE, this SimVar will return the percentage that the turbo waste gate is closed for the indexed engine. If the turbocharged variable is FALSE and the manifold_pressure_regulator parameter is TRUE, then this will return the percentage that the manifold pressure regulator is closed for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_RECIP ENG WASTEGATE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP MAX CHT",
      "displaytitle": "RECIP MAX CHT (Poll)",
      "description": "This will return the cylinder head temperature value set by the cht_heating_constant parameter in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_RECIP MAX CHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP MAX CHT",
      "displaytitle": "RECIP MAX CHT (OnChange)",
      "description": "This will return the cylinder head temperature value set by the cht_heating_constant parameter in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_onChange_RECIP MAX CHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP MAX CHT",
      "displaytitle": "RECIP MAX CHT (OnRequest)",
      "description": "This will return the cylinder head temperature value set by the cht_heating_constant parameter in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_onRequest_RECIP MAX CHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RECIP MIXTURE RATIO:index",
      "displaytitle": "RECIP MIXTURE RATIO:index (Poll)",
      "description": "Fuel / Air mixture ratio for the indexed engine: Units ratio: settable true",
      "messagetype": "trigger_RECIP MIXTURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_RECIP MIXTURE RATIO:index",
      "displaytitle": "RECIP MIXTURE RATIO:index (OnChange)",
      "description": "Fuel / Air mixture ratio for the indexed engine: Units ratio: settable true",
      "messagetype": "trigger_onChange_RECIP MIXTURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_RECIP MIXTURE RATIO:index",
      "displaytitle": "RECIP MIXTURE RATIO:index (OnRequest)",
      "description": "Fuel / Air mixture ratio for the indexed engine: Units ratio: settable true",
      "messagetype": "trigger_onRequest_RECIP MIXTURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "REJECTED TAKEOFF BRAKES ACTIVE",
      "displaytitle": "REJECTED TAKEOFF BRAKES ACTIVE (Poll)",
      "description": "Whether or not the rejected takeoff brakes are currently active.: Units bool: settable false",
      "messagetype": "trigger_REJECTED TAKEOFF BRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_REJECTED TAKEOFF BRAKES ACTIVE",
      "displaytitle": "REJECTED TAKEOFF BRAKES ACTIVE (OnChange)",
      "description": "Whether or not the rejected takeoff brakes are currently active.: Units bool: settable false",
      "messagetype": "trigger_onChange_REJECTED TAKEOFF BRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_REJECTED TAKEOFF BRAKES ACTIVE",
      "displaytitle": "REJECTED TAKEOFF BRAKES ACTIVE (OnRequest)",
      "description": "Whether or not the rejected takeoff brakes are currently active.: Units bool: settable false",
      "messagetype": "trigger_onRequest_REJECTED TAKEOFF BRAKES ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RELATIVE WIND VELOCITY BODY X",
      "displaytitle": "RELATIVE WIND VELOCITY BODY X (Poll)",
      "description": "Lateral (X axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_RELATIVE WIND VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RELATIVE WIND VELOCITY BODY X",
      "displaytitle": "RELATIVE WIND VELOCITY BODY X (OnChange)",
      "description": "Lateral (X axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_onChange_RELATIVE WIND VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RELATIVE WIND VELOCITY BODY X",
      "displaytitle": "RELATIVE WIND VELOCITY BODY X (OnRequest)",
      "description": "Lateral (X axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_onRequest_RELATIVE WIND VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RELATIVE WIND VELOCITY BODY Y",
      "displaytitle": "RELATIVE WIND VELOCITY BODY Y (Poll)",
      "description": "Vertical (Y axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_RELATIVE WIND VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RELATIVE WIND VELOCITY BODY Y",
      "displaytitle": "RELATIVE WIND VELOCITY BODY Y (OnChange)",
      "description": "Vertical (Y axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_onChange_RELATIVE WIND VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RELATIVE WIND VELOCITY BODY Y",
      "displaytitle": "RELATIVE WIND VELOCITY BODY Y (OnRequest)",
      "description": "Vertical (Y axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_onRequest_RELATIVE WIND VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RELATIVE WIND VELOCITY BODY Z",
      "displaytitle": "RELATIVE WIND VELOCITY BODY Z (Poll)",
      "description": "Longitudinal (Z axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_RELATIVE WIND VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RELATIVE WIND VELOCITY BODY Z",
      "displaytitle": "RELATIVE WIND VELOCITY BODY Z (OnChange)",
      "description": "Longitudinal (Z axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_onChange_RELATIVE WIND VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RELATIVE WIND VELOCITY BODY Z",
      "displaytitle": "RELATIVE WIND VELOCITY BODY Z (OnRequest)",
      "description": "Longitudinal (Z axis) speed relative to wind: Units feet: settable false",
      "messagetype": "trigger_onRequest_RELATIVE WIND VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RETRACT FLOAT SWITCH",
      "displaytitle": "RETRACT FLOAT SWITCH (Poll)",
      "description": "True if retract float switch on: Units bool: settable false",
      "messagetype": "trigger_RETRACT FLOAT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RETRACT FLOAT SWITCH",
      "displaytitle": "RETRACT FLOAT SWITCH (OnChange)",
      "description": "True if retract float switch on: Units bool: settable false",
      "messagetype": "trigger_onChange_RETRACT FLOAT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RETRACT FLOAT SWITCH",
      "displaytitle": "RETRACT FLOAT SWITCH (OnRequest)",
      "description": "True if retract float switch on: Units bool: settable false",
      "messagetype": "trigger_onRequest_RETRACT FLOAT SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RETRACT LEFT FLOAT EXTENDED",
      "displaytitle": "RETRACT LEFT FLOAT EXTENDED (Poll)",
      "description": "If aircraft has retractable floats: Units percent: settable false",
      "messagetype": "trigger_RETRACT LEFT FLOAT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RETRACT LEFT FLOAT EXTENDED",
      "displaytitle": "RETRACT LEFT FLOAT EXTENDED (OnChange)",
      "description": "If aircraft has retractable floats: Units percent: settable false",
      "messagetype": "trigger_onChange_RETRACT LEFT FLOAT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RETRACT LEFT FLOAT EXTENDED",
      "displaytitle": "RETRACT LEFT FLOAT EXTENDED (OnRequest)",
      "description": "If aircraft has retractable floats: Units percent: settable false",
      "messagetype": "trigger_onRequest_RETRACT LEFT FLOAT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RETRACT RIGHT FLOAT EXTENDED",
      "displaytitle": "RETRACT RIGHT FLOAT EXTENDED (Poll)",
      "description": "If aircraft has retractable floats: Units percent: settable false",
      "messagetype": "trigger_RETRACT RIGHT FLOAT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RETRACT RIGHT FLOAT EXTENDED",
      "displaytitle": "RETRACT RIGHT FLOAT EXTENDED (OnChange)",
      "description": "If aircraft has retractable floats: Units percent: settable false",
      "messagetype": "trigger_onChange_RETRACT RIGHT FLOAT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RETRACT RIGHT FLOAT EXTENDED",
      "displaytitle": "RETRACT RIGHT FLOAT EXTENDED (OnRequest)",
      "description": "If aircraft has retractable floats: Units percent: settable false",
      "messagetype": "trigger_onRequest_RETRACT RIGHT FLOAT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RIGHT WHEEL ROTATION ANGLE",
      "displaytitle": "RIGHT WHEEL ROTATION ANGLE (Poll)",
      "description": "Right wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_RIGHT WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RIGHT WHEEL ROTATION ANGLE",
      "displaytitle": "RIGHT WHEEL ROTATION ANGLE (OnChange)",
      "description": "Right wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onChange_RIGHT WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RIGHT WHEEL ROTATION ANGLE",
      "displaytitle": "RIGHT WHEEL ROTATION ANGLE (OnRequest)",
      "description": "Right wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onRequest_RIGHT WHEEL ROTATION ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RIGHT WHEEL RPM",
      "displaytitle": "RIGHT WHEEL RPM (Poll)",
      "description": "Right landing gear rpm.: Units RPM: settable false",
      "messagetype": "trigger_RIGHT WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RIGHT WHEEL RPM",
      "displaytitle": "RIGHT WHEEL RPM (OnChange)",
      "description": "Right landing gear rpm.: Units RPM: settable false",
      "messagetype": "trigger_onChange_RIGHT WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RIGHT WHEEL RPM",
      "displaytitle": "RIGHT WHEEL RPM (OnRequest)",
      "description": "Right landing gear rpm.: Units RPM: settable false",
      "messagetype": "trigger_onRequest_RIGHT WHEEL RPM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION ACCELERATION BODY X",
      "displaytitle": "ROTATION ACCELERATION BODY X (Poll)",
      "description": "Rotation acceleration relative to aircraft X axis: Units radians per second squared: settable true",
      "messagetype": "trigger_ROTATION ACCELERATION BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTATION ACCELERATION BODY X",
      "displaytitle": "ROTATION ACCELERATION BODY X (OnChange)",
      "description": "Rotation acceleration relative to aircraft X axis: Units radians per second squared: settable true",
      "messagetype": "trigger_onChange_ROTATION ACCELERATION BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTATION ACCELERATION BODY X",
      "displaytitle": "ROTATION ACCELERATION BODY X (OnRequest)",
      "description": "Rotation acceleration relative to aircraft X axis: Units radians per second squared: settable true",
      "messagetype": "trigger_onRequest_ROTATION ACCELERATION BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION ACCELERATION BODY Y",
      "displaytitle": "ROTATION ACCELERATION BODY Y (Poll)",
      "description": "Rotation acceleration relative to aircraft Y axis: Units radians per second squared: settable true",
      "messagetype": "trigger_ROTATION ACCELERATION BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTATION ACCELERATION BODY Y",
      "displaytitle": "ROTATION ACCELERATION BODY Y (OnChange)",
      "description": "Rotation acceleration relative to aircraft Y axis: Units radians per second squared: settable true",
      "messagetype": "trigger_onChange_ROTATION ACCELERATION BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTATION ACCELERATION BODY Y",
      "displaytitle": "ROTATION ACCELERATION BODY Y (OnRequest)",
      "description": "Rotation acceleration relative to aircraft Y axis: Units radians per second squared: settable true",
      "messagetype": "trigger_onRequest_ROTATION ACCELERATION BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION ACCELERATION BODY Z",
      "displaytitle": "ROTATION ACCELERATION BODY Z (Poll)",
      "description": "Rotation acceleration relative to aircraft Z axis: Units radians per second squared: settable true",
      "messagetype": "trigger_ROTATION ACCELERATION BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTATION ACCELERATION BODY Z",
      "displaytitle": "ROTATION ACCELERATION BODY Z (OnChange)",
      "description": "Rotation acceleration relative to aircraft Z axis: Units radians per second squared: settable true",
      "messagetype": "trigger_onChange_ROTATION ACCELERATION BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTATION ACCELERATION BODY Z",
      "displaytitle": "ROTATION ACCELERATION BODY Z (OnRequest)",
      "description": "Rotation acceleration relative to aircraft Z axis: Units radians per second squared: settable true",
      "messagetype": "trigger_onRequest_ROTATION ACCELERATION BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION VELOCITY BODY X",
      "displaytitle": "ROTATION VELOCITY BODY X (Poll)",
      "description": "Rotation velocity relative to aircraft X axis: Units feet: settable true",
      "messagetype": "trigger_ROTATION VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTATION VELOCITY BODY X",
      "displaytitle": "ROTATION VELOCITY BODY X (OnChange)",
      "description": "Rotation velocity relative to aircraft X axis: Units feet: settable true",
      "messagetype": "trigger_onChange_ROTATION VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTATION VELOCITY BODY X",
      "displaytitle": "ROTATION VELOCITY BODY X (OnRequest)",
      "description": "Rotation velocity relative to aircraft X axis: Units feet: settable true",
      "messagetype": "trigger_onRequest_ROTATION VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION VELOCITY BODY Y",
      "displaytitle": "ROTATION VELOCITY BODY Y (Poll)",
      "description": "Rotation velocity relative to aircraft Y axis: Units feet: settable true",
      "messagetype": "trigger_ROTATION VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTATION VELOCITY BODY Y",
      "displaytitle": "ROTATION VELOCITY BODY Y (OnChange)",
      "description": "Rotation velocity relative to aircraft Y axis: Units feet: settable true",
      "messagetype": "trigger_onChange_ROTATION VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTATION VELOCITY BODY Y",
      "displaytitle": "ROTATION VELOCITY BODY Y (OnRequest)",
      "description": "Rotation velocity relative to aircraft Y axis: Units feet: settable true",
      "messagetype": "trigger_onRequest_ROTATION VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION VELOCITY BODY Z",
      "displaytitle": "ROTATION VELOCITY BODY Z (Poll)",
      "description": "Rotation velocity relative to aircraft Z axis: Units feet: settable true",
      "messagetype": "trigger_ROTATION VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTATION VELOCITY BODY Z",
      "displaytitle": "ROTATION VELOCITY BODY Z (OnChange)",
      "description": "Rotation velocity relative to aircraft Z axis: Units feet: settable true",
      "messagetype": "trigger_onChange_ROTATION VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTATION VELOCITY BODY Z",
      "displaytitle": "ROTATION VELOCITY BODY Z (OnRequest)",
      "description": "Rotation velocity relative to aircraft Z axis: Units feet: settable true",
      "messagetype": "trigger_onRequest_ROTATION VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR BRAKE ACTIVE",
      "displaytitle": "ROTOR BRAKE ACTIVE (Poll)",
      "description": "Whether the rotor brake is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_ROTOR BRAKE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR BRAKE ACTIVE",
      "displaytitle": "ROTOR BRAKE ACTIVE (OnChange)",
      "description": "Whether the rotor brake is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onChange_ROTOR BRAKE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR BRAKE ACTIVE",
      "displaytitle": "ROTOR BRAKE ACTIVE (OnRequest)",
      "description": "Whether the rotor brake is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onRequest_ROTOR BRAKE ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR BRAKE HANDLE POS",
      "displaytitle": "ROTOR BRAKE HANDLE POS (Poll)",
      "description": "The percentage actuated of the rotor brake handle.: Units percent Over 100: settable false",
      "messagetype": "trigger_ROTOR BRAKE HANDLE POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR BRAKE HANDLE POS",
      "displaytitle": "ROTOR BRAKE HANDLE POS (OnChange)",
      "description": "The percentage actuated of the rotor brake handle.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ROTOR BRAKE HANDLE POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR BRAKE HANDLE POS",
      "displaytitle": "ROTOR BRAKE HANDLE POS (OnRequest)",
      "description": "The percentage actuated of the rotor brake handle.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ROTOR BRAKE HANDLE POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR CHIP DETECTED",
      "displaytitle": "ROTOR CHIP DETECTED (Poll)",
      "description": "Whether the rotor chip is detected (1,TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_ROTOR CHIP DETECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR CHIP DETECTED",
      "displaytitle": "ROTOR CHIP DETECTED (OnChange)",
      "description": "Whether the rotor chip is detected (1,TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onChange_ROTOR CHIP DETECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR CHIP DETECTED",
      "displaytitle": "ROTOR CHIP DETECTED (OnRequest)",
      "description": "Whether the rotor chip is detected (1,TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onRequest_ROTOR CHIP DETECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR CLUTCH ACTIVE",
      "displaytitle": "ROTOR CLUTCH ACTIVE (Poll)",
      "description": "Whether the rotor clutch is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_ROTOR CLUTCH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR CLUTCH ACTIVE",
      "displaytitle": "ROTOR CLUTCH ACTIVE (OnChange)",
      "description": "Whether the rotor clutch is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onChange_ROTOR CLUTCH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR CLUTCH ACTIVE",
      "displaytitle": "ROTOR CLUTCH ACTIVE (OnRequest)",
      "description": "Whether the rotor clutch is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onRequest_ROTOR CLUTCH ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR CLUTCH SWITCH POS",
      "displaytitle": "ROTOR CLUTCH SWITCH POS (Poll)",
      "description": "The rotor clutch switch position, either on (1 TRUE) or off (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_ROTOR CLUTCH SWITCH POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR CLUTCH SWITCH POS",
      "displaytitle": "ROTOR CLUTCH SWITCH POS (OnChange)",
      "description": "The rotor clutch switch position, either on (1 TRUE) or off (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onChange_ROTOR CLUTCH SWITCH POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR CLUTCH SWITCH POS",
      "displaytitle": "ROTOR CLUTCH SWITCH POS (OnRequest)",
      "description": "The rotor clutch switch position, either on (1 TRUE) or off (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onRequest_ROTOR CLUTCH SWITCH POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR COLLECTIVE BLADE PITCH PCT",
      "displaytitle": "ROTOR COLLECTIVE BLADE PITCH PCT (Poll)",
      "description": "The rotor collective blade pitch.: Units percent Over 100: settable false",
      "messagetype": "trigger_ROTOR COLLECTIVE BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR COLLECTIVE BLADE PITCH PCT",
      "displaytitle": "ROTOR COLLECTIVE BLADE PITCH PCT (OnChange)",
      "description": "The rotor collective blade pitch.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ROTOR COLLECTIVE BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR COLLECTIVE BLADE PITCH PCT",
      "displaytitle": "ROTOR COLLECTIVE BLADE PITCH PCT (OnRequest)",
      "description": "The rotor collective blade pitch.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ROTOR COLLECTIVE BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR CYCLIC BLADE MAX PITCH POSITION",
      "displaytitle": "ROTOR CYCLIC BLADE MAX PITCH POSITION (Poll)",
      "description": "The position (angle) at which blade has the maximum cyclic pitch.: Units degrees: settable false",
      "messagetype": "trigger_ROTOR CYCLIC BLADE MAX PITCH POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR CYCLIC BLADE MAX PITCH POSITION",
      "displaytitle": "ROTOR CYCLIC BLADE MAX PITCH POSITION (OnChange)",
      "description": "The position (angle) at which blade has the maximum cyclic pitch.: Units degrees: settable false",
      "messagetype": "trigger_onChange_ROTOR CYCLIC BLADE MAX PITCH POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR CYCLIC BLADE MAX PITCH POSITION",
      "displaytitle": "ROTOR CYCLIC BLADE MAX PITCH POSITION (OnRequest)",
      "description": "The position (angle) at which blade has the maximum cyclic pitch.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_ROTOR CYCLIC BLADE MAX PITCH POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR CYCLIC BLADE PITCH PCT",
      "displaytitle": "ROTOR CYCLIC BLADE PITCH PCT (Poll)",
      "description": "The rotor cyclic blade (maximum) pitch.: Units percent Over 100: settable false",
      "messagetype": "trigger_ROTOR CYCLIC BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR CYCLIC BLADE PITCH PCT",
      "displaytitle": "ROTOR CYCLIC BLADE PITCH PCT (OnChange)",
      "description": "The rotor cyclic blade (maximum) pitch.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ROTOR CYCLIC BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR CYCLIC BLADE PITCH PCT",
      "displaytitle": "ROTOR CYCLIC BLADE PITCH PCT (OnRequest)",
      "description": "The rotor cyclic blade (maximum) pitch.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ROTOR CYCLIC BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR GOV ACTIVE",
      "displaytitle": "ROTOR GOV ACTIVE (Poll)",
      "description": "Whether the rotor governor is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_ROTOR GOV ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR GOV ACTIVE",
      "displaytitle": "ROTOR GOV ACTIVE (OnChange)",
      "description": "Whether the rotor governor is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onChange_ROTOR GOV ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR GOV ACTIVE",
      "displaytitle": "ROTOR GOV ACTIVE (OnRequest)",
      "description": "Whether the rotor governor is active (1, TRUE) or not (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onRequest_ROTOR GOV ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR GOV SWITCH POS",
      "displaytitle": "ROTOR GOV SWITCH POS (Poll)",
      "description": "The rotor governor switch position, either on (1 TRUE) or off (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_ROTOR GOV SWITCH POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR GOV SWITCH POS",
      "displaytitle": "ROTOR GOV SWITCH POS (OnChange)",
      "description": "The rotor governor switch position, either on (1 TRUE) or off (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onChange_ROTOR GOV SWITCH POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR GOV SWITCH POS",
      "displaytitle": "ROTOR GOV SWITCH POS (OnRequest)",
      "description": "The rotor governor switch position, either on (1 TRUE) or off (0, FALSE).: Units bool: settable false",
      "messagetype": "trigger_onRequest_ROTOR GOV SWITCH POS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR LATERAL TRIM PCT",
      "displaytitle": "ROTOR LATERAL TRIM PCT (Poll)",
      "description": "The rotor lateral trim percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_ROTOR LATERAL TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR LATERAL TRIM PCT",
      "displaytitle": "ROTOR LATERAL TRIM PCT (OnChange)",
      "description": "The rotor lateral trim percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ROTOR LATERAL TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR LATERAL TRIM PCT",
      "displaytitle": "ROTOR LATERAL TRIM PCT (OnRequest)",
      "description": "The rotor lateral trim percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ROTOR LATERAL TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR LONGITUDINAL TRIM PCT",
      "displaytitle": "ROTOR LONGITUDINAL TRIM PCT (Poll)",
      "description": "The rotor longitudinal trim percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_ROTOR LONGITUDINAL TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR LONGITUDINAL TRIM PCT",
      "displaytitle": "ROTOR LONGITUDINAL TRIM PCT (OnChange)",
      "description": "The rotor longitudinal trim percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ROTOR LONGITUDINAL TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR LONGITUDINAL TRIM PCT",
      "displaytitle": "ROTOR LONGITUDINAL TRIM PCT (OnRequest)",
      "description": "The rotor longitudinal trim percentage.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ROTOR LONGITUDINAL TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTOR ROTATION ANGLE:index",
      "displaytitle": "ROTOR ROTATION ANGLE:index (Poll)",
      "description": "Rotor rotation angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_ROTOR ROTATION ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR ROTATION ANGLE:index",
      "displaytitle": "ROTOR ROTATION ANGLE:index (OnChange)",
      "description": "Rotor rotation angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_onChange_ROTOR ROTATION ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR ROTATION ANGLE:index",
      "displaytitle": "ROTOR ROTATION ANGLE:index (OnRequest)",
      "description": "Rotor rotation angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians: settable false",
      "messagetype": "trigger_onRequest_ROTOR ROTATION ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ROTOR RPM PCT:index",
      "displaytitle": "ROTOR RPM PCT:index (Poll)",
      "description": "Percent max rated rpm of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_ROTOR RPM PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR RPM PCT:index",
      "displaytitle": "ROTOR RPM PCT:index (OnChange)",
      "description": "Percent max rated rpm of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_ROTOR RPM PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR RPM PCT:index",
      "displaytitle": "ROTOR RPM PCT:index (OnRequest)",
      "description": "Percent max rated rpm of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_ROTOR RPM PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ROTOR RPM:index",
      "displaytitle": "ROTOR RPM:index (Poll)",
      "description": "The indexed rotor RPM.: Units RPM: settable false",
      "messagetype": "trigger_ROTOR RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR RPM:index",
      "displaytitle": "ROTOR RPM:index (OnChange)",
      "description": "The indexed rotor RPM.: Units RPM: settable false",
      "messagetype": "trigger_onChange_ROTOR RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR RPM:index",
      "displaytitle": "ROTOR RPM:index (OnRequest)",
      "description": "The indexed rotor RPM.: Units RPM: settable false",
      "messagetype": "trigger_onRequest_ROTOR RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ROTOR TEMPERATURE",
      "displaytitle": "ROTOR TEMPERATURE (Poll)",
      "description": "The main rotor transmission temperature.: Units rankine: settable false",
      "messagetype": "trigger_ROTOR TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ROTOR TEMPERATURE",
      "displaytitle": "ROTOR TEMPERATURE (OnChange)",
      "description": "The main rotor transmission temperature.: Units rankine: settable false",
      "messagetype": "trigger_onChange_ROTOR TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ROTOR TEMPERATURE",
      "displaytitle": "ROTOR TEMPERATURE (OnRequest)",
      "description": "The main rotor transmission temperature.: Units rankine: settable false",
      "messagetype": "trigger_onRequest_ROTOR TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER DEFLECTION",
      "displaytitle": "RUDDER DEFLECTION (Poll)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_RUDDER DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RUDDER DEFLECTION",
      "displaytitle": "RUDDER DEFLECTION (OnChange)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onChange_RUDDER DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RUDDER DEFLECTION",
      "displaytitle": "RUDDER DEFLECTION (OnRequest)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onRequest_RUDDER DEFLECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER DEFLECTION PCT",
      "displaytitle": "RUDDER DEFLECTION PCT (Poll)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_RUDDER DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RUDDER DEFLECTION PCT",
      "displaytitle": "RUDDER DEFLECTION PCT (OnChange)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_RUDDER DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RUDDER DEFLECTION PCT",
      "displaytitle": "RUDDER DEFLECTION PCT (OnRequest)",
      "description": "Percent deflection: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_RUDDER DEFLECTION PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER PEDAL INDICATOR",
      "displaytitle": "RUDDER PEDAL INDICATOR (Poll)",
      "description": "Rudder pedal position: Units position: settable false",
      "messagetype": "trigger_RUDDER PEDAL INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RUDDER PEDAL INDICATOR",
      "displaytitle": "RUDDER PEDAL INDICATOR (OnChange)",
      "description": "Rudder pedal position: Units position: settable false",
      "messagetype": "trigger_onChange_RUDDER PEDAL INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RUDDER PEDAL INDICATOR",
      "displaytitle": "RUDDER PEDAL INDICATOR (OnRequest)",
      "description": "Rudder pedal position: Units position: settable false",
      "messagetype": "trigger_onRequest_RUDDER PEDAL INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER PEDAL POSITION",
      "displaytitle": "RUDDER PEDAL POSITION (Poll)",
      "description": "Percent rudder pedal deflection (for animation): Units position: settable true",
      "messagetype": "trigger_RUDDER PEDAL POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RUDDER PEDAL POSITION",
      "displaytitle": "RUDDER PEDAL POSITION (OnChange)",
      "description": "Percent rudder pedal deflection (for animation): Units position: settable true",
      "messagetype": "trigger_onChange_RUDDER PEDAL POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RUDDER PEDAL POSITION",
      "displaytitle": "RUDDER PEDAL POSITION (OnRequest)",
      "description": "Percent rudder pedal deflection (for animation): Units position: settable true",
      "messagetype": "trigger_onRequest_RUDDER PEDAL POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER POSITION",
      "displaytitle": "RUDDER POSITION (Poll)",
      "description": "Percent rudder input deflection: Units position: settable true",
      "messagetype": "trigger_RUDDER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RUDDER POSITION",
      "displaytitle": "RUDDER POSITION (OnChange)",
      "description": "Percent rudder input deflection: Units position: settable true",
      "messagetype": "trigger_onChange_RUDDER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RUDDER POSITION",
      "displaytitle": "RUDDER POSITION (OnRequest)",
      "description": "Percent rudder input deflection: Units position: settable true",
      "messagetype": "trigger_onRequest_RUDDER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER TRIM",
      "displaytitle": "RUDDER TRIM (Poll)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_RUDDER TRIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RUDDER TRIM",
      "displaytitle": "RUDDER TRIM (OnChange)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onChange_RUDDER TRIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RUDDER TRIM",
      "displaytitle": "RUDDER TRIM (OnRequest)",
      "description": "Angle deflection: Units radians: settable false",
      "messagetype": "trigger_onRequest_RUDDER TRIM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER TRIM DISABLED",
      "displaytitle": "RUDDER TRIM DISABLED (Poll)",
      "description": "Whether or not the Rudder Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_RUDDER TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RUDDER TRIM DISABLED",
      "displaytitle": "RUDDER TRIM DISABLED (OnChange)",
      "description": "Whether or not the Rudder Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_onChange_RUDDER TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RUDDER TRIM DISABLED",
      "displaytitle": "RUDDER TRIM DISABLED (OnRequest)",
      "description": "Whether or not the Rudder Trim has been disabled: Units bool: settable false",
      "messagetype": "trigger_onRequest_RUDDER TRIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER TRIM PCT",
      "displaytitle": "RUDDER TRIM PCT (Poll)",
      "description": "The trim position of the rudder. Zero is no trim: Units percent Over 100: settable true",
      "messagetype": "trigger_RUDDER TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_RUDDER TRIM PCT",
      "displaytitle": "RUDDER TRIM PCT (OnChange)",
      "description": "The trim position of the rudder. Zero is no trim: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_RUDDER TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_RUDDER TRIM PCT",
      "displaytitle": "RUDDER TRIM PCT (OnRequest)",
      "description": "The trim position of the rudder. Zero is no trim: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_RUDDER TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SEA LEVEL PRESSURE",
      "displaytitle": "SEA LEVEL PRESSURE (Poll)",
      "description": "Barometric pressure at sea level.: Units Millibars: settable false",
      "messagetype": "trigger_SEA LEVEL PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SEA LEVEL PRESSURE",
      "displaytitle": "SEA LEVEL PRESSURE (OnChange)",
      "description": "Barometric pressure at sea level.: Units Millibars: settable false",
      "messagetype": "trigger_onChange_SEA LEVEL PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SEA LEVEL PRESSURE",
      "displaytitle": "SEA LEVEL PRESSURE (OnRequest)",
      "description": "Barometric pressure at sea level.: Units Millibars: settable false",
      "messagetype": "trigger_onRequest_SEA LEVEL PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SELECTED DME",
      "displaytitle": "SELECTED DME (Poll)",
      "description": "Selected DME.: Units number: settable false",
      "messagetype": "trigger_SELECTED DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SELECTED DME",
      "displaytitle": "SELECTED DME (OnChange)",
      "description": "Selected DME.: Units number: settable false",
      "messagetype": "trigger_onChange_SELECTED DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SELECTED DME",
      "displaytitle": "SELECTED DME (OnRequest)",
      "description": "Selected DME.: Units number: settable false",
      "messagetype": "trigger_onRequest_SELECTED DME",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SEMIBODY LOADFACTOR Y",
      "displaytitle": "SEMIBODY LOADFACTOR Y (Poll)",
      "description": "Acceleration along the axis Y divided by the gravity constant g (usually around 9.81m.s²): Units number: settable false",
      "messagetype": "trigger_SEMIBODY LOADFACTOR Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SEMIBODY LOADFACTOR Y",
      "displaytitle": "SEMIBODY LOADFACTOR Y (OnChange)",
      "description": "Acceleration along the axis Y divided by the gravity constant g (usually around 9.81m.s²): Units number: settable false",
      "messagetype": "trigger_onChange_SEMIBODY LOADFACTOR Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SEMIBODY LOADFACTOR Y",
      "displaytitle": "SEMIBODY LOADFACTOR Y (OnRequest)",
      "description": "Acceleration along the axis Y divided by the gravity constant g (usually around 9.81m.s²): Units number: settable false",
      "messagetype": "trigger_onRequest_SEMIBODY LOADFACTOR Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SEMIBODY LOADFACTOR YDOT",
      "displaytitle": "SEMIBODY LOADFACTOR YDOT (Poll)",
      "description": "Derivative of SEMIBODY LOADFACTOR Y in relation to time.: Units number: settable false",
      "messagetype": "trigger_SEMIBODY LOADFACTOR YDOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SEMIBODY LOADFACTOR YDOT",
      "displaytitle": "SEMIBODY LOADFACTOR YDOT (OnChange)",
      "description": "Derivative of SEMIBODY LOADFACTOR Y in relation to time.: Units number: settable false",
      "messagetype": "trigger_onChange_SEMIBODY LOADFACTOR YDOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SEMIBODY LOADFACTOR YDOT",
      "displaytitle": "SEMIBODY LOADFACTOR YDOT (OnRequest)",
      "description": "Derivative of SEMIBODY LOADFACTOR Y in relation to time.: Units number: settable false",
      "messagetype": "trigger_onRequest_SEMIBODY LOADFACTOR YDOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SHUTOFF VALVE PULLED",
      "displaytitle": "SHUTOFF VALVE PULLED (Poll)",
      "description": "This checks if the shutoff valve to the engine has been pulled (true) or not (false). When pulled piston engines will be blocked from getting any fuel: Units bool: settable false",
      "messagetype": "trigger_SHUTOFF VALVE PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SHUTOFF VALVE PULLED",
      "displaytitle": "SHUTOFF VALVE PULLED (OnChange)",
      "description": "This checks if the shutoff valve to the engine has been pulled (true) or not (false). When pulled piston engines will be blocked from getting any fuel: Units bool: settable false",
      "messagetype": "trigger_onChange_SHUTOFF VALVE PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SHUTOFF VALVE PULLED",
      "displaytitle": "SHUTOFF VALVE PULLED (OnRequest)",
      "description": "This checks if the shutoff valve to the engine has been pulled (true) or not (false). When pulled piston engines will be blocked from getting any fuel: Units bool: settable false",
      "messagetype": "trigger_onRequest_SHUTOFF VALVE PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SIGMA SQRT",
      "displaytitle": "SIGMA SQRT (Poll)",
      "description": "Sigma sqrt: Units number: settable false",
      "messagetype": "trigger_SIGMA SQRT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SIGMA SQRT",
      "displaytitle": "SIGMA SQRT (OnChange)",
      "description": "Sigma sqrt: Units number: settable false",
      "messagetype": "trigger_onChange_SIGMA SQRT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SIGMA SQRT",
      "displaytitle": "SIGMA SQRT (OnRequest)",
      "description": "Sigma sqrt: Units number: settable false",
      "messagetype": "trigger_onRequest_SIGMA SQRT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SIM DISABLED",
      "displaytitle": "SIM DISABLED (Poll)",
      "description": "Is sim disabled.: Units bool: settable true",
      "messagetype": "trigger_SIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SIM DISABLED",
      "displaytitle": "SIM DISABLED (OnChange)",
      "description": "Is sim disabled.: Units bool: settable true",
      "messagetype": "trigger_onChange_SIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SIM DISABLED",
      "displaytitle": "SIM DISABLED (OnRequest)",
      "description": "Is sim disabled.: Units bool: settable true",
      "messagetype": "trigger_onRequest_SIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SIM ON GROUND",
      "displaytitle": "SIM ON GROUND (Poll)",
      "description": "On ground flag.: Units bool: settable false",
      "messagetype": "trigger_SIM ON GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SIM ON GROUND",
      "displaytitle": "SIM ON GROUND (OnChange)",
      "description": "On ground flag.: Units bool: settable false",
      "messagetype": "trigger_onChange_SIM ON GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SIM ON GROUND",
      "displaytitle": "SIM ON GROUND (OnRequest)",
      "description": "On ground flag.: Units bool: settable false",
      "messagetype": "trigger_onRequest_SIM ON GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SIM SHOULD SET ON GROUND",
      "displaytitle": "SIM SHOULD SET ON GROUND (Poll)",
      "description": ": Units bool: settable true",
      "messagetype": "trigger_SIM SHOULD SET ON GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SIM SHOULD SET ON GROUND",
      "displaytitle": "SIM SHOULD SET ON GROUND (OnChange)",
      "description": ": Units bool: settable true",
      "messagetype": "trigger_onChange_SIM SHOULD SET ON GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SIM SHOULD SET ON GROUND",
      "displaytitle": "SIM SHOULD SET ON GROUND (OnRequest)",
      "description": ": Units bool: settable true",
      "messagetype": "trigger_onRequest_SIM SHOULD SET ON GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SIMULATED RADIUS",
      "displaytitle": "SIMULATED RADIUS (Poll)",
      "description": "Simulated radius: Units feet: settable false",
      "messagetype": "trigger_SIMULATED RADIUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SIMULATED RADIUS",
      "displaytitle": "SIMULATED RADIUS (OnChange)",
      "description": "Simulated radius: Units feet: settable false",
      "messagetype": "trigger_onChange_SIMULATED RADIUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SIMULATED RADIUS",
      "displaytitle": "SIMULATED RADIUS (OnRequest)",
      "description": "Simulated radius: Units feet: settable false",
      "messagetype": "trigger_onRequest_SIMULATED RADIUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SLING CABLE BROKEN:index",
      "displaytitle": "SLING CABLE BROKEN:index (Poll)",
      "description": "THis will be True (1) if the indexed cable is broken, or False (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_SLING CABLE BROKEN:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_SLING CABLE BROKEN:index",
      "displaytitle": "SLING CABLE BROKEN:index (OnChange)",
      "description": "THis will be True (1) if the indexed cable is broken, or False (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_onChange_SLING CABLE BROKEN:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_SLING CABLE BROKEN:index",
      "displaytitle": "SLING CABLE BROKEN:index (OnRequest)",
      "description": "THis will be True (1) if the indexed cable is broken, or False (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_onRequest_SLING CABLE BROKEN:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SLING CABLE EXTENDED LENGTH:index",
      "displaytitle": "SLING CABLE EXTENDED LENGTH:index (Poll)",
      "description": "The length of the indexed cable extending from the aircraft.: Units feet: settable true",
      "messagetype": "trigger_SLING CABLE EXTENDED LENGTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_SLING CABLE EXTENDED LENGTH:index",
      "displaytitle": "SLING CABLE EXTENDED LENGTH:index (OnChange)",
      "description": "The length of the indexed cable extending from the aircraft.: Units feet: settable true",
      "messagetype": "trigger_onChange_SLING CABLE EXTENDED LENGTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_SLING CABLE EXTENDED LENGTH:index",
      "displaytitle": "SLING CABLE EXTENDED LENGTH:index (OnRequest)",
      "description": "The length of the indexed cable extending from the aircraft.: Units feet: settable true",
      "messagetype": "trigger_onRequest_SLING CABLE EXTENDED LENGTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SLING HOIST PERCENT DEPLOYED:index",
      "displaytitle": "SLING HOIST PERCENT DEPLOYED:index (Poll)",
      "description": "The percentage of the full length of the sling cable deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_SLING HOIST PERCENT DEPLOYED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_SLING HOIST PERCENT DEPLOYED:index",
      "displaytitle": "SLING HOIST PERCENT DEPLOYED:index (OnChange)",
      "description": "The percentage of the full length of the sling cable deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_SLING HOIST PERCENT DEPLOYED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_SLING HOIST PERCENT DEPLOYED:index",
      "displaytitle": "SLING HOIST PERCENT DEPLOYED:index (OnRequest)",
      "description": "The percentage of the full length of the sling cable deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_SLING HOIST PERCENT DEPLOYED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SLING HOIST SWITCH:index",
      "displaytitle": "SLING HOIST SWITCH:index (Poll)",
      "description": "This will be True (1) if the hoist is enabled or False (0) otherwise.: Units bool: settable true",
      "messagetype": "trigger_SLING HOIST SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_SLING HOIST SWITCH:index",
      "displaytitle": "SLING HOIST SWITCH:index (OnChange)",
      "description": "This will be True (1) if the hoist is enabled or False (0) otherwise.: Units bool: settable true",
      "messagetype": "trigger_onChange_SLING HOIST SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_SLING HOIST SWITCH:index",
      "displaytitle": "SLING HOIST SWITCH:index (OnRequest)",
      "description": "This will be True (1) if the hoist is enabled or False (0) otherwise.: Units bool: settable true",
      "messagetype": "trigger_onRequest_SLING HOIST SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SLING HOOK IN PICKUP MODE",
      "displaytitle": "SLING HOOK IN PICKUP MODE (Poll)",
      "description": "This will be True (1) if the hook is in pickup mode or False (0) otherwise. When True, the hook will be capable of picking up another object.: Units bool: settable false",
      "messagetype": "trigger_SLING HOOK IN PICKUP MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SLING HOOK IN PICKUP MODE",
      "displaytitle": "SLING HOOK IN PICKUP MODE (OnChange)",
      "description": "This will be True (1) if the hook is in pickup mode or False (0) otherwise. When True, the hook will be capable of picking up another object.: Units bool: settable false",
      "messagetype": "trigger_onChange_SLING HOOK IN PICKUP MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SLING HOOK IN PICKUP MODE",
      "displaytitle": "SLING HOOK IN PICKUP MODE (OnRequest)",
      "description": "This will be True (1) if the hook is in pickup mode or False (0) otherwise. When True, the hook will be capable of picking up another object.: Units bool: settable false",
      "messagetype": "trigger_onRequest_SLING HOOK IN PICKUP MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SLOPE TO ATC RUNWAY",
      "displaytitle": "SLOPE TO ATC RUNWAY (Poll)",
      "description": "The slope between the plane and the expected landing position of the runway. Returns 0 if no runway is assigned: Units radians: settable false",
      "messagetype": "trigger_SLOPE TO ATC RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SLOPE TO ATC RUNWAY",
      "displaytitle": "SLOPE TO ATC RUNWAY (OnChange)",
      "description": "The slope between the plane and the expected landing position of the runway. Returns 0 if no runway is assigned: Units radians: settable false",
      "messagetype": "trigger_onChange_SLOPE TO ATC RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SLOPE TO ATC RUNWAY",
      "displaytitle": "SLOPE TO ATC RUNWAY (OnRequest)",
      "description": "The slope between the plane and the expected landing position of the runway. Returns 0 if no runway is assigned: Units radians: settable false",
      "messagetype": "trigger_onRequest_SLOPE TO ATC RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SMART CAMERA ACTIVE",
      "displaytitle": "SMART CAMERA ACTIVE (Poll)",
      "description": "Sets/gets the whether the smart camera is active or not.: Units bool: settable true",
      "messagetype": "trigger_SMART CAMERA ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SMART CAMERA ACTIVE",
      "displaytitle": "SMART CAMERA ACTIVE (OnChange)",
      "description": "Sets/gets the whether the smart camera is active or not.: Units bool: settable true",
      "messagetype": "trigger_onChange_SMART CAMERA ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SMART CAMERA ACTIVE",
      "displaytitle": "SMART CAMERA ACTIVE (OnRequest)",
      "description": "Sets/gets the whether the smart camera is active or not.: Units bool: settable true",
      "messagetype": "trigger_onRequest_SMART CAMERA ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SMART CAMERA INFO:index",
      "displaytitle": "SMART CAMERA INFO:index (Poll)",
      "description": "Gets information on the smartcam system. The index sets what kind of information will be returned (or set).: Units number: settable true",
      "messagetype": "trigger_SMART CAMERA INFO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_SMART CAMERA INFO:index",
      "displaytitle": "SMART CAMERA INFO:index (OnChange)",
      "description": "Gets information on the smartcam system. The index sets what kind of information will be returned (or set).: Units number: settable true",
      "messagetype": "trigger_onChange_SMART CAMERA INFO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_SMART CAMERA INFO:index",
      "displaytitle": "SMART CAMERA INFO:index (OnRequest)",
      "description": "Gets information on the smartcam system. The index sets what kind of information will be returned (or set).: Units number: settable true",
      "messagetype": "trigger_onRequest_SMART CAMERA INFO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SMART CAMERA LIST DESCRIPTION:index",
      "displaytitle": "SMART CAMERA LIST DESCRIPTION:index (Poll)",
      "description": "This returns a localized string that represents the smartcam target specified by the given index. Indices count from 0 so index 0 is the first target in the list. \tString: Units null: settable false",
      "messagetype": "trigger_SMART CAMERA LIST DESCRIPTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_SMART CAMERA LIST DESCRIPTION:index",
      "displaytitle": "SMART CAMERA LIST DESCRIPTION:index (OnChange)",
      "description": "This returns a localized string that represents the smartcam target specified by the given index. Indices count from 0 so index 0 is the first target in the list. \tString: Units null: settable false",
      "messagetype": "trigger_onChange_SMART CAMERA LIST DESCRIPTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_SMART CAMERA LIST DESCRIPTION:index",
      "displaytitle": "SMART CAMERA LIST DESCRIPTION:index (OnRequest)",
      "description": "This returns a localized string that represents the smartcam target specified by the given index. Indices count from 0 so index 0 is the first target in the list. \tString: Units null: settable false",
      "messagetype": "trigger_onRequest_SMART CAMERA LIST DESCRIPTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SMART CAMERA LIST:index",
      "displaytitle": "SMART CAMERA LIST:index (Poll)",
      "description": "Retrieves the type of target for the indexed position in the smartcam list, counting from 0 (so index 0 is the first target in the list).: Units enum: settable true",
      "messagetype": "trigger_SMART CAMERA LIST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_SMART CAMERA LIST:index",
      "displaytitle": "SMART CAMERA LIST:index (OnChange)",
      "description": "Retrieves the type of target for the indexed position in the smartcam list, counting from 0 (so index 0 is the first target in the list).: Units enum: settable true",
      "messagetype": "trigger_onChange_SMART CAMERA LIST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_SMART CAMERA LIST:index",
      "displaytitle": "SMART CAMERA LIST:index (OnRequest)",
      "description": "Retrieves the type of target for the indexed position in the smartcam list, counting from 0 (so index 0 is the first target in the list).: Units enum: settable true",
      "messagetype": "trigger_onRequest_SMART CAMERA LIST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SMOKE ENABLE",
      "displaytitle": "SMOKE ENABLE (Poll)",
      "description": "Set to True to activate the smoke system, if one is available. Please see the notes for SMOKESYSTEM AVAILABLE for more information.: Units bool: settable true",
      "messagetype": "trigger_SMOKE ENABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SMOKE ENABLE",
      "displaytitle": "SMOKE ENABLE (OnChange)",
      "description": "Set to True to activate the smoke system, if one is available. Please see the notes for SMOKESYSTEM AVAILABLE for more information.: Units bool: settable true",
      "messagetype": "trigger_onChange_SMOKE ENABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SMOKE ENABLE",
      "displaytitle": "SMOKE ENABLE (OnRequest)",
      "description": "Set to True to activate the smoke system, if one is available. Please see the notes for SMOKESYSTEM AVAILABLE for more information.: Units bool: settable true",
      "messagetype": "trigger_onRequest_SMOKE ENABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SMOKESYSTEM AVAILABLE",
      "displaytitle": "SMOKESYSTEM AVAILABLE (Poll)",
      "description": "Smoke system available.: Units bool: settable false",
      "messagetype": "trigger_SMOKESYSTEM AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SMOKESYSTEM AVAILABLE",
      "displaytitle": "SMOKESYSTEM AVAILABLE (OnChange)",
      "description": "Smoke system available.: Units bool: settable false",
      "messagetype": "trigger_onChange_SMOKESYSTEM AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SMOKESYSTEM AVAILABLE",
      "displaytitle": "SMOKESYSTEM AVAILABLE (OnRequest)",
      "description": "Smoke system available.: Units bool: settable false",
      "messagetype": "trigger_onRequest_SMOKESYSTEM AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SPEAKER ACTIVE",
      "displaytitle": "SPEAKER ACTIVE (Poll)",
      "description": "Whether or not the speaker is active.: Units bool: settable false",
      "messagetype": "trigger_SPEAKER ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SPEAKER ACTIVE",
      "displaytitle": "SPEAKER ACTIVE (OnChange)",
      "description": "Whether or not the speaker is active.: Units bool: settable false",
      "messagetype": "trigger_onChange_SPEAKER ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SPEAKER ACTIVE",
      "displaytitle": "SPEAKER ACTIVE (OnRequest)",
      "description": "Whether or not the speaker is active.: Units bool: settable false",
      "messagetype": "trigger_onRequest_SPEAKER ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SPOILER AVAILABLE",
      "displaytitle": "SPOILER AVAILABLE (Poll)",
      "description": "True if spoiler system available: Units bool: settable false",
      "messagetype": "trigger_SPOILER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SPOILER AVAILABLE",
      "displaytitle": "SPOILER AVAILABLE (OnChange)",
      "description": "True if spoiler system available: Units bool: settable false",
      "messagetype": "trigger_onChange_SPOILER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SPOILER AVAILABLE",
      "displaytitle": "SPOILER AVAILABLE (OnRequest)",
      "description": "True if spoiler system available: Units bool: settable false",
      "messagetype": "trigger_onRequest_SPOILER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SPOILERS ARMED",
      "displaytitle": "SPOILERS ARMED (Poll)",
      "description": "Checks if autospoilers are armed (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_SPOILERS ARMED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SPOILERS ARMED",
      "displaytitle": "SPOILERS ARMED (OnChange)",
      "description": "Checks if autospoilers are armed (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_onChange_SPOILERS ARMED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SPOILERS ARMED",
      "displaytitle": "SPOILERS ARMED (OnRequest)",
      "description": "Checks if autospoilers are armed (true) or not (false): Units bool: settable false",
      "messagetype": "trigger_onRequest_SPOILERS ARMED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SPOILERS HANDLE POSITION",
      "displaytitle": "SPOILERS HANDLE POSITION (Poll)",
      "description": "Spoiler handle position: Units percent Over 100: settable false",
      "messagetype": "trigger_SPOILERS HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SPOILERS HANDLE POSITION",
      "displaytitle": "SPOILERS HANDLE POSITION (OnChange)",
      "description": "Spoiler handle position: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_SPOILERS HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SPOILERS HANDLE POSITION",
      "displaytitle": "SPOILERS HANDLE POSITION (OnRequest)",
      "description": "Spoiler handle position: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_SPOILERS HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SPOILERS LEFT POSITION",
      "displaytitle": "SPOILERS LEFT POSITION (Poll)",
      "description": "Percent left spoiler deflected: Units percent Over 100: settable false",
      "messagetype": "trigger_SPOILERS LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SPOILERS LEFT POSITION",
      "displaytitle": "SPOILERS LEFT POSITION (OnChange)",
      "description": "Percent left spoiler deflected: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_SPOILERS LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SPOILERS LEFT POSITION",
      "displaytitle": "SPOILERS LEFT POSITION (OnRequest)",
      "description": "Percent left spoiler deflected: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_SPOILERS LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SPOILERS RIGHT POSITION",
      "displaytitle": "SPOILERS RIGHT POSITION (Poll)",
      "description": "Percent right spoiler deflected: Units percent Over 100: settable false",
      "messagetype": "trigger_SPOILERS RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SPOILERS RIGHT POSITION",
      "displaytitle": "SPOILERS RIGHT POSITION (OnChange)",
      "description": "Percent right spoiler deflected: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_SPOILERS RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SPOILERS RIGHT POSITION",
      "displaytitle": "SPOILERS RIGHT POSITION (OnRequest)",
      "description": "Percent right spoiler deflected: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_SPOILERS RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STALL ALPHA",
      "displaytitle": "STALL ALPHA (Poll)",
      "description": "The angle of attack which produces the maximum lift coefficient before entering into stall conditions.: Units radians: settable false",
      "messagetype": "trigger_STALL ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STALL ALPHA",
      "displaytitle": "STALL ALPHA (OnChange)",
      "description": "The angle of attack which produces the maximum lift coefficient before entering into stall conditions.: Units radians: settable false",
      "messagetype": "trigger_onChange_STALL ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STALL ALPHA",
      "displaytitle": "STALL ALPHA (OnRequest)",
      "description": "The angle of attack which produces the maximum lift coefficient before entering into stall conditions.: Units radians: settable false",
      "messagetype": "trigger_onRequest_STALL ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STALL HORN AVAILABLE",
      "displaytitle": "STALL HORN AVAILABLE (Poll)",
      "description": "True if stall alarm available.: Units bool: settable false",
      "messagetype": "trigger_STALL HORN AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STALL HORN AVAILABLE",
      "displaytitle": "STALL HORN AVAILABLE (OnChange)",
      "description": "True if stall alarm available.: Units bool: settable false",
      "messagetype": "trigger_onChange_STALL HORN AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STALL HORN AVAILABLE",
      "displaytitle": "STALL HORN AVAILABLE (OnRequest)",
      "description": "True if stall alarm available.: Units bool: settable false",
      "messagetype": "trigger_onRequest_STALL HORN AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STALL PROTECTION OFF LIMIT",
      "displaytitle": "STALL PROTECTION OFF LIMIT (Poll)",
      "description": "Alpha below which the Stall Protection can be disabled. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_STALL PROTECTION OFF LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STALL PROTECTION OFF LIMIT",
      "displaytitle": "STALL PROTECTION OFF LIMIT (OnChange)",
      "description": "Alpha below which the Stall Protection can be disabled. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_onChange_STALL PROTECTION OFF LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STALL PROTECTION OFF LIMIT",
      "displaytitle": "STALL PROTECTION OFF LIMIT (OnRequest)",
      "description": "Alpha below which the Stall Protection can be disabled. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_onRequest_STALL PROTECTION OFF LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STALL PROTECTION ON GOAL",
      "displaytitle": "STALL PROTECTION ON GOAL (Poll)",
      "description": "The alpha that the Stall Protection will attempt to reach when triggered. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_STALL PROTECTION ON GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STALL PROTECTION ON GOAL",
      "displaytitle": "STALL PROTECTION ON GOAL (OnChange)",
      "description": "The alpha that the Stall Protection will attempt to reach when triggered. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_onChange_STALL PROTECTION ON GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STALL PROTECTION ON GOAL",
      "displaytitle": "STALL PROTECTION ON GOAL (OnRequest)",
      "description": "The alpha that the Stall Protection will attempt to reach when triggered. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_onRequest_STALL PROTECTION ON GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STALL PROTECTION ON LIMIT",
      "displaytitle": "STALL PROTECTION ON LIMIT (Poll)",
      "description": "Alpha above which the Stall Protection timer starts. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_STALL PROTECTION ON LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STALL PROTECTION ON LIMIT",
      "displaytitle": "STALL PROTECTION ON LIMIT (OnChange)",
      "description": "Alpha above which the Stall Protection timer starts. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_onChange_STALL PROTECTION ON LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STALL PROTECTION ON LIMIT",
      "displaytitle": "STALL PROTECTION ON LIMIT (OnRequest)",
      "description": "Alpha above which the Stall Protection timer starts. See the [STALL PROTECTION] section for more information.: Units radians: settable false",
      "messagetype": "trigger_onRequest_STALL PROTECTION ON LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STALL WARNING",
      "displaytitle": "STALL WARNING (Poll)",
      "description": "Stall warning state.: Units bool: settable false",
      "messagetype": "trigger_STALL WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STALL WARNING",
      "displaytitle": "STALL WARNING (OnChange)",
      "description": "Stall warning state.: Units bool: settable false",
      "messagetype": "trigger_onChange_STALL WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STALL WARNING",
      "displaytitle": "STALL WARNING (OnRequest)",
      "description": "Stall warning state.: Units bool: settable false",
      "messagetype": "trigger_onRequest_STALL WARNING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STANDARD ATM TEMPERATURE",
      "displaytitle": "STANDARD ATM TEMPERATURE (Poll)",
      "description": "Outside temperature on the standard ATM scale: Units rankine: settable false",
      "messagetype": "trigger_STANDARD ATM TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STANDARD ATM TEMPERATURE",
      "displaytitle": "STANDARD ATM TEMPERATURE (OnChange)",
      "description": "Outside temperature on the standard ATM scale: Units rankine: settable false",
      "messagetype": "trigger_onChange_STANDARD ATM TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STANDARD ATM TEMPERATURE",
      "displaytitle": "STANDARD ATM TEMPERATURE (OnRequest)",
      "description": "Outside temperature on the standard ATM scale: Units rankine: settable false",
      "messagetype": "trigger_onRequest_STANDARD ATM TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STATIC CG TO GROUND",
      "displaytitle": "STATIC CG TO GROUND (Poll)",
      "description": "Static CG position with reference to the ground: Units feet: settable false",
      "messagetype": "trigger_STATIC CG TO GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STATIC CG TO GROUND",
      "displaytitle": "STATIC CG TO GROUND (OnChange)",
      "description": "Static CG position with reference to the ground: Units feet: settable false",
      "messagetype": "trigger_onChange_STATIC CG TO GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STATIC CG TO GROUND",
      "displaytitle": "STATIC CG TO GROUND (OnRequest)",
      "description": "Static CG position with reference to the ground: Units feet: settable false",
      "messagetype": "trigger_onRequest_STATIC CG TO GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STATIC PITCH",
      "displaytitle": "STATIC PITCH (Poll)",
      "description": "The angle at which static pitch stability is achieved.: Units radians: settable false",
      "messagetype": "trigger_STATIC PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STATIC PITCH",
      "displaytitle": "STATIC PITCH (OnChange)",
      "description": "The angle at which static pitch stability is achieved.: Units radians: settable false",
      "messagetype": "trigger_onChange_STATIC PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STATIC PITCH",
      "displaytitle": "STATIC PITCH (OnRequest)",
      "description": "The angle at which static pitch stability is achieved.: Units radians: settable false",
      "messagetype": "trigger_onRequest_STATIC PITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STEER INPUT CONTROL",
      "displaytitle": "STEER INPUT CONTROL (Poll)",
      "description": "Position of steering tiller: Units percent Over 100: settable false",
      "messagetype": "trigger_STEER INPUT CONTROL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STEER INPUT CONTROL",
      "displaytitle": "STEER INPUT CONTROL (OnChange)",
      "description": "Position of steering tiller: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_STEER INPUT CONTROL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STEER INPUT CONTROL",
      "displaytitle": "STEER INPUT CONTROL (OnRequest)",
      "description": "Position of steering tiller: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_STEER INPUT CONTROL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STROBES AVAILABLE",
      "displaytitle": "STROBES AVAILABLE (Poll)",
      "description": "True if strobe lights are available.: Units bool: settable false",
      "messagetype": "trigger_STROBES AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STROBES AVAILABLE",
      "displaytitle": "STROBES AVAILABLE (OnChange)",
      "description": "True if strobe lights are available.: Units bool: settable false",
      "messagetype": "trigger_onChange_STROBES AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STROBES AVAILABLE",
      "displaytitle": "STROBES AVAILABLE (OnRequest)",
      "description": "True if strobe lights are available.: Units bool: settable false",
      "messagetype": "trigger_onRequest_STROBES AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STRUCT AMBIENT WIND",
      "displaytitle": "STRUCT AMBIENT WIND (Poll)",
      "description": "X (latitude), Y (vertical) and Z (longitude) components of the wind.: Units feet per second: settable false",
      "messagetype": "trigger_STRUCT AMBIENT WIND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STRUCT AMBIENT WIND",
      "displaytitle": "STRUCT AMBIENT WIND (OnChange)",
      "description": "X (latitude), Y (vertical) and Z (longitude) components of the wind.: Units feet per second: settable false",
      "messagetype": "trigger_onChange_STRUCT AMBIENT WIND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STRUCT AMBIENT WIND",
      "displaytitle": "STRUCT AMBIENT WIND (OnRequest)",
      "description": "X (latitude), Y (vertical) and Z (longitude) components of the wind.: Units feet per second: settable false",
      "messagetype": "trigger_onRequest_STRUCT AMBIENT WIND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STRUCTURAL DEICE SWITCH",
      "displaytitle": "STRUCTURAL DEICE SWITCH (Poll)",
      "description": "True if the aircraft structure deice switch is on.: Units bool: settable false",
      "messagetype": "trigger_STRUCTURAL DEICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STRUCTURAL DEICE SWITCH",
      "displaytitle": "STRUCTURAL DEICE SWITCH (OnChange)",
      "description": "True if the aircraft structure deice switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_STRUCTURAL DEICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STRUCTURAL DEICE SWITCH",
      "displaytitle": "STRUCTURAL DEICE SWITCH (OnRequest)",
      "description": "True if the aircraft structure deice switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_STRUCTURAL DEICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "STRUCTURAL ICE PCT",
      "displaytitle": "STRUCTURAL ICE PCT (Poll)",
      "description": "Amount of ice on aircraft structure. 100 is fully iced: Units percent Over 100: settable false",
      "messagetype": "trigger_STRUCTURAL ICE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_STRUCTURAL ICE PCT",
      "displaytitle": "STRUCTURAL ICE PCT (OnChange)",
      "description": "Amount of ice on aircraft structure. 100 is fully iced: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_STRUCTURAL ICE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_STRUCTURAL ICE PCT",
      "displaytitle": "STRUCTURAL ICE PCT (OnRequest)",
      "description": "Amount of ice on aircraft structure. 100 is fully iced: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_STRUCTURAL ICE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SUCTION PRESSURE",
      "displaytitle": "SUCTION PRESSURE (Poll)",
      "description": "Vacuum system suction pressure.: Units Inches of Mercury: settable true",
      "messagetype": "trigger_SUCTION PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SUCTION PRESSURE",
      "displaytitle": "SUCTION PRESSURE (OnChange)",
      "description": "Vacuum system suction pressure.: Units Inches of Mercury: settable true",
      "messagetype": "trigger_onChange_SUCTION PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SUCTION PRESSURE",
      "displaytitle": "SUCTION PRESSURE (OnRequest)",
      "description": "Vacuum system suction pressure.: Units Inches of Mercury: settable true",
      "messagetype": "trigger_onRequest_SUCTION PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SURFACE CONDITION",
      "displaytitle": "SURFACE CONDITION (Poll)",
      "description": "The state of the surface directly under the aircraft: Units enum: settable false",
      "messagetype": "trigger_SURFACE CONDITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SURFACE CONDITION",
      "displaytitle": "SURFACE CONDITION (OnChange)",
      "description": "The state of the surface directly under the aircraft: Units enum: settable false",
      "messagetype": "trigger_onChange_SURFACE CONDITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SURFACE CONDITION",
      "displaytitle": "SURFACE CONDITION (OnRequest)",
      "description": "The state of the surface directly under the aircraft: Units enum: settable false",
      "messagetype": "trigger_onRequest_SURFACE CONDITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SURFACE INFO VALID",
      "displaytitle": "SURFACE INFO VALID (Poll)",
      "description": "True indicates that the SURFACE CONDITION return value is meaningful: Units bool: settable false",
      "messagetype": "trigger_SURFACE INFO VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SURFACE INFO VALID",
      "displaytitle": "SURFACE INFO VALID (OnChange)",
      "description": "True indicates that the SURFACE CONDITION return value is meaningful: Units bool: settable false",
      "messagetype": "trigger_onChange_SURFACE INFO VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SURFACE INFO VALID",
      "displaytitle": "SURFACE INFO VALID (OnRequest)",
      "description": "True indicates that the SURFACE CONDITION return value is meaningful: Units bool: settable false",
      "messagetype": "trigger_onRequest_SURFACE INFO VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SURFACE RELATIVE GROUND SPEED",
      "displaytitle": "SURFACE RELATIVE GROUND SPEED (Poll)",
      "description": "The speed of the aircraft relative to the speed of the first surface directly underneath it. Use this to retrieve, for example, an aircraft's taxiing speed while it is moving on a moving carrier. It also applies to airborne aircraft, for example when a helicopter is successfully hovering above a moving ship, this value should be zero. The returned value will be the same as GROUND VELOCITY if the first surface beneath it is not moving: Units feet per second: settable false",
      "messagetype": "trigger_SURFACE RELATIVE GROUND SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SURFACE RELATIVE GROUND SPEED",
      "displaytitle": "SURFACE RELATIVE GROUND SPEED (OnChange)",
      "description": "The speed of the aircraft relative to the speed of the first surface directly underneath it. Use this to retrieve, for example, an aircraft's taxiing speed while it is moving on a moving carrier. It also applies to airborne aircraft, for example when a helicopter is successfully hovering above a moving ship, this value should be zero. The returned value will be the same as GROUND VELOCITY if the first surface beneath it is not moving: Units feet per second: settable false",
      "messagetype": "trigger_onChange_SURFACE RELATIVE GROUND SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SURFACE RELATIVE GROUND SPEED",
      "displaytitle": "SURFACE RELATIVE GROUND SPEED (OnRequest)",
      "description": "The speed of the aircraft relative to the speed of the first surface directly underneath it. Use this to retrieve, for example, an aircraft's taxiing speed while it is moving on a moving carrier. It also applies to airborne aircraft, for example when a helicopter is successfully hovering above a moving ship, this value should be zero. The returned value will be the same as GROUND VELOCITY if the first surface beneath it is not moving: Units feet per second: settable false",
      "messagetype": "trigger_onRequest_SURFACE RELATIVE GROUND SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SURFACE TYPE",
      "displaytitle": "SURFACE TYPE (Poll)",
      "description": "The type of surface under the aircraft: Units enum: settable false",
      "messagetype": "trigger_SURFACE TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_SURFACE TYPE",
      "displaytitle": "SURFACE TYPE (OnChange)",
      "description": "The type of surface under the aircraft: Units enum: settable false",
      "messagetype": "trigger_onChange_SURFACE TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_SURFACE TYPE",
      "displaytitle": "SURFACE TYPE (OnRequest)",
      "description": "The type of surface under the aircraft: Units enum: settable false",
      "messagetype": "trigger_onRequest_SURFACE TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TACAN ACTIVE CHANNEL:index",
      "displaytitle": "TACAN ACTIVE CHANNEL:index (Poll)",
      "description": "The active channel used by the indexed Tacan receiver on the aircraft, from 1 to 127.: Units number: settable false",
      "messagetype": "trigger_TACAN ACTIVE CHANNEL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN ACTIVE CHANNEL:index",
      "displaytitle": "TACAN ACTIVE CHANNEL:index (OnChange)",
      "description": "The active channel used by the indexed Tacan receiver on the aircraft, from 1 to 127.: Units number: settable false",
      "messagetype": "trigger_onChange_TACAN ACTIVE CHANNEL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN ACTIVE CHANNEL:index",
      "displaytitle": "TACAN ACTIVE CHANNEL:index (OnRequest)",
      "description": "The active channel used by the indexed Tacan receiver on the aircraft, from 1 to 127.: Units number: settable false",
      "messagetype": "trigger_onRequest_TACAN ACTIVE CHANNEL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN ACTIVE MODE:index",
      "displaytitle": "TACAN ACTIVE MODE:index (Poll)",
      "description": "The active mode used by the indexed Tacan receiver on the aircraft, where 0 = X and 1 = Y.: Units bool: settable false",
      "messagetype": "trigger_TACAN ACTIVE MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN ACTIVE MODE:index",
      "displaytitle": "TACAN ACTIVE MODE:index (OnChange)",
      "description": "The active mode used by the indexed Tacan receiver on the aircraft, where 0 = X and 1 = Y.: Units bool: settable false",
      "messagetype": "trigger_onChange_TACAN ACTIVE MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN ACTIVE MODE:index",
      "displaytitle": "TACAN ACTIVE MODE:index (OnRequest)",
      "description": "The active mode used by the indexed Tacan receiver on the aircraft, where 0 = X and 1 = Y.: Units bool: settable false",
      "messagetype": "trigger_onRequest_TACAN ACTIVE MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN AVAILABLE:index",
      "displaytitle": "TACAN AVAILABLE:index (Poll)",
      "description": "Will be TRUE (1) if NAV1, NAV2, NAV3 or NAV4 can receive Tacan (depending on the index - 1, 2, 3, or 4), or FALSE (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_TACAN AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN AVAILABLE:index",
      "displaytitle": "TACAN AVAILABLE:index (OnChange)",
      "description": "Will be TRUE (1) if NAV1, NAV2, NAV3 or NAV4 can receive Tacan (depending on the index - 1, 2, 3, or 4), or FALSE (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_onChange_TACAN AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN AVAILABLE:index",
      "displaytitle": "TACAN AVAILABLE:index (OnRequest)",
      "description": "Will be TRUE (1) if NAV1, NAV2, NAV3 or NAV4 can receive Tacan (depending on the index - 1, 2, 3, or 4), or FALSE (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_onRequest_TACAN AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN DRIVES NAV1:index",
      "displaytitle": "TACAN DRIVES NAV1:index (Poll)",
      "description": "Tells whether the Tacan is driving the Nav 1 indicator (TRUE, 1) or not (FALSE, 0), for autopilot purposes.: Units bool: settable false",
      "messagetype": "trigger_TACAN DRIVES NAV1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN DRIVES NAV1:index",
      "displaytitle": "TACAN DRIVES NAV1:index (OnChange)",
      "description": "Tells whether the Tacan is driving the Nav 1 indicator (TRUE, 1) or not (FALSE, 0), for autopilot purposes.: Units bool: settable false",
      "messagetype": "trigger_onChange_TACAN DRIVES NAV1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN DRIVES NAV1:index",
      "displaytitle": "TACAN DRIVES NAV1:index (OnRequest)",
      "description": "Tells whether the Tacan is driving the Nav 1 indicator (TRUE, 1) or not (FALSE, 0), for autopilot purposes.: Units bool: settable false",
      "messagetype": "trigger_onRequest_TACAN DRIVES NAV1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN OBS:index",
      "displaytitle": "TACAN OBS:index (Poll)",
      "description": "The Tacan OBS setting, in degrees.: Units degrees: settable false",
      "messagetype": "trigger_TACAN OBS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN OBS:index",
      "displaytitle": "TACAN OBS:index (OnChange)",
      "description": "The Tacan OBS setting, in degrees.: Units degrees: settable false",
      "messagetype": "trigger_onChange_TACAN OBS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN OBS:index",
      "displaytitle": "TACAN OBS:index (OnRequest)",
      "description": "The Tacan OBS setting, in degrees.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_TACAN OBS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN STANDBY CHANNEL:index",
      "displaytitle": "TACAN STANDBY CHANNEL:index (Poll)",
      "description": "The standby channel used by the indexed Tacan receiver on the aircraft, from 1 to 127.: Units number: settable false",
      "messagetype": "trigger_TACAN STANDBY CHANNEL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN STANDBY CHANNEL:index",
      "displaytitle": "TACAN STANDBY CHANNEL:index (OnChange)",
      "description": "The standby channel used by the indexed Tacan receiver on the aircraft, from 1 to 127.: Units number: settable false",
      "messagetype": "trigger_onChange_TACAN STANDBY CHANNEL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN STANDBY CHANNEL:index",
      "displaytitle": "TACAN STANDBY CHANNEL:index (OnRequest)",
      "description": "The standby channel used by the indexed Tacan receiver on the aircraft, from 1 to 127.: Units number: settable false",
      "messagetype": "trigger_onRequest_TACAN STANDBY CHANNEL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN STANDBY MODE:index",
      "displaytitle": "TACAN STANDBY MODE:index (Poll)",
      "description": "Indicates the indexed Tacan receiver standby mode, where 0 = X and 1 = Y.: Units bool: settable false",
      "messagetype": "trigger_TACAN STANDBY MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN STANDBY MODE:index",
      "displaytitle": "TACAN STANDBY MODE:index (OnChange)",
      "description": "Indicates the indexed Tacan receiver standby mode, where 0 = X and 1 = Y.: Units bool: settable false",
      "messagetype": "trigger_onChange_TACAN STANDBY MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN STANDBY MODE:index",
      "displaytitle": "TACAN STANDBY MODE:index (OnRequest)",
      "description": "Indicates the indexed Tacan receiver standby mode, where 0 = X and 1 = Y.: Units bool: settable false",
      "messagetype": "trigger_onRequest_TACAN STANDBY MODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN STATION CDI:index",
      "displaytitle": "TACAN STATION CDI:index (Poll)",
      "description": "The CDI needle deflection amount(course deviation) to the station. Can be +/- 127.: Units number: settable false",
      "messagetype": "trigger_TACAN STATION CDI:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN STATION CDI:index",
      "displaytitle": "TACAN STATION CDI:index (OnChange)",
      "description": "The CDI needle deflection amount(course deviation) to the station. Can be +/- 127.: Units number: settable false",
      "messagetype": "trigger_onChange_TACAN STATION CDI:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN STATION CDI:index",
      "displaytitle": "TACAN STATION CDI:index (OnRequest)",
      "description": "The CDI needle deflection amount(course deviation) to the station. Can be +/- 127.: Units number: settable false",
      "messagetype": "trigger_onRequest_TACAN STATION CDI:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN STATION DISTANCE:index",
      "displaytitle": "TACAN STATION DISTANCE:index (Poll)",
      "description": "The distance between the Tacan station position and the aircraft position. The index value refers to the Tacan receiver connected to the station (1 or 2).: Units meters: settable false",
      "messagetype": "trigger_TACAN STATION DISTANCE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN STATION DISTANCE:index",
      "displaytitle": "TACAN STATION DISTANCE:index (OnChange)",
      "description": "The distance between the Tacan station position and the aircraft position. The index value refers to the Tacan receiver connected to the station (1 or 2).: Units meters: settable false",
      "messagetype": "trigger_onChange_TACAN STATION DISTANCE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN STATION DISTANCE:index",
      "displaytitle": "TACAN STATION DISTANCE:index (OnRequest)",
      "description": "The distance between the Tacan station position and the aircraft position. The index value refers to the Tacan receiver connected to the station (1 or 2).: Units meters: settable false",
      "messagetype": "trigger_onRequest_TACAN STATION DISTANCE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN STATION IDENT:index",
      "displaytitle": "TACAN STATION IDENT:index (Poll)",
      "description": "The tuned station identifier for the indexed Tacan.: Units null: settable false",
      "messagetype": "trigger_TACAN STATION IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN STATION IDENT:index",
      "displaytitle": "TACAN STATION IDENT:index (OnChange)",
      "description": "The tuned station identifier for the indexed Tacan.: Units null: settable false",
      "messagetype": "trigger_onChange_TACAN STATION IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN STATION IDENT:index",
      "displaytitle": "TACAN STATION IDENT:index (OnRequest)",
      "description": "The tuned station identifier for the indexed Tacan.: Units null: settable false",
      "messagetype": "trigger_onRequest_TACAN STATION IDENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN STATION RADIAL ERROR:index",
      "displaytitle": "TACAN STATION RADIAL ERROR:index (Poll)",
      "description": "Difference between the current radial and OBS tuned radial, in degrees.: Units degrees: settable false",
      "messagetype": "trigger_TACAN STATION RADIAL ERROR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN STATION RADIAL ERROR:index",
      "displaytitle": "TACAN STATION RADIAL ERROR:index (OnChange)",
      "description": "Difference between the current radial and OBS tuned radial, in degrees.: Units degrees: settable false",
      "messagetype": "trigger_onChange_TACAN STATION RADIAL ERROR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN STATION RADIAL ERROR:index",
      "displaytitle": "TACAN STATION RADIAL ERROR:index (OnRequest)",
      "description": "Difference between the current radial and OBS tuned radial, in degrees.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_TACAN STATION RADIAL ERROR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN STATION RADIAL:index",
      "displaytitle": "TACAN STATION RADIAL:index (Poll)",
      "description": "The radial between the Tacan station and the aircraft.: Units degrees: settable false",
      "messagetype": "trigger_TACAN STATION RADIAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN STATION RADIAL:index",
      "displaytitle": "TACAN STATION RADIAL:index (OnChange)",
      "description": "The radial between the Tacan station and the aircraft.: Units degrees: settable false",
      "messagetype": "trigger_onChange_TACAN STATION RADIAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN STATION RADIAL:index",
      "displaytitle": "TACAN STATION RADIAL:index (OnRequest)",
      "description": "The radial between the Tacan station and the aircraft.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_TACAN STATION RADIAL:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN STATION TOFROM:index",
      "displaytitle": "TACAN STATION TOFROM:index (Poll)",
      "description": "Returns whether the indexed Tacan is going to or from the current radial (or is off).: Units enum: settable false",
      "messagetype": "trigger_TACAN STATION TOFROM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN STATION TOFROM:index",
      "displaytitle": "TACAN STATION TOFROM:index (OnChange)",
      "description": "Returns whether the indexed Tacan is going to or from the current radial (or is off).: Units enum: settable false",
      "messagetype": "trigger_onChange_TACAN STATION TOFROM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN STATION TOFROM:index",
      "displaytitle": "TACAN STATION TOFROM:index (OnRequest)",
      "description": "Returns whether the indexed Tacan is going to or from the current radial (or is off).: Units enum: settable false",
      "messagetype": "trigger_onRequest_TACAN STATION TOFROM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TACAN VOLUME:index",
      "displaytitle": "TACAN VOLUME:index (Poll)",
      "description": "The volume value of the indexed Tacan receiver on the aircraft.: Units percent Over 100: settable false",
      "messagetype": "trigger_TACAN VOLUME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TACAN VOLUME:index",
      "displaytitle": "TACAN VOLUME:index (OnChange)",
      "description": "The volume value of the indexed Tacan receiver on the aircraft.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_TACAN VOLUME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TACAN VOLUME:index",
      "displaytitle": "TACAN VOLUME:index (OnRequest)",
      "description": "The volume value of the indexed Tacan receiver on the aircraft.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_TACAN VOLUME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TAIL ROTOR BLADE PITCH PCT",
      "displaytitle": "TAIL ROTOR BLADE PITCH PCT (Poll)",
      "description": "The pitch position of the tailrotor blades.: Units percent Over 100: settable false",
      "messagetype": "trigger_TAIL ROTOR BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TAIL ROTOR BLADE PITCH PCT",
      "displaytitle": "TAIL ROTOR BLADE PITCH PCT (OnChange)",
      "description": "The pitch position of the tailrotor blades.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_TAIL ROTOR BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TAIL ROTOR BLADE PITCH PCT",
      "displaytitle": "TAIL ROTOR BLADE PITCH PCT (OnRequest)",
      "description": "The pitch position of the tailrotor blades.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_TAIL ROTOR BLADE PITCH PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TAIL ROTOR PEDAL POSITION",
      "displaytitle": "TAIL ROTOR PEDAL POSITION (Poll)",
      "description": "Percent tail rotor pedal deflection.: Units percent Over 100: settable false",
      "messagetype": "trigger_TAIL ROTOR PEDAL POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TAIL ROTOR PEDAL POSITION",
      "displaytitle": "TAIL ROTOR PEDAL POSITION (OnChange)",
      "description": "Percent tail rotor pedal deflection.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_TAIL ROTOR PEDAL POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TAIL ROTOR PEDAL POSITION",
      "displaytitle": "TAIL ROTOR PEDAL POSITION (OnRequest)",
      "description": "Percent tail rotor pedal deflection.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_TAIL ROTOR PEDAL POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TAILHOOK HANDLE",
      "displaytitle": "TAILHOOK HANDLE (Poll)",
      "description": "True if the tailhook handle is engaged.: Units bool: settable false",
      "messagetype": "trigger_TAILHOOK HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TAILHOOK HANDLE",
      "displaytitle": "TAILHOOK HANDLE (OnChange)",
      "description": "True if the tailhook handle is engaged.: Units bool: settable false",
      "messagetype": "trigger_onChange_TAILHOOK HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TAILHOOK HANDLE",
      "displaytitle": "TAILHOOK HANDLE (OnRequest)",
      "description": "True if the tailhook handle is engaged.: Units bool: settable false",
      "messagetype": "trigger_onRequest_TAILHOOK HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TAILHOOK POSITION",
      "displaytitle": "TAILHOOK POSITION (Poll)",
      "description": "Percent tail hook extended.: Units percent Over 100: settable true",
      "messagetype": "trigger_TAILHOOK POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TAILHOOK POSITION",
      "displaytitle": "TAILHOOK POSITION (OnChange)",
      "description": "Percent tail hook extended.: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_TAILHOOK POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TAILHOOK POSITION",
      "displaytitle": "TAILHOOK POSITION (OnRequest)",
      "description": "Percent tail hook extended.: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_TAILHOOK POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TAILWHEEL LOCK ON",
      "displaytitle": "TAILWHEEL LOCK ON (Poll)",
      "description": "True if tailwheel lock applied. This can be set using the TailwheelLock parameter.: Units bool: settable false",
      "messagetype": "trigger_TAILWHEEL LOCK ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TAILWHEEL LOCK ON",
      "displaytitle": "TAILWHEEL LOCK ON (OnChange)",
      "description": "True if tailwheel lock applied. This can be set using the TailwheelLock parameter.: Units bool: settable false",
      "messagetype": "trigger_onChange_TAILWHEEL LOCK ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TAILWHEEL LOCK ON",
      "displaytitle": "TAILWHEEL LOCK ON (OnRequest)",
      "description": "True if tailwheel lock applied. This can be set using the TailwheelLock parameter.: Units bool: settable false",
      "messagetype": "trigger_onRequest_TAILWHEEL LOCK ON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "THROTTLE LOWER LIMIT",
      "displaytitle": "THROTTLE LOWER LIMIT (Poll)",
      "description": "Percent throttle defining lower limit (negative for reverse thrust equipped airplanes): Units percent: settable false",
      "messagetype": "trigger_THROTTLE LOWER LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_THROTTLE LOWER LIMIT",
      "displaytitle": "THROTTLE LOWER LIMIT (OnChange)",
      "description": "Percent throttle defining lower limit (negative for reverse thrust equipped airplanes): Units percent: settable false",
      "messagetype": "trigger_onChange_THROTTLE LOWER LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_THROTTLE LOWER LIMIT",
      "displaytitle": "THROTTLE LOWER LIMIT (OnRequest)",
      "description": "Percent throttle defining lower limit (negative for reverse thrust equipped airplanes): Units percent: settable false",
      "messagetype": "trigger_onRequest_THROTTLE LOWER LIMIT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TITLE",
      "displaytitle": "TITLE (Poll)",
      "description": "Title from aircraft.cfg: Units null: settable false",
      "messagetype": "trigger_TITLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TITLE",
      "displaytitle": "TITLE (OnChange)",
      "description": "Title from aircraft.cfg: Units null: settable false",
      "messagetype": "trigger_onChange_TITLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TITLE",
      "displaytitle": "TITLE (OnRequest)",
      "description": "Title from aircraft.cfg: Units null: settable false",
      "messagetype": "trigger_onRequest_TITLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOE BRAKES AVAILABLE",
      "displaytitle": "TOE BRAKES AVAILABLE (Poll)",
      "description": "True if toe brakes are available: Units bool: settable false",
      "messagetype": "trigger_TOE BRAKES AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOE BRAKES AVAILABLE",
      "displaytitle": "TOE BRAKES AVAILABLE (OnChange)",
      "description": "True if toe brakes are available: Units bool: settable false",
      "messagetype": "trigger_onChange_TOE BRAKES AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOE BRAKES AVAILABLE",
      "displaytitle": "TOE BRAKES AVAILABLE (OnRequest)",
      "description": "True if toe brakes are available: Units bool: settable false",
      "messagetype": "trigger_onRequest_TOE BRAKES AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL AIR TEMPERATURE",
      "displaytitle": "TOTAL AIR TEMPERATURE (Poll)",
      "description": "Total air temperature is the air temperature at the front of the aircraft where the ram pressure from the speed of the aircraft is taken into account: Units celsius: settable false",
      "messagetype": "trigger_TOTAL AIR TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOTAL AIR TEMPERATURE",
      "displaytitle": "TOTAL AIR TEMPERATURE (OnChange)",
      "description": "Total air temperature is the air temperature at the front of the aircraft where the ram pressure from the speed of the aircraft is taken into account: Units celsius: settable false",
      "messagetype": "trigger_onChange_TOTAL AIR TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOTAL AIR TEMPERATURE",
      "displaytitle": "TOTAL AIR TEMPERATURE (OnRequest)",
      "description": "Total air temperature is the air temperature at the front of the aircraft where the ram pressure from the speed of the aircraft is taken into account: Units celsius: settable false",
      "messagetype": "trigger_onRequest_TOTAL AIR TEMPERATURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL VELOCITY",
      "displaytitle": "TOTAL VELOCITY (Poll)",
      "description": "Velocity regardless of direction. For example, if a helicopter is ascending vertically at 100 fps, getting this variable will return 100.: Units feet: settable false",
      "messagetype": "trigger_TOTAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOTAL VELOCITY",
      "displaytitle": "TOTAL VELOCITY (OnChange)",
      "description": "Velocity regardless of direction. For example, if a helicopter is ascending vertically at 100 fps, getting this variable will return 100.: Units feet: settable false",
      "messagetype": "trigger_onChange_TOTAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOTAL VELOCITY",
      "displaytitle": "TOTAL VELOCITY (OnRequest)",
      "description": "Velocity regardless of direction. For example, if a helicopter is ascending vertically at 100 fps, getting this variable will return 100.: Units feet: settable false",
      "messagetype": "trigger_onRequest_TOTAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL WEIGHT",
      "displaytitle": "TOTAL WEIGHT (Poll)",
      "description": "Total weight of the aircraft: Units pounds: settable false",
      "messagetype": "trigger_TOTAL WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOTAL WEIGHT",
      "displaytitle": "TOTAL WEIGHT (OnChange)",
      "description": "Total weight of the aircraft: Units pounds: settable false",
      "messagetype": "trigger_onChange_TOTAL WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOTAL WEIGHT",
      "displaytitle": "TOTAL WEIGHT (OnRequest)",
      "description": "Total weight of the aircraft: Units pounds: settable false",
      "messagetype": "trigger_onRequest_TOTAL WEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL WEIGHT CROSS COUPLED MOI",
      "displaytitle": "TOTAL WEIGHT CROSS COUPLED MOI (Poll)",
      "description": "Total weight cross coupled moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_TOTAL WEIGHT CROSS COUPLED MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOTAL WEIGHT CROSS COUPLED MOI",
      "displaytitle": "TOTAL WEIGHT CROSS COUPLED MOI (OnChange)",
      "description": "Total weight cross coupled moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onChange_TOTAL WEIGHT CROSS COUPLED MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOTAL WEIGHT CROSS COUPLED MOI",
      "displaytitle": "TOTAL WEIGHT CROSS COUPLED MOI (OnRequest)",
      "description": "Total weight cross coupled moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onRequest_TOTAL WEIGHT CROSS COUPLED MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL WEIGHT PITCH MOI",
      "displaytitle": "TOTAL WEIGHT PITCH MOI (Poll)",
      "description": "Total weight pitch moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_TOTAL WEIGHT PITCH MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOTAL WEIGHT PITCH MOI",
      "displaytitle": "TOTAL WEIGHT PITCH MOI (OnChange)",
      "description": "Total weight pitch moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onChange_TOTAL WEIGHT PITCH MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOTAL WEIGHT PITCH MOI",
      "displaytitle": "TOTAL WEIGHT PITCH MOI (OnRequest)",
      "description": "Total weight pitch moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onRequest_TOTAL WEIGHT PITCH MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL WEIGHT ROLL MOI",
      "displaytitle": "TOTAL WEIGHT ROLL MOI (Poll)",
      "description": "Total weight roll moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_TOTAL WEIGHT ROLL MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOTAL WEIGHT ROLL MOI",
      "displaytitle": "TOTAL WEIGHT ROLL MOI (OnChange)",
      "description": "Total weight roll moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onChange_TOTAL WEIGHT ROLL MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOTAL WEIGHT ROLL MOI",
      "displaytitle": "TOTAL WEIGHT ROLL MOI (OnRequest)",
      "description": "Total weight roll moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onRequest_TOTAL WEIGHT ROLL MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL WEIGHT YAW MOI",
      "displaytitle": "TOTAL WEIGHT YAW MOI (Poll)",
      "description": "Total weight yaw moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_TOTAL WEIGHT YAW MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOTAL WEIGHT YAW MOI",
      "displaytitle": "TOTAL WEIGHT YAW MOI (OnChange)",
      "description": "Total weight yaw moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onChange_TOTAL WEIGHT YAW MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOTAL WEIGHT YAW MOI",
      "displaytitle": "TOTAL WEIGHT YAW MOI (OnRequest)",
      "description": "Total weight yaw moment of inertia: Units slugs: settable false",
      "messagetype": "trigger_onRequest_TOTAL WEIGHT YAW MOI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL WORLD VELOCITY",
      "displaytitle": "TOTAL WORLD VELOCITY (Poll)",
      "description": "Speed relative to the earths center.: Units feet per second: settable true",
      "messagetype": "trigger_TOTAL WORLD VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOTAL WORLD VELOCITY",
      "displaytitle": "TOTAL WORLD VELOCITY (OnChange)",
      "description": "Speed relative to the earths center.: Units feet per second: settable true",
      "messagetype": "trigger_onChange_TOTAL WORLD VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOTAL WORLD VELOCITY",
      "displaytitle": "TOTAL WORLD VELOCITY (OnRequest)",
      "description": "Speed relative to the earths center.: Units feet per second: settable true",
      "messagetype": "trigger_onRequest_TOTAL WORLD VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOW CONNECTION",
      "displaytitle": "TOW CONNECTION (Poll)",
      "description": "True if a towline is connected to both tow plane and glider: Units bool: settable false",
      "messagetype": "trigger_TOW CONNECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOW CONNECTION",
      "displaytitle": "TOW CONNECTION (OnChange)",
      "description": "True if a towline is connected to both tow plane and glider: Units bool: settable false",
      "messagetype": "trigger_onChange_TOW CONNECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOW CONNECTION",
      "displaytitle": "TOW CONNECTION (OnRequest)",
      "description": "True if a towline is connected to both tow plane and glider: Units bool: settable false",
      "messagetype": "trigger_onRequest_TOW CONNECTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOW RELEASE HANDLE",
      "displaytitle": "TOW RELEASE HANDLE (Poll)",
      "description": "Position of tow release handle. 100 is fully deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_TOW RELEASE HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TOW RELEASE HANDLE",
      "displaytitle": "TOW RELEASE HANDLE (OnChange)",
      "description": "Position of tow release handle. 100 is fully deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_TOW RELEASE HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TOW RELEASE HANDLE",
      "displaytitle": "TOW RELEASE HANDLE (OnRequest)",
      "description": "Position of tow release handle. 100 is fully deployed.: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_TOW RELEASE HANDLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRACK IR ENABLE",
      "displaytitle": "TRACK IR ENABLE (Poll)",
      "description": "Returns true if Track IR is enabled or not.: Units bool: settable true",
      "messagetype": "trigger_TRACK IR ENABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRACK IR ENABLE",
      "displaytitle": "TRACK IR ENABLE (OnChange)",
      "description": "Returns true if Track IR is enabled or not.: Units bool: settable true",
      "messagetype": "trigger_onChange_TRACK IR ENABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRACK IR ENABLE",
      "displaytitle": "TRACK IR ENABLE (OnRequest)",
      "description": "Returns true if Track IR is enabled or not.: Units bool: settable true",
      "messagetype": "trigger_onRequest_TRACK IR ENABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS LEFT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS LEFT ANGLE (Poll)",
      "description": "Angle left trailing edge flap extended. Use TRAILING_EDGE_FLAPS_LEFT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_TRAILING EDGE FLAPS LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRAILING EDGE FLAPS LEFT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS LEFT ANGLE (OnChange)",
      "description": "Angle left trailing edge flap extended. Use TRAILING_EDGE_FLAPS_LEFT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_onChange_TRAILING EDGE FLAPS LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRAILING EDGE FLAPS LEFT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS LEFT ANGLE (OnRequest)",
      "description": "Angle left trailing edge flap extended. Use TRAILING_EDGE_FLAPS_LEFT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_onRequest_TRAILING EDGE FLAPS LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS LEFT INDEX",
      "displaytitle": "TRAILING EDGE FLAPS LEFT INDEX (Poll)",
      "description": "Index of left trailing edge flap position: Units number: settable false",
      "messagetype": "trigger_TRAILING EDGE FLAPS LEFT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRAILING EDGE FLAPS LEFT INDEX",
      "displaytitle": "TRAILING EDGE FLAPS LEFT INDEX (OnChange)",
      "description": "Index of left trailing edge flap position: Units number: settable false",
      "messagetype": "trigger_onChange_TRAILING EDGE FLAPS LEFT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRAILING EDGE FLAPS LEFT INDEX",
      "displaytitle": "TRAILING EDGE FLAPS LEFT INDEX (OnRequest)",
      "description": "Index of left trailing edge flap position: Units number: settable false",
      "messagetype": "trigger_onRequest_TRAILING EDGE FLAPS LEFT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS LEFT PERCENT",
      "displaytitle": "TRAILING EDGE FLAPS LEFT PERCENT (Poll)",
      "description": "Percent left trailing edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_TRAILING EDGE FLAPS LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRAILING EDGE FLAPS LEFT PERCENT",
      "displaytitle": "TRAILING EDGE FLAPS LEFT PERCENT (OnChange)",
      "description": "Percent left trailing edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_TRAILING EDGE FLAPS LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRAILING EDGE FLAPS LEFT PERCENT",
      "displaytitle": "TRAILING EDGE FLAPS LEFT PERCENT (OnRequest)",
      "description": "Percent left trailing edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_TRAILING EDGE FLAPS LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS RIGHT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT ANGLE (Poll)",
      "description": "Angle right trailing edge flap extended. Use TRAILING_EDGE_FLAPS_RIGHT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_TRAILING EDGE FLAPS RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRAILING EDGE FLAPS RIGHT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT ANGLE (OnChange)",
      "description": "Angle right trailing edge flap extended. Use TRAILING_EDGE_FLAPS_RIGHT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_onChange_TRAILING EDGE FLAPS RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRAILING EDGE FLAPS RIGHT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT ANGLE (OnRequest)",
      "description": "Angle right trailing edge flap extended. Use TRAILING_EDGE_FLAPS_RIGHT_PERCENT to set a value: Units radians: settable false",
      "messagetype": "trigger_onRequest_TRAILING EDGE FLAPS RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS RIGHT INDEX",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT INDEX (Poll)",
      "description": "Index of right trailing edge flap position: Units number: settable false",
      "messagetype": "trigger_TRAILING EDGE FLAPS RIGHT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRAILING EDGE FLAPS RIGHT INDEX",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT INDEX (OnChange)",
      "description": "Index of right trailing edge flap position: Units number: settable false",
      "messagetype": "trigger_onChange_TRAILING EDGE FLAPS RIGHT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRAILING EDGE FLAPS RIGHT INDEX",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT INDEX (OnRequest)",
      "description": "Index of right trailing edge flap position: Units number: settable false",
      "messagetype": "trigger_onRequest_TRAILING EDGE FLAPS RIGHT INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS RIGHT PERCENT",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT PERCENT (Poll)",
      "description": "Percent right trailing edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_TRAILING EDGE FLAPS RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRAILING EDGE FLAPS RIGHT PERCENT",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT PERCENT (OnChange)",
      "description": "Percent right trailing edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_TRAILING EDGE FLAPS RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRAILING EDGE FLAPS RIGHT PERCENT",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT PERCENT (OnRequest)",
      "description": "Percent right trailing edge flap extended: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_TRAILING EDGE FLAPS RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS0 LEFT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS0 LEFT ANGLE (Poll)",
      "description": "TESTING: Units radians: settable false",
      "messagetype": "trigger_TRAILING EDGE FLAPS0 LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRAILING EDGE FLAPS0 LEFT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS0 LEFT ANGLE (OnChange)",
      "description": "TESTING: Units radians: settable false",
      "messagetype": "trigger_onChange_TRAILING EDGE FLAPS0 LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRAILING EDGE FLAPS0 LEFT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS0 LEFT ANGLE (OnRequest)",
      "description": "TESTING: Units radians: settable false",
      "messagetype": "trigger_onRequest_TRAILING EDGE FLAPS0 LEFT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS0 RIGHT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS0 RIGHT ANGLE (Poll)",
      "description": "TESTING: Units radians: settable false",
      "messagetype": "trigger_TRAILING EDGE FLAPS0 RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRAILING EDGE FLAPS0 RIGHT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS0 RIGHT ANGLE (OnChange)",
      "description": "TESTING: Units radians: settable false",
      "messagetype": "trigger_onChange_TRAILING EDGE FLAPS0 RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRAILING EDGE FLAPS0 RIGHT ANGLE",
      "displaytitle": "TRAILING EDGE FLAPS0 RIGHT ANGLE (OnRequest)",
      "description": "TESTING: Units radians: settable false",
      "messagetype": "trigger_onRequest_TRAILING EDGE FLAPS0 RIGHT ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRANSPONDER AVAILABLE",
      "displaytitle": "TRANSPONDER AVAILABLE (Poll)",
      "description": "True if a transponder is available.: Units bool: settable false",
      "messagetype": "trigger_TRANSPONDER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRANSPONDER AVAILABLE",
      "displaytitle": "TRANSPONDER AVAILABLE (OnChange)",
      "description": "True if a transponder is available.: Units bool: settable false",
      "messagetype": "trigger_onChange_TRANSPONDER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRANSPONDER AVAILABLE",
      "displaytitle": "TRANSPONDER AVAILABLE (OnRequest)",
      "description": "True if a transponder is available.: Units bool: settable false",
      "messagetype": "trigger_onRequest_TRANSPONDER AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRANSPONDER CODE:index",
      "displaytitle": "TRANSPONDER CODE:index (Poll)",
      "description": "4-digit code.: Units number: settable false",
      "messagetype": "trigger_TRANSPONDER CODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TRANSPONDER CODE:index",
      "displaytitle": "TRANSPONDER CODE:index (OnChange)",
      "description": "4-digit code.: Units number: settable false",
      "messagetype": "trigger_onChange_TRANSPONDER CODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TRANSPONDER CODE:index",
      "displaytitle": "TRANSPONDER CODE:index (OnRequest)",
      "description": "4-digit code.: Units number: settable false",
      "messagetype": "trigger_onRequest_TRANSPONDER CODE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TRANSPONDER IDENT",
      "displaytitle": "TRANSPONDER IDENT (Poll)",
      "description": "This can set the Ident transponder using the KEY_XPNDR_IDENT_SET, KEY_XPNDR_IDENT_TOGGLE, KEY_XPNDR_IDENT_ON or KEY_XPNDR_IDENT_OFF Event IDs (see XPNDR (Transponder) section for more information). When set to true, it will automatically turn false after 18 seconds.: Units bool: settable true",
      "messagetype": "trigger_TRANSPONDER IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRANSPONDER IDENT",
      "displaytitle": "TRANSPONDER IDENT (OnChange)",
      "description": "This can set the Ident transponder using the KEY_XPNDR_IDENT_SET, KEY_XPNDR_IDENT_TOGGLE, KEY_XPNDR_IDENT_ON or KEY_XPNDR_IDENT_OFF Event IDs (see XPNDR (Transponder) section for more information). When set to true, it will automatically turn false after 18 seconds.: Units bool: settable true",
      "messagetype": "trigger_onChange_TRANSPONDER IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRANSPONDER IDENT",
      "displaytitle": "TRANSPONDER IDENT (OnRequest)",
      "description": "This can set the Ident transponder using the KEY_XPNDR_IDENT_SET, KEY_XPNDR_IDENT_TOGGLE, KEY_XPNDR_IDENT_ON or KEY_XPNDR_IDENT_OFF Event IDs (see XPNDR (Transponder) section for more information). When set to true, it will automatically turn false after 18 seconds.: Units bool: settable true",
      "messagetype": "trigger_onRequest_TRANSPONDER IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRANSPONDER STATE",
      "displaytitle": "TRANSPONDER STATE (Poll)",
      "description": "Transponder State.: Units enum: settable true",
      "messagetype": "trigger_TRANSPONDER STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRANSPONDER STATE",
      "displaytitle": "TRANSPONDER STATE (OnChange)",
      "description": "Transponder State.: Units enum: settable true",
      "messagetype": "trigger_onChange_TRANSPONDER STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRANSPONDER STATE",
      "displaytitle": "TRANSPONDER STATE (OnRequest)",
      "description": "Transponder State.: Units enum: settable true",
      "messagetype": "trigger_onRequest_TRANSPONDER STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRUE AIRSPEED SELECTED",
      "displaytitle": "TRUE AIRSPEED SELECTED (Poll)",
      "description": "True if True Airspeed has been selected.: Units bool: settable true",
      "messagetype": "trigger_TRUE AIRSPEED SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TRUE AIRSPEED SELECTED",
      "displaytitle": "TRUE AIRSPEED SELECTED (OnChange)",
      "description": "True if True Airspeed has been selected.: Units bool: settable true",
      "messagetype": "trigger_onChange_TRUE AIRSPEED SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TRUE AIRSPEED SELECTED",
      "displaytitle": "TRUE AIRSPEED SELECTED (OnRequest)",
      "description": "True if True Airspeed has been selected.: Units bool: settable true",
      "messagetype": "trigger_onRequest_TRUE AIRSPEED SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TURB ENG AFTERBURNER PCT ACTIVE:index",
      "displaytitle": "TURB ENG AFTERBURNER PCT ACTIVE:index (Poll)",
      "description": "The percentage that the afterburner is running at: Units percent Over 100: settable false",
      "messagetype": "trigger_TURB ENG AFTERBURNER PCT ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG AFTERBURNER PCT ACTIVE:index",
      "displaytitle": "TURB ENG AFTERBURNER PCT ACTIVE:index (OnChange)",
      "description": "The percentage that the afterburner is running at: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_TURB ENG AFTERBURNER PCT ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG AFTERBURNER PCT ACTIVE:index",
      "displaytitle": "TURB ENG AFTERBURNER PCT ACTIVE:index (OnRequest)",
      "description": "The percentage that the afterburner is running at: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_TURB ENG AFTERBURNER PCT ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG AFTERBURNER STAGE ACTIVE:index",
      "displaytitle": "TURB ENG AFTERBURNER STAGE ACTIVE:index (Poll)",
      "description": "The stage of the afterburner, or 0 if the afterburner is not active: Units number: settable false",
      "messagetype": "trigger_TURB ENG AFTERBURNER STAGE ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG AFTERBURNER STAGE ACTIVE:index",
      "displaytitle": "TURB ENG AFTERBURNER STAGE ACTIVE:index (OnChange)",
      "description": "The stage of the afterburner, or 0 if the afterburner is not active: Units number: settable false",
      "messagetype": "trigger_onChange_TURB ENG AFTERBURNER STAGE ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG AFTERBURNER STAGE ACTIVE:index",
      "displaytitle": "TURB ENG AFTERBURNER STAGE ACTIVE:index (OnRequest)",
      "description": "The stage of the afterburner, or 0 if the afterburner is not active: Units number: settable false",
      "messagetype": "trigger_onRequest_TURB ENG AFTERBURNER STAGE ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG AFTERBURNER:index",
      "displaytitle": "TURB ENG AFTERBURNER:index (Poll)",
      "description": "Afterburner state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_TURB ENG AFTERBURNER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG AFTERBURNER:index",
      "displaytitle": "TURB ENG AFTERBURNER:index (OnChange)",
      "description": "Afterburner state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_TURB ENG AFTERBURNER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG AFTERBURNER:index",
      "displaytitle": "TURB ENG AFTERBURNER:index (OnRequest)",
      "description": "Afterburner state for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_TURB ENG AFTERBURNER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG BLEED AIR:index",
      "displaytitle": "TURB ENG BLEED AIR:index (Poll)",
      "description": "Bleed air pressure for the indexed engine: Units pounds: settable false",
      "messagetype": "trigger_TURB ENG BLEED AIR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG BLEED AIR:index",
      "displaytitle": "TURB ENG BLEED AIR:index (OnChange)",
      "description": "Bleed air pressure for the indexed engine: Units pounds: settable false",
      "messagetype": "trigger_onChange_TURB ENG BLEED AIR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG BLEED AIR:index",
      "displaytitle": "TURB ENG BLEED AIR:index (OnRequest)",
      "description": "Bleed air pressure for the indexed engine: Units pounds: settable false",
      "messagetype": "trigger_onRequest_TURB ENG BLEED AIR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG COMMANDED N1:index",
      "displaytitle": "TURB ENG COMMANDED N1:index (Poll)",
      "description": " Effective commanded N1 for the indexed turbine engine: Units percent: settable true",
      "messagetype": "trigger_TURB ENG COMMANDED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG COMMANDED N1:index",
      "displaytitle": "TURB ENG COMMANDED N1:index (OnChange)",
      "description": " Effective commanded N1 for the indexed turbine engine: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG COMMANDED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG COMMANDED N1:index",
      "displaytitle": "TURB ENG COMMANDED N1:index (OnRequest)",
      "description": " Effective commanded N1 for the indexed turbine engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG COMMANDED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG CONDITION LEVER POSITION:index",
      "displaytitle": "TURB ENG CONDITION LEVER POSITION:index (Poll)",
      "description": " See documentation: Units enum: settable true",
      "messagetype": "trigger_TURB ENG CONDITION LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG CONDITION LEVER POSITION:index",
      "displaytitle": "TURB ENG CONDITION LEVER POSITION:index (OnChange)",
      "description": " See documentation: Units enum: settable true",
      "messagetype": "trigger_onChange_TURB ENG CONDITION LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG CONDITION LEVER POSITION:index",
      "displaytitle": "TURB ENG CONDITION LEVER POSITION:index (OnRequest)",
      "description": " See documentation: Units enum: settable true",
      "messagetype": "trigger_onRequest_TURB ENG CONDITION LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG CORRECTED FF:index",
      "displaytitle": "TURB ENG CORRECTED FF:index (Poll)",
      "description": "Corrected fuel flow for the indexed engine: Units pounds per hour: settable true",
      "messagetype": "trigger_TURB ENG CORRECTED FF:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG CORRECTED FF:index",
      "displaytitle": "TURB ENG CORRECTED FF:index (OnChange)",
      "description": "Corrected fuel flow for the indexed engine: Units pounds per hour: settable true",
      "messagetype": "trigger_onChange_TURB ENG CORRECTED FF:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG CORRECTED FF:index",
      "displaytitle": "TURB ENG CORRECTED FF:index (OnRequest)",
      "description": "Corrected fuel flow for the indexed engine: Units pounds per hour: settable true",
      "messagetype": "trigger_onRequest_TURB ENG CORRECTED FF:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG CORRECTED N1:index",
      "displaytitle": "TURB ENG CORRECTED N1:index (Poll)",
      "description": "The indexed turbine engine corrected N1: Units percent: settable true",
      "messagetype": "trigger_TURB ENG CORRECTED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG CORRECTED N1:index",
      "displaytitle": "TURB ENG CORRECTED N1:index (OnChange)",
      "description": "The indexed turbine engine corrected N1: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG CORRECTED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG CORRECTED N1:index",
      "displaytitle": "TURB ENG CORRECTED N1:index (OnRequest)",
      "description": "The indexed turbine engine corrected N1: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG CORRECTED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG CORRECTED N2:index",
      "displaytitle": "TURB ENG CORRECTED N2:index (Poll)",
      "description": "The indexed turbine engine corrected N2: Units percent: settable true",
      "messagetype": "trigger_TURB ENG CORRECTED N2:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG CORRECTED N2:index",
      "displaytitle": "TURB ENG CORRECTED N2:index (OnChange)",
      "description": "The indexed turbine engine corrected N2: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG CORRECTED N2:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG CORRECTED N2:index",
      "displaytitle": "TURB ENG CORRECTED N2:index (OnRequest)",
      "description": "The indexed turbine engine corrected N2: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG CORRECTED N2:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG FREE TURBINE TORQUE:index",
      "displaytitle": "TURB ENG FREE TURBINE TORQUE:index (Poll)",
      "description": "The amount of free torque for the indexed turbine engine: Units foot pound: settable true",
      "messagetype": "trigger_TURB ENG FREE TURBINE TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG FREE TURBINE TORQUE:index",
      "displaytitle": "TURB ENG FREE TURBINE TORQUE:index (OnChange)",
      "description": "The amount of free torque for the indexed turbine engine: Units foot pound: settable true",
      "messagetype": "trigger_onChange_TURB ENG FREE TURBINE TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG FREE TURBINE TORQUE:index",
      "displaytitle": "TURB ENG FREE TURBINE TORQUE:index (OnRequest)",
      "description": "The amount of free torque for the indexed turbine engine: Units foot pound: settable true",
      "messagetype": "trigger_onRequest_TURB ENG FREE TURBINE TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG FUEL AVAILABLE:index",
      "displaytitle": "TURB ENG FUEL AVAILABLE:index (Poll)",
      "description": "True if fuel is available for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_TURB ENG FUEL AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG FUEL AVAILABLE:index",
      "displaytitle": "TURB ENG FUEL AVAILABLE:index (OnChange)",
      "description": "True if fuel is available for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onChange_TURB ENG FUEL AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG FUEL AVAILABLE:index",
      "displaytitle": "TURB ENG FUEL AVAILABLE:index (OnRequest)",
      "description": "True if fuel is available for the indexed engine: Units bool: settable false",
      "messagetype": "trigger_onRequest_TURB ENG FUEL AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG FUEL EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG FUEL EFFICIENCY LOSS:index (Poll)",
      "description": "This is used to control the fuel efficiency loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_TURB ENG FUEL EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG FUEL EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG FUEL EFFICIENCY LOSS:index (OnChange)",
      "description": "This is used to control the fuel efficiency loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG FUEL EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG FUEL EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG FUEL EFFICIENCY LOSS:index (OnRequest)",
      "description": "This is used to control the fuel efficiency loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG FUEL EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG FUEL FLOW PPH:index",
      "displaytitle": "TURB ENG FUEL FLOW PPH:index (Poll)",
      "description": "The indexed engine fuel flow rate: Units pounds per hour: settable false",
      "messagetype": "trigger_TURB ENG FUEL FLOW PPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG FUEL FLOW PPH:index",
      "displaytitle": "TURB ENG FUEL FLOW PPH:index (OnChange)",
      "description": "The indexed engine fuel flow rate: Units pounds per hour: settable false",
      "messagetype": "trigger_onChange_TURB ENG FUEL FLOW PPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG FUEL FLOW PPH:index",
      "displaytitle": "TURB ENG FUEL FLOW PPH:index (OnRequest)",
      "description": "The indexed engine fuel flow rate: Units pounds per hour: settable false",
      "messagetype": "trigger_onRequest_TURB ENG FUEL FLOW PPH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG HIGH IDLE:index",
      "displaytitle": "TURB ENG HIGH IDLE:index (Poll)",
      "description": "Retrieves the high idle N1 value to be reached by the the indexed turboprop engine with throttle in idle position and condition lever in high idle position (condition lever position can be checked or set using the TURB_ENG_CONDITION_LEVER_POSITION SimVar): Units percent: settable false",
      "messagetype": "trigger_TURB ENG HIGH IDLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG HIGH IDLE:index",
      "displaytitle": "TURB ENG HIGH IDLE:index (OnChange)",
      "description": "Retrieves the high idle N1 value to be reached by the the indexed turboprop engine with throttle in idle position and condition lever in high idle position (condition lever position can be checked or set using the TURB_ENG_CONDITION_LEVER_POSITION SimVar): Units percent: settable false",
      "messagetype": "trigger_onChange_TURB ENG HIGH IDLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG HIGH IDLE:index",
      "displaytitle": "TURB ENG HIGH IDLE:index (OnRequest)",
      "description": "Retrieves the high idle N1 value to be reached by the the indexed turboprop engine with throttle in idle position and condition lever in high idle position (condition lever position can be checked or set using the TURB_ENG_CONDITION_LEVER_POSITION SimVar): Units percent: settable false",
      "messagetype": "trigger_onRequest_TURB ENG HIGH IDLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG IGNITION SWITCH EX1:index",
      "displaytitle": "TURB ENG IGNITION SWITCH EX1:index (Poll)",
      "description": "Position of the the indexed turbine engine Ignition Switch. Similar to TURB_ENG_IGNITION_SWITCH but differentiates between ON and AUTO: Units enum: settable false",
      "messagetype": "trigger_TURB ENG IGNITION SWITCH EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG IGNITION SWITCH EX1:index",
      "displaytitle": "TURB ENG IGNITION SWITCH EX1:index (OnChange)",
      "description": "Position of the the indexed turbine engine Ignition Switch. Similar to TURB_ENG_IGNITION_SWITCH but differentiates between ON and AUTO: Units enum: settable false",
      "messagetype": "trigger_onChange_TURB ENG IGNITION SWITCH EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG IGNITION SWITCH EX1:index",
      "displaytitle": "TURB ENG IGNITION SWITCH EX1:index (OnRequest)",
      "description": "Position of the the indexed turbine engine Ignition Switch. Similar to TURB_ENG_IGNITION_SWITCH but differentiates between ON and AUTO: Units enum: settable false",
      "messagetype": "trigger_onRequest_TURB ENG IGNITION SWITCH EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG IGNITION SWITCH:index",
      "displaytitle": "TURB ENG IGNITION SWITCH:index (Poll)",
      "description": "True if the the indexed turbine engine ignition switch is on: Units bool: settable false",
      "messagetype": "trigger_TURB ENG IGNITION SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG IGNITION SWITCH:index",
      "displaytitle": "TURB ENG IGNITION SWITCH:index (OnChange)",
      "description": "True if the the indexed turbine engine ignition switch is on: Units bool: settable false",
      "messagetype": "trigger_onChange_TURB ENG IGNITION SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG IGNITION SWITCH:index",
      "displaytitle": "TURB ENG IGNITION SWITCH:index (OnRequest)",
      "description": "True if the the indexed turbine engine ignition switch is on: Units bool: settable false",
      "messagetype": "trigger_onRequest_TURB ENG IGNITION SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG IS IGNITING:index",
      "displaytitle": "TURB ENG IS IGNITING:index (Poll)",
      "description": "Whether or not the ignition system is currently running for the indexed engine. Depends on TURB_ENG_IGNITION_SWITCH_EX1 Enum, the cfg var ignition_auto_type and current state of the plane: Units bool: settable false",
      "messagetype": "trigger_TURB ENG IS IGNITING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG IS IGNITING:index",
      "displaytitle": "TURB ENG IS IGNITING:index (OnChange)",
      "description": "Whether or not the ignition system is currently running for the indexed engine. Depends on TURB_ENG_IGNITION_SWITCH_EX1 Enum, the cfg var ignition_auto_type and current state of the plane: Units bool: settable false",
      "messagetype": "trigger_onChange_TURB ENG IS IGNITING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG IS IGNITING:index",
      "displaytitle": "TURB ENG IS IGNITING:index (OnRequest)",
      "description": "Whether or not the ignition system is currently running for the indexed engine. Depends on TURB_ENG_IGNITION_SWITCH_EX1 Enum, the cfg var ignition_auto_type and current state of the plane: Units bool: settable false",
      "messagetype": "trigger_onRequest_TURB ENG IS IGNITING:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG ITT COOLING EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG ITT COOLING EFFICIENCY LOSS:index (Poll)",
      "description": "This is used to control the ITT cooling efficiency loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_TURB ENG ITT COOLING EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG ITT COOLING EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG ITT COOLING EFFICIENCY LOSS:index (OnChange)",
      "description": "This is used to control the ITT cooling efficiency loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG ITT COOLING EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG ITT COOLING EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG ITT COOLING EFFICIENCY LOSS:index (OnRequest)",
      "description": "This is used to control the ITT cooling efficiency loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG ITT COOLING EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG ITT:index",
      "displaytitle": "TURB ENG ITT:index (Poll)",
      "description": "Retrieve or set the ITT for the indexed engine: Units rankine: settable true",
      "messagetype": "trigger_TURB ENG ITT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG ITT:index",
      "displaytitle": "TURB ENG ITT:index (OnChange)",
      "description": "Retrieve or set the ITT for the indexed engine: Units rankine: settable true",
      "messagetype": "trigger_onChange_TURB ENG ITT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG ITT:index",
      "displaytitle": "TURB ENG ITT:index (OnRequest)",
      "description": "Retrieve or set the ITT for the indexed engine: Units rankine: settable true",
      "messagetype": "trigger_onRequest_TURB ENG ITT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG JET THRUST:index",
      "displaytitle": "TURB ENG JET THRUST:index (Poll)",
      "description": "The indexed engine jet thrust: Units pounds: settable false",
      "messagetype": "trigger_TURB ENG JET THRUST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG JET THRUST:index",
      "displaytitle": "TURB ENG JET THRUST:index (OnChange)",
      "description": "The indexed engine jet thrust: Units pounds: settable false",
      "messagetype": "trigger_onChange_TURB ENG JET THRUST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG JET THRUST:index",
      "displaytitle": "TURB ENG JET THRUST:index (OnRequest)",
      "description": "The indexed engine jet thrust: Units pounds: settable false",
      "messagetype": "trigger_onRequest_TURB ENG JET THRUST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG LOW IDLE:index",
      "displaytitle": "TURB ENG LOW IDLE:index (Poll)",
      "description": "Retrieves the low idle N1 value to be reached by the the indexed turboprop engine with throttle in idle position and condition lever in low idle position (condition lever position can be checked or set using the TURB_ENG_CONDITION_LEVER_POSITION SimVar): Units percent: settable false",
      "messagetype": "trigger_TURB ENG LOW IDLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG LOW IDLE:index",
      "displaytitle": "TURB ENG LOW IDLE:index (OnChange)",
      "description": "Retrieves the low idle N1 value to be reached by the the indexed turboprop engine with throttle in idle position and condition lever in low idle position (condition lever position can be checked or set using the TURB_ENG_CONDITION_LEVER_POSITION SimVar): Units percent: settable false",
      "messagetype": "trigger_onChange_TURB ENG LOW IDLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG LOW IDLE:index",
      "displaytitle": "TURB ENG LOW IDLE:index (OnRequest)",
      "description": "Retrieves the low idle N1 value to be reached by the the indexed turboprop engine with throttle in idle position and condition lever in low idle position (condition lever position can be checked or set using the TURB_ENG_CONDITION_LEVER_POSITION SimVar): Units percent: settable false",
      "messagetype": "trigger_onRequest_TURB ENG LOW IDLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG MASTER STARTER SWITCH",
      "displaytitle": "TURB ENG MASTER STARTER SWITCH (Poll)",
      "description": "True if the turbine engine master starter switch is on, false otherwise: Units bool: settable false",
      "messagetype": "trigger_TURB ENG MASTER STARTER SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG MASTER STARTER SWITCH",
      "displaytitle": "TURB ENG MASTER STARTER SWITCH (OnChange)",
      "description": "True if the turbine engine master starter switch is on, false otherwise: Units bool: settable false",
      "messagetype": "trigger_onChange_TURB ENG MASTER STARTER SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG MASTER STARTER SWITCH",
      "displaytitle": "TURB ENG MASTER STARTER SWITCH (OnRequest)",
      "description": "True if the turbine engine master starter switch is on, false otherwise: Units bool: settable false",
      "messagetype": "trigger_onRequest_TURB ENG MASTER STARTER SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TURB ENG MAX TORQUE PERCENT:index",
      "displaytitle": "TURB ENG MAX TORQUE PERCENT:index (Poll)",
      "description": "Percent of max rated torque for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_TURB ENG MAX TORQUE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG MAX TORQUE PERCENT:index",
      "displaytitle": "TURB ENG MAX TORQUE PERCENT:index (OnChange)",
      "description": "Percent of max rated torque for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG MAX TORQUE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG MAX TORQUE PERCENT:index",
      "displaytitle": "TURB ENG MAX TORQUE PERCENT:index (OnRequest)",
      "description": "Percent of max rated torque for the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG MAX TORQUE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG N1 LOSS:index",
      "displaytitle": "TURB ENG N1 LOSS:index (Poll)",
      "description": "This is used to control the N1 loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_TURB ENG N1 LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG N1 LOSS:index",
      "displaytitle": "TURB ENG N1 LOSS:index (OnChange)",
      "description": "This is used to control the N1 loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG N1 LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG N1 LOSS:index",
      "displaytitle": "TURB ENG N1 LOSS:index (OnRequest)",
      "description": "This is used to control the N1 loss of the indexed engine: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG N1 LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG N1:index",
      "displaytitle": "TURB ENG N1:index (Poll)",
      "description": "The indexed turbine engine N1 value: Units percent: settable true",
      "messagetype": "trigger_TURB ENG N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG N1:index",
      "displaytitle": "TURB ENG N1:index (OnChange)",
      "description": "The indexed turbine engine N1 value: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG N1:index",
      "displaytitle": "TURB ENG N1:index (OnRequest)",
      "description": "The indexed turbine engine N1 value: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG N2:index",
      "displaytitle": "TURB ENG N2:index (Poll)",
      "description": " The indexed turbine engine N2 value: Units percent: settable true",
      "messagetype": "trigger_TURB ENG N2:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG N2:index",
      "displaytitle": "TURB ENG N2:index (OnChange)",
      "description": " The indexed turbine engine N2 value: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG N2:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG N2:index",
      "displaytitle": "TURB ENG N2:index (OnRequest)",
      "description": " The indexed turbine engine N2 value: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG N2:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG NUM TANKS USED:index",
      "displaytitle": "TURB ENG NUM TANKS USED:index (Poll)",
      "description": "Number of tanks currently being used by the indexed engine: Units number: settable false",
      "messagetype": "trigger_TURB ENG NUM TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG NUM TANKS USED:index",
      "displaytitle": "TURB ENG NUM TANKS USED:index (OnChange)",
      "description": "Number of tanks currently being used by the indexed engine: Units number: settable false",
      "messagetype": "trigger_onChange_TURB ENG NUM TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG NUM TANKS USED:index",
      "displaytitle": "TURB ENG NUM TANKS USED:index (OnRequest)",
      "description": "Number of tanks currently being used by the indexed engine: Units number: settable false",
      "messagetype": "trigger_onRequest_TURB ENG NUM TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG PRESSURE RATIO:index",
      "displaytitle": "TURB ENG PRESSURE RATIO:index (Poll)",
      "description": "The indexed engine pressure ratio: Units ratio: settable true",
      "messagetype": "trigger_TURB ENG PRESSURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG PRESSURE RATIO:index",
      "displaytitle": "TURB ENG PRESSURE RATIO:index (OnChange)",
      "description": "The indexed engine pressure ratio: Units ratio: settable true",
      "messagetype": "trigger_onChange_TURB ENG PRESSURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG PRESSURE RATIO:index",
      "displaytitle": "TURB ENG PRESSURE RATIO:index (OnRequest)",
      "description": "The indexed engine pressure ratio: Units ratio: settable true",
      "messagetype": "trigger_onRequest_TURB ENG PRESSURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG PRIMARY NOZZLE PERCENT:index",
      "displaytitle": "TURB ENG PRIMARY NOZZLE PERCENT:index (Poll)",
      "description": "Percent thrust of primary nozzle for the indexed engine: Units percent Over 100: settable false",
      "messagetype": "trigger_TURB ENG PRIMARY NOZZLE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG PRIMARY NOZZLE PERCENT:index",
      "displaytitle": "TURB ENG PRIMARY NOZZLE PERCENT:index (OnChange)",
      "description": "Percent thrust of primary nozzle for the indexed engine: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_TURB ENG PRIMARY NOZZLE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG PRIMARY NOZZLE PERCENT:index",
      "displaytitle": "TURB ENG PRIMARY NOZZLE PERCENT:index (OnRequest)",
      "description": "Percent thrust of primary nozzle for the indexed engine: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_TURB ENG PRIMARY NOZZLE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG REVERSE NOZZLE PERCENT:index",
      "displaytitle": "TURB ENG REVERSE NOZZLE PERCENT:index (Poll)",
      "description": "Percent thrust reverser nozzles deployed for the indexed engine: Units percent: settable false",
      "messagetype": "trigger_TURB ENG REVERSE NOZZLE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG REVERSE NOZZLE PERCENT:index",
      "displaytitle": "TURB ENG REVERSE NOZZLE PERCENT:index (OnChange)",
      "description": "Percent thrust reverser nozzles deployed for the indexed engine: Units percent: settable false",
      "messagetype": "trigger_onChange_TURB ENG REVERSE NOZZLE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG REVERSE NOZZLE PERCENT:index",
      "displaytitle": "TURB ENG REVERSE NOZZLE PERCENT:index (OnRequest)",
      "description": "Percent thrust reverser nozzles deployed for the indexed engine: Units percent: settable false",
      "messagetype": "trigger_onRequest_TURB ENG REVERSE NOZZLE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG TANK SELECTOR:index",
      "displaytitle": "TURB ENG TANK SELECTOR:index (Poll)",
      "description": "Fuel tank selected for the indexed engine. See Fuel Tank Selection for a list of values: Units enum: settable false",
      "messagetype": "trigger_TURB ENG TANK SELECTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG TANK SELECTOR:index",
      "displaytitle": "TURB ENG TANK SELECTOR:index (OnChange)",
      "description": "Fuel tank selected for the indexed engine. See Fuel Tank Selection for a list of values: Units enum: settable false",
      "messagetype": "trigger_onChange_TURB ENG TANK SELECTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG TANK SELECTOR:index",
      "displaytitle": "TURB ENG TANK SELECTOR:index (OnRequest)",
      "description": "Fuel tank selected for the indexed engine. See Fuel Tank Selection for a list of values: Units enum: settable false",
      "messagetype": "trigger_onRequest_TURB ENG TANK SELECTOR:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG TANKS USED:index",
      "displaytitle": "TURB ENG TANKS USED:index (Poll)",
      "description": "Fuel tanks used by the indexed engine: Units mask: settable false",
      "messagetype": "trigger_TURB ENG TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG TANKS USED:index",
      "displaytitle": "TURB ENG TANKS USED:index (OnChange)",
      "description": "Fuel tanks used by the indexed engine: Units mask: settable false",
      "messagetype": "trigger_onChange_TURB ENG TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG TANKS USED:index",
      "displaytitle": "TURB ENG TANKS USED:index (OnRequest)",
      "description": "Fuel tanks used by the indexed engine: Units mask: settable false",
      "messagetype": "trigger_onRequest_TURB ENG TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG THROTTLE COMMANDED N1:index",
      "displaytitle": "TURB ENG THROTTLE COMMANDED N1:index (Poll)",
      "description": " The indexed turbine engine commanded N1 for current throttle position: Units percent: settable true",
      "messagetype": "trigger_TURB ENG THROTTLE COMMANDED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG THROTTLE COMMANDED N1:index",
      "displaytitle": "TURB ENG THROTTLE COMMANDED N1:index (OnChange)",
      "description": " The indexed turbine engine commanded N1 for current throttle position: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG THROTTLE COMMANDED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG THROTTLE COMMANDED N1:index",
      "displaytitle": "TURB ENG THROTTLE COMMANDED N1:index (OnRequest)",
      "description": " The indexed turbine engine commanded N1 for current throttle position: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG THROTTLE COMMANDED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG THRUST EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG THRUST EFFICIENCY LOSS:index (Poll)",
      "description": "This can be used to control the thrust efficiency loss of the indexed engine, where a value of 0 is 100% of available thrust, and 100 is 0% available thrust: Units percent: settable true",
      "messagetype": "trigger_TURB ENG THRUST EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG THRUST EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG THRUST EFFICIENCY LOSS:index (OnChange)",
      "description": "This can be used to control the thrust efficiency loss of the indexed engine, where a value of 0 is 100% of available thrust, and 100 is 0% available thrust: Units percent: settable true",
      "messagetype": "trigger_onChange_TURB ENG THRUST EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG THRUST EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG THRUST EFFICIENCY LOSS:index (OnRequest)",
      "description": "This can be used to control the thrust efficiency loss of the indexed engine, where a value of 0 is 100% of available thrust, and 100 is 0% available thrust: Units percent: settable true",
      "messagetype": "trigger_onRequest_TURB ENG THRUST EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG VIBRATION:index",
      "displaytitle": "TURB ENG VIBRATION:index (Poll)",
      "description": "The indexed turbine engine vibration value: Units number: settable false",
      "messagetype": "trigger_TURB ENG VIBRATION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_TURB ENG VIBRATION:index",
      "displaytitle": "TURB ENG VIBRATION:index (OnChange)",
      "description": "The indexed turbine engine vibration value: Units number: settable false",
      "messagetype": "trigger_onChange_TURB ENG VIBRATION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB ENG VIBRATION:index",
      "displaytitle": "TURB ENG VIBRATION:index (OnRequest)",
      "description": "The indexed turbine engine vibration value: Units number: settable false",
      "messagetype": "trigger_onRequest_TURB ENG VIBRATION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB MAX ITT",
      "displaytitle": "TURB MAX ITT (Poll)",
      "description": "Retrieve the itt_peak_temperature as set in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_TURB MAX ITT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TURB MAX ITT",
      "displaytitle": "TURB MAX ITT (OnChange)",
      "description": "Retrieve the itt_peak_temperature as set in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_onChange_TURB MAX ITT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TURB MAX ITT",
      "displaytitle": "TURB MAX ITT (OnRequest)",
      "description": "Retrieve the itt_peak_temperature as set in the engine.cfg file: Units rankine: settable false",
      "messagetype": "trigger_onRequest_TURB MAX ITT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TURN COORDINATOR BALL",
      "displaytitle": "TURN COORDINATOR BALL (Poll)",
      "description": "Turn coordinator ball position.: Units position 128: settable false",
      "messagetype": "trigger_TURN COORDINATOR BALL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TURN COORDINATOR BALL",
      "displaytitle": "TURN COORDINATOR BALL (OnChange)",
      "description": "Turn coordinator ball position.: Units position 128: settable false",
      "messagetype": "trigger_onChange_TURN COORDINATOR BALL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TURN COORDINATOR BALL",
      "displaytitle": "TURN COORDINATOR BALL (OnRequest)",
      "description": "Turn coordinator ball position.: Units position 128: settable false",
      "messagetype": "trigger_onRequest_TURN COORDINATOR BALL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TURN COORDINATOR BALL INV",
      "displaytitle": "TURN COORDINATOR BALL INV (Poll)",
      "description": "Turn coordinator ball position inverted (upside down).: Units position 128: settable false",
      "messagetype": "trigger_TURN COORDINATOR BALL INV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TURN COORDINATOR BALL INV",
      "displaytitle": "TURN COORDINATOR BALL INV (OnChange)",
      "description": "Turn coordinator ball position inverted (upside down).: Units position 128: settable false",
      "messagetype": "trigger_onChange_TURN COORDINATOR BALL INV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TURN COORDINATOR BALL INV",
      "displaytitle": "TURN COORDINATOR BALL INV (OnRequest)",
      "description": "Turn coordinator ball position inverted (upside down).: Units position 128: settable false",
      "messagetype": "trigger_onRequest_TURN COORDINATOR BALL INV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TURN INDICATOR RATE",
      "displaytitle": "TURN INDICATOR RATE (Poll)",
      "description": "Turn indicator reading.: Units radians per second: settable false",
      "messagetype": "trigger_TURN INDICATOR RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TURN INDICATOR RATE",
      "displaytitle": "TURN INDICATOR RATE (OnChange)",
      "description": "Turn indicator reading.: Units radians per second: settable false",
      "messagetype": "trigger_onChange_TURN INDICATOR RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TURN INDICATOR RATE",
      "displaytitle": "TURN INDICATOR RATE (OnRequest)",
      "description": "Turn indicator reading.: Units radians per second: settable false",
      "messagetype": "trigger_onRequest_TURN INDICATOR RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TURN INDICATOR SWITCH",
      "displaytitle": "TURN INDICATOR SWITCH (Poll)",
      "description": "True if turn indicator switch is on.: Units bool: settable false",
      "messagetype": "trigger_TURN INDICATOR SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TURN INDICATOR SWITCH",
      "displaytitle": "TURN INDICATOR SWITCH (OnChange)",
      "description": "True if turn indicator switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_TURN INDICATOR SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TURN INDICATOR SWITCH",
      "displaytitle": "TURN INDICATOR SWITCH (OnRequest)",
      "description": "True if turn indicator switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_TURN INDICATOR SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TYPICAL DESCENT RATE",
      "displaytitle": "TYPICAL DESCENT RATE (Poll)",
      "description": "the typical (normal) descent rate for the aircraft.: Units feet: settable false",
      "messagetype": "trigger_TYPICAL DESCENT RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_TYPICAL DESCENT RATE",
      "displaytitle": "TYPICAL DESCENT RATE (OnChange)",
      "description": "the typical (normal) descent rate for the aircraft.: Units feet: settable false",
      "messagetype": "trigger_onChange_TYPICAL DESCENT RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_TYPICAL DESCENT RATE",
      "displaytitle": "TYPICAL DESCENT RATE (OnRequest)",
      "description": "the typical (normal) descent rate for the aircraft.: Units feet: settable false",
      "messagetype": "trigger_onRequest_TYPICAL DESCENT RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "USER INPUT ENABLED",
      "displaytitle": "USER INPUT ENABLED (Poll)",
      "description": "Is input allowed from the user.: Units bool: settable true",
      "messagetype": "trigger_USER INPUT ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_USER INPUT ENABLED",
      "displaytitle": "USER INPUT ENABLED (OnChange)",
      "description": "Is input allowed from the user.: Units bool: settable true",
      "messagetype": "trigger_onChange_USER INPUT ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_USER INPUT ENABLED",
      "displaytitle": "USER INPUT ENABLED (OnRequest)",
      "description": "Is input allowed from the user.: Units bool: settable true",
      "messagetype": "trigger_onRequest_USER INPUT ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VARIOMETER MAC CREADY SETTING",
      "displaytitle": "VARIOMETER MAC CREADY SETTING (Poll)",
      "description": "The MacCready setting used to fly an optimal speed between thermals.: Units Meters per second: settable true",
      "messagetype": "trigger_VARIOMETER MAC CREADY SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VARIOMETER MAC CREADY SETTING",
      "displaytitle": "VARIOMETER MAC CREADY SETTING (OnChange)",
      "description": "The MacCready setting used to fly an optimal speed between thermals.: Units Meters per second: settable true",
      "messagetype": "trigger_onChange_VARIOMETER MAC CREADY SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VARIOMETER MAC CREADY SETTING",
      "displaytitle": "VARIOMETER MAC CREADY SETTING (OnRequest)",
      "description": "The MacCready setting used to fly an optimal speed between thermals.: Units Meters per second: settable true",
      "messagetype": "trigger_onRequest_VARIOMETER MAC CREADY SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VARIOMETER NETTO",
      "displaytitle": "VARIOMETER NETTO (Poll)",
      "description": "Variometer rate using Netto (Total Energy - polar sinkRate).: Units feet per second: settable false",
      "messagetype": "trigger_VARIOMETER NETTO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VARIOMETER NETTO",
      "displaytitle": "VARIOMETER NETTO (OnChange)",
      "description": "Variometer rate using Netto (Total Energy - polar sinkRate).: Units feet per second: settable false",
      "messagetype": "trigger_onChange_VARIOMETER NETTO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VARIOMETER NETTO",
      "displaytitle": "VARIOMETER NETTO (OnRequest)",
      "description": "Variometer rate using Netto (Total Energy - polar sinkRate).: Units feet per second: settable false",
      "messagetype": "trigger_onRequest_VARIOMETER NETTO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VARIOMETER RATE",
      "displaytitle": "VARIOMETER RATE (Poll)",
      "description": "The variometer rate.: Units feet per second: settable false",
      "messagetype": "trigger_VARIOMETER RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VARIOMETER RATE",
      "displaytitle": "VARIOMETER RATE (OnChange)",
      "description": "The variometer rate.: Units feet per second: settable false",
      "messagetype": "trigger_onChange_VARIOMETER RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VARIOMETER RATE",
      "displaytitle": "VARIOMETER RATE (OnRequest)",
      "description": "The variometer rate.: Units feet per second: settable false",
      "messagetype": "trigger_onRequest_VARIOMETER RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VARIOMETER SPEED TO FLY",
      "displaytitle": "VARIOMETER SPEED TO FLY (Poll)",
      "description": "Optimal speed to fly between thermals using polar curve and MacCready setting.: Units Kilometers per hour: settable false",
      "messagetype": "trigger_VARIOMETER SPEED TO FLY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VARIOMETER SPEED TO FLY",
      "displaytitle": "VARIOMETER SPEED TO FLY (OnChange)",
      "description": "Optimal speed to fly between thermals using polar curve and MacCready setting.: Units Kilometers per hour: settable false",
      "messagetype": "trigger_onChange_VARIOMETER SPEED TO FLY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VARIOMETER SPEED TO FLY",
      "displaytitle": "VARIOMETER SPEED TO FLY (OnRequest)",
      "description": "Optimal speed to fly between thermals using polar curve and MacCready setting.: Units Kilometers per hour: settable false",
      "messagetype": "trigger_onRequest_VARIOMETER SPEED TO FLY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VARIOMETER SPEED TO FLY GLIDE RATIO",
      "displaytitle": "VARIOMETER SPEED TO FLY GLIDE RATIO (Poll)",
      "description": "The glide ratio at optimal speed to fly.: Units number: settable false",
      "messagetype": "trigger_VARIOMETER SPEED TO FLY GLIDE RATIO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VARIOMETER SPEED TO FLY GLIDE RATIO",
      "displaytitle": "VARIOMETER SPEED TO FLY GLIDE RATIO (OnChange)",
      "description": "The glide ratio at optimal speed to fly.: Units number: settable false",
      "messagetype": "trigger_onChange_VARIOMETER SPEED TO FLY GLIDE RATIO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VARIOMETER SPEED TO FLY GLIDE RATIO",
      "displaytitle": "VARIOMETER SPEED TO FLY GLIDE RATIO (OnRequest)",
      "description": "The glide ratio at optimal speed to fly.: Units number: settable false",
      "messagetype": "trigger_onRequest_VARIOMETER SPEED TO FLY GLIDE RATIO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VARIOMETER SWITCH",
      "displaytitle": "VARIOMETER SWITCH (Poll)",
      "description": "True if the variometer switch is on, false if it is not.: Units bool: settable false",
      "messagetype": "trigger_VARIOMETER SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VARIOMETER SWITCH",
      "displaytitle": "VARIOMETER SWITCH (OnChange)",
      "description": "True if the variometer switch is on, false if it is not.: Units bool: settable false",
      "messagetype": "trigger_onChange_VARIOMETER SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VARIOMETER SWITCH",
      "displaytitle": "VARIOMETER SWITCH (OnRequest)",
      "description": "True if the variometer switch is on, false if it is not.: Units bool: settable false",
      "messagetype": "trigger_onRequest_VARIOMETER SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VARIOMETER TOTAL ENERGY",
      "displaytitle": "VARIOMETER TOTAL ENERGY (Poll)",
      "description": "The variometer rate using total energy.: Units feet per second: settable false",
      "messagetype": "trigger_VARIOMETER TOTAL ENERGY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VARIOMETER TOTAL ENERGY",
      "displaytitle": "VARIOMETER TOTAL ENERGY (OnChange)",
      "description": "The variometer rate using total energy.: Units feet per second: settable false",
      "messagetype": "trigger_onChange_VARIOMETER TOTAL ENERGY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VARIOMETER TOTAL ENERGY",
      "displaytitle": "VARIOMETER TOTAL ENERGY (OnRequest)",
      "description": "The variometer rate using total energy.: Units feet per second: settable false",
      "messagetype": "trigger_onRequest_VARIOMETER TOTAL ENERGY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY BODY X",
      "displaytitle": "VELOCITY BODY X (Poll)",
      "description": "True lateral speed, relative to aircraft X axis: Units feet: settable true",
      "messagetype": "trigger_VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VELOCITY BODY X",
      "displaytitle": "VELOCITY BODY X (OnChange)",
      "description": "True lateral speed, relative to aircraft X axis: Units feet: settable true",
      "messagetype": "trigger_onChange_VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VELOCITY BODY X",
      "displaytitle": "VELOCITY BODY X (OnRequest)",
      "description": "True lateral speed, relative to aircraft X axis: Units feet: settable true",
      "messagetype": "trigger_onRequest_VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY BODY Y",
      "displaytitle": "VELOCITY BODY Y (Poll)",
      "description": "True vertical speed, relative to aircraft Y axis: Units feet: settable true",
      "messagetype": "trigger_VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VELOCITY BODY Y",
      "displaytitle": "VELOCITY BODY Y (OnChange)",
      "description": "True vertical speed, relative to aircraft Y axis: Units feet: settable true",
      "messagetype": "trigger_onChange_VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VELOCITY BODY Y",
      "displaytitle": "VELOCITY BODY Y (OnRequest)",
      "description": "True vertical speed, relative to aircraft Y axis: Units feet: settable true",
      "messagetype": "trigger_onRequest_VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY BODY Z",
      "displaytitle": "VELOCITY BODY Z (Poll)",
      "description": "True longitudinal speed, relative to aircraft Z axis: Units feet: settable true",
      "messagetype": "trigger_VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VELOCITY BODY Z",
      "displaytitle": "VELOCITY BODY Z (OnChange)",
      "description": "True longitudinal speed, relative to aircraft Z axis: Units feet: settable true",
      "messagetype": "trigger_onChange_VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VELOCITY BODY Z",
      "displaytitle": "VELOCITY BODY Z (OnRequest)",
      "description": "True longitudinal speed, relative to aircraft Z axis: Units feet: settable true",
      "messagetype": "trigger_onRequest_VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY WORLD X",
      "displaytitle": "VELOCITY WORLD X (Poll)",
      "description": "Speed relative to earth, in East/West direction.: Units feet per second: settable true",
      "messagetype": "trigger_VELOCITY WORLD X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VELOCITY WORLD X",
      "displaytitle": "VELOCITY WORLD X (OnChange)",
      "description": "Speed relative to earth, in East/West direction.: Units feet per second: settable true",
      "messagetype": "trigger_onChange_VELOCITY WORLD X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VELOCITY WORLD X",
      "displaytitle": "VELOCITY WORLD X (OnRequest)",
      "description": "Speed relative to earth, in East/West direction.: Units feet per second: settable true",
      "messagetype": "trigger_onRequest_VELOCITY WORLD X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY WORLD Y",
      "displaytitle": "VELOCITY WORLD Y (Poll)",
      "description": "Speed relative to earth, in vertical direction.: Units feet per second: settable true",
      "messagetype": "trigger_VELOCITY WORLD Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VELOCITY WORLD Y",
      "displaytitle": "VELOCITY WORLD Y (OnChange)",
      "description": "Speed relative to earth, in vertical direction.: Units feet per second: settable true",
      "messagetype": "trigger_onChange_VELOCITY WORLD Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VELOCITY WORLD Y",
      "displaytitle": "VELOCITY WORLD Y (OnRequest)",
      "description": "Speed relative to earth, in vertical direction.: Units feet per second: settable true",
      "messagetype": "trigger_onRequest_VELOCITY WORLD Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY WORLD Z",
      "displaytitle": "VELOCITY WORLD Z (Poll)",
      "description": "Speed relative to earth, in North/South direction.: Units feet per second: settable true",
      "messagetype": "trigger_VELOCITY WORLD Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VELOCITY WORLD Z",
      "displaytitle": "VELOCITY WORLD Z (OnChange)",
      "description": "Speed relative to earth, in North/South direction.: Units feet per second: settable true",
      "messagetype": "trigger_onChange_VELOCITY WORLD Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VELOCITY WORLD Z",
      "displaytitle": "VELOCITY WORLD Z (OnRequest)",
      "description": "Speed relative to earth, in North/South direction.: Units feet per second: settable true",
      "messagetype": "trigger_onRequest_VELOCITY WORLD Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VERTICAL SPEED",
      "displaytitle": "VERTICAL SPEED (Poll)",
      "description": "The current indicated vertical speed for the aircraft: Units feet: settable true",
      "messagetype": "trigger_VERTICAL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VERTICAL SPEED",
      "displaytitle": "VERTICAL SPEED (OnChange)",
      "description": "The current indicated vertical speed for the aircraft: Units feet: settable true",
      "messagetype": "trigger_onChange_VERTICAL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VERTICAL SPEED",
      "displaytitle": "VERTICAL SPEED (OnRequest)",
      "description": "The current indicated vertical speed for the aircraft: Units feet: settable true",
      "messagetype": "trigger_onRequest_VERTICAL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VISUAL MODEL RADIUS",
      "displaytitle": "VISUAL MODEL RADIUS (Poll)",
      "description": "Model radius.: Units meters: settable false",
      "messagetype": "trigger_VISUAL MODEL RADIUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_VISUAL MODEL RADIUS",
      "displaytitle": "VISUAL MODEL RADIUS (OnChange)",
      "description": "Model radius.: Units meters: settable false",
      "messagetype": "trigger_onChange_VISUAL MODEL RADIUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_VISUAL MODEL RADIUS",
      "displaytitle": "VISUAL MODEL RADIUS (OnRequest)",
      "description": "Model radius.: Units meters: settable false",
      "messagetype": "trigger_onRequest_VISUAL MODEL RADIUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WAGON BACK LINK LENGTH",
      "displaytitle": "WAGON BACK LINK LENGTH (Poll)",
      "description": "The length of the link at the back of the vehicle used to attach a wagon behind.: Units meters: settable false",
      "messagetype": "trigger_WAGON BACK LINK LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WAGON BACK LINK LENGTH",
      "displaytitle": "WAGON BACK LINK LENGTH (OnChange)",
      "description": "The length of the link at the back of the vehicle used to attach a wagon behind.: Units meters: settable false",
      "messagetype": "trigger_onChange_WAGON BACK LINK LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WAGON BACK LINK LENGTH",
      "displaytitle": "WAGON BACK LINK LENGTH (OnRequest)",
      "description": "The length of the link at the back of the vehicle used to attach a wagon behind.: Units meters: settable false",
      "messagetype": "trigger_onRequest_WAGON BACK LINK LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WAGON BACK LINK ORIENTATION",
      "displaytitle": "WAGON BACK LINK ORIENTATION (Poll)",
      "description": "The current orientation of the link at the back of the vehicle used to attach a wagon behind.: Units degrees: settable false",
      "messagetype": "trigger_WAGON BACK LINK ORIENTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WAGON BACK LINK ORIENTATION",
      "displaytitle": "WAGON BACK LINK ORIENTATION (OnChange)",
      "description": "The current orientation of the link at the back of the vehicle used to attach a wagon behind.: Units degrees: settable false",
      "messagetype": "trigger_onChange_WAGON BACK LINK ORIENTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WAGON BACK LINK ORIENTATION",
      "displaytitle": "WAGON BACK LINK ORIENTATION (OnRequest)",
      "description": "The current orientation of the link at the back of the vehicle used to attach a wagon behind.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_WAGON BACK LINK ORIENTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WAGON BACK LINK START POSZ",
      "displaytitle": "WAGON BACK LINK START POSZ (Poll)",
      "description": "The \"Z\" axis position of the start of the link at the back of the vehicle used to attach a wagon behind, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_WAGON BACK LINK START POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WAGON BACK LINK START POSZ",
      "displaytitle": "WAGON BACK LINK START POSZ (OnChange)",
      "description": "The \"Z\" axis position of the start of the link at the back of the vehicle used to attach a wagon behind, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_WAGON BACK LINK START POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WAGON BACK LINK START POSZ",
      "displaytitle": "WAGON BACK LINK START POSZ (OnRequest)",
      "description": "The \"Z\" axis position of the start of the link at the back of the vehicle used to attach a wagon behind, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_WAGON BACK LINK START POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WAGON FRONT LINK LENGTH",
      "displaytitle": "WAGON FRONT LINK LENGTH (Poll)",
      "description": "The length of the link at the front of the vehicle used to be attached as wagon.: Units meters: settable false",
      "messagetype": "trigger_WAGON FRONT LINK LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WAGON FRONT LINK LENGTH",
      "displaytitle": "WAGON FRONT LINK LENGTH (OnChange)",
      "description": "The length of the link at the front of the vehicle used to be attached as wagon.: Units meters: settable false",
      "messagetype": "trigger_onChange_WAGON FRONT LINK LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WAGON FRONT LINK LENGTH",
      "displaytitle": "WAGON FRONT LINK LENGTH (OnRequest)",
      "description": "The length of the link at the front of the vehicle used to be attached as wagon.: Units meters: settable false",
      "messagetype": "trigger_onRequest_WAGON FRONT LINK LENGTH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WAGON FRONT LINK ORIENTATION",
      "displaytitle": "WAGON FRONT LINK ORIENTATION (Poll)",
      "description": "The current orientation of the link at the front of the vehicle used to be attached as wagon.: Units degrees: settable false",
      "messagetype": "trigger_WAGON FRONT LINK ORIENTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WAGON FRONT LINK ORIENTATION",
      "displaytitle": "WAGON FRONT LINK ORIENTATION (OnChange)",
      "description": "The current orientation of the link at the front of the vehicle used to be attached as wagon.: Units degrees: settable false",
      "messagetype": "trigger_onChange_WAGON FRONT LINK ORIENTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WAGON FRONT LINK ORIENTATION",
      "displaytitle": "WAGON FRONT LINK ORIENTATION (OnRequest)",
      "description": "The current orientation of the link at the front of the vehicle used to be attached as wagon.: Units degrees: settable false",
      "messagetype": "trigger_onRequest_WAGON FRONT LINK ORIENTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WAGON FRONT LINK START POSZ",
      "displaytitle": "WAGON FRONT LINK START POSZ (Poll)",
      "description": "The \"Z\" axis position of the start of the link at the front of the vehicle used to be attached as wagon, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_WAGON FRONT LINK START POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WAGON FRONT LINK START POSZ",
      "displaytitle": "WAGON FRONT LINK START POSZ (OnChange)",
      "description": "The \"Z\" axis position of the start of the link at the front of the vehicle used to be attached as wagon, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onChange_WAGON FRONT LINK START POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WAGON FRONT LINK START POSZ",
      "displaytitle": "WAGON FRONT LINK START POSZ (OnRequest)",
      "description": "The \"Z\" axis position of the start of the link at the front of the vehicle used to be attached as wagon, relative to the ground.: Units meters: settable false",
      "messagetype": "trigger_onRequest_WAGON FRONT LINK START POSZ",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING FUEL",
      "displaytitle": "WARNING FUEL (Poll)",
      "description": "This is the current state of the fuel warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING FUEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING FUEL",
      "displaytitle": "WARNING FUEL (OnChange)",
      "description": "This is the current state of the fuel warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING FUEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING FUEL",
      "displaytitle": "WARNING FUEL (OnRequest)",
      "description": "This is the current state of the fuel warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING FUEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING FUEL LEFT",
      "displaytitle": "WARNING FUEL LEFT (Poll)",
      "description": "This is the current state of the left fuel tank warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING FUEL LEFT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING FUEL LEFT",
      "displaytitle": "WARNING FUEL LEFT (OnChange)",
      "description": "This is the current state of the left fuel tank warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING FUEL LEFT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING FUEL LEFT",
      "displaytitle": "WARNING FUEL LEFT (OnRequest)",
      "description": "This is the current state of the left fuel tank warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING FUEL LEFT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING FUEL RIGHT",
      "displaytitle": "WARNING FUEL RIGHT (Poll)",
      "description": "This is the current state of the right fuel tank warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING FUEL RIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING FUEL RIGHT",
      "displaytitle": "WARNING FUEL RIGHT (OnChange)",
      "description": "This is the current state of the right fuel tank warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING FUEL RIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING FUEL RIGHT",
      "displaytitle": "WARNING FUEL RIGHT (OnRequest)",
      "description": "This is the current state of the right fuel tank warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING FUEL RIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING LOW HEIGHT",
      "displaytitle": "WARNING LOW HEIGHT (Poll)",
      "description": "This is the current state of the low height warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING LOW HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING LOW HEIGHT",
      "displaytitle": "WARNING LOW HEIGHT (OnChange)",
      "description": "This is the current state of the low height warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING LOW HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING LOW HEIGHT",
      "displaytitle": "WARNING LOW HEIGHT (OnRequest)",
      "description": "This is the current state of the low height warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING LOW HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING OIL PRESSURE",
      "displaytitle": "WARNING OIL PRESSURE (Poll)",
      "description": "This is the current state of the oil pressure warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING OIL PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING OIL PRESSURE",
      "displaytitle": "WARNING OIL PRESSURE (OnChange)",
      "description": "This is the current state of the oil pressure warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING OIL PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING OIL PRESSURE",
      "displaytitle": "WARNING OIL PRESSURE (OnRequest)",
      "description": "This is the current state of the oil pressure warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING OIL PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING VACUUM",
      "displaytitle": "WARNING VACUUM (Poll)",
      "description": "This is the current state of the vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING VACUUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING VACUUM",
      "displaytitle": "WARNING VACUUM (OnChange)",
      "description": "This is the current state of the vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING VACUUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING VACUUM",
      "displaytitle": "WARNING VACUUM (OnRequest)",
      "description": "This is the current state of the vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING VACUUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING VACUUM LEFT",
      "displaytitle": "WARNING VACUUM LEFT (Poll)",
      "description": "This is the current state of the left vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING VACUUM LEFT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING VACUUM LEFT",
      "displaytitle": "WARNING VACUUM LEFT (OnChange)",
      "description": "This is the current state of the left vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING VACUUM LEFT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING VACUUM LEFT",
      "displaytitle": "WARNING VACUUM LEFT (OnRequest)",
      "description": "This is the current state of the left vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING VACUUM LEFT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING VACUUM RIGHT",
      "displaytitle": "WARNING VACUUM RIGHT (Poll)",
      "description": "This is the current state of the right vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING VACUUM RIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING VACUUM RIGHT",
      "displaytitle": "WARNING VACUUM RIGHT (OnChange)",
      "description": "This is the current state of the right vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING VACUUM RIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING VACUUM RIGHT",
      "displaytitle": "WARNING VACUUM RIGHT (OnRequest)",
      "description": "This is the current state of the right vacuum system warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING VACUUM RIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WARNING VOLTAGE",
      "displaytitle": "WARNING VOLTAGE (Poll)",
      "description": "This is the current state of the electrical system voltage warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_WARNING VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WARNING VOLTAGE",
      "displaytitle": "WARNING VOLTAGE (OnChange)",
      "description": "This is the current state of the electrical system voltage warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onChange_WARNING VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WARNING VOLTAGE",
      "displaytitle": "WARNING VOLTAGE (OnRequest)",
      "description": "This is the current state of the electrical system voltage warning, either on (true) or off (false).: Units bool: settable false",
      "messagetype": "trigger_onRequest_WARNING VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER BALLAST TANK CAPACITY:index",
      "displaytitle": "WATER BALLAST TANK CAPACITY:index (Poll)",
      "description": "The capacity of the indexed water ballast tank.: Units pounds: settable false",
      "messagetype": "trigger_WATER BALLAST TANK CAPACITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_WATER BALLAST TANK CAPACITY:index",
      "displaytitle": "WATER BALLAST TANK CAPACITY:index (OnChange)",
      "description": "The capacity of the indexed water ballast tank.: Units pounds: settable false",
      "messagetype": "trigger_onChange_WATER BALLAST TANK CAPACITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER BALLAST TANK CAPACITY:index",
      "displaytitle": "WATER BALLAST TANK CAPACITY:index (OnRequest)",
      "description": "The capacity of the indexed water ballast tank.: Units pounds: settable false",
      "messagetype": "trigger_onRequest_WATER BALLAST TANK CAPACITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "WATER BALLAST TANK NUMBER",
      "displaytitle": "WATER BALLAST TANK NUMBER (Poll)",
      "description": "The number of water ballast tank available.: Units number: settable false",
      "messagetype": "trigger_WATER BALLAST TANK NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER BALLAST TANK NUMBER",
      "displaytitle": "WATER BALLAST TANK NUMBER (OnChange)",
      "description": "The number of water ballast tank available.: Units number: settable false",
      "messagetype": "trigger_onChange_WATER BALLAST TANK NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER BALLAST TANK NUMBER",
      "displaytitle": "WATER BALLAST TANK NUMBER (OnRequest)",
      "description": "The number of water ballast tank available.: Units number: settable false",
      "messagetype": "trigger_onRequest_WATER BALLAST TANK NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER BALLAST TANK QUANTITY:index",
      "displaytitle": "WATER BALLAST TANK QUANTITY:index (Poll)",
      "description": "The quantity of water ballast in the indexed tank.: Units pounds: settable false",
      "messagetype": "trigger_WATER BALLAST TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_WATER BALLAST TANK QUANTITY:index",
      "displaytitle": "WATER BALLAST TANK QUANTITY:index (OnChange)",
      "description": "The quantity of water ballast in the indexed tank.: Units pounds: settable false",
      "messagetype": "trigger_onChange_WATER BALLAST TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER BALLAST TANK QUANTITY:index",
      "displaytitle": "WATER BALLAST TANK QUANTITY:index (OnRequest)",
      "description": "The quantity of water ballast in the indexed tank.: Units pounds: settable false",
      "messagetype": "trigger_onRequest_WATER BALLAST TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "WATER BALLAST VALVE",
      "displaytitle": "WATER BALLAST VALVE (Poll)",
      "description": "True (1) if a water ballast valve is available, False (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_WATER BALLAST VALVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER BALLAST VALVE",
      "displaytitle": "WATER BALLAST VALVE (OnChange)",
      "description": "True (1) if a water ballast valve is available, False (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_onChange_WATER BALLAST VALVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER BALLAST VALVE",
      "displaytitle": "WATER BALLAST VALVE (OnRequest)",
      "description": "True (1) if a water ballast valve is available, False (0) otherwise.: Units bool: settable false",
      "messagetype": "trigger_onRequest_WATER BALLAST VALVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER BALLAST VALVE FLOW RATE",
      "displaytitle": "WATER BALLAST VALVE FLOW RATE (Poll)",
      "description": "The flow rate of the water ballast valve.: Units gallons per hour: settable false",
      "messagetype": "trigger_WATER BALLAST VALVE FLOW RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER BALLAST VALVE FLOW RATE",
      "displaytitle": "WATER BALLAST VALVE FLOW RATE (OnChange)",
      "description": "The flow rate of the water ballast valve.: Units gallons per hour: settable false",
      "messagetype": "trigger_onChange_WATER BALLAST VALVE FLOW RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER BALLAST VALVE FLOW RATE",
      "displaytitle": "WATER BALLAST VALVE FLOW RATE (OnRequest)",
      "description": "The flow rate of the water ballast valve.: Units gallons per hour: settable false",
      "messagetype": "trigger_onRequest_WATER BALLAST VALVE FLOW RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER LEFT RUDDER EXTENDED",
      "displaytitle": "WATER LEFT RUDDER EXTENDED (Poll)",
      "description": "Percent extended: Units percent: settable false",
      "messagetype": "trigger_WATER LEFT RUDDER EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER LEFT RUDDER EXTENDED",
      "displaytitle": "WATER LEFT RUDDER EXTENDED (OnChange)",
      "description": "Percent extended: Units percent: settable false",
      "messagetype": "trigger_onChange_WATER LEFT RUDDER EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER LEFT RUDDER EXTENDED",
      "displaytitle": "WATER LEFT RUDDER EXTENDED (OnRequest)",
      "description": "Percent extended: Units percent: settable false",
      "messagetype": "trigger_onRequest_WATER LEFT RUDDER EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER LEFT RUDDER STEER ANGLE",
      "displaytitle": "WATER LEFT RUDDER STEER ANGLE (Poll)",
      "description": "Water left rudder angle, negative to the left, positive to the right: Units percent Over 100: settable false",
      "messagetype": "trigger_WATER LEFT RUDDER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER LEFT RUDDER STEER ANGLE",
      "displaytitle": "WATER LEFT RUDDER STEER ANGLE (OnChange)",
      "description": "Water left rudder angle, negative to the left, positive to the right: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_WATER LEFT RUDDER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER LEFT RUDDER STEER ANGLE",
      "displaytitle": "WATER LEFT RUDDER STEER ANGLE (OnRequest)",
      "description": "Water left rudder angle, negative to the left, positive to the right: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_WATER LEFT RUDDER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER LEFT RUDDER STEER ANGLE PCT",
      "displaytitle": "WATER LEFT RUDDER STEER ANGLE PCT (Poll)",
      "description": "Water left rudder angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_WATER LEFT RUDDER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER LEFT RUDDER STEER ANGLE PCT",
      "displaytitle": "WATER LEFT RUDDER STEER ANGLE PCT (OnChange)",
      "description": "Water left rudder angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_WATER LEFT RUDDER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER LEFT RUDDER STEER ANGLE PCT",
      "displaytitle": "WATER LEFT RUDDER STEER ANGLE PCT (OnRequest)",
      "description": "Water left rudder angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_WATER LEFT RUDDER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER RIGHT RUDDER EXTENDED",
      "displaytitle": "WATER RIGHT RUDDER EXTENDED (Poll)",
      "description": "Percent extended: Units percent: settable false",
      "messagetype": "trigger_WATER RIGHT RUDDER EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER RIGHT RUDDER EXTENDED",
      "displaytitle": "WATER RIGHT RUDDER EXTENDED (OnChange)",
      "description": "Percent extended: Units percent: settable false",
      "messagetype": "trigger_onChange_WATER RIGHT RUDDER EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER RIGHT RUDDER EXTENDED",
      "displaytitle": "WATER RIGHT RUDDER EXTENDED (OnRequest)",
      "description": "Percent extended: Units percent: settable false",
      "messagetype": "trigger_onRequest_WATER RIGHT RUDDER EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER RIGHT RUDDER STEER ANGLE",
      "displaytitle": "WATER RIGHT RUDDER STEER ANGLE (Poll)",
      "description": "Water right rudder angle, negative to the left, positive to the right: Units percent Over 100: settable false",
      "messagetype": "trigger_WATER RIGHT RUDDER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER RIGHT RUDDER STEER ANGLE",
      "displaytitle": "WATER RIGHT RUDDER STEER ANGLE (OnChange)",
      "description": "Water right rudder angle, negative to the left, positive to the right: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_WATER RIGHT RUDDER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER RIGHT RUDDER STEER ANGLE",
      "displaytitle": "WATER RIGHT RUDDER STEER ANGLE (OnRequest)",
      "description": "Water right rudder angle, negative to the left, positive to the right: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_WATER RIGHT RUDDER STEER ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER RIGHT RUDDER STEER ANGLE PCT",
      "displaytitle": "WATER RIGHT RUDDER STEER ANGLE PCT (Poll)",
      "description": "Water right rudder as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_WATER RIGHT RUDDER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER RIGHT RUDDER STEER ANGLE PCT",
      "displaytitle": "WATER RIGHT RUDDER STEER ANGLE PCT (OnChange)",
      "description": "Water right rudder as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_WATER RIGHT RUDDER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER RIGHT RUDDER STEER ANGLE PCT",
      "displaytitle": "WATER RIGHT RUDDER STEER ANGLE PCT (OnRequest)",
      "description": "Water right rudder as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_WATER RIGHT RUDDER STEER ANGLE PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER RUDDER HANDLE POSITION",
      "displaytitle": "WATER RUDDER HANDLE POSITION (Poll)",
      "description": "Position of the water rudder handle (0 handle retracted, 1 rudder handle applied): Units percent Over 100: settable true",
      "messagetype": "trigger_WATER RUDDER HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WATER RUDDER HANDLE POSITION",
      "displaytitle": "WATER RUDDER HANDLE POSITION (OnChange)",
      "description": "Position of the water rudder handle (0 handle retracted, 1 rudder handle applied): Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_WATER RUDDER HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WATER RUDDER HANDLE POSITION",
      "displaytitle": "WATER RUDDER HANDLE POSITION (OnRequest)",
      "description": "Position of the water rudder handle (0 handle retracted, 1 rudder handle applied): Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_WATER RUDDER HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WHEEL ROTATION ANGLE:index",
      "displaytitle": "WHEEL ROTATION ANGLE:index (Poll)",
      "description": "Wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_WHEEL ROTATION ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_WHEEL ROTATION ANGLE:index",
      "displaytitle": "WHEEL ROTATION ANGLE:index (OnChange)",
      "description": "Wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onChange_WHEEL ROTATION ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_WHEEL ROTATION ANGLE:index",
      "displaytitle": "WHEEL ROTATION ANGLE:index (OnRequest)",
      "description": "Wheel rotation angle (rotation around the axis for the wheel): Units radians: settable false",
      "messagetype": "trigger_onRequest_WHEEL ROTATION ANGLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "WHEEL RPM:index",
      "displaytitle": "WHEEL RPM:index (Poll)",
      "description": "Wheel rpm: Units RPM: settable false",
      "messagetype": "trigger_WHEEL RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_WHEEL RPM:index",
      "displaytitle": "WHEEL RPM:index (OnChange)",
      "description": "Wheel rpm: Units RPM: settable false",
      "messagetype": "trigger_onChange_WHEEL RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_WHEEL RPM:index",
      "displaytitle": "WHEEL RPM:index (OnRequest)",
      "description": "Wheel rpm: Units RPM: settable false",
      "messagetype": "trigger_onRequest_WHEEL RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "WINDSHIELD DEICE SWITCH",
      "displaytitle": "WINDSHIELD DEICE SWITCH (Poll)",
      "description": "True if the aircraft windshield deice switch is on.: Units bool: settable false",
      "messagetype": "trigger_WINDSHIELD DEICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WINDSHIELD DEICE SWITCH",
      "displaytitle": "WINDSHIELD DEICE SWITCH (OnChange)",
      "description": "True if the aircraft windshield deice switch is on.: Units bool: settable false",
      "messagetype": "trigger_onChange_WINDSHIELD DEICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WINDSHIELD DEICE SWITCH",
      "displaytitle": "WINDSHIELD DEICE SWITCH (OnRequest)",
      "description": "True if the aircraft windshield deice switch is on.: Units bool: settable false",
      "messagetype": "trigger_onRequest_WINDSHIELD DEICE SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WINDSHIELD RAIN EFFECT AVAILABLE",
      "displaytitle": "WINDSHIELD RAIN EFFECT AVAILABLE (Poll)",
      "description": "Is visual effect available on this aircraft: Units bool: settable false",
      "messagetype": "trigger_WINDSHIELD RAIN EFFECT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WINDSHIELD RAIN EFFECT AVAILABLE",
      "displaytitle": "WINDSHIELD RAIN EFFECT AVAILABLE (OnChange)",
      "description": "Is visual effect available on this aircraft: Units bool: settable false",
      "messagetype": "trigger_onChange_WINDSHIELD RAIN EFFECT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WINDSHIELD RAIN EFFECT AVAILABLE",
      "displaytitle": "WINDSHIELD RAIN EFFECT AVAILABLE (OnRequest)",
      "description": "Is visual effect available on this aircraft: Units bool: settable false",
      "messagetype": "trigger_onRequest_WINDSHIELD RAIN EFFECT AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WINDSHIELD WIND VELOCITY",
      "displaytitle": "WINDSHIELD WIND VELOCITY (Poll)",
      "description": "Longitudinal speed of wind on the windshield.: Units feet: settable false",
      "messagetype": "trigger_WINDSHIELD WIND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WINDSHIELD WIND VELOCITY",
      "displaytitle": "WINDSHIELD WIND VELOCITY (OnChange)",
      "description": "Longitudinal speed of wind on the windshield.: Units feet: settable false",
      "messagetype": "trigger_onChange_WINDSHIELD WIND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WINDSHIELD WIND VELOCITY",
      "displaytitle": "WINDSHIELD WIND VELOCITY (OnRequest)",
      "description": "Longitudinal speed of wind on the windshield.: Units feet: settable false",
      "messagetype": "trigger_onRequest_WINDSHIELD WIND VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WING AREA",
      "displaytitle": "WING AREA (Poll)",
      "description": "Total wing area: Units square feet: settable false",
      "messagetype": "trigger_WING AREA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WING AREA",
      "displaytitle": "WING AREA (OnChange)",
      "description": "Total wing area: Units square feet: settable false",
      "messagetype": "trigger_onChange_WING AREA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WING AREA",
      "displaytitle": "WING AREA (OnRequest)",
      "description": "Total wing area: Units square feet: settable false",
      "messagetype": "trigger_onRequest_WING AREA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WING FLEX PCT:index",
      "displaytitle": "WING FLEX PCT:index (Poll)",
      "description": "The current wing flex. Different values can be set for each wing (for example, during banking). Set an index of 1 for the left wing, and 2 for the right wing.: Units percent Over 100: settable true",
      "messagetype": "trigger_WING FLEX PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onChange_WING FLEX PCT:index",
      "displaytitle": "WING FLEX PCT:index (OnChange)",
      "description": "The current wing flex. Different values can be set for each wing (for example, during banking). Set an index of 1 for the left wing, and 2 for the right wing.: Units percent Over 100: settable true",
      "messagetype": "trigger_onChange_WING FLEX PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "onRequest_WING FLEX PCT:index",
      "displaytitle": "WING FLEX PCT:index (OnRequest)",
      "description": "The current wing flex. Different values can be set for each wing (for example, during banking). Set an index of 1 for the left wing, and 2 for the right wing.: Units percent Over 100: settable true",
      "messagetype": "trigger_onRequest_WING FLEX PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "WING SPAN",
      "displaytitle": "WING SPAN (Poll)",
      "description": "Total wing span: Units feet: settable false",
      "messagetype": "trigger_WING SPAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_WING SPAN",
      "displaytitle": "WING SPAN (OnChange)",
      "description": "Total wing span: Units feet: settable false",
      "messagetype": "trigger_onChange_WING SPAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_WING SPAN",
      "displaytitle": "WING SPAN (OnRequest)",
      "description": "Total wing span: Units feet: settable false",
      "messagetype": "trigger_onRequest_WING SPAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YAW STRING ANGLE",
      "displaytitle": "YAW STRING ANGLE (Poll)",
      "description": "The yaw string angle. Yaw strings are attached to gliders as visible indicators of the yaw angle. An animation of this is not implemented in ESP.: Units radians: settable false",
      "messagetype": "trigger_YAW STRING ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_YAW STRING ANGLE",
      "displaytitle": "YAW STRING ANGLE (OnChange)",
      "description": "The yaw string angle. Yaw strings are attached to gliders as visible indicators of the yaw angle. An animation of this is not implemented in ESP.: Units radians: settable false",
      "messagetype": "trigger_onChange_YAW STRING ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_YAW STRING ANGLE",
      "displaytitle": "YAW STRING ANGLE (OnRequest)",
      "description": "The yaw string angle. Yaw strings are attached to gliders as visible indicators of the yaw angle. An animation of this is not implemented in ESP.: Units radians: settable false",
      "messagetype": "trigger_onRequest_YAW STRING ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YAW STRING PCT EXTENDED",
      "displaytitle": "YAW STRING PCT EXTENDED (Poll)",
      "description": "Yaw string angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_YAW STRING PCT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_YAW STRING PCT EXTENDED",
      "displaytitle": "YAW STRING PCT EXTENDED (OnChange)",
      "description": "Yaw string angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onChange_YAW STRING PCT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_YAW STRING PCT EXTENDED",
      "displaytitle": "YAW STRING PCT EXTENDED (OnRequest)",
      "description": "Yaw string angle as a percentage: Units percent Over 100: settable false",
      "messagetype": "trigger_onRequest_YAW STRING PCT EXTENDED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YOKE X INDICATOR",
      "displaytitle": "YOKE X INDICATOR (Poll)",
      "description": "Yoke position in horizontal direction.: Units position: settable false",
      "messagetype": "trigger_YOKE X INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_YOKE X INDICATOR",
      "displaytitle": "YOKE X INDICATOR (OnChange)",
      "description": "Yoke position in horizontal direction.: Units position: settable false",
      "messagetype": "trigger_onChange_YOKE X INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_YOKE X INDICATOR",
      "displaytitle": "YOKE X INDICATOR (OnRequest)",
      "description": "Yoke position in horizontal direction.: Units position: settable false",
      "messagetype": "trigger_onRequest_YOKE X INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YOKE X POSITION",
      "displaytitle": "YOKE X POSITION (Poll)",
      "description": "Percent control deflection left/right (for animation).: Units position: settable true",
      "messagetype": "trigger_YOKE X POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_YOKE X POSITION",
      "displaytitle": "YOKE X POSITION (OnChange)",
      "description": "Percent control deflection left/right (for animation).: Units position: settable true",
      "messagetype": "trigger_onChange_YOKE X POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_YOKE X POSITION",
      "displaytitle": "YOKE X POSITION (OnRequest)",
      "description": "Percent control deflection left/right (for animation).: Units position: settable true",
      "messagetype": "trigger_onRequest_YOKE X POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YOKE X POSITION WITH AP",
      "displaytitle": "YOKE X POSITION WITH AP (Poll)",
      "description": "Percent control deflection left/right (for animation). Also includes AP's inputs.: Units position: settable false",
      "messagetype": "trigger_YOKE X POSITION WITH AP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_YOKE X POSITION WITH AP",
      "displaytitle": "YOKE X POSITION WITH AP (OnChange)",
      "description": "Percent control deflection left/right (for animation). Also includes AP's inputs.: Units position: settable false",
      "messagetype": "trigger_onChange_YOKE X POSITION WITH AP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_YOKE X POSITION WITH AP",
      "displaytitle": "YOKE X POSITION WITH AP (OnRequest)",
      "description": "Percent control deflection left/right (for animation). Also includes AP's inputs.: Units position: settable false",
      "messagetype": "trigger_onRequest_YOKE X POSITION WITH AP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YOKE Y INDICATOR",
      "displaytitle": "YOKE Y INDICATOR (Poll)",
      "description": "Yoke position in vertical direction.: Units position: settable false",
      "messagetype": "trigger_YOKE Y INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_YOKE Y INDICATOR",
      "displaytitle": "YOKE Y INDICATOR (OnChange)",
      "description": "Yoke position in vertical direction.: Units position: settable false",
      "messagetype": "trigger_onChange_YOKE Y INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_YOKE Y INDICATOR",
      "displaytitle": "YOKE Y INDICATOR (OnRequest)",
      "description": "Yoke position in vertical direction.: Units position: settable false",
      "messagetype": "trigger_onRequest_YOKE Y INDICATOR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YOKE Y POSITION",
      "displaytitle": "YOKE Y POSITION (Poll)",
      "description": "Percent control deflection fore/aft (for animation).: Units position: settable true",
      "messagetype": "trigger_YOKE Y POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_YOKE Y POSITION",
      "displaytitle": "YOKE Y POSITION (OnChange)",
      "description": "Percent control deflection fore/aft (for animation).: Units position: settable true",
      "messagetype": "trigger_onChange_YOKE Y POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_YOKE Y POSITION",
      "displaytitle": "YOKE Y POSITION (OnRequest)",
      "description": "Percent control deflection fore/aft (for animation).: Units position: settable true",
      "messagetype": "trigger_onRequest_YOKE Y POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YOKE Y POSITION WITH AP",
      "displaytitle": "YOKE Y POSITION WITH AP (Poll)",
      "description": "Percent control deflection fore/aft (for animation). Also includes AP's inputs.: Units position: settable false",
      "messagetype": "trigger_YOKE Y POSITION WITH AP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_YOKE Y POSITION WITH AP",
      "displaytitle": "YOKE Y POSITION WITH AP (OnChange)",
      "description": "Percent control deflection fore/aft (for animation). Also includes AP's inputs.: Units position: settable false",
      "messagetype": "trigger_onChange_YOKE Y POSITION WITH AP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_YOKE Y POSITION WITH AP",
      "displaytitle": "YOKE Y POSITION WITH AP (OnRequest)",
      "description": "Percent control deflection fore/aft (for animation). Also includes AP's inputs.: Units position: settable false",
      "messagetype": "trigger_onRequest_YOKE Y POSITION WITH AP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ZERO LIFT ALPHA",
      "displaytitle": "ZERO LIFT ALPHA (Poll)",
      "description": "The angle of attack at which the wing has zero lift.: Units radians: settable false",
      "messagetype": "trigger_ZERO LIFT ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onChange_ZERO LIFT ALPHA",
      "displaytitle": "ZERO LIFT ALPHA (OnChange)",
      "description": "The angle of attack at which the wing has zero lift.: Units radians: settable false",
      "messagetype": "trigger_onChange_ZERO LIFT ALPHA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "onRequest_ZERO LIFT ALPHA",
      "displaytitle": "ZERO LIFT ALPHA (OnRequest)",
      "description": "The angle of attack at which the wing has zero lift.: Units radians: settable false",
      "messagetype": "trigger_onRequest_ZERO LIFT ALPHA",
      "parameters": {
        "data": ""
      }
    }
  ],
  "actions": [
    {
      "name": "PLANE LATITUDE LONGITUDE_get",
      "displaytitle": "Get lat/long (Get)",
      "description": "Get the current lat long in one message",
      "messagetype": "action_PLANE LATITUDE LONGITUDE_get",
      "parameters": {}
    },
    {
      "name": "ACCELERATION BODY X_get",
      "displaytitle": "ACCELERATION BODY X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAcceleration relative to aircraft X axis, in east/west direction: Units feet",
      "messagetype": "action_ACCELERATION BODY X_get",
      "parameters": {}
    },
    {
      "name": "ACCELERATION BODY Y_get",
      "displaytitle": "ACCELERATION BODY Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAcceleration relative to aircraft Y axis, in vertical direction: Units feet",
      "messagetype": "action_ACCELERATION BODY Y_get",
      "parameters": {}
    },
    {
      "name": "ACCELERATION BODY Z_get",
      "displaytitle": "ACCELERATION BODY Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAcceleration relative to aircraft Z axis, in north/south direction: Units feet",
      "messagetype": "action_ACCELERATION BODY Z_get",
      "parameters": {}
    },
    {
      "name": "ACCELERATION WORLD X_get",
      "displaytitle": "ACCELERATION WORLD X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAcceleration relative to the earth X axis, in east/west direction: Units feet",
      "messagetype": "action_ACCELERATION WORLD X_get",
      "parameters": {}
    },
    {
      "name": "ACCELERATION WORLD Y_get",
      "displaytitle": "ACCELERATION WORLD Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAcceleration relative to the earth Y axis, in vertical direction: Units feet",
      "messagetype": "action_ACCELERATION WORLD Y_get",
      "parameters": {}
    },
    {
      "name": "ACCELERATION WORLD Z_get",
      "displaytitle": "ACCELERATION WORLD Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAcceleration relative to the earth Z axis, in north/south direction: Units feet",
      "messagetype": "action_ACCELERATION WORLD Z_get",
      "parameters": {}
    },
    {
      "name": "ADF ACTIVE FREQUENCY:index_get",
      "displaytitle": "ADF ACTIVE FREQUENCY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerADF frequency. Index of 1 or 2.: Units frequency ADF BCD32",
      "messagetype": "action_ADF ACTIVE FREQUENCY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF AVAILABLE:index_get",
      "displaytitle": "ADF AVAILABLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if ADF is available: Units bool",
      "messagetype": "action_ADF AVAILABLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF CARD_get",
      "displaytitle": "ADF CARD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerADF compass rose setting: Units degrees",
      "messagetype": "action_ADF CARD_get",
      "parameters": {}
    },
    {
      "name": "ADF IDENT_get",
      "displaytitle": "ADF IDENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerICAO code: Units null",
      "messagetype": "action_ADF IDENT_get",
      "parameters": {}
    },
    {
      "name": "ADF NAME:index_get",
      "displaytitle": "ADF NAME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDescriptive name: Units null",
      "messagetype": "action_ADF NAME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF RADIAL MAG:index_get",
      "displaytitle": "ADF RADIAL MAG:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the magnetic bearing to the currently tuned ADF transmitter.: Units degrees",
      "messagetype": "action_ADF RADIAL MAG:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF RADIAL:index_get",
      "displaytitle": "ADF RADIAL:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent direction from NDB station: Units degrees",
      "messagetype": "action_ADF RADIAL:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF SIGNAL:index_get",
      "displaytitle": "ADF SIGNAL:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSignal strength: Units number",
      "messagetype": "action_ADF SIGNAL:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF SOUND:index_get",
      "displaytitle": "ADF SOUND:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerADF audio flag. Index of 0 or 1.: Units bool",
      "messagetype": "action_ADF SOUND:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF STANDBY AVAILABLE:index_get",
      "displaytitle": "ADF STANDBY AVAILABLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if ADF Standby is available: Units bool",
      "messagetype": "action_ADF STANDBY AVAILABLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF STANDBY FREQUENCY:index_get",
      "displaytitle": "ADF STANDBY FREQUENCY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerADF standby frequency: Units Hz",
      "messagetype": "action_ADF STANDBY FREQUENCY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ADF VOLUME_get",
      "displaytitle": "ADF VOLUME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the volume of the ADF: Units percent Over 100",
      "messagetype": "action_ADF VOLUME_get",
      "parameters": {}
    },
    {
      "name": "AI ANTISTALL STATE_get",
      "displaytitle": "AI ANTISTALL STATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current state of the AI anti-stall system: Units enum",
      "messagetype": "action_AI ANTISTALL STATE_get",
      "parameters": {}
    },
    {
      "name": "AI AUTOTRIM ACTIVE_get",
      "displaytitle": "AI AUTOTRIM ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the AI auto-trim system is enabled or not: Units bool",
      "messagetype": "action_AI AUTOTRIM ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AI AUTOTRIM ACTIVE AGAINST PLAYER_get",
      "displaytitle": "AI AUTOTRIM ACTIVE AGAINST PLAYER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the AI auto-trim system is enabled or not for AI controlled aircraft: Units bool",
      "messagetype": "action_AI AUTOTRIM ACTIVE AGAINST PLAYER_get",
      "parameters": {}
    },
    {
      "name": "AI CONTROLS_get",
      "displaytitle": "AI CONTROLS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the AI control system is enabled or not: Units bool",
      "messagetype": "action_AI CONTROLS_get",
      "parameters": {}
    },
    {
      "name": "AI CURSOR MODE ACTIVE_get",
      "displaytitle": "AI CURSOR MODE ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the AI cursor mode is active or not: Units bool",
      "messagetype": "action_AI CURSOR MODE ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AILERON AVERAGE DEFLECTION_get",
      "displaytitle": "AILERON AVERAGE DEFLECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle deflection: Units radians",
      "messagetype": "action_AILERON AVERAGE DEFLECTION_get",
      "parameters": {}
    },
    {
      "name": "AILERON LEFT DEFLECTION_get",
      "displaytitle": "AILERON LEFT DEFLECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle deflection: Units radians",
      "messagetype": "action_AILERON LEFT DEFLECTION_get",
      "parameters": {}
    },
    {
      "name": "AILERON LEFT DEFLECTION PCT_get",
      "displaytitle": "AILERON LEFT DEFLECTION PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent deflection: Units percent Over 100",
      "messagetype": "action_AILERON LEFT DEFLECTION PCT_get",
      "parameters": {}
    },
    {
      "name": "AILERON POSITION",
      "displaytitle": "AILERON POSITION(Set)",
      "description": "Set the simvar Percent aileron input left/right: Units position",
      "messagetype": "action_AILERON POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON POSITION_get",
      "displaytitle": "AILERON POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent aileron input left/right: Units position",
      "messagetype": "action_AILERON POSITION_get",
      "parameters": {}
    },
    {
      "name": "AILERON RIGHT DEFLECTION_get",
      "displaytitle": "AILERON RIGHT DEFLECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle deflection: Units radians",
      "messagetype": "action_AILERON RIGHT DEFLECTION_get",
      "parameters": {}
    },
    {
      "name": "AILERON RIGHT DEFLECTION PCT_get",
      "displaytitle": "AILERON RIGHT DEFLECTION PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent deflection: Units percent Over 100",
      "messagetype": "action_AILERON RIGHT DEFLECTION PCT_get",
      "parameters": {}
    },
    {
      "name": "AILERON TRIM_get",
      "displaytitle": "AILERON TRIM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle deflection: Units radians",
      "messagetype": "action_AILERON TRIM_get",
      "parameters": {}
    },
    {
      "name": "AILERON TRIM DISABLED_get",
      "displaytitle": "AILERON TRIM DISABLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Aileron Trim has been disabled: Units bool",
      "messagetype": "action_AILERON TRIM DISABLED_get",
      "parameters": {}
    },
    {
      "name": "AILERON TRIM PCT",
      "displaytitle": "AILERON TRIM PCT(Set)",
      "description": "Set the simvar The trim position of the ailerons. Zero is fully retracted: Units percent Over 100",
      "messagetype": "action_AILERON TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AILERON TRIM PCT_get",
      "displaytitle": "AILERON TRIM PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe trim position of the ailerons. Zero is fully retracted: Units percent Over 100",
      "messagetype": "action_AILERON TRIM PCT_get",
      "parameters": {}
    },
    {
      "name": "AIRCRAFT WIND X_get",
      "displaytitle": "AIRCRAFT WIND X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWind component in aircraft lateral (X) axis: Units knots",
      "messagetype": "action_AIRCRAFT WIND X_get",
      "parameters": {}
    },
    {
      "name": "AIRCRAFT WIND Y_get",
      "displaytitle": "AIRCRAFT WIND Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWind component in aircraft vertical (Y) axis.: Units knots",
      "messagetype": "action_AIRCRAFT WIND Y_get",
      "parameters": {}
    },
    {
      "name": "AIRCRAFT WIND Z_get",
      "displaytitle": "AIRCRAFT WIND Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWind component in aircraft longitudinal (Z) axis.: Units knots",
      "messagetype": "action_AIRCRAFT WIND Z_get",
      "parameters": {}
    },
    {
      "name": "AIRSPEED BARBER POLE_get",
      "displaytitle": "AIRSPEED BARBER POLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRedline airspeed (dynamic on some aircraft).: Units knots",
      "messagetype": "action_AIRSPEED BARBER POLE_get",
      "parameters": {}
    },
    {
      "name": "AIRSPEED INDICATED",
      "displaytitle": "AIRSPEED INDICATED(Set)",
      "description": "Set the simvar Indicated airspeed.: Units knots",
      "messagetype": "action_AIRSPEED INDICATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED INDICATED_get",
      "displaytitle": "AIRSPEED INDICATED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndicated airspeed.: Units knots",
      "messagetype": "action_AIRSPEED INDICATED_get",
      "parameters": {}
    },
    {
      "name": "AIRSPEED MACH_get",
      "displaytitle": "AIRSPEED MACH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent mach.: Units mach",
      "messagetype": "action_AIRSPEED MACH_get",
      "parameters": {}
    },
    {
      "name": "AIRSPEED SELECT INDICATED OR TRUE_get",
      "displaytitle": "AIRSPEED SELECT INDICATED OR TRUE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe airspeed, whether true or indicated airspeed has been selected.: Units knots",
      "messagetype": "action_AIRSPEED SELECT INDICATED OR TRUE_get",
      "parameters": {}
    },
    {
      "name": "AIRSPEED TRUE",
      "displaytitle": "AIRSPEED TRUE(Set)",
      "description": "Set the simvar True airspeed.: Units knots",
      "messagetype": "action_AIRSPEED TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED TRUE_get",
      "displaytitle": "AIRSPEED TRUE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue airspeed.: Units knots",
      "messagetype": "action_AIRSPEED TRUE_get",
      "parameters": {}
    },
    {
      "name": "AIRSPEED TRUE CALIBRATE",
      "displaytitle": "AIRSPEED TRUE CALIBRATE(Set)",
      "description": "Set the simvar Angle of True calibration scale on airspeed indicator.: Units degrees",
      "messagetype": "action_AIRSPEED TRUE CALIBRATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED TRUE CALIBRATE_get",
      "displaytitle": "AIRSPEED TRUE CALIBRATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle of True calibration scale on airspeed indicator.: Units degrees",
      "messagetype": "action_AIRSPEED TRUE CALIBRATE_get",
      "parameters": {}
    },
    {
      "name": "AIRSPEED TRUE RAW",
      "displaytitle": "AIRSPEED TRUE RAW(Set)",
      "description": "Set the simvar Equivalent to AIRSPEED TRUE, but does not account for wind when used to Set Airspeed value: Units knots",
      "messagetype": "action_AIRSPEED TRUE RAW",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AIRSPEED TRUE RAW_get",
      "displaytitle": "AIRSPEED TRUE RAW(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEquivalent to AIRSPEED TRUE, but does not account for wind when used to Set Airspeed value: Units knots",
      "messagetype": "action_AIRSPEED TRUE RAW_get",
      "parameters": {}
    },
    {
      "name": "ALTERNATE STATIC SOURCE OPEN:index_get",
      "displaytitle": "ALTERNATE STATIC SOURCE OPEN:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAlternate static air source.: Units bool",
      "messagetype": "action_ALTERNATE STATIC SOURCE OPEN:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ALTERNATOR BREAKER PULLED",
      "displaytitle": "ALTERNATOR BREAKER PULLED(Set)",
      "description": "Set the simvar This will be true if the alternator breaker is pulled. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool",
      "messagetype": "action_ALTERNATOR BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ALTERNATOR BREAKER PULLED_get",
      "displaytitle": "ALTERNATOR BREAKER PULLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the alternator breaker is pulled. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool",
      "messagetype": "action_ALTERNATOR BREAKER PULLED_get",
      "parameters": {}
    },
    {
      "name": "ALTERNATOR CONNECTION ON_get",
      "displaytitle": "ALTERNATOR CONNECTION ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the alternator is connected. Requires a BUS_LOOKUP_INDEX and an alternator index: Units bool",
      "messagetype": "action_ALTERNATOR CONNECTION ON_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT DENSITY_get",
      "displaytitle": "AMBIENT DENSITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAmbient density.: Units Slugs per cubic feet",
      "messagetype": "action_AMBIENT DENSITY_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT IN CLOUD_get",
      "displaytitle": "AMBIENT IN CLOUD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the aircraft is in a cloud: Units bool",
      "messagetype": "action_AMBIENT IN CLOUD_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT PRECIP RATE_get",
      "displaytitle": "AMBIENT PRECIP RATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current precipitation rate.: Units millimeters of water",
      "messagetype": "action_AMBIENT PRECIP RATE_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT PRECIP STATE_get",
      "displaytitle": "AMBIENT PRECIP STATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current state of precipitation.: Units mask",
      "messagetype": "action_AMBIENT PRECIP STATE_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT PRESSURE_get",
      "displaytitle": "AMBIENT PRESSURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAmbient pressure.: Units Inches of Mercury",
      "messagetype": "action_AMBIENT PRESSURE_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT TEMPERATURE_get",
      "displaytitle": "AMBIENT TEMPERATURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAmbient temperature.: Units celsius",
      "messagetype": "action_AMBIENT TEMPERATURE_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT VISIBILITY_get",
      "displaytitle": "AMBIENT VISIBILITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAmbient visibility (only measures ambient particle visibility - related to ambient density).: Units meters",
      "messagetype": "action_AMBIENT VISIBILITY_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT WIND DIRECTION_get",
      "displaytitle": "AMBIENT WIND DIRECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWind direction, relative to true north.: Units degrees",
      "messagetype": "action_AMBIENT WIND DIRECTION_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT WIND VELOCITY_get",
      "displaytitle": "AMBIENT WIND VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWind velocity.: Units knots",
      "messagetype": "action_AMBIENT WIND VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT WIND X_get",
      "displaytitle": "AMBIENT WIND X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWind component in East/West direction.: Units Meters per second",
      "messagetype": "action_AMBIENT WIND X_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT WIND Y_get",
      "displaytitle": "AMBIENT WIND Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWind component in vertical direction.: Units Meters per second",
      "messagetype": "action_AMBIENT WIND Y_get",
      "parameters": {}
    },
    {
      "name": "AMBIENT WIND Z_get",
      "displaytitle": "AMBIENT WIND Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWind component in North/South direction.: Units Meters per second",
      "messagetype": "action_AMBIENT WIND Z_get",
      "parameters": {}
    },
    {
      "name": "ANEMOMETER PCT RPM_get",
      "displaytitle": "ANEMOMETER PCT RPM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAnemometer rpm as a percentage.: Units percent Over 100",
      "messagetype": "action_ANEMOMETER PCT RPM_get",
      "parameters": {}
    },
    {
      "name": "ANGLE OF ATTACK INDICATOR_get",
      "displaytitle": "ANGLE OF ATTACK INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAoA indication.: Units radians",
      "messagetype": "action_ANGLE OF ATTACK INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "ANIMATION DELTA TIME_get",
      "displaytitle": "ANIMATION DELTA TIME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDifference of time between the current frame and the last frame where this SimObject has been animated: Units seconds",
      "messagetype": "action_ANIMATION DELTA TIME_get",
      "parameters": {}
    },
    {
      "name": "ANTISKID BRAKES ACTIVE_get",
      "displaytitle": "ANTISKID BRAKES ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if antiskid brakes active. This can be set using the AntiSkidActive parameter: Units bool",
      "messagetype": "action_ANTISKID BRAKES ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "APPLY HEAT TO SYSTEMS",
      "displaytitle": "APPLY HEAT TO SYSTEMS(Set)",
      "description": "Set the simvar Used when too close to a fire.: Units bool",
      "messagetype": "action_APPLY HEAT TO SYSTEMS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APPLY HEAT TO SYSTEMS_get",
      "displaytitle": "APPLY HEAT TO SYSTEMS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerUsed when too close to a fire.: Units bool",
      "messagetype": "action_APPLY HEAT TO SYSTEMS_get",
      "parameters": {}
    },
    {
      "name": "APU BLEED PRESSURE RECEIVED BY ENGINE_get",
      "displaytitle": "APU BLEED PRESSURE RECEIVED BY ENGINE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBleed air pressure received by the engine from the APU: Units pounds",
      "messagetype": "action_APU BLEED PRESSURE RECEIVED BY ENGINE_get",
      "parameters": {}
    },
    {
      "name": "APU GENERATOR ACTIVE:index",
      "displaytitle": "APU GENERATOR ACTIVE:index(Set)",
      "description": "Set the simvar Set or get whether an APU is active (true) or not (false). Takes an index to be able to have multiple generators on a single APU: Units bool",
      "messagetype": "action_APU GENERATOR ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "APU GENERATOR ACTIVE:index_get",
      "displaytitle": "APU GENERATOR ACTIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSet or get whether an APU is active (true) or not (false). Takes an index to be able to have multiple generators on a single APU: Units bool",
      "messagetype": "action_APU GENERATOR ACTIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "APU GENERATOR SWITCH:index_get",
      "displaytitle": "APU GENERATOR SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEnables or disables the APU for an engine. Takes an index to be able to have multiple generators on a single APU: Units bool",
      "messagetype": "action_APU GENERATOR SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "APU ON FIRE DETECTED_get",
      "displaytitle": "APU ON FIRE DETECTED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWill return true if the APU is on fire, or false otherwise: Units bool",
      "messagetype": "action_APU ON FIRE DETECTED_get",
      "parameters": {}
    },
    {
      "name": "APU PCT RPM_get",
      "displaytitle": "APU PCT RPM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAuxiliary power unit RPM, as a percentage: Units percent Over 100",
      "messagetype": "action_APU PCT RPM_get",
      "parameters": {}
    },
    {
      "name": "APU PCT STARTER_get",
      "displaytitle": "APU PCT STARTER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAuxiliary power unit starter, as a percentage: Units percent Over 100",
      "messagetype": "action_APU PCT STARTER_get",
      "parameters": {}
    },
    {
      "name": "APU SWITCH",
      "displaytitle": "APU SWITCH(Set)",
      "description": "Set the simvar Boolean, whether or not the APU is switched on: Units bool",
      "messagetype": "action_APU SWITCH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "APU SWITCH_get",
      "displaytitle": "APU SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBoolean, whether or not the APU is switched on: Units bool",
      "messagetype": "action_APU SWITCH_get",
      "parameters": {}
    },
    {
      "name": "APU VOLTS:index_get",
      "displaytitle": "APU VOLTS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe volts from the APU to the selected engine. Takes an index to be able to have multiple generators on a single APU: Units volts",
      "messagetype": "action_APU VOLTS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ARTIFICIAL GROUND ELEVATION_get",
      "displaytitle": "ARTIFICIAL GROUND ELEVATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIn case scenery is not loaded for AI planes, this variable can be used to set a default surface elevation.: Units feet",
      "messagetype": "action_ARTIFICIAL GROUND ELEVATION_get",
      "parameters": {}
    },
    {
      "name": "ASSISTANCE LANDING ENABLED_get",
      "displaytitle": "ASSISTANCE LANDING ENABLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether landing assistance has been enabled or not: Units bool",
      "messagetype": "action_ASSISTANCE LANDING ENABLED_get",
      "parameters": {}
    },
    {
      "name": "ASSISTANCE TAKEOFF ENABLED_get",
      "displaytitle": "ASSISTANCE TAKEOFF ENABLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether takeoff assistance has been enabled or not: Units bool",
      "messagetype": "action_ASSISTANCE TAKEOFF ENABLED_get",
      "parameters": {}
    },
    {
      "name": "ATC AIRLINE",
      "displaytitle": "ATC AIRLINE(Set)",
      "description": "Set the simvar The name of the Airline used by ATC, as a string with a maximum length of 50 characters.: Units null",
      "messagetype": "action_ATC AIRLINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC AIRLINE_get",
      "displaytitle": "ATC AIRLINE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe name of the Airline used by ATC, as a string with a maximum length of 50 characters.: Units null",
      "messagetype": "action_ATC AIRLINE_get",
      "parameters": {}
    },
    {
      "name": "ATC AIRPORT IS TOWERED_get",
      "displaytitle": "ATC AIRPORT IS TOWERED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIf the airport is controlled, this boolean is true.: Units bool",
      "messagetype": "action_ATC AIRPORT IS TOWERED_get",
      "parameters": {}
    },
    {
      "name": "ATC CLEARED IFR_get",
      "displaytitle": "ATC CLEARED IFR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether or not the user has filed an IFR flightplan that has been cleared by the sim ATC: Units bool",
      "messagetype": "action_ATC CLEARED IFR_get",
      "parameters": {}
    },
    {
      "name": "ATC CLEARED LANDING_get",
      "displaytitle": "ATC CLEARED LANDING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the ATC has cleared the plane for landing.: Units bool",
      "messagetype": "action_ATC CLEARED LANDING_get",
      "parameters": {}
    },
    {
      "name": "ATC CLEARED TAKEOFF_get",
      "displaytitle": "ATC CLEARED TAKEOFF(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the ATC has cleared the plane for takeoff.: Units bool",
      "messagetype": "action_ATC CLEARED TAKEOFF_get",
      "parameters": {}
    },
    {
      "name": "ATC CLEARED TAXI_get",
      "displaytitle": "ATC CLEARED TAXI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the ATC has cleared the plane for taxi.: Units bool",
      "messagetype": "action_ATC CLEARED TAXI_get",
      "parameters": {}
    },
    {
      "name": "ATC CURRENT WAYPOINT ALTITUDE_get",
      "displaytitle": "ATC CURRENT WAYPOINT ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the target altitude for the current ATC flightplan waypoint.: Units bool",
      "messagetype": "action_ATC CURRENT WAYPOINT ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "ATC FLIGHT NUMBER",
      "displaytitle": "ATC FLIGHT NUMBER(Set)",
      "description": "Set the simvar Flight Number used by ATC, as a string with a maximum number of 6 characters.: Units null",
      "messagetype": "action_ATC FLIGHT NUMBER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC FLIGHT NUMBER_get",
      "displaytitle": "ATC FLIGHT NUMBER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlight Number used by ATC, as a string with a maximum number of 6 characters.: Units null",
      "messagetype": "action_ATC FLIGHT NUMBER_get",
      "parameters": {}
    },
    {
      "name": "ATC FLIGHTPLAN DIFF ALT_get",
      "displaytitle": "ATC FLIGHTPLAN DIFF ALT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude between the position of the aircraft and his closest waypoints in the flightplan.: Units meters",
      "messagetype": "action_ATC FLIGHTPLAN DIFF ALT_get",
      "parameters": {}
    },
    {
      "name": "ATC FLIGHTPLAN DIFF DISTANCE_get",
      "displaytitle": "ATC FLIGHTPLAN DIFF DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the lateral distance the user's plane is from the ATC flight plan track.: Units meters",
      "messagetype": "action_ATC FLIGHTPLAN DIFF DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "ATC FLIGHTPLAN DIFF HEADING_get",
      "displaytitle": "ATC FLIGHTPLAN DIFF HEADING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerHeading between the position of the aircraft and his closest waypoints in the flightplan.: Units degrees",
      "messagetype": "action_ATC FLIGHTPLAN DIFF HEADING_get",
      "parameters": {}
    },
    {
      "name": "ATC HEAVY",
      "displaytitle": "ATC HEAVY(Set)",
      "description": "Set the simvar Is this aircraft recognized by ATC as heavy.: Units bool",
      "messagetype": "action_ATC HEAVY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC HEAVY_get",
      "displaytitle": "ATC HEAVY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs this aircraft recognized by ATC as heavy.: Units bool",
      "messagetype": "action_ATC HEAVY_get",
      "parameters": {}
    },
    {
      "name": "ATC ID",
      "displaytitle": "ATC ID(Set)",
      "description": "Set the simvar ID used by ATC, as a string with a maximum number of 10 characters.: Units null",
      "messagetype": "action_ATC ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ATC ID_get",
      "displaytitle": "ATC ID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerID used by ATC, as a string with a maximum number of 10 characters.: Units null",
      "messagetype": "action_ATC ID_get",
      "parameters": {}
    },
    {
      "name": "ATC IFR FP TO REQUEST_get",
      "displaytitle": "ATC IFR FP TO REQUEST(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the user has a valid IFR flight plan they can as for clearance for with ATC at the airport they are currently at.: Units bool",
      "messagetype": "action_ATC IFR FP TO REQUEST_get",
      "parameters": {}
    },
    {
      "name": "ATC MODEL_get",
      "displaytitle": "ATC MODEL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerModel used by ATC, as a string with a maximum number of 10 characters.: Units null",
      "messagetype": "action_ATC MODEL_get",
      "parameters": {}
    },
    {
      "name": "ATC ON PARKING SPOT_get",
      "displaytitle": "ATC ON PARKING SPOT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs ATC aircraft on parking spot.: Units bool",
      "messagetype": "action_ATC ON PARKING SPOT_get",
      "parameters": {}
    },
    {
      "name": "ATC PREVIOUS WAYPOINT ALTITUDE_get",
      "displaytitle": "ATC PREVIOUS WAYPOINT ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the target altitude for the previous ATC flightplan waypoint.: Units meters",
      "messagetype": "action_ATC PREVIOUS WAYPOINT ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY AIRPORT NAME_get",
      "displaytitle": "ATC RUNWAY AIRPORT NAME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe name of the airport of the runway assigned by the ATC. Returns \"\" if no runway is assigned.: Units null",
      "messagetype": "action_ATC RUNWAY AIRPORT NAME_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY DISTANCE_get",
      "displaytitle": "ATC RUNWAY DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the distance between the player's plane and the center of the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY END DISTANCE_get",
      "displaytitle": "ATC RUNWAY END DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is a float corresponding to the horizontal distance between the player's plane and the end of the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY END DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY HEADING DEGREES TRUE_get",
      "displaytitle": "ATC RUNWAY HEADING DEGREES TRUE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the true heading of the runway selected by the ATC.: Units degrees",
      "messagetype": "action_ATC RUNWAY HEADING DEGREES TRUE_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY LENGTH_get",
      "displaytitle": "ATC RUNWAY LENGTH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe length of the runway assigned by the ATC. Returns -1 if no runway is assigned.: Units meters",
      "messagetype": "action_ATC RUNWAY LENGTH_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY RELATIVE POSITION X_get",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is a float corresponding to the player's main gear relative X (transverse) position on the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY RELATIVE POSITION X_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY RELATIVE POSITION Y_get",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is a float corresponding to the player's main gear relative Y (height) position on the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY RELATIVE POSITION Y_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY RELATIVE POSITION Z_get",
      "displaytitle": "ATC RUNWAY RELATIVE POSITION Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is a float corresponding to the player's main gear relative Z (longitudinal) position on the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY RELATIVE POSITION Z_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY SELECTED_get",
      "displaytitle": "ATC RUNWAY SELECTED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is a boolean corresponding to whether or not the ATC has pre-selected a runway for the player's plane. If this is false, every other ATC RUNWAY * SimVar will return default values.: Units bool",
      "messagetype": "action_ATC RUNWAY SELECTED_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY START DISTANCE_get",
      "displaytitle": "ATC RUNWAY START DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is a float corresponding to the horizontal distance between the player's plane and the start of the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY START DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY TDPOINT RELATIVE POSITION X_get",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the player's main gear relative X (transverse) position according to the aiming point of the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY TDPOINT RELATIVE POSITION X_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY TDPOINT RELATIVE POSITION Y_get",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the player's main gear relative Y (height) position according to the aiming point of the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY TDPOINT RELATIVE POSITION Y_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY TDPOINT RELATIVE POSITION Z_get",
      "displaytitle": "ATC RUNWAY TDPOINT RELATIVE POSITION Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the player's main relative Z (longitudinal) position according to the aiming point of the runway selected by the ATC.: Units meters",
      "messagetype": "action_ATC RUNWAY TDPOINT RELATIVE POSITION Z_get",
      "parameters": {}
    },
    {
      "name": "ATC RUNWAY WIDTH_get",
      "displaytitle": "ATC RUNWAY WIDTH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe width of the runway assigned by the ATC. Returns -1 if no runway is assigned.: Units meters",
      "messagetype": "action_ATC RUNWAY WIDTH_get",
      "parameters": {}
    },
    {
      "name": "ATC SUGGESTED MIN RWY LANDING_get",
      "displaytitle": "ATC SUGGESTED MIN RWY LANDING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSuggested minimum runway length for landing. Used by ATC.: Units feet",
      "messagetype": "action_ATC SUGGESTED MIN RWY LANDING_get",
      "parameters": {}
    },
    {
      "name": "ATC SUGGESTED MIN RWY TAKEOFF_get",
      "displaytitle": "ATC SUGGESTED MIN RWY TAKEOFF(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSuggested minimum runway length for takeoff. Used by ATC.: Units feet",
      "messagetype": "action_ATC SUGGESTED MIN RWY TAKEOFF_get",
      "parameters": {}
    },
    {
      "name": "ATC TAXIPATH DISTANCE_get",
      "displaytitle": "ATC TAXIPATH DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the lateral distance the user's plane is from the path of the currently issued ATC taxi instructions.: Units meters",
      "messagetype": "action_ATC TAXIPATH DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "ATC TYPE_get",
      "displaytitle": "ATC TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerType used by ATC.: Units null",
      "messagetype": "action_ATC TYPE_get",
      "parameters": {}
    },
    {
      "name": "ATTITUDE BARS POSITION_get",
      "displaytitle": "ATTITUDE BARS POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAI reference pitch reference bars: Units percent Over 100",
      "messagetype": "action_ATTITUDE BARS POSITION_get",
      "parameters": {}
    },
    {
      "name": "ATTITUDE CAGE_get",
      "displaytitle": "ATTITUDE CAGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAI caged state: Units bool",
      "messagetype": "action_ATTITUDE CAGE_get",
      "parameters": {}
    },
    {
      "name": "ATTITUDE INDICATOR BANK DEGREES_get",
      "displaytitle": "ATTITUDE INDICATOR BANK DEGREES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAI bank indication: Units radians",
      "messagetype": "action_ATTITUDE INDICATOR BANK DEGREES_get",
      "parameters": {}
    },
    {
      "name": "ATTITUDE INDICATOR PITCH DEGREES_get",
      "displaytitle": "ATTITUDE INDICATOR PITCH DEGREES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAI pitch indication: Units radians",
      "messagetype": "action_ATTITUDE INDICATOR PITCH DEGREES_get",
      "parameters": {}
    },
    {
      "name": "AUDIO PANEL AVAILABLE_get",
      "displaytitle": "AUDIO PANEL AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the audio panel is available.: Units bool",
      "messagetype": "action_AUDIO PANEL AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "AUDIO PANEL VOLUME_get",
      "displaytitle": "AUDIO PANEL VOLUME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe Volume of the Audio Panel.: Units percent",
      "messagetype": "action_AUDIO PANEL VOLUME_get",
      "parameters": {}
    },
    {
      "name": "AUTO BRAKE SWITCH CB_get",
      "displaytitle": "AUTO BRAKE SWITCH CB(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAuto brake switch position: Units number",
      "messagetype": "action_AUTO BRAKE SWITCH CB_get",
      "parameters": {}
    },
    {
      "name": "AUTO COORDINATION",
      "displaytitle": "AUTO COORDINATION(Set)",
      "description": "Set the simvar Is auto-coordination active.: Units bool",
      "messagetype": "action_AUTO COORDINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTO COORDINATION_get",
      "displaytitle": "AUTO COORDINATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs auto-coordination active.: Units bool",
      "messagetype": "action_AUTO COORDINATION_get",
      "parameters": {}
    },
    {
      "name": "AUTOBRAKES ACTIVE_get",
      "displaytitle": "AUTOBRAKES ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the AutoBrakes are currently active: Units bool",
      "messagetype": "action_AUTOBRAKES ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT AIRSPEED ACQUISITION_get",
      "displaytitle": "AUTOPILOT AIRSPEED ACQUISITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrently not used within the simulation: Units bool",
      "messagetype": "action_AUTOPILOT AIRSPEED ACQUISITION_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT AIRSPEED HOLD_get",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerreturns whether airspeed hold is active (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT AIRSPEED HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT AIRSPEED HOLD CURRENT_get",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD CURRENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrently not used within the simulation: Units bool",
      "messagetype": "action_AUTOPILOT AIRSPEED HOLD CURRENT_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT AIRSPEED HOLD VAR_get",
      "displaytitle": "AUTOPILOT AIRSPEED HOLD VAR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the target holding airspeed for the autopilot: Units knots",
      "messagetype": "action_AUTOPILOT AIRSPEED HOLD VAR_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT AIRSPEED MAX CALCULATED_get",
      "displaytitle": "AUTOPILOT AIRSPEED MAX CALCULATED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the maximum calculated airspeed (kcas) limit set for the autopilot: Units knots",
      "messagetype": "action_AUTOPILOT AIRSPEED MAX CALCULATED_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT AIRSPEED MIN CALCULATED_get",
      "displaytitle": "AUTOPILOT AIRSPEED MIN CALCULATED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the minimum calculated airspeed (kcas) limit set for the autopilot: Units knots",
      "messagetype": "action_AUTOPILOT AIRSPEED MIN CALCULATED_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT ALT RADIO MODE_get",
      "displaytitle": "AUTOPILOT ALT RADIO MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIf enabled the Autopilot will use the Radio Altitude rather than the Indicated Altitude: Units bool",
      "messagetype": "action_AUTOPILOT ALT RADIO MODE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT ALTITUDE ARM_get",
      "displaytitle": "AUTOPILOT ALTITUDE ARM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot is in Altitude Arm mode (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT ALTITUDE ARM_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT ALTITUDE LOCK_get",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude hold active: Units bool",
      "messagetype": "action_AUTOPILOT ALTITUDE LOCK_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT ALTITUDE LOCK VAR",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK VAR(Set)",
      "description": "Set the simvar Set or get the slot index which the altitude hold mode will track when captured. See alt_mode_slot_index for more information: Units feet",
      "messagetype": "action_AUTOPILOT ALTITUDE LOCK VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT ALTITUDE LOCK VAR_get",
      "displaytitle": "AUTOPILOT ALTITUDE LOCK VAR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSet or get the slot index which the altitude hold mode will track when captured. See alt_mode_slot_index for more information: Units feet",
      "messagetype": "action_AUTOPILOT ALTITUDE LOCK VAR_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT ALTITUDE MANUALLY TUNABLE_get",
      "displaytitle": "AUTOPILOT ALTITUDE MANUALLY TUNABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the autopilot altitude is manually tunable or not: Units bool",
      "messagetype": "action_AUTOPILOT ALTITUDE MANUALLY TUNABLE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT ALTITUDE SLOT INDEX_get",
      "displaytitle": "AUTOPILOT ALTITUDE SLOT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of the slot that the autopilot will use for the altitude reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number",
      "messagetype": "action_AUTOPILOT ALTITUDE SLOT INDEX_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT APPROACH ACTIVE_get",
      "displaytitle": "AUTOPILOT APPROACH ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhen true, the autopilot is currently flying the approach Flight Plan (the last legs): Units bool",
      "messagetype": "action_AUTOPILOT APPROACH ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT APPROACH ARM_get",
      "displaytitle": "AUTOPILOT APPROACH ARM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true when the autopilot is active on the approach, once it reaches the adequate condition (in most cases, once it reaches the second-last waypoint of the flightplan): Units bool",
      "messagetype": "action_AUTOPILOT APPROACH ARM_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT APPROACH CAPTURED_get",
      "displaytitle": "AUTOPILOT APPROACH CAPTURED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true when the lateral NAV mode is engaged and the angular deviation with the current tuned navigation frequency is less than 5°: Units bool",
      "messagetype": "action_AUTOPILOT APPROACH CAPTURED_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT APPROACH HOLD_get",
      "displaytitle": "AUTOPILOT APPROACH HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether pproach mode is active (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT APPROACH HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT APPROACH IS LOCALIZER_get",
      "displaytitle": "AUTOPILOT APPROACH IS LOCALIZER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the current approach is using a localizer: Units bool",
      "messagetype": "action_AUTOPILOT APPROACH IS LOCALIZER_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT ATTITUDE HOLD_get",
      "displaytitle": "AUTOPILOT ATTITUDE HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAttitude hold active: Units bool",
      "messagetype": "action_AUTOPILOT ATTITUDE HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT AVAILABLE_get",
      "displaytitle": "AUTOPILOT AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAvailable flag: Units bool",
      "messagetype": "action_AUTOPILOT AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT AVIONICS MANAGED_get",
      "displaytitle": "AUTOPILOT AVIONICS MANAGED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot has active managed avionics (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT AVIONICS MANAGED_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT BACKCOURSE HOLD_get",
      "displaytitle": "AUTOPILOT BACKCOURSE HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot back course mode is active (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT BACKCOURSE HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT BANK HOLD_get",
      "displaytitle": "AUTOPILOT BANK HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot bank hold mode is active (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT BANK HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT BANK HOLD REF",
      "displaytitle": "AUTOPILOT BANK HOLD REF(Set)",
      "description": "Set the simvar The current bank-hold bank reference. Note that if you set this, the next frame the value will be overwritten by the engine, so you may need to write to this every game frame to ensure it maintains the required value: Units degrees",
      "messagetype": "action_AUTOPILOT BANK HOLD REF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT BANK HOLD REF_get",
      "displaytitle": "AUTOPILOT BANK HOLD REF(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current bank-hold bank reference. Note that if you set this, the next frame the value will be overwritten by the engine, so you may need to write to this every game frame to ensure it maintains the required value: Units degrees",
      "messagetype": "action_AUTOPILOT BANK HOLD REF_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT CRUISE SPEED HOLD_get",
      "displaytitle": "AUTOPILOT CRUISE SPEED HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrently not used within the simulation: Units bool",
      "messagetype": "action_AUTOPILOT CRUISE SPEED HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT DEFAULT PITCH MODE_get",
      "displaytitle": "AUTOPILOT DEFAULT PITCH MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current default pitch mode of the autopilot as configured in the plane configuration with the parameter default_pitch_mode: Units enum",
      "messagetype": "action_AUTOPILOT DEFAULT PITCH MODE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT DEFAULT ROLL MODE_get",
      "displaytitle": "AUTOPILOT DEFAULT ROLL MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current default roll mode of the autopilot as configured in the plane configuration with the parameter default_bank_mode: Units enum",
      "messagetype": "action_AUTOPILOT DEFAULT ROLL MODE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT DISENGAGED_get",
      "displaytitle": "AUTOPILOT DISENGAGED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot has been disengaged (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT DISENGAGED_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR ACTIVE_get",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlight director active: Units bool",
      "messagetype": "action_AUTOPILOT FLIGHT DIRECTOR ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR BANK_get",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR BANK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReference bank angle: Units radians",
      "messagetype": "action_AUTOPILOT FLIGHT DIRECTOR BANK_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR BANK EX1_get",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR BANK EX1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRaw reference bank angle: Units radians",
      "messagetype": "action_AUTOPILOT FLIGHT DIRECTOR BANK EX1_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR PITCH_get",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR PITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReference pitch angle: Units radians",
      "messagetype": "action_AUTOPILOT FLIGHT DIRECTOR PITCH_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT FLIGHT DIRECTOR PITCH EX1_get",
      "displaytitle": "AUTOPILOT FLIGHT DIRECTOR PITCH EX1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRaw reference pitch angle: Units radians",
      "messagetype": "action_AUTOPILOT FLIGHT DIRECTOR PITCH EX1_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT FLIGHT LEVEL CHANGE",
      "displaytitle": "AUTOPILOT FLIGHT LEVEL CHANGE(Set)",
      "description": "Set the simvar Boolean, toggles the autopilot Flight Level Change mode: Units bool",
      "messagetype": "action_AUTOPILOT FLIGHT LEVEL CHANGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT FLIGHT LEVEL CHANGE_get",
      "displaytitle": "AUTOPILOT FLIGHT LEVEL CHANGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBoolean, toggles the autopilot Flight Level Change mode: Units bool",
      "messagetype": "action_AUTOPILOT FLIGHT LEVEL CHANGE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT GLIDESLOPE ACTIVE_get",
      "displaytitle": "AUTOPILOT GLIDESLOPE ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhen true, the autopilot is receiving a signal from the runway beacon and is following the slope to reach the ground: Units bool",
      "messagetype": "action_AUTOPILOT GLIDESLOPE ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT GLIDESLOPE ARM_get",
      "displaytitle": "AUTOPILOT GLIDESLOPE ARM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true when the autopilot is active on the glide slope: Units bool",
      "messagetype": "action_AUTOPILOT GLIDESLOPE ARM_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT GLIDESLOPE HOLD_get",
      "displaytitle": "AUTOPILOT GLIDESLOPE HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot glidslope hold is active (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT GLIDESLOPE HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT HEADING LOCK_get",
      "displaytitle": "AUTOPILOT HEADING LOCK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot heading lock is enabled (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT HEADING LOCK_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT HEADING LOCK DIR",
      "displaytitle": "AUTOPILOT HEADING LOCK DIR(Set)",
      "description": "Set the simvar Specifies / Returns the locked in heading for the autopilot: Units degrees",
      "messagetype": "action_AUTOPILOT HEADING LOCK DIR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT HEADING LOCK DIR_get",
      "displaytitle": "AUTOPILOT HEADING LOCK DIR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSpecifies / Returns the locked in heading for the autopilot: Units degrees",
      "messagetype": "action_AUTOPILOT HEADING LOCK DIR_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT HEADING MANUALLY TUNABLE",
      "displaytitle": "AUTOPILOT HEADING MANUALLY TUNABLE(Set)",
      "description": "Set the simvar Whether or not the autopilot heading is manually tunable or not: Units bool",
      "messagetype": "action_AUTOPILOT HEADING MANUALLY TUNABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT HEADING MANUALLY TUNABLE_get",
      "displaytitle": "AUTOPILOT HEADING MANUALLY TUNABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the autopilot heading is manually tunable or not: Units bool",
      "messagetype": "action_AUTOPILOT HEADING MANUALLY TUNABLE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT HEADING SLOT INDEX_get",
      "displaytitle": "AUTOPILOT HEADING SLOT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of the slot that the autopilot will use for the heading reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number",
      "messagetype": "action_AUTOPILOT HEADING SLOT INDEX_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MACH HOLD_get",
      "displaytitle": "AUTOPILOT MACH HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMach hold active: Units bool",
      "messagetype": "action_AUTOPILOT MACH HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MACH HOLD VAR_get",
      "displaytitle": "AUTOPILOT MACH HOLD VAR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the target holding mach airspeed for the autopilot: Units number",
      "messagetype": "action_AUTOPILOT MACH HOLD VAR_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MANAGED INDEX_get",
      "displaytitle": "AUTOPILOT MANAGED INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrently not used within the simulation: Units number",
      "messagetype": "action_AUTOPILOT MANAGED INDEX_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MANAGED SPEED IN MACH_get",
      "displaytitle": "AUTOPILOT MANAGED SPEED IN MACH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the managed speed is in mach (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT MANAGED SPEED IN MACH_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MANAGED THROTTLE ACTIVE_get",
      "displaytitle": "AUTOPILOT MANAGED THROTTLE ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot managed throttle is active (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT MANAGED THROTTLE ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MASTER_get",
      "displaytitle": "AUTOPILOT MASTER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOn/off flag: Units bool",
      "messagetype": "action_AUTOPILOT MASTER_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MAX BANK_get",
      "displaytitle": "AUTOPILOT MAX BANK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the maximum banking angle for the autopilot, in radians.: Units radians",
      "messagetype": "action_AUTOPILOT MAX BANK_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MAX BANK ID_get",
      "displaytitle": "AUTOPILOT MAX BANK ID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the index of the current maximum bank setting of the autopilot: Units number",
      "messagetype": "action_AUTOPILOT MAX BANK ID_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT MAX SPEED HOLD_get",
      "displaytitle": "AUTOPILOT MAX SPEED HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrently not used within the simulation: Units bool",
      "messagetype": "action_AUTOPILOT MAX SPEED HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT NAV SELECTED_get",
      "displaytitle": "AUTOPILOT NAV SELECTED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of Nav radio selected: Units number",
      "messagetype": "action_AUTOPILOT NAV SELECTED_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT NAV1 LOCK_get",
      "displaytitle": "AUTOPILOT NAV1 LOCK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns TRUE (1) if the autopilot Nav1 lock is applied, or 0 (FALSE) otherwise: Units bool",
      "messagetype": "action_AUTOPILOT NAV1 LOCK_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT PITCH HOLD_get",
      "displaytitle": "AUTOPILOT PITCH HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSet to True if the autopilot pitch hold has is engaged: Units bool",
      "messagetype": "action_AUTOPILOT PITCH HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT PITCH HOLD REF_get",
      "displaytitle": "AUTOPILOT PITCH HOLD REF(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the current autotpilot reference pitch.: Units radians",
      "messagetype": "action_AUTOPILOT PITCH HOLD REF_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT RPM HOLD_get",
      "displaytitle": "AUTOPILOT RPM HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if autopilot rpm hold applied: Units bool",
      "messagetype": "action_AUTOPILOT RPM HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT RPM HOLD VAR_get",
      "displaytitle": "AUTOPILOT RPM HOLD VAR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSelected rpm: Units number",
      "messagetype": "action_AUTOPILOT RPM HOLD VAR_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT RPM SLOT INDEX_get",
      "displaytitle": "AUTOPILOT RPM SLOT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of the slot that the autopilot will use for the RPM reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number",
      "messagetype": "action_AUTOPILOT RPM SLOT INDEX_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT SPEED SETTING_get",
      "displaytitle": "AUTOPILOT SPEED SETTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrently not used within the simulation: Units knots",
      "messagetype": "action_AUTOPILOT SPEED SETTING_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT SPEED SLOT INDEX_get",
      "displaytitle": "AUTOPILOT SPEED SLOT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of the managed references: Units number",
      "messagetype": "action_AUTOPILOT SPEED SLOT INDEX_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT TAKEOFF POWER ACTIVE_get",
      "displaytitle": "AUTOPILOT TAKEOFF POWER ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTakeoff / Go Around power mode active: Units bool",
      "messagetype": "action_AUTOPILOT TAKEOFF POWER ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT THROTTLE ARM_get",
      "displaytitle": "AUTOPILOT THROTTLE ARM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the autopilot auto-throttle is armed (1, TRUE) or not (0, FALSE): Units bool",
      "messagetype": "action_AUTOPILOT THROTTLE ARM_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT THROTTLE MAX THRUST",
      "displaytitle": "AUTOPILOT THROTTLE MAX THRUST(Set)",
      "description": "Set the simvar This can be used to set/get the thrust lever position for autopilot maximum thrust: Units percent",
      "messagetype": "action_AUTOPILOT THROTTLE MAX THRUST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT THROTTLE MAX THRUST_get",
      "displaytitle": "AUTOPILOT THROTTLE MAX THRUST(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to set/get the thrust lever position for autopilot maximum thrust: Units percent",
      "messagetype": "action_AUTOPILOT THROTTLE MAX THRUST_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT VERTICAL HOLD_get",
      "displaytitle": "AUTOPILOT VERTICAL HOLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if autopilot vertical hold applied: Units bool",
      "messagetype": "action_AUTOPILOT VERTICAL HOLD_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT VERTICAL HOLD VAR",
      "displaytitle": "AUTOPILOT VERTICAL HOLD VAR(Set)",
      "description": "Set the simvar Selected vertical speed: Units feet",
      "messagetype": "action_AUTOPILOT VERTICAL HOLD VAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "AUTOPILOT VERTICAL HOLD VAR_get",
      "displaytitle": "AUTOPILOT VERTICAL HOLD VAR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSelected vertical speed: Units feet",
      "messagetype": "action_AUTOPILOT VERTICAL HOLD VAR_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT VS SLOT INDEX_get",
      "displaytitle": "AUTOPILOT VS SLOT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of the slot that the autopilot will use for the VS reference. Note that there are 3 slots (1, 2, 3) that you can set/get normally, however you can also target slot index 0. Writing to slot 0 will overwrite all other slots with the slot 0 value, and by default the autopilot will follow slot 0 if you have not selected any slot index: Units number",
      "messagetype": "action_AUTOPILOT VS SLOT INDEX_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT WING LEVELER_get",
      "displaytitle": "AUTOPILOT WING LEVELER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWing leveler active: Units bool",
      "messagetype": "action_AUTOPILOT WING LEVELER_get",
      "parameters": {}
    },
    {
      "name": "AUTOPILOT YAW DAMPER_get",
      "displaytitle": "AUTOPILOT YAW DAMPER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerYaw damper active: Units bool",
      "messagetype": "action_AUTOPILOT YAW DAMPER_get",
      "parameters": {}
    },
    {
      "name": "AUTOTHROTTLE ACTIVE_get",
      "displaytitle": "AUTOTHROTTLE ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAuto-throttle active.: Units bool",
      "messagetype": "action_AUTOTHROTTLE ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "AUX WHEEL ROTATION ANGLE_get",
      "displaytitle": "AUX WHEEL ROTATION ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAux wheel rotation angle (rotation around the axis for the wheel): Units radians",
      "messagetype": "action_AUX WHEEL ROTATION ANGLE_get",
      "parameters": {}
    },
    {
      "name": "AUX WHEEL RPM_get",
      "displaytitle": "AUX WHEEL RPM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRpm of fourth set of gear wheels: Units RPM",
      "messagetype": "action_AUX WHEEL RPM_get",
      "parameters": {}
    },
    {
      "name": "AVIONICS MASTER SWITCH:index_get",
      "displaytitle": "AVIONICS MASTER SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe avionics master switch position, true if the switch is ON. Use an avionics circuit index when referencing.: Units bool",
      "messagetype": "action_AVIONICS MASTER SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "BAGGAGELOADER ANGLE CURRENT_get",
      "displaytitle": "BAGGAGELOADER ANGLE CURRENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent angle of the baggage loader ramp, relative to the ground.: Units degrees",
      "messagetype": "action_BAGGAGELOADER ANGLE CURRENT_get",
      "parameters": {}
    },
    {
      "name": "BAGGAGELOADER ANGLE TARGET_get",
      "displaytitle": "BAGGAGELOADER ANGLE TARGET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTarget angle of the baggage loader ramp, relative to the ground.: Units degrees",
      "messagetype": "action_BAGGAGELOADER ANGLE TARGET_get",
      "parameters": {}
    },
    {
      "name": "BAGGAGELOADER END RAMP Y_get",
      "displaytitle": "BAGGAGELOADER END RAMP Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger\"Y\" axis position of the end of the baggage loader ramp, relative to the ground.: Units meters",
      "messagetype": "action_BAGGAGELOADER END RAMP Y_get",
      "parameters": {}
    },
    {
      "name": "BAGGAGELOADER END RAMP Z_get",
      "displaytitle": "BAGGAGELOADER END RAMP Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger\"Z\" axis position of the end of the baggage loader ramp, relative to the ground.: Units meters",
      "messagetype": "action_BAGGAGELOADER END RAMP Z_get",
      "parameters": {}
    },
    {
      "name": "BAGGAGELOADER PIVOT Y_get",
      "displaytitle": "BAGGAGELOADER PIVOT Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger\"Y\" axis position of the baggage loader ramp pivot, relative to the ground.: Units meters",
      "messagetype": "action_BAGGAGELOADER PIVOT Y_get",
      "parameters": {}
    },
    {
      "name": "BAGGAGELOADER PIVOT Z_get",
      "displaytitle": "BAGGAGELOADER PIVOT Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger\"Z\" axis position of the baggage loader ramp pivot, relative to the ground.: Units meters",
      "messagetype": "action_BAGGAGELOADER PIVOT Z_get",
      "parameters": {}
    },
    {
      "name": "BARBER POLE MACH_get",
      "displaytitle": "BARBER POLE MACH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMach associated with maximum airspeed.: Units mach",
      "messagetype": "action_BARBER POLE MACH_get",
      "parameters": {}
    },
    {
      "name": "BAROMETER PRESSURE_get",
      "displaytitle": "BAROMETER PRESSURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBarometric pressure.: Units Millibars",
      "messagetype": "action_BAROMETER PRESSURE_get",
      "parameters": {}
    },
    {
      "name": "BATTERY BREAKER PULLED",
      "displaytitle": "BATTERY BREAKER PULLED(Set)",
      "description": "Set the simvar This will be true if the battery breaker is pulled. Requires a BUS LOOKUP INDEX and a battery index: Units bool",
      "messagetype": "action_BATTERY BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BATTERY BREAKER PULLED_get",
      "displaytitle": "BATTERY BREAKER PULLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the battery breaker is pulled. Requires a BUS LOOKUP INDEX and a battery index: Units bool",
      "messagetype": "action_BATTERY BREAKER PULLED_get",
      "parameters": {}
    },
    {
      "name": "BATTERY CONNECTION ON_get",
      "displaytitle": "BATTERY CONNECTION ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the battery is connected. Requires a BUS_LOOKUP_INDEX and a battery index: Units bool",
      "messagetype": "action_BATTERY CONNECTION ON_get",
      "parameters": {}
    },
    {
      "name": "BETA DOT_get",
      "displaytitle": "BETA DOT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBeta dot: Units radians per second",
      "messagetype": "action_BETA DOT_get",
      "parameters": {}
    },
    {
      "name": "BLAST SHIELD POSITION:index_get",
      "displaytitle": "BLAST SHIELD POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndexed from 1, 100 is fully deployed, 0 flat on deck: Units percent Over 100",
      "messagetype": "action_BLAST SHIELD POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "BLEED AIR APU_get",
      "displaytitle": "BLEED AIR APU(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBoolean, returns whether or not the APU attempts to provide Bleed Air: Units bool",
      "messagetype": "action_BLEED AIR APU_get",
      "parameters": {}
    },
    {
      "name": "BLEED AIR ENGINE:index_get",
      "displaytitle": "BLEED AIR ENGINE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether or not the indexed engine attempts to provide bleed air: Units bool",
      "messagetype": "action_BLEED AIR ENGINE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "BLEED AIR SOURCE CONTROL:index_get",
      "displaytitle": "BLEED AIR SOURCE CONTROL:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe bleed air system source controller for an indexed engine: Units enum",
      "messagetype": "action_BLEED AIR SOURCE CONTROL:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "BOARDINGRAMP ELEVATION CURRENT_get",
      "displaytitle": "BOARDINGRAMP ELEVATION CURRENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current altitude AGL of the top of the boarding ramp stairs.: Units meters",
      "messagetype": "action_BOARDINGRAMP ELEVATION CURRENT_get",
      "parameters": {}
    },
    {
      "name": "BOARDINGRAMP ELEVATION TARGET_get",
      "displaytitle": "BOARDINGRAMP ELEVATION TARGET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe target altitude AGL of the top of the boarding ramp stairs.: Units meters",
      "messagetype": "action_BOARDINGRAMP ELEVATION TARGET_get",
      "parameters": {}
    },
    {
      "name": "BOARDINGRAMP END POSITION Y_get",
      "displaytitle": "BOARDINGRAMP END POSITION Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Y\" axis position of the top of the boarding ramp stairs when extended at maximal capacity, relative to the ground.: Units meters",
      "messagetype": "action_BOARDINGRAMP END POSITION Y_get",
      "parameters": {}
    },
    {
      "name": "BOARDINGRAMP END POSITION Z_get",
      "displaytitle": "BOARDINGRAMP END POSITION Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Z\" axis position of the top of the boarding ramp stairs when extended at maximal capacity, relative to the ground.: Units meters",
      "messagetype": "action_BOARDINGRAMP END POSITION Z_get",
      "parameters": {}
    },
    {
      "name": "BOARDINGRAMP ORIENTATION CURRENT_get",
      "displaytitle": "BOARDINGRAMP ORIENTATION CURRENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current orientation of the boarding ramp stairs, where 0 is at rest and 1 is suited for boarding.: Units percent Over 100",
      "messagetype": "action_BOARDINGRAMP ORIENTATION CURRENT_get",
      "parameters": {}
    },
    {
      "name": "BOARDINGRAMP ORIENTATION TARGET_get",
      "displaytitle": "BOARDINGRAMP ORIENTATION TARGET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe target orientation of of the boarding ramp stairs, where 0 is at rest and 1 is suited for boarding.: Units percent Over 100",
      "messagetype": "action_BOARDINGRAMP ORIENTATION TARGET_get",
      "parameters": {}
    },
    {
      "name": "BOARDINGRAMP START POSITION Y_get",
      "displaytitle": "BOARDINGRAMP START POSITION Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Y\" axis position of the top of the boarding ramp stairs when at minimal extension, relative to the ground.: Units meters",
      "messagetype": "action_BOARDINGRAMP START POSITION Y_get",
      "parameters": {}
    },
    {
      "name": "BOARDINGRAMP START POSITION Z_get",
      "displaytitle": "BOARDINGRAMP START POSITION Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Z\" axis position of the top of the boarding ramp stairs when at minimal extension, relative to the ground.: Units meters",
      "messagetype": "action_BOARDINGRAMP START POSITION Z_get",
      "parameters": {}
    },
    {
      "name": "BRAKE DEPENDENT HYDRAULIC PRESSURE_get",
      "displaytitle": "BRAKE DEPENDENT HYDRAULIC PRESSURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBrake dependent hydraulic pressure reading: Units pounds",
      "messagetype": "action_BRAKE DEPENDENT HYDRAULIC PRESSURE_get",
      "parameters": {}
    },
    {
      "name": "BRAKE INDICATOR_get",
      "displaytitle": "BRAKE INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBrake on indication: Units position",
      "messagetype": "action_BRAKE INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "BRAKE LEFT POSITION",
      "displaytitle": "BRAKE LEFT POSITION(Set)",
      "description": "Set the simvar Percent left brake: Units position",
      "messagetype": "action_BRAKE LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE LEFT POSITION_get",
      "displaytitle": "BRAKE LEFT POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent left brake: Units position",
      "messagetype": "action_BRAKE LEFT POSITION_get",
      "parameters": {}
    },
    {
      "name": "BRAKE LEFT POSITION EX1",
      "displaytitle": "BRAKE LEFT POSITION EX1(Set)",
      "description": "Set the simvar Percent left brake, ignoring the effect of the parking brake: Units position",
      "messagetype": "action_BRAKE LEFT POSITION EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE LEFT POSITION EX1_get",
      "displaytitle": "BRAKE LEFT POSITION EX1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent left brake, ignoring the effect of the parking brake: Units position",
      "messagetype": "action_BRAKE LEFT POSITION EX1_get",
      "parameters": {}
    },
    {
      "name": "BRAKE PARKING INDICATOR_get",
      "displaytitle": "BRAKE PARKING INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerParking brake indicator: Units bool",
      "messagetype": "action_BRAKE PARKING INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "BRAKE PARKING POSITION_get",
      "displaytitle": "BRAKE PARKING POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGets the parking brake position - either on (true) or off (false): Units bool",
      "messagetype": "action_BRAKE PARKING POSITION_get",
      "parameters": {}
    },
    {
      "name": "BRAKE RIGHT POSITION",
      "displaytitle": "BRAKE RIGHT POSITION(Set)",
      "description": "Set the simvar Percent right brake: Units position",
      "messagetype": "action_BRAKE RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE RIGHT POSITION_get",
      "displaytitle": "BRAKE RIGHT POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent right brake: Units position",
      "messagetype": "action_BRAKE RIGHT POSITION_get",
      "parameters": {}
    },
    {
      "name": "BRAKE RIGHT POSITION EX1",
      "displaytitle": "BRAKE RIGHT POSITION EX1(Set)",
      "description": "Set the simvar Percent right brake, ignoring the effect of the parking brake: Units position",
      "messagetype": "action_BRAKE RIGHT POSITION EX1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BRAKE RIGHT POSITION EX1_get",
      "displaytitle": "BRAKE RIGHT POSITION EX1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent right brake, ignoring the effect of the parking brake: Units position",
      "messagetype": "action_BRAKE RIGHT POSITION EX1_get",
      "parameters": {}
    },
    {
      "name": "BREAKER ADF",
      "displaytitle": "BREAKER ADF(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER ADF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER ADF_get",
      "displaytitle": "BREAKER ADF(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER ADF_get",
      "parameters": {}
    },
    {
      "name": "BREAKER ALTFLD",
      "displaytitle": "BREAKER ALTFLD(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER ALTFLD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER ALTFLD_get",
      "displaytitle": "BREAKER ALTFLD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER ALTFLD_get",
      "parameters": {}
    },
    {
      "name": "BREAKER AUTOPILOT",
      "displaytitle": "BREAKER AUTOPILOT(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER AUTOPILOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER AUTOPILOT_get",
      "displaytitle": "BREAKER AUTOPILOT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER AUTOPILOT_get",
      "parameters": {}
    },
    {
      "name": "BREAKER AVNBUS1",
      "displaytitle": "BREAKER AVNBUS1(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER AVNBUS1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER AVNBUS1_get",
      "displaytitle": "BREAKER AVNBUS1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER AVNBUS1_get",
      "parameters": {}
    },
    {
      "name": "BREAKER AVNBUS2",
      "displaytitle": "BREAKER AVNBUS2(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER AVNBUS2",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER AVNBUS2_get",
      "displaytitle": "BREAKER AVNBUS2(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER AVNBUS2_get",
      "parameters": {}
    },
    {
      "name": "BREAKER AVNFAN",
      "displaytitle": "BREAKER AVNFAN(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER AVNFAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER AVNFAN_get",
      "displaytitle": "BREAKER AVNFAN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER AVNFAN_get",
      "parameters": {}
    },
    {
      "name": "BREAKER FLAP",
      "displaytitle": "BREAKER FLAP(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER FLAP",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER FLAP_get",
      "displaytitle": "BREAKER FLAP(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER FLAP_get",
      "parameters": {}
    },
    {
      "name": "BREAKER GPS",
      "displaytitle": "BREAKER GPS(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER GPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER GPS_get",
      "displaytitle": "BREAKER GPS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER GPS_get",
      "parameters": {}
    },
    {
      "name": "BREAKER INST",
      "displaytitle": "BREAKER INST(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER INST",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER INST_get",
      "displaytitle": "BREAKER INST(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER INST_get",
      "parameters": {}
    },
    {
      "name": "BREAKER INSTLTS",
      "displaytitle": "BREAKER INSTLTS(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER INSTLTS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER INSTLTS_get",
      "displaytitle": "BREAKER INSTLTS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER INSTLTS_get",
      "parameters": {}
    },
    {
      "name": "BREAKER NAVCOM1",
      "displaytitle": "BREAKER NAVCOM1(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER NAVCOM1",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER NAVCOM1_get",
      "displaytitle": "BREAKER NAVCOM1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER NAVCOM1_get",
      "parameters": {}
    },
    {
      "name": "BREAKER NAVCOM2",
      "displaytitle": "BREAKER NAVCOM2(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER NAVCOM2",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER NAVCOM2_get",
      "displaytitle": "BREAKER NAVCOM2(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER NAVCOM2_get",
      "parameters": {}
    },
    {
      "name": "BREAKER NAVCOM3",
      "displaytitle": "BREAKER NAVCOM3(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER NAVCOM3",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER NAVCOM3_get",
      "displaytitle": "BREAKER NAVCOM3(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER NAVCOM3_get",
      "parameters": {}
    },
    {
      "name": "BREAKER TURNCOORD",
      "displaytitle": "BREAKER TURNCOORD(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER TURNCOORD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER TURNCOORD_get",
      "displaytitle": "BREAKER TURNCOORD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER TURNCOORD_get",
      "parameters": {}
    },
    {
      "name": "BREAKER WARN",
      "displaytitle": "BREAKER WARN(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER WARN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER WARN_get",
      "displaytitle": "BREAKER WARN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER WARN_get",
      "parameters": {}
    },
    {
      "name": "BREAKER XPNDR",
      "displaytitle": "BREAKER XPNDR(Set)",
      "description": "Set the simvar Can be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER XPNDR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BREAKER XPNDR_get",
      "displaytitle": "BREAKER XPNDR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the breaker state for the electrical system: Units bool",
      "messagetype": "action_BREAKER XPNDR_get",
      "parameters": {}
    },
    {
      "name": "BUS BREAKER PULLED",
      "displaytitle": "BUS BREAKER PULLED(Set)",
      "description": "Set the simvar This will be true if the bus breaker is pulled. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool",
      "messagetype": "action_BUS BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "BUS BREAKER PULLED_get",
      "displaytitle": "BUS BREAKER PULLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the bus breaker is pulled. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool",
      "messagetype": "action_BUS BREAKER PULLED_get",
      "parameters": {}
    },
    {
      "name": "BUS CONNECTION ON_get",
      "displaytitle": "BUS CONNECTION ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the bus is connected. Requires a BUS_LOOKUP_INDEX and a bus index: Units bool",
      "messagetype": "action_BUS CONNECTION ON_get",
      "parameters": {}
    },
    {
      "name": "CABIN NO SMOKING ALERT SWITCH_get",
      "displaytitle": "CABIN NO SMOKING ALERT SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the No Smoking switch is on.: Units bool",
      "messagetype": "action_CABIN NO SMOKING ALERT SWITCH_get",
      "parameters": {}
    },
    {
      "name": "CABIN SEATBELTS ALERT SWITCH_get",
      "displaytitle": "CABIN SEATBELTS ALERT SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the Seatbelts switch is on.: Units bool",
      "messagetype": "action_CABIN SEATBELTS ALERT SWITCH_get",
      "parameters": {}
    },
    {
      "name": "CABLE CAUGHT BY TAILHOOK:index_get",
      "displaytitle": "CABLE CAUGHT BY TAILHOOK:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerA number 1 through 4 for the cable number caught by the tailhook. Cable 1 is the one closest to the stern of the carrier. A value of 0 indicates no cable was caught: Units number",
      "messagetype": "action_CABLE CAUGHT BY TAILHOOK:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CAMERA ACTION COCKPIT VIEW RESET",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW RESET(Set)",
      "description": "Set the simvar This can be used to reset the cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). Essentially the same as the user pressing the default reset keys CTRL + Space.: Units bool",
      "messagetype": "action_CAMERA ACTION COCKPIT VIEW RESET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CAMERA ACTION COCKPIT VIEW RESET_get",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW RESET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to reset the cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). Essentially the same as the user pressing the default reset keys CTRL + Space.: Units bool",
      "messagetype": "action_CAMERA ACTION COCKPIT VIEW RESET_get",
      "parameters": {}
    },
    {
      "name": "CAMERA ACTION COCKPIT VIEW SAVE:index",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW SAVE:index(Set)",
      "description": "Set the simvar This can be used to save a cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). The index value given is the save \"slot\" that will be used, from 0 to 9. Essentially this is the same as the user pressing the default save keys CTRL + Alt + 0-9.: Units bool",
      "messagetype": "action_CAMERA ACTION COCKPIT VIEW SAVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CAMERA ACTION COCKPIT VIEW SAVE:index_get",
      "displaytitle": "CAMERA ACTION COCKPIT VIEW SAVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to save a cockpit camera when the CAMERA_STATE is set to 2 (Cockpit). The index value given is the save \"slot\" that will be used, from 0 to 9. Essentially this is the same as the user pressing the default save keys CTRL + Alt + 0-9.: Units bool",
      "messagetype": "action_CAMERA ACTION COCKPIT VIEW SAVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CAMERA GAMEPLAY PITCH YAW:index_get",
      "displaytitle": "CAMERA GAMEPLAY PITCH YAW:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns either the pitch (index 0) or the yaw (index 1) of the current gameplay camera.: Units radians",
      "messagetype": "action_CAMERA GAMEPLAY PITCH YAW:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CAMERA REQUEST ACTION",
      "displaytitle": "CAMERA REQUEST ACTION(Set)",
      "description": "Set the simvar This can be used to have the currently active camera perform a predefined action. Currently only 1 action is supported, but more may be added over time.: Units enum",
      "messagetype": "action_CAMERA REQUEST ACTION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CAMERA REQUEST ACTION_get",
      "displaytitle": "CAMERA REQUEST ACTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to have the currently active camera perform a predefined action. Currently only 1 action is supported, but more may be added over time.: Units enum",
      "messagetype": "action_CAMERA REQUEST ACTION_get",
      "parameters": {}
    },
    {
      "name": "CAMERA STATE",
      "displaytitle": "CAMERA STATE(Set)",
      "description": "Set the simvar This can be used to get or set the camera \"state\", which will be one of the listed enum values.: Units enum",
      "messagetype": "action_CAMERA STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CAMERA STATE_get",
      "displaytitle": "CAMERA STATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to get or set the camera \"state\", which will be one of the listed enum values.: Units enum",
      "messagetype": "action_CAMERA STATE_get",
      "parameters": {}
    },
    {
      "name": "CAMERA SUBSTATE",
      "displaytitle": "CAMERA SUBSTATE(Set)",
      "description": "Set the simvar This variable can be used to get or set the camera \"sub-state\". The options here are generally only required when working with the in-sim panel UI. Note that the \"locked\" and \"unlocked\" state will be changed automatically if the following SimVars have their values changed: COCKPIT_CAMERA_HEADLOOK, CHASE_CAMERA_HEADLOOK.: Units enum",
      "messagetype": "action_CAMERA SUBSTATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CAMERA SUBSTATE_get",
      "displaytitle": "CAMERA SUBSTATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis variable can be used to get or set the camera \"sub-state\". The options here are generally only required when working with the in-sim panel UI. Note that the \"locked\" and \"unlocked\" state will be changed automatically if the following SimVars have their values changed: COCKPIT_CAMERA_HEADLOOK, CHASE_CAMERA_HEADLOOK.: Units enum",
      "messagetype": "action_CAMERA SUBSTATE_get",
      "parameters": {}
    },
    {
      "name": "CAMERA VIEW TYPE AND INDEX MAX:index",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX MAX:index(Set)",
      "description": "Set the simvar This variable can get the number of option indices related to a specific camera view type. The index value supplied to the SimVar should be one of the camera view type Enum values (see CAMERA VIEW TYPE AND INDEX), and the SimVar will return the number of options available for that camera type (counting from 1, so - for example - if the camera view type is \"Quickview\" and has 8 quickview settings, then CAMERA VIEW TYPE AND INDEX MAX:4 will return 8). Note that this value can be set after a flight has started, but it will have no effect since the number of camera options is initilaised once only and not updated (and the simulation may overwrite the value again even after setting it).: Units number",
      "messagetype": "action_CAMERA VIEW TYPE AND INDEX MAX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CAMERA VIEW TYPE AND INDEX MAX:index_get",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX MAX:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis variable can get the number of option indices related to a specific camera view type. The index value supplied to the SimVar should be one of the camera view type Enum values (see CAMERA VIEW TYPE AND INDEX), and the SimVar will return the number of options available for that camera type (counting from 1, so - for example - if the camera view type is \"Quickview\" and has 8 quickview settings, then CAMERA VIEW TYPE AND INDEX MAX:4 will return 8). Note that this value can be set after a flight has started, but it will have no effect since the number of camera options is initilaised once only and not updated (and the simulation may overwrite the value again even after setting it).: Units number",
      "messagetype": "action_CAMERA VIEW TYPE AND INDEX MAX:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CAMERA VIEW TYPE AND INDEX:index",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX:index(Set)",
      "description": "Set the simvar With this you can get or set both the type of view for the current camera, as well as the option index, which will be between 0 and the maximum index value (as retrieved using the CAMERA VIEW TYPE AND INDEX MAX SimVar). Supplying an index of 0 to the SimVar will get/set the type (from the selection of enum values listed), and using an index of 1 will get/set the option index, which is an integer value.: Units enum",
      "messagetype": "action_CAMERA VIEW TYPE AND INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "CAMERA VIEW TYPE AND INDEX:index_get",
      "displaytitle": "CAMERA VIEW TYPE AND INDEX:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWith this you can get or set both the type of view for the current camera, as well as the option index, which will be between 0 and the maximum index value (as retrieved using the CAMERA VIEW TYPE AND INDEX MAX SimVar). Supplying an index of 0 to the SimVar will get/set the type (from the selection of enum values listed), and using an index of 1 will get/set the option index, which is an integer value.: Units enum",
      "messagetype": "action_CAMERA VIEW TYPE AND INDEX:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CANOPY OPEN",
      "displaytitle": "CANOPY OPEN(Set)",
      "description": "Set the simvar Percent primary door/exit open.: Units percent Over 100",
      "messagetype": "action_CANOPY OPEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CANOPY OPEN_get",
      "displaytitle": "CANOPY OPEN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent primary door/exit open.: Units percent Over 100",
      "messagetype": "action_CANOPY OPEN_get",
      "parameters": {}
    },
    {
      "name": "CARB HEAT AVAILABLE_get",
      "displaytitle": "CARB HEAT AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if carburetor heat available.: Units bool",
      "messagetype": "action_CARB HEAT AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "CATAPULT STROKE POSITION:index_get",
      "displaytitle": "CATAPULT STROKE POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCatapults are indexed from 1. This value will be 0 before the catapult fires, and then up to 100 as the aircraft is propelled down the catapult. The aircraft may takeoff before the value reaches 100 (depending on the aircraft weight, power applied, and other factors), in which case this value will not be further updated. This value could be used to drive a bogie animation: Units number",
      "messagetype": "action_CATAPULT STROKE POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CATEGORY_get",
      "displaytitle": "CATEGORY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerType of aircraft: Units null",
      "messagetype": "action_CATEGORY_get",
      "parameters": {}
    },
    {
      "name": "CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z_get",
      "displaytitle": "CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Z\" axis position of the point of contact between the catering truck and the bottom of the aircraft door, relative to the ground.: Units meters",
      "messagetype": "action_CATERINGTRUCK AIRCRAFT DOOR CONTACT OFFSET Z_get",
      "parameters": {}
    },
    {
      "name": "CATERINGTRUCK ELEVATION CURRENT_get",
      "displaytitle": "CATERINGTRUCK ELEVATION CURRENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current altitude AGL of the bottom of the catering truck container.: Units meters",
      "messagetype": "action_CATERINGTRUCK ELEVATION CURRENT_get",
      "parameters": {}
    },
    {
      "name": "CATERINGTRUCK ELEVATION TARGET_get",
      "displaytitle": "CATERINGTRUCK ELEVATION TARGET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe target altitude AGL of the bottom of the catering truck container.: Units meters",
      "messagetype": "action_CATERINGTRUCK ELEVATION TARGET_get",
      "parameters": {}
    },
    {
      "name": "CATERINGTRUCK OPENING CURRENT_get",
      "displaytitle": "CATERINGTRUCK OPENING CURRENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current state of the catering truck when opening the container and deploying the bridge, where 0 is fully closed and 1 is fully opened and deployed.: Units percent Over 100",
      "messagetype": "action_CATERINGTRUCK OPENING CURRENT_get",
      "parameters": {}
    },
    {
      "name": "CATERINGTRUCK OPENING TARGET_get",
      "displaytitle": "CATERINGTRUCK OPENING TARGET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe target state of the catering truck the container is opene and the bridge deployed, where 0 is fully closed and 1 is fully opened and deployed.: Units percent Over 100",
      "messagetype": "action_CATERINGTRUCK OPENING TARGET_get",
      "parameters": {}
    },
    {
      "name": "CENTER WHEEL ROTATION ANGLE_get",
      "displaytitle": "CENTER WHEEL ROTATION ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCenter wheel rotation angle (rotation around the axis for the wheel): Units radians",
      "messagetype": "action_CENTER WHEEL ROTATION ANGLE_get",
      "parameters": {}
    },
    {
      "name": "CENTER WHEEL RPM_get",
      "displaytitle": "CENTER WHEEL RPM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCenter landing gear rpm: Units RPM",
      "messagetype": "action_CENTER WHEEL RPM_get",
      "parameters": {}
    },
    {
      "name": "CG AFT LIMIT_get",
      "displaytitle": "CG AFT LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMost backward authorized position of the CG according to the POH.: Units percent Over 100",
      "messagetype": "action_CG AFT LIMIT_get",
      "parameters": {}
    },
    {
      "name": "CG FEET_get",
      "displaytitle": "CG FEET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe longitudinal CG position relative to the Reference Datum Position.: Units feet",
      "messagetype": "action_CG FEET_get",
      "parameters": {}
    },
    {
      "name": "CG FEET AFT LIMIT_get",
      "displaytitle": "CG FEET AFT LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe aft CG limit position relative to the Reference Datum Position.: Units feet",
      "messagetype": "action_CG FEET AFT LIMIT_get",
      "parameters": {}
    },
    {
      "name": "CG FEET FWD LIMIT_get",
      "displaytitle": "CG FEET FWD LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe forward CG limit position relative to the Reference Datum Position.: Units feet",
      "messagetype": "action_CG FEET FWD LIMIT_get",
      "parameters": {}
    },
    {
      "name": "CG FEET LATERAL_get",
      "displaytitle": "CG FEET LATERAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe lateral CG position relative to the Reference Datum Position.: Units feet",
      "messagetype": "action_CG FEET LATERAL_get",
      "parameters": {}
    },
    {
      "name": "CG FEET LATERAL LEFT LIMIT_get",
      "displaytitle": "CG FEET LATERAL LEFT LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe left hand lateral CG position relative to the Reference Datum Position.: Units feet",
      "messagetype": "action_CG FEET LATERAL LEFT LIMIT_get",
      "parameters": {}
    },
    {
      "name": "CG FEET LATERAL RIGHT LIMIT_get",
      "displaytitle": "CG FEET LATERAL RIGHT LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe right hand lateral CG position relative to the Reference Datum Position.: Units feet",
      "messagetype": "action_CG FEET LATERAL RIGHT LIMIT_get",
      "parameters": {}
    },
    {
      "name": "CG FWD LIMIT_get",
      "displaytitle": "CG FWD LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMost forward authorized position of the CG according to the POH.: Units percent Over 100",
      "messagetype": "action_CG FWD LIMIT_get",
      "parameters": {}
    },
    {
      "name": "CG MAX MACH_get",
      "displaytitle": "CG MAX MACH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDeprecated, do not use!: Units mach",
      "messagetype": "action_CG MAX MACH_get",
      "parameters": {}
    },
    {
      "name": "CG MIN MACH_get",
      "displaytitle": "CG MIN MACH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDeprecated, do not use!: Units mach",
      "messagetype": "action_CG MIN MACH_get",
      "parameters": {}
    },
    {
      "name": "CG PERCENT_get",
      "displaytitle": "CG PERCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLongitudinal CG position as a percent of reference chord: Units percent Over 100",
      "messagetype": "action_CG PERCENT_get",
      "parameters": {}
    },
    {
      "name": "CG PERCENT LATERAL_get",
      "displaytitle": "CG PERCENT LATERAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLateral CG position as a percent of reference chord: Units percent Over 100",
      "messagetype": "action_CG PERCENT LATERAL_get",
      "parameters": {}
    },
    {
      "name": "CHASE CAMERA HEADLOOK",
      "displaytitle": "CHASE CAMERA HEADLOOK(Set)",
      "description": "Set the simvar This is used to get/set the look state of the chase (external) camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 3 (External/Chase).: Units enum",
      "messagetype": "action_CHASE CAMERA HEADLOOK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA HEADLOOK_get",
      "displaytitle": "CHASE CAMERA HEADLOOK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is used to get/set the look state of the chase (external) camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 3 (External/Chase).: Units enum",
      "messagetype": "action_CHASE CAMERA HEADLOOK_get",
      "parameters": {}
    },
    {
      "name": "CHASE CAMERA MOMENTUM",
      "displaytitle": "CHASE CAMERA MOMENTUM(Set)",
      "description": "Set the simvar Sets/gets the momentum modifier of the chase (external) camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent",
      "messagetype": "action_CHASE CAMERA MOMENTUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA MOMENTUM_get",
      "displaytitle": "CHASE CAMERA MOMENTUM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the momentum modifier of the chase (external) camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent",
      "messagetype": "action_CHASE CAMERA MOMENTUM_get",
      "parameters": {}
    },
    {
      "name": "CHASE CAMERA SPEED",
      "displaytitle": "CHASE CAMERA SPEED(Set)",
      "description": "Set the simvar Sets/gets the translation speed modifier of the chase (external) camara, as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_CHASE CAMERA SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA SPEED_get",
      "displaytitle": "CHASE CAMERA SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the translation speed modifier of the chase (external) camara, as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_CHASE CAMERA SPEED_get",
      "parameters": {}
    },
    {
      "name": "CHASE CAMERA ZOOM",
      "displaytitle": "CHASE CAMERA ZOOM(Set)",
      "description": "Set the simvar Sets/gets the zoom/FOV modifier for the chase (external) camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent",
      "messagetype": "action_CHASE CAMERA ZOOM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA ZOOM_get",
      "displaytitle": "CHASE CAMERA ZOOM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the zoom/FOV modifier for the chase (external) camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent",
      "messagetype": "action_CHASE CAMERA ZOOM_get",
      "parameters": {}
    },
    {
      "name": "CHASE CAMERA ZOOM SPEED",
      "displaytitle": "CHASE CAMERA ZOOM SPEED(Set)",
      "description": "Set the simvar Sets/gets the speed modifier for when the zoom/FOV chase (external) camera changes zoom/FOV levels. Default is 50%.: Units percent",
      "messagetype": "action_CHASE CAMERA ZOOM SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CHASE CAMERA ZOOM SPEED_get",
      "displaytitle": "CHASE CAMERA ZOOM SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the speed modifier for when the zoom/FOV chase (external) camera changes zoom/FOV levels. Default is 50%.: Units percent",
      "messagetype": "action_CHASE CAMERA ZOOM SPEED_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT AUTO BRAKES ON_get",
      "displaytitle": "CIRCUIT AUTO BRAKES ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to this circuit: Units bool",
      "messagetype": "action_CIRCUIT AUTO BRAKES ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT AUTO FEATHER ON_get",
      "displaytitle": "CIRCUIT AUTO FEATHER ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to this circuit: Units bool",
      "messagetype": "action_CIRCUIT AUTO FEATHER ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT AUTOPILOT ON_get",
      "displaytitle": "CIRCUIT AUTOPILOT ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to this circuit: Units bool",
      "messagetype": "action_CIRCUIT AUTOPILOT ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT AVIONICS ON_get",
      "displaytitle": "CIRCUIT AVIONICS ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to this circuit: Units bool",
      "messagetype": "action_CIRCUIT AVIONICS ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT BREAKER PULLED",
      "displaytitle": "CIRCUIT BREAKER PULLED(Set)",
      "description": "Set the simvar This will be true if the circuit breaker is pulled. Requires a BUS_LOOKUP_INDEX and a circuit index.: Units bool",
      "messagetype": "action_CIRCUIT BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "CIRCUIT BREAKER PULLED_get",
      "displaytitle": "CIRCUIT BREAKER PULLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the circuit breaker is pulled. Requires a BUS_LOOKUP_INDEX and a circuit index.: Units bool",
      "messagetype": "action_CIRCUIT BREAKER PULLED_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT CONNECTION ON_get",
      "displaytitle": "CIRCUIT CONNECTION ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the circuit is connected. Requires a BUS_LOOKUP_INDEX and a circuit index: Units bool",
      "messagetype": "action_CIRCUIT CONNECTION ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT FLAP MOTOR ON_get",
      "displaytitle": "CIRCUIT FLAP MOTOR ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to the flap motor circuit: Units bool",
      "messagetype": "action_CIRCUIT FLAP MOTOR ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT GEAR MOTOR ON_get",
      "displaytitle": "CIRCUIT GEAR MOTOR ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to the gear motor circuit: Units bool",
      "messagetype": "action_CIRCUIT GEAR MOTOR ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT GEAR WARNING ON_get",
      "displaytitle": "CIRCUIT GEAR WARNING ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to gear warning circuit: Units bool",
      "messagetype": "action_CIRCUIT GEAR WARNING ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT GENERAL PANEL ON_get",
      "displaytitle": "CIRCUIT GENERAL PANEL ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to the general panel circuit: Units bool",
      "messagetype": "action_CIRCUIT GENERAL PANEL ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT HYDRAULIC PUMP ON_get",
      "displaytitle": "CIRCUIT HYDRAULIC PUMP ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to the hydraulic pump circuit: Units bool",
      "messagetype": "action_CIRCUIT HYDRAULIC PUMP ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT MARKER BEACON ON_get",
      "displaytitle": "CIRCUIT MARKER BEACON ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to the marker beacon circuit: Units bool",
      "messagetype": "action_CIRCUIT MARKER BEACON ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT NAVCOM1 ON_get",
      "displaytitle": "CIRCUIT NAVCOM1 ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not power is available to the NAVCOM1 circuit.: Units bool",
      "messagetype": "action_CIRCUIT NAVCOM1 ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT NAVCOM2 ON_get",
      "displaytitle": "CIRCUIT NAVCOM2 ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not power is available to the NAVCOM2 circuit.: Units bool",
      "messagetype": "action_CIRCUIT NAVCOM2 ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT NAVCOM3 ON_get",
      "displaytitle": "CIRCUIT NAVCOM3 ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not power is available to the NAVCOM3 circuit.: Units bool",
      "messagetype": "action_CIRCUIT NAVCOM3 ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT ON_get",
      "displaytitle": "CIRCUIT ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the given circuit is functioning. Use a circuit index when referencing.: Units bool",
      "messagetype": "action_CIRCUIT ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT PITOT HEAT ON_get",
      "displaytitle": "CIRCUIT PITOT HEAT ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to the pitot heat circuit: Units bool",
      "messagetype": "action_CIRCUIT PITOT HEAT ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT POWER SETTING_get",
      "displaytitle": "CIRCUIT POWER SETTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis returns the percentage of use that the circuit is getting. This requires a circuit index when referencing: Units percent",
      "messagetype": "action_CIRCUIT POWER SETTING_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT PROP SYNC ON_get",
      "displaytitle": "CIRCUIT PROP SYNC ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to the propeller sync circuit: Units bool",
      "messagetype": "action_CIRCUIT PROP SYNC ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT STANDBY VACUUM ON_get",
      "displaytitle": "CIRCUIT STANDBY VACUUM ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs electrical power available to the vacuum circuit: Units bool",
      "messagetype": "action_CIRCUIT STANDBY VACUUM ON_get",
      "parameters": {}
    },
    {
      "name": "CIRCUIT SWITCH ON_get",
      "displaytitle": "CIRCUIT SWITCH ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe circuit switch position, true if the switch is ON. Use a circuit index when referencing.: Units bool",
      "messagetype": "action_CIRCUIT SWITCH ON_get",
      "parameters": {}
    },
    {
      "name": "COCKPIT CAMERA HEADLOOK",
      "displaytitle": "COCKPIT CAMERA HEADLOOK(Set)",
      "description": "Set the simvar This is used to get/set the look state of the cockpit camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 2 (Cockpit).: Units enum",
      "messagetype": "action_COCKPIT CAMERA HEADLOOK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA HEADLOOK_get",
      "displaytitle": "COCKPIT CAMERA HEADLOOK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is used to get/set the look state of the cockpit camera. Note that this value will also affect the CAMERA_SUBSTATE value, when the CAMERA_STATE is set to 2 (Cockpit).: Units enum",
      "messagetype": "action_COCKPIT CAMERA HEADLOOK_get",
      "parameters": {}
    },
    {
      "name": "COCKPIT CAMERA HEIGHT",
      "displaytitle": "COCKPIT CAMERA HEIGHT(Set)",
      "description": "Set the simvar This can be used to get/set the cockpit camera height modifier expressed as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA HEIGHT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA HEIGHT_get",
      "displaytitle": "COCKPIT CAMERA HEIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to get/set the cockpit camera height modifier expressed as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA HEIGHT_get",
      "parameters": {}
    },
    {
      "name": "COCKPIT CAMERA INSTRUMENT AUTOSELECT",
      "displaytitle": "COCKPIT CAMERA INSTRUMENT AUTOSELECT(Set)",
      "description": "Set the simvar This can be used to get or set the autoselect option for the cockpit camera when viewing the instruments (ie: the CAMERA_SUBSTATE is 5). When enabled the camera will move automatically if the player mouse reaches the edge of the screen and there are instrument panels available on that side.: Units bool",
      "messagetype": "action_COCKPIT CAMERA INSTRUMENT AUTOSELECT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA INSTRUMENT AUTOSELECT_get",
      "displaytitle": "COCKPIT CAMERA INSTRUMENT AUTOSELECT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to get or set the autoselect option for the cockpit camera when viewing the instruments (ie: the CAMERA_SUBSTATE is 5). When enabled the camera will move automatically if the player mouse reaches the edge of the screen and there are instrument panels available on that side.: Units bool",
      "messagetype": "action_COCKPIT CAMERA INSTRUMENT AUTOSELECT_get",
      "parameters": {}
    },
    {
      "name": "COCKPIT CAMERA MOMENTUM",
      "displaytitle": "COCKPIT CAMERA MOMENTUM(Set)",
      "description": "Set the simvar Sets/gets the momentum modifier of the cockpit camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA MOMENTUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA MOMENTUM_get",
      "displaytitle": "COCKPIT CAMERA MOMENTUM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the momentum modifier of the cockpit camera, which is controls how fast/slow the camera will stop moving when no longer being moved by the user. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA MOMENTUM_get",
      "parameters": {}
    },
    {
      "name": "COCKPIT CAMERA SPEED",
      "displaytitle": "COCKPIT CAMERA SPEED(Set)",
      "description": "Set the simvar Sets/gets the translation speed modifier of the cockpit camara, as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA SPEED_get",
      "displaytitle": "COCKPIT CAMERA SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the translation speed modifier of the cockpit camara, as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA SPEED_get",
      "parameters": {}
    },
    {
      "name": "COCKPIT CAMERA UPPER POSITION",
      "displaytitle": "COCKPIT CAMERA UPPER POSITION(Set)",
      "description": "Set the simvar Sets/gets the current \"upper position\" cockpit camera toggle. When 1 (TRUE), the camera is is in the upper position, and when 0 (FALSE) it is in the default position.: Units bool",
      "messagetype": "action_COCKPIT CAMERA UPPER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA UPPER POSITION_get",
      "displaytitle": "COCKPIT CAMERA UPPER POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the current \"upper position\" cockpit camera toggle. When 1 (TRUE), the camera is is in the upper position, and when 0 (FALSE) it is in the default position.: Units bool",
      "messagetype": "action_COCKPIT CAMERA UPPER POSITION_get",
      "parameters": {}
    },
    {
      "name": "COCKPIT CAMERA ZOOM",
      "displaytitle": "COCKPIT CAMERA ZOOM(Set)",
      "description": "Set the simvar Sets/gets the zoom/FOV modifier for the cockpit camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA ZOOM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA ZOOM_get",
      "displaytitle": "COCKPIT CAMERA ZOOM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the zoom/FOV modifier for the cockpit camera. Note that when setting this value, it will affect the camera regardless of whether the GAMEPLAY_CAMERA_FOCUS is set to manual or automatic. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA ZOOM_get",
      "parameters": {}
    },
    {
      "name": "COCKPIT CAMERA ZOOM SPEED",
      "displaytitle": "COCKPIT CAMERA ZOOM SPEED(Set)",
      "description": "Set the simvar Sets/gets the speed modifier for when the zoom/FOV cockpit camera changes zoom/FOV levels. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA ZOOM SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "COCKPIT CAMERA ZOOM SPEED_get",
      "displaytitle": "COCKPIT CAMERA ZOOM SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the speed modifier for when the zoom/FOV cockpit camera changes zoom/FOV levels. Default is 50%.: Units percent",
      "messagetype": "action_COCKPIT CAMERA ZOOM SPEED_get",
      "parameters": {}
    },
    {
      "name": "COLLECTIVE POSITION_get",
      "displaytitle": "COLLECTIVE POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe position of the helicopter's collective. 0 is fully up, 100 fully depressed.: Units percent Over 100",
      "messagetype": "action_COLLECTIVE POSITION_get",
      "parameters": {}
    },
    {
      "name": "COM ACTIVE BEARING:index_get",
      "displaytitle": "COM ACTIVE BEARING:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGives the bearing (in degrees) of the active COM station (airport) or a value less than 0 if the station does not belong to an airport. Index is 1, 2 or 3.: Units degrees",
      "messagetype": "action_COM ACTIVE BEARING:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM ACTIVE DISTANCE:index_get",
      "displaytitle": "COM ACTIVE DISTANCE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGives the distance (in meters) to the active COM station (airport) or a value less than -180° if the station does not belong to an airport. Index is 1, 2 or 3.: Units meters",
      "messagetype": "action_COM ACTIVE DISTANCE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM ACTIVE FREQ IDENT:index_get",
      "displaytitle": "COM ACTIVE FREQ IDENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe identity of the station that is tuned on the indexed active COM radio. Index is 1, 2, or 3.: Units null",
      "messagetype": "action_COM ACTIVE FREQ IDENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM ACTIVE FREQ TYPE:index_get",
      "displaytitle": "COM ACTIVE FREQ TYPE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe type of COM frequency for the active indexed COM system. Index is 1, 2, or 3.: Units null",
      "messagetype": "action_COM ACTIVE FREQ TYPE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM ACTIVE FREQUENCY:index_get",
      "displaytitle": "COM ACTIVE FREQUENCY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCom frequency. Index is 1, 2 or 3.: Units Frequency BCD16",
      "messagetype": "action_COM ACTIVE FREQUENCY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM AVAILABLE:index_get",
      "displaytitle": "COM AVAILABLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if COM1, COM2 or COM3 is available (depending on the index, either 1, 2, or 3): Units bool",
      "messagetype": "action_COM AVAILABLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM RECEIVE ALL_get",
      "displaytitle": "COM RECEIVE ALL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerToggles all COM radios to receive on: Units bool",
      "messagetype": "action_COM RECEIVE ALL_get",
      "parameters": {}
    },
    {
      "name": "COM RECEIVE EX1:index_get",
      "displaytitle": "COM RECEIVE EX1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the plane is receiving on the indexed com channel. Index is 1, 2 or 3.: Units bool",
      "messagetype": "action_COM RECEIVE EX1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM RECEIVE:index_get",
      "displaytitle": "COM RECEIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the plane is receiving on the indexed com channel or not (either 1, 2, or 3 for the index).: Units bool",
      "messagetype": "action_COM RECEIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM SPACING MODE:index_get",
      "displaytitle": "COM SPACING MODE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe COM radio frequency step. Index is 1, 2 or 3.: Units enum",
      "messagetype": "action_COM SPACING MODE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM STANDBY FREQ IDENT:index_get",
      "displaytitle": "COM STANDBY FREQ IDENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe identity of the station that is tuned on the indexed standby COM radio. Index is 1, 2, or 3.: Units null",
      "messagetype": "action_COM STANDBY FREQ IDENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM STANDBY FREQ TYPE:index_get",
      "displaytitle": "COM STANDBY FREQ TYPE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe type of COM frequency for the standby indexed COM system. Index is 1, 2, or 3.: Units null",
      "messagetype": "action_COM STANDBY FREQ TYPE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM STANDBY FREQUENCY:index_get",
      "displaytitle": "COM STANDBY FREQUENCY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCom standby frequency. Index is 1, 2 or 3.: Units Frequency BCD16",
      "messagetype": "action_COM STANDBY FREQUENCY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM STATUS:index_get",
      "displaytitle": "COM STATUS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRadio status flag for the indexed com channel. Index is 1, 2 or 3.: Units enum",
      "messagetype": "action_COM STATUS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM TEST:index_get",
      "displaytitle": "COM TEST:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEnter an index of 1, 2 or 3. Will return TRUE if the COM system is working, FALSE otherwise.: Units bool",
      "messagetype": "action_COM TEST:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM TRANSMIT:index_get",
      "displaytitle": "COM TRANSMIT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAudio panel com transmit state. Index of 1, 2 or 3.: Units bool",
      "messagetype": "action_COM TRANSMIT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "COM VOLUME_get",
      "displaytitle": "COM VOLUME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe volume of the COM Radio.: Units percent",
      "messagetype": "action_COM VOLUME_get",
      "parameters": {}
    },
    {
      "name": "COM1 STORED FREQUENCY_get",
      "displaytitle": "COM1 STORED FREQUENCY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe stored COM 1/2/3 frequency value.: Units Frequency BCD16",
      "messagetype": "action_COM1 STORED FREQUENCY_get",
      "parameters": {}
    },
    {
      "name": "COM2 STORED FREQUENCY_get",
      "displaytitle": "COM2 STORED FREQUENCY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe stored COM 1/2/3 frequency value.: Units Frequency BCD16",
      "messagetype": "action_COM2 STORED FREQUENCY_get",
      "parameters": {}
    },
    {
      "name": "COM3 STORED FREQUENCY_get",
      "displaytitle": "COM3 STORED FREQUENCY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe stored COM 1/2/3 frequency value.: Units Frequency BCD16",
      "messagetype": "action_COM3 STORED FREQUENCY_get",
      "parameters": {}
    },
    {
      "name": "CONTACT POINT COMPRESSION:index_get",
      "displaytitle": "CONTACT POINT COMPRESSION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe percentage value representing the amount the contact point is compressed.: Units percent",
      "messagetype": "action_CONTACT POINT COMPRESSION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CONTACT POINT IS ON GROUND:index_get",
      "displaytitle": "CONTACT POINT IS ON GROUND:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the indexed contact point is on the ground, or will return false otherwise.: Units bool",
      "messagetype": "action_CONTACT POINT IS ON GROUND:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CONTACT POINT IS SKIDDING:index_get",
      "displaytitle": "CONTACT POINT IS SKIDDING:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the indexed contact point is skidding, or will return false otherwise.: Units bool",
      "messagetype": "action_CONTACT POINT IS SKIDDING:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CONTACT POINT POSITION:index_get",
      "displaytitle": "CONTACT POINT POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe currently extended position of the (retractable) contact point, expressed as a percentage.: Units position",
      "messagetype": "action_CONTACT POINT POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CONTACT POINT SKIDDING FACTOR:index_get",
      "displaytitle": "CONTACT POINT SKIDDING FACTOR:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe skidding factor associated with the indexed contact point, from 0 to 1.: Units percent Over 100",
      "messagetype": "action_CONTACT POINT SKIDDING FACTOR:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CONTACT POINT WATER DEPTH:index_get",
      "displaytitle": "CONTACT POINT WATER DEPTH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis returns the depth of the water for the indexed contact point.: Units feet",
      "messagetype": "action_CONTACT POINT WATER DEPTH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "CONTRAILS CONDITIONS MET_get",
      "displaytitle": "CONTRAILS CONDITIONS MET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the aircraft has met the conditions required to spawn the contrail VFX: Units bool",
      "messagetype": "action_CONTRAILS CONDITIONS MET_get",
      "parameters": {}
    },
    {
      "name": "COPILOT TRANSMITTER TYPE_get",
      "displaytitle": "COPILOT TRANSMITTER TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOn which channel the copilot is transmitting.: Units enum",
      "messagetype": "action_COPILOT TRANSMITTER TYPE_get",
      "parameters": {}
    },
    {
      "name": "COPILOT TRANSMITTING_get",
      "displaytitle": "COPILOT TRANSMITTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the copilot is transmitting: Units bool",
      "messagetype": "action_COPILOT TRANSMITTING_get",
      "parameters": {}
    },
    {
      "name": "CRASH FLAG_get",
      "displaytitle": "CRASH FLAG(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag value that indicates the cause of a crash.: Units enum",
      "messagetype": "action_CRASH FLAG_get",
      "parameters": {}
    },
    {
      "name": "CRASH SEQUENCE_get",
      "displaytitle": "CRASH SEQUENCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe state of the crash event sequence.: Units enum",
      "messagetype": "action_CRASH SEQUENCE_get",
      "parameters": {}
    },
    {
      "name": "DECISION ALTITUDE MSL_get",
      "displaytitle": "DECISION ALTITUDE MSL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDesign decision altitude above mean sea level: Units feet",
      "messagetype": "action_DECISION ALTITUDE MSL_get",
      "parameters": {}
    },
    {
      "name": "DECISION HEIGHT_get",
      "displaytitle": "DECISION HEIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDesign decision height: Units feet",
      "messagetype": "action_DECISION HEIGHT_get",
      "parameters": {}
    },
    {
      "name": "DELEGATE CONTROLS TO AI",
      "displaytitle": "DELEGATE CONTROLS TO AI(Set)",
      "description": "Set the simvar Returns whether the AI control system is active or not: Units bool",
      "messagetype": "action_DELEGATE CONTROLS TO AI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DELEGATE CONTROLS TO AI_get",
      "displaytitle": "DELEGATE CONTROLS TO AI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the AI control system is active or not: Units bool",
      "messagetype": "action_DELEGATE CONTROLS TO AI_get",
      "parameters": {}
    },
    {
      "name": "DELTA HEADING RATE",
      "displaytitle": "DELTA HEADING RATE(Set)",
      "description": "Set the simvar Rate of turn of heading indicator.: Units radians per second",
      "messagetype": "action_DELTA HEADING RATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DELTA HEADING RATE_get",
      "displaytitle": "DELTA HEADING RATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRate of turn of heading indicator.: Units radians per second",
      "messagetype": "action_DELTA HEADING RATE_get",
      "parameters": {}
    },
    {
      "name": "DESIGN CRUISE ALT_get",
      "displaytitle": "DESIGN CRUISE ALT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the optimal altitude the aircraft should maintain when in cruise. It is derived from the cruise_alt setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 1500ft.: Units feet",
      "messagetype": "action_DESIGN CRUISE ALT_get",
      "parameters": {}
    },
    {
      "name": "DESIGN SPAWN ALTITUDE CRUISE_get",
      "displaytitle": "DESIGN SPAWN ALTITUDE CRUISE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the spawn altitude for the aircraft when spawning in cruise. It is derived from the spawn_cruise_altitude setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 1500ft.: Units feet",
      "messagetype": "action_DESIGN SPAWN ALTITUDE CRUISE_get",
      "parameters": {}
    },
    {
      "name": "DESIGN SPAWN ALTITUDE DESCENT_get",
      "displaytitle": "DESIGN SPAWN ALTITUDE DESCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the spawn altitude for the aircraft when spawning in descent. It is derived from the spawn_descent_altitude setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default is 500ft.: Units feet",
      "messagetype": "action_DESIGN SPAWN ALTITUDE DESCENT_get",
      "parameters": {}
    },
    {
      "name": "DESIGN SPEED CLIMB_get",
      "displaytitle": "DESIGN SPEED CLIMB(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the optimal climb speed for the aircraft. It is derived from the climb_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is -1.: Units feet",
      "messagetype": "action_DESIGN SPEED CLIMB_get",
      "parameters": {}
    },
    {
      "name": "DESIGN SPEED MIN ROTATION_get",
      "displaytitle": "DESIGN SPEED MIN ROTATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the minimum speed required for aircraft rotation. It is derived from the rotation_speed_min setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is -1.: Units feet",
      "messagetype": "action_DESIGN SPEED MIN ROTATION_get",
      "parameters": {}
    },
    {
      "name": "DESIGN SPEED VC_get",
      "displaytitle": "DESIGN SPEED VC(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the aircraft ideal cruising speed. It is derived from the cruise_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. The default value is computed an internal function that uses the estimated cruise altitude and estimated cruise percent power, according of the engine type, the number of engines, the density, the wing area and some drag parameters. Normally this value is set in the CFG file and the default value is never used.: Units feet",
      "messagetype": "action_DESIGN SPEED VC_get",
      "parameters": {}
    },
    {
      "name": "DESIGN SPEED VS0_get",
      "displaytitle": "DESIGN SPEED VS0(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the the stall speed when flaps are fully extended. It is derived from the full_flaps_stall_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is 0.8 x VS.: Units knots",
      "messagetype": "action_DESIGN SPEED VS0_get",
      "parameters": {}
    },
    {
      "name": "DESIGN SPEED VS1_get",
      "displaytitle": "DESIGN SPEED VS1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the stall speed when flaps are fully retracted. It is derived from the flaps_up_stall_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg. Default value is 0.: Units knots",
      "messagetype": "action_DESIGN SPEED VS1_get",
      "parameters": {}
    },
    {
      "name": "DESIGN TAKEOFF SPEED_get",
      "displaytitle": "DESIGN TAKEOFF SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis design constant represents the aircraft ideal takoff speed. It is derived from the takeoff_speed setting in the [REFERENCE SPEEDS] section of the flightmodel.cfg.: Units knots",
      "messagetype": "action_DESIGN TAKEOFF SPEED_get",
      "parameters": {}
    },
    {
      "name": "DISK BANK ANGLE:index_get",
      "displaytitle": "DISK BANK ANGLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotor bank angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians",
      "messagetype": "action_DISK BANK ANGLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "DISK BANK PCT:index_get",
      "displaytitle": "DISK BANK PCT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotor bank percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100",
      "messagetype": "action_DISK BANK PCT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "DISK CONING PCT:index_get",
      "displaytitle": "DISK CONING PCT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotor coning percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100",
      "messagetype": "action_DISK CONING PCT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "DISK PITCH ANGLE:index_get",
      "displaytitle": "DISK PITCH ANGLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotor pitch angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians",
      "messagetype": "action_DISK PITCH ANGLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "DISK PITCH PCT:index_get",
      "displaytitle": "DISK PITCH PCT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotor pitch percent of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100",
      "messagetype": "action_DISK PITCH PCT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "DME SOUND_get",
      "displaytitle": "DME SOUND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDME audio flag.: Units bool",
      "messagetype": "action_DME SOUND_get",
      "parameters": {}
    },
    {
      "name": "DRONE CAMERA FOCUS",
      "displaytitle": "DRONE CAMERA FOCUS(Set)",
      "description": "Set the simvar Sets/gets the focus modifier for the drone camera. Default is 50%, and a lower value will set the drone focus to things in the foreground and a higher level will set the drone focus to things in the background. Note that this is only taken into account when the DRONE_CAMERA_FOCUS_MODE is set to 3 (manual).: Units percent",
      "messagetype": "action_DRONE CAMERA FOCUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA FOCUS_get",
      "displaytitle": "DRONE CAMERA FOCUS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the focus modifier for the drone camera. Default is 50%, and a lower value will set the drone focus to things in the foreground and a higher level will set the drone focus to things in the background. Note that this is only taken into account when the DRONE_CAMERA_FOCUS_MODE is set to 3 (manual).: Units percent",
      "messagetype": "action_DRONE CAMERA FOCUS_get",
      "parameters": {}
    },
    {
      "name": "DRONE CAMERA FOCUS MODE",
      "displaytitle": "DRONE CAMERA FOCUS MODE(Set)",
      "description": "Set the simvar Sets/gets the current drone focus mode. When set to 3 (manual), the focus position will be based on the DRONE_CAMERA_FOCUS value.: Units enum",
      "messagetype": "action_DRONE CAMERA FOCUS MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA FOCUS MODE_get",
      "displaytitle": "DRONE CAMERA FOCUS MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the current drone focus mode. When set to 3 (manual), the focus position will be based on the DRONE_CAMERA_FOCUS value.: Units enum",
      "messagetype": "action_DRONE CAMERA FOCUS MODE_get",
      "parameters": {}
    },
    {
      "name": "DRONE CAMERA FOLLOW",
      "displaytitle": "DRONE CAMERA FOLLOW(Set)",
      "description": "Set the simvar Sets/gets the whether the drone camera is in follow mode or not.: Units bool",
      "messagetype": "action_DRONE CAMERA FOLLOW",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA FOLLOW_get",
      "displaytitle": "DRONE CAMERA FOLLOW(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the whether the drone camera is in follow mode or not.: Units bool",
      "messagetype": "action_DRONE CAMERA FOLLOW_get",
      "parameters": {}
    },
    {
      "name": "DRONE CAMERA FOV",
      "displaytitle": "DRONE CAMERA FOV(Set)",
      "description": "Set the simvar Sets/gets the zoom/FOV modifier for the drone camera. Default is 50%.: Units percent",
      "messagetype": "action_DRONE CAMERA FOV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA FOV_get",
      "displaytitle": "DRONE CAMERA FOV(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the zoom/FOV modifier for the drone camera. Default is 50%.: Units percent",
      "messagetype": "action_DRONE CAMERA FOV_get",
      "parameters": {}
    },
    {
      "name": "DRONE CAMERA LOCKED",
      "displaytitle": "DRONE CAMERA LOCKED(Set)",
      "description": "Set the simvar Sets/gets the whether the drone camera is locked or not.: Units bool",
      "messagetype": "action_DRONE CAMERA LOCKED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA LOCKED_get",
      "displaytitle": "DRONE CAMERA LOCKED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the whether the drone camera is locked or not.: Units bool",
      "messagetype": "action_DRONE CAMERA LOCKED_get",
      "parameters": {}
    },
    {
      "name": "DRONE CAMERA SPEED ROTATION",
      "displaytitle": "DRONE CAMERA SPEED ROTATION(Set)",
      "description": "Set the simvar Sets/gets the rotation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_DRONE CAMERA SPEED ROTATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA SPEED ROTATION_get",
      "displaytitle": "DRONE CAMERA SPEED ROTATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the rotation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_DRONE CAMERA SPEED ROTATION_get",
      "parameters": {}
    },
    {
      "name": "DRONE CAMERA SPEED TRAVELLING",
      "displaytitle": "DRONE CAMERA SPEED TRAVELLING(Set)",
      "description": "Set the simvar Sets/gets the translation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_DRONE CAMERA SPEED TRAVELLING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "DRONE CAMERA SPEED TRAVELLING_get",
      "displaytitle": "DRONE CAMERA SPEED TRAVELLING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the translation speed modifier of the drone camara, as a percentage. Default is 50%.: Units percent",
      "messagetype": "action_DRONE CAMERA SPEED TRAVELLING_get",
      "parameters": {}
    },
    {
      "name": "DROPPABLE OBJECTS COUNT:index_get",
      "displaytitle": "DROPPABLE OBJECTS COUNT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe number of droppable objects at the station number identified by the index.: Units number",
      "messagetype": "action_DROPPABLE OBJECTS COUNT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "DROPPABLE OBJECTS TYPE:index",
      "displaytitle": "DROPPABLE OBJECTS TYPE:index(Set)",
      "description": "Set the simvar The type of droppable object at the station number identified by the index.: Units null",
      "messagetype": "action_DROPPABLE OBJECTS TYPE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "DROPPABLE OBJECTS TYPE:index_get",
      "displaytitle": "DROPPABLE OBJECTS TYPE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe type of droppable object at the station number identified by the index.: Units null",
      "messagetype": "action_DROPPABLE OBJECTS TYPE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "DROPPABLE OBJECTS UI NAME:index_get",
      "displaytitle": "DROPPABLE OBJECTS UI NAME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDescriptive name, used in User Interface dialogs, of a droppable object, identified by index.: Units null",
      "messagetype": "action_DROPPABLE OBJECTS UI NAME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "DYNAMIC PRESSURE_get",
      "displaytitle": "DYNAMIC PRESSURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDynamic pressure: Units pounds",
      "messagetype": "action_DYNAMIC PRESSURE_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL AVIONICS BUS AMPS",
      "displaytitle": "ELECTRICAL AVIONICS BUS AMPS(Set)",
      "description": "Set the simvar Avionics bus current: Units amperes",
      "messagetype": "action_ELECTRICAL AVIONICS BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL AVIONICS BUS AMPS_get",
      "displaytitle": "ELECTRICAL AVIONICS BUS AMPS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAvionics bus current: Units amperes",
      "messagetype": "action_ELECTRICAL AVIONICS BUS AMPS_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL AVIONICS BUS VOLTAGE",
      "displaytitle": "ELECTRICAL AVIONICS BUS VOLTAGE(Set)",
      "description": "Set the simvar Avionics bus voltage: Units volts",
      "messagetype": "action_ELECTRICAL AVIONICS BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL AVIONICS BUS VOLTAGE_get",
      "displaytitle": "ELECTRICAL AVIONICS BUS VOLTAGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAvionics bus voltage: Units volts",
      "messagetype": "action_ELECTRICAL AVIONICS BUS VOLTAGE_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL BATTERY BUS AMPS",
      "displaytitle": "ELECTRICAL BATTERY BUS AMPS(Set)",
      "description": "Set the simvar Battery bus current: Units amperes",
      "messagetype": "action_ELECTRICAL BATTERY BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY BUS AMPS_get",
      "displaytitle": "ELECTRICAL BATTERY BUS AMPS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBattery bus current: Units amperes",
      "messagetype": "action_ELECTRICAL BATTERY BUS AMPS_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL BATTERY BUS VOLTAGE",
      "displaytitle": "ELECTRICAL BATTERY BUS VOLTAGE(Set)",
      "description": "Set the simvar Battery bus voltage: Units volts",
      "messagetype": "action_ELECTRICAL BATTERY BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY BUS VOLTAGE_get",
      "displaytitle": "ELECTRICAL BATTERY BUS VOLTAGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBattery bus voltage: Units volts",
      "messagetype": "action_ELECTRICAL BATTERY BUS VOLTAGE_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL BATTERY ESTIMATED CAPACITY PCT_get",
      "displaytitle": "ELECTRICAL BATTERY ESTIMATED CAPACITY PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBattery capacity over max capacity, 100 is full: Units percent",
      "messagetype": "action_ELECTRICAL BATTERY ESTIMATED CAPACITY PCT_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL BATTERY LOAD",
      "displaytitle": "ELECTRICAL BATTERY LOAD(Set)",
      "description": "Set the simvar The load handled by the battery (negative values mean the battery is receiving current). Use a battery index when referencing: Units amperes",
      "messagetype": "action_ELECTRICAL BATTERY LOAD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY LOAD_get",
      "displaytitle": "ELECTRICAL BATTERY LOAD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe load handled by the battery (negative values mean the battery is receiving current). Use a battery index when referencing: Units amperes",
      "messagetype": "action_ELECTRICAL BATTERY LOAD_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL BATTERY VOLTAGE",
      "displaytitle": "ELECTRICAL BATTERY VOLTAGE(Set)",
      "description": "Set the simvar The battery voltage. Use a battery index when referencing: Units volts",
      "messagetype": "action_ELECTRICAL BATTERY VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL BATTERY VOLTAGE_get",
      "displaytitle": "ELECTRICAL BATTERY VOLTAGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe battery voltage. Use a battery index when referencing: Units volts",
      "messagetype": "action_ELECTRICAL BATTERY VOLTAGE_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL GENALT BUS AMPS",
      "displaytitle": "ELECTRICAL GENALT BUS AMPS(Set)",
      "description": "Set the simvar The load handled by the alternator. This requires an alternator index when referencing: Units amperes",
      "messagetype": "action_ELECTRICAL GENALT BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL GENALT BUS AMPS_get",
      "displaytitle": "ELECTRICAL GENALT BUS AMPS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe load handled by the alternator. This requires an alternator index when referencing: Units amperes",
      "messagetype": "action_ELECTRICAL GENALT BUS AMPS_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL GENALT BUS VOLTAGE",
      "displaytitle": "ELECTRICAL GENALT BUS VOLTAGE(Set)",
      "description": "Set the simvar General alternator voltage. This requires an alternator index when referencing: Units volts",
      "messagetype": "action_ELECTRICAL GENALT BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL GENALT BUS VOLTAGE_get",
      "displaytitle": "ELECTRICAL GENALT BUS VOLTAGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGeneral alternator voltage. This requires an alternator index when referencing: Units volts",
      "messagetype": "action_ELECTRICAL GENALT BUS VOLTAGE_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL GENALT LOAD_get",
      "displaytitle": "ELECTRICAL GENALT LOAD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis returns the percentage of the load output that is being consumed. This requires an alternator index when referencing: Units percent",
      "messagetype": "action_ELECTRICAL GENALT LOAD_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL HOT BATTERY BUS AMPS",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS AMPS(Set)",
      "description": "Set the simvar Current available when battery switch is turned off: Units amperes",
      "messagetype": "action_ELECTRICAL HOT BATTERY BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL HOT BATTERY BUS AMPS_get",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS AMPS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent available when battery switch is turned off: Units amperes",
      "messagetype": "action_ELECTRICAL HOT BATTERY BUS AMPS_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL HOT BATTERY BUS VOLTAGE",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS VOLTAGE(Set)",
      "description": "Set the simvar Voltage available when battery switch is turned off: Units volts",
      "messagetype": "action_ELECTRICAL HOT BATTERY BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL HOT BATTERY BUS VOLTAGE_get",
      "displaytitle": "ELECTRICAL HOT BATTERY BUS VOLTAGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVoltage available when battery switch is turned off: Units volts",
      "messagetype": "action_ELECTRICAL HOT BATTERY BUS VOLTAGE_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL MAIN BUS AMPS",
      "displaytitle": "ELECTRICAL MAIN BUS AMPS(Set)",
      "description": "Set the simvar Main bus current: Units amperes",
      "messagetype": "action_ELECTRICAL MAIN BUS AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL MAIN BUS AMPS_get",
      "displaytitle": "ELECTRICAL MAIN BUS AMPS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMain bus current: Units amperes",
      "messagetype": "action_ELECTRICAL MAIN BUS AMPS_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL MAIN BUS VOLTAGE",
      "displaytitle": "ELECTRICAL MAIN BUS VOLTAGE(Set)",
      "description": "Set the simvar The main bus voltage. Use a bus index when referencing: Units volts",
      "messagetype": "action_ELECTRICAL MAIN BUS VOLTAGE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL MAIN BUS VOLTAGE_get",
      "displaytitle": "ELECTRICAL MAIN BUS VOLTAGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe main bus voltage. Use a bus index when referencing: Units volts",
      "messagetype": "action_ELECTRICAL MAIN BUS VOLTAGE_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL MASTER BATTERY",
      "displaytitle": "ELECTRICAL MASTER BATTERY(Set)",
      "description": "Set the simvar The battery switch position, true if the switch is ON. Use a battery index when referencing: Units bool",
      "messagetype": "action_ELECTRICAL MASTER BATTERY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL MASTER BATTERY_get",
      "displaytitle": "ELECTRICAL MASTER BATTERY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe battery switch position, true if the switch is ON. Use a battery index when referencing: Units bool",
      "messagetype": "action_ELECTRICAL MASTER BATTERY_get",
      "parameters": {}
    },
    {
      "name": "ELECTRICAL TOTAL LOAD AMPS",
      "displaytitle": "ELECTRICAL TOTAL LOAD AMPS(Set)",
      "description": "Set the simvar Total load amps: Units amperes",
      "messagetype": "action_ELECTRICAL TOTAL LOAD AMPS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELECTRICAL TOTAL LOAD AMPS_get",
      "displaytitle": "ELECTRICAL TOTAL LOAD AMPS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal load amps: Units amperes",
      "messagetype": "action_ELECTRICAL TOTAL LOAD AMPS_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR DEFLECTION_get",
      "displaytitle": "ELEVATOR DEFLECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle deflection: Units radians",
      "messagetype": "action_ELEVATOR DEFLECTION_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR DEFLECTION PCT_get",
      "displaytitle": "ELEVATOR DEFLECTION PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent deflection: Units percent Over 100",
      "messagetype": "action_ELEVATOR DEFLECTION PCT_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR POSITION",
      "displaytitle": "ELEVATOR POSITION(Set)",
      "description": "Set the simvar Percent elevator input deflection: Units position",
      "messagetype": "action_ELEVATOR POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR POSITION_get",
      "displaytitle": "ELEVATOR POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent elevator input deflection: Units position",
      "messagetype": "action_ELEVATOR POSITION_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR TRIM DISABLED_get",
      "displaytitle": "ELEVATOR TRIM DISABLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Elevator Trim has been disabled: Units bool",
      "messagetype": "action_ELEVATOR TRIM DISABLED_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR TRIM DOWN LIMIT_get",
      "displaytitle": "ELEVATOR TRIM DOWN LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the maximum elevator trim value. This corresponds to the elevator_trim_down_limit in the Flight Model Config file: Units degrees",
      "messagetype": "action_ELEVATOR TRIM DOWN LIMIT_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR TRIM INDICATOR_get",
      "displaytitle": "ELEVATOR TRIM INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent elevator trim (for indication): Units position",
      "messagetype": "action_ELEVATOR TRIM INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR TRIM NEUTRAL_get",
      "displaytitle": "ELEVATOR TRIM NEUTRAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerElevator trim neutral: Units radians",
      "messagetype": "action_ELEVATOR TRIM NEUTRAL_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR TRIM PCT_get",
      "displaytitle": "ELEVATOR TRIM PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent elevator trim: Units percent Over 100",
      "messagetype": "action_ELEVATOR TRIM PCT_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR TRIM POSITION",
      "displaytitle": "ELEVATOR TRIM POSITION(Set)",
      "description": "Set the simvar Elevator trim deflection: Units radians",
      "messagetype": "action_ELEVATOR TRIM POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ELEVATOR TRIM POSITION_get",
      "displaytitle": "ELEVATOR TRIM POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerElevator trim deflection: Units radians",
      "messagetype": "action_ELEVATOR TRIM POSITION_get",
      "parameters": {}
    },
    {
      "name": "ELEVATOR TRIM UP LIMIT_get",
      "displaytitle": "ELEVATOR TRIM UP LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the maximum elevator trim value. This corresponds to the elevator_trim_up_limit in the Flight Model Config file: Units degrees",
      "messagetype": "action_ELEVATOR TRIM UP LIMIT_get",
      "parameters": {}
    },
    {
      "name": "ELEVON DEFLECTION_get",
      "displaytitle": "ELEVON DEFLECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerElevon deflection: Units radians",
      "messagetype": "action_ELEVON DEFLECTION_get",
      "parameters": {}
    },
    {
      "name": "ELT ACTIVATED_get",
      "displaytitle": "ELT ACTIVATED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Emergency Locator Transmitter is active.: Units bool",
      "messagetype": "action_ELT ACTIVATED_get",
      "parameters": {}
    },
    {
      "name": "EMPTY WEIGHT_get",
      "displaytitle": "EMPTY WEIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEmpty weight of the aircraft: Units pounds",
      "messagetype": "action_EMPTY WEIGHT_get",
      "parameters": {}
    },
    {
      "name": "EMPTY WEIGHT CROSS COUPLED MOI_get",
      "displaytitle": "EMPTY WEIGHT CROSS COUPLED MOI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEmpty weight cross coupled moment of inertia: Units slugs",
      "messagetype": "action_EMPTY WEIGHT CROSS COUPLED MOI_get",
      "parameters": {}
    },
    {
      "name": "EMPTY WEIGHT PITCH MOI_get",
      "displaytitle": "EMPTY WEIGHT PITCH MOI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEmpty weight pitch moment of inertia: Units slugs",
      "messagetype": "action_EMPTY WEIGHT PITCH MOI_get",
      "parameters": {}
    },
    {
      "name": "EMPTY WEIGHT ROLL MOI_get",
      "displaytitle": "EMPTY WEIGHT ROLL MOI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEmpty weight roll moment of inertia: Units slugs",
      "messagetype": "action_EMPTY WEIGHT ROLL MOI_get",
      "parameters": {}
    },
    {
      "name": "EMPTY WEIGHT YAW MOI_get",
      "displaytitle": "EMPTY WEIGHT YAW MOI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEmpty weight yaw moment of inertia: Units slugs",
      "messagetype": "action_EMPTY WEIGHT YAW MOI_get",
      "parameters": {}
    },
    {
      "name": "ENG ANTI ICE:index_get",
      "displaytitle": "ENG ANTI ICE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAnti-ice switch for the indexed engine, true if enabled false otherwise: Units bool",
      "messagetype": "action_ENG ANTI ICE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG COMBUSTION:index_get",
      "displaytitle": "ENG COMBUSTION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the indexed engine is running, false otherwise: Units bool",
      "messagetype": "action_ENG COMBUSTION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG CYLINDER HEAD TEMPERATURE:index_get",
      "displaytitle": "ENG CYLINDER HEAD TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine cylinder head temperature: Units rankine",
      "messagetype": "action_ENG CYLINDER HEAD TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG EXHAUST GAS TEMPERATURE GES:index_get",
      "displaytitle": "ENG EXHAUST GAS TEMPERATURE GES:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGoverned engine setting exhaust gas temperature for the indexed engine: Units percent Over 100",
      "messagetype": "action_ENG EXHAUST GAS TEMPERATURE GES:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG EXHAUST GAS TEMPERATURE:index_get",
      "displaytitle": "ENG EXHAUST GAS TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerExhaust gas temperature for the indexed engine: Units rankine",
      "messagetype": "action_ENG EXHAUST GAS TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG FAILED:index_get",
      "displaytitle": "ENG FAILED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFailure flag for the indexed engine that has failed: Units bool",
      "messagetype": "action_ENG FAILED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG FUEL FLOW BUG POSITION:index_get",
      "displaytitle": "ENG FUEL FLOW BUG POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel flow reference in pounds per hour for the indexed engine: Units pounds per hour",
      "messagetype": "action_ENG FUEL FLOW BUG POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG FUEL FLOW GPH:index_get",
      "displaytitle": "ENG FUEL FLOW GPH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEngine fuel flow in gallons per hour for the indexed engine: Units gallons per hour",
      "messagetype": "action_ENG FUEL FLOW GPH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG FUEL FLOW PPH:index_get",
      "displaytitle": "ENG FUEL FLOW PPH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine fuel flow in pounds per hour: Units pounds per hour",
      "messagetype": "action_ENG FUEL FLOW PPH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG HYDRAULIC PRESSURE:index_get",
      "displaytitle": "ENG HYDRAULIC PRESSURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine hydraulic pressure: Units pounds",
      "messagetype": "action_ENG HYDRAULIC PRESSURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG HYDRAULIC QUANTITY:index_get",
      "displaytitle": "ENG HYDRAULIC QUANTITY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed enginehydraulic fluid quantity, as a percentage of total capacity: Units percent Over 100",
      "messagetype": "action_ENG HYDRAULIC QUANTITY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG MANIFOLD PRESSURE:index_get",
      "displaytitle": "ENG MANIFOLD PRESSURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine manifold pressure: Units inches",
      "messagetype": "action_ENG MANIFOLD PRESSURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG MAX RPM_get",
      "displaytitle": "ENG MAX RPM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine Maximum rpm: Units RPM",
      "messagetype": "action_ENG MAX RPM_get",
      "parameters": {}
    },
    {
      "name": "ENG N1 RPM:index_get",
      "displaytitle": "ENG N1 RPM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine N1 rpm: Units RPM",
      "messagetype": "action_ENG N1 RPM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG N2 RPM:index_get",
      "displaytitle": "ENG N2 RPM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine N2 rpm: Units RPM",
      "messagetype": "action_ENG N2 RPM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG OIL PRESSURE:index_get",
      "displaytitle": "ENG OIL PRESSURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine oil pressure: Units pounds",
      "messagetype": "action_ENG OIL PRESSURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG OIL QUANTITY:index_get",
      "displaytitle": "ENG OIL QUANTITY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine oil quantity as a percentage of full capacity: Units percent Over 100",
      "messagetype": "action_ENG OIL QUANTITY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG OIL TEMPERATURE:index_get",
      "displaytitle": "ENG OIL TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine oil temperature: Units rankine",
      "messagetype": "action_ENG OIL TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG ON FIRE:index",
      "displaytitle": "ENG ON FIRE:index(Set)",
      "description": "Set the simvar The indexed engine on fire state: Units bool",
      "messagetype": "action_ENG ON FIRE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "ENG ON FIRE:index_get",
      "displaytitle": "ENG ON FIRE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine on fire state: Units bool",
      "messagetype": "action_ENG ON FIRE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG PRESSURE RATIO:index_get",
      "displaytitle": "ENG PRESSURE RATIO:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine pressure ratio: Units ratio",
      "messagetype": "action_ENG PRESSURE RATIO:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG RPM ANIMATION PERCENT:index_get",
      "displaytitle": "ENG RPM ANIMATION PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine percentage maximum rated rpm (used for visual animation): Units percent",
      "messagetype": "action_ENG RPM ANIMATION PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG TORQUE:index_get",
      "displaytitle": "ENG TORQUE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine torque: Units foot pounds",
      "messagetype": "action_ENG TORQUE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENG VIBRATION:index_get",
      "displaytitle": "ENG VIBRATION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine vibration: Units number",
      "messagetype": "action_ENG VIBRATION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ENGINE CONTROL SELECT",
      "displaytitle": "ENGINE CONTROL SELECT(Set)",
      "description": "Set the simvar Selected engines (combination of bit flags): Units mask",
      "messagetype": "action_ENGINE CONTROL SELECT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ENGINE CONTROL SELECT_get",
      "displaytitle": "ENGINE CONTROL SELECT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSelected engines (combination of bit flags): Units mask",
      "messagetype": "action_ENGINE CONTROL SELECT_get",
      "parameters": {}
    },
    {
      "name": "ENGINE PRIMER",
      "displaytitle": "ENGINE PRIMER(Set)",
      "description": "Set the simvar The engine primer position: Units position",
      "messagetype": "action_ENGINE PRIMER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ENGINE PRIMER_get",
      "displaytitle": "ENGINE PRIMER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe engine primer position: Units position",
      "messagetype": "action_ENGINE PRIMER_get",
      "parameters": {}
    },
    {
      "name": "ENGINE TYPE_get",
      "displaytitle": "ENGINE TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEngine type: Units enum",
      "messagetype": "action_ENGINE TYPE_get",
      "parameters": {}
    },
    {
      "name": "ESTIMATED CRUISE SPEED_get",
      "displaytitle": "ESTIMATED CRUISE SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEstimated cruise speed: Units feet",
      "messagetype": "action_ESTIMATED CRUISE SPEED_get",
      "parameters": {}
    },
    {
      "name": "ESTIMATED FUEL FLOW:index_get",
      "displaytitle": "ESTIMATED FUEL FLOW:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEstimated fuel flow to the indexed engine at cruise speed: Units pounds per hour",
      "messagetype": "action_ESTIMATED FUEL FLOW:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "EXTERNAL POWER AVAILABLE_get",
      "displaytitle": "EXTERNAL POWER AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be true if the given external power source is available. Use an external power index when referencing: Units bool",
      "messagetype": "action_EXTERNAL POWER AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "EXTERNAL POWER BREAKER PULLED",
      "displaytitle": "EXTERNAL POWER BREAKER PULLED(Set)",
      "description": "Set the simvar Boolean, The state of the breaker of an external power source: Units bool",
      "messagetype": "action_EXTERNAL POWER BREAKER PULLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EXTERNAL POWER BREAKER PULLED_get",
      "displaytitle": "EXTERNAL POWER BREAKER PULLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBoolean, The state of the breaker of an external power source: Units bool",
      "messagetype": "action_EXTERNAL POWER BREAKER PULLED_get",
      "parameters": {}
    },
    {
      "name": "EXTERNAL POWER CONNECTION ON_get",
      "displaytitle": "EXTERNAL POWER CONNECTION ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBoolean, The state of the connection between a bus and an external power source: Units bool",
      "messagetype": "action_EXTERNAL POWER CONNECTION ON_get",
      "parameters": {}
    },
    {
      "name": "EXTERNAL POWER ON_get",
      "displaytitle": "EXTERNAL POWER ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe external power switch position, true if the switch is ON. Use an external power index when referencing: Units bool",
      "messagetype": "action_EXTERNAL POWER ON_get",
      "parameters": {}
    },
    {
      "name": "EXTERNAL SYSTEM VALUE",
      "displaytitle": "EXTERNAL SYSTEM VALUE(Set)",
      "description": "Set the simvar Generic SimVar.: Units number",
      "messagetype": "action_EXTERNAL SYSTEM VALUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "EXTERNAL SYSTEM VALUE_get",
      "displaytitle": "EXTERNAL SYSTEM VALUE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGeneric SimVar.: Units number",
      "messagetype": "action_EXTERNAL SYSTEM VALUE_get",
      "parameters": {}
    },
    {
      "name": "FIRE BOTTLE DISCHARGED_get",
      "displaytitle": "FIRE BOTTLE DISCHARGED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the fire bottle is discharged.: Units bool",
      "messagetype": "action_FIRE BOTTLE DISCHARGED_get",
      "parameters": {}
    },
    {
      "name": "FIRE BOTTLE SWITCH_get",
      "displaytitle": "FIRE BOTTLE SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the fire bottle switch is on.: Units bool",
      "messagetype": "action_FIRE BOTTLE SWITCH_get",
      "parameters": {}
    },
    {
      "name": "FLAP DAMAGE BY SPEED_get",
      "displaytitle": "FLAP DAMAGE BY SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if flaps are damaged by excessive speed: Units bool",
      "messagetype": "action_FLAP DAMAGE BY SPEED_get",
      "parameters": {}
    },
    {
      "name": "FLAP POSITION SET",
      "displaytitle": "FLAP POSITION SET(Set)",
      "description": "Set the simvar Set the position of the flaps control: Units position",
      "messagetype": "action_FLAP POSITION SET",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLAP POSITION SET_get",
      "displaytitle": "FLAP POSITION SET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSet the position of the flaps control: Units position",
      "messagetype": "action_FLAP POSITION SET_get",
      "parameters": {}
    },
    {
      "name": "FLAP SPEED EXCEEDED_get",
      "displaytitle": "FLAP SPEED EXCEEDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if safe speed limit for flaps exceeded: Units bool",
      "messagetype": "action_FLAP SPEED EXCEEDED_get",
      "parameters": {}
    },
    {
      "name": "FLAPS AVAILABLE_get",
      "displaytitle": "FLAPS AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if flaps available: Units bool",
      "messagetype": "action_FLAPS AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "FLAPS EFFECTIVE HANDLE INDEX:index_get",
      "displaytitle": "FLAPS EFFECTIVE HANDLE INDEX:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis returns the effective flaps handle index, after some of the conditions have potentially forced the state to change: Units number",
      "messagetype": "action_FLAPS EFFECTIVE HANDLE INDEX:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "FLAPS HANDLE INDEX:index",
      "displaytitle": "FLAPS HANDLE INDEX:index(Set)",
      "description": "Set the simvar Index of current flap position: Units number",
      "messagetype": "action_FLAPS HANDLE INDEX:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "FLAPS HANDLE INDEX:index_get",
      "displaytitle": "FLAPS HANDLE INDEX:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of current flap position: Units number",
      "messagetype": "action_FLAPS HANDLE INDEX:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "FLAPS HANDLE PERCENT_get",
      "displaytitle": "FLAPS HANDLE PERCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent flap handle extended: Units percent Over 100",
      "messagetype": "action_FLAPS HANDLE PERCENT_get",
      "parameters": {}
    },
    {
      "name": "FLAPS NUM HANDLE POSITIONS_get",
      "displaytitle": "FLAPS NUM HANDLE POSITIONS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNumber of available flap positions: Units number",
      "messagetype": "action_FLAPS NUM HANDLE POSITIONS_get",
      "parameters": {}
    },
    {
      "name": "FLARM AVAILABLE",
      "displaytitle": "FLARM AVAILABLE(Set)",
      "description": "Set the simvar Whether the FLARM is available (TRUE, 1) or not (FALSE, 0).: Units bool",
      "messagetype": "action_FLARM AVAILABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLARM AVAILABLE_get",
      "displaytitle": "FLARM AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the FLARM is available (TRUE, 1) or not (FALSE, 0).: Units bool",
      "messagetype": "action_FLARM AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "FLARM THREAT BEARING_get",
      "displaytitle": "FLARM THREAT BEARING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe bearing of the FLARM threat aircraft, relative to track.: Units degrees",
      "messagetype": "action_FLARM THREAT BEARING_get",
      "parameters": {}
    },
    {
      "name": "FLARM THREAT DISTANCE_get",
      "displaytitle": "FLARM THREAT DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe distance to the FLARM threat object.: Units meters",
      "messagetype": "action_FLARM THREAT DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "FLARM THREAT HEADING_get",
      "displaytitle": "FLARM THREAT HEADING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe heading to the FLARM threat object.: Units degrees",
      "messagetype": "action_FLARM THREAT HEADING_get",
      "parameters": {}
    },
    {
      "name": "FLARM THREAT RELATIVE ALTITUDE_get",
      "displaytitle": "FLARM THREAT RELATIVE ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe relative altitude of the threat object.: Units meters",
      "messagetype": "action_FLARM THREAT RELATIVE ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "FLARM THREAT TIME TO COLLISION_get",
      "displaytitle": "FLARM THREAT TIME TO COLLISION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe estimated time to a collision.: Units seconds",
      "messagetype": "action_FLARM THREAT TIME TO COLLISION_get",
      "parameters": {}
    },
    {
      "name": "FLARM THREAT VERTICAL BEARING_get",
      "displaytitle": "FLARM THREAT VERTICAL BEARING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe vertical bearing towards the threat.: Units degrees",
      "messagetype": "action_FLARM THREAT VERTICAL BEARING_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT CANCEL DESTINATION",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION(Set)",
      "description": "Set the simvar When set with any value this will cancel the current flight assistant destination: Units number",
      "messagetype": "action_FLY ASSISTANT CANCEL DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT CANCEL DESTINATION_get",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhen set with any value this will cancel the current flight assistant destination: Units number",
      "messagetype": "action_FLY ASSISTANT CANCEL DESTINATION_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT CANCEL DESTINATION DISPLAY",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION DISPLAY(Set)",
      "description": "Set the simvar When set with any value this will cancel the display of the current flight assistant destination: Units number",
      "messagetype": "action_FLY ASSISTANT CANCEL DESTINATION DISPLAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT CANCEL DESTINATION DISPLAY_get",
      "displaytitle": "FLY ASSISTANT CANCEL DESTINATION DISPLAY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhen set with any value this will cancel the display of the current flight assistant destination: Units number",
      "messagetype": "action_FLY ASSISTANT CANCEL DESTINATION DISPLAY_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT COM AI LOCKED_get",
      "displaytitle": "FLY ASSISTANT COM AI LOCKED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true when the copilot AI control is active and therefore COM AI is locked on active too: Units bool",
      "messagetype": "action_FLY ASSISTANT COM AI LOCKED_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT HAVE DESTINATION_get",
      "displaytitle": "FLY ASSISTANT HAVE DESTINATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true when a destination has been set in the flight assistant: Units bool",
      "messagetype": "action_FLY ASSISTANT HAVE DESTINATION_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT LANDING SPEED_get",
      "displaytitle": "FLY ASSISTANT LANDING SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the POH range or an estimated value for this speed: Units null",
      "messagetype": "action_FLY ASSISTANT LANDING SPEED_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT LANDING SPEED DISPLAY MODE_get",
      "displaytitle": "FLY ASSISTANT LANDING SPEED DISPLAY MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the display mode of the speed, CSS side (only STALL SPEED is working and will turn red when below): Units null",
      "messagetype": "action_FLY ASSISTANT LANDING SPEED DISPLAY MODE_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT NEAREST CATEGORY",
      "displaytitle": "FLY ASSISTANT NEAREST CATEGORY(Set)",
      "description": "Set the simvar Selected category: Units enum",
      "messagetype": "action_FLY ASSISTANT NEAREST CATEGORY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT NEAREST CATEGORY_get",
      "displaytitle": "FLY ASSISTANT NEAREST CATEGORY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSelected category: Units enum",
      "messagetype": "action_FLY ASSISTANT NEAREST CATEGORY_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT NEAREST COUNT_get",
      "displaytitle": "FLY ASSISTANT NEAREST COUNT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNumber of elements in this category: Units number",
      "messagetype": "action_FLY ASSISTANT NEAREST COUNT_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT NEAREST NAME_get",
      "displaytitle": "FLY ASSISTANT NEAREST NAME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the name of the element at the specified index: Units null",
      "messagetype": "action_FLY ASSISTANT NEAREST NAME_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT NEAREST SELECTED",
      "displaytitle": "FLY ASSISTANT NEAREST SELECTED(Set)",
      "description": "Set the simvar Returns the index of the currently selected element: Units number",
      "messagetype": "action_FLY ASSISTANT NEAREST SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT NEAREST SELECTED_get",
      "displaytitle": "FLY ASSISTANT NEAREST SELECTED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the index of the currently selected element: Units number",
      "messagetype": "action_FLY ASSISTANT NEAREST SELECTED_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT RIBBONS ACTIVE",
      "displaytitle": "FLY ASSISTANT RIBBONS ACTIVE(Set)",
      "description": "Set the simvar Returns true when both ribbon assistances are active (taxi and landing), and can also be used to set them: Units bool",
      "messagetype": "action_FLY ASSISTANT RIBBONS ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT RIBBONS ACTIVE_get",
      "displaytitle": "FLY ASSISTANT RIBBONS ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true when both ribbon assistances are active (taxi and landing), and can also be used to set them: Units bool",
      "messagetype": "action_FLY ASSISTANT RIBBONS ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT SET AS DESTINATION",
      "displaytitle": "FLY ASSISTANT SET AS DESTINATION(Set)",
      "description": "Set the simvar When set with any value, it will set the selected element as the current destination: Units number",
      "messagetype": "action_FLY ASSISTANT SET AS DESTINATION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT SET AS DESTINATION_get",
      "displaytitle": "FLY ASSISTANT SET AS DESTINATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhen set with any value, it will set the selected element as the current destination: Units number",
      "messagetype": "action_FLY ASSISTANT SET AS DESTINATION_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT STALL SPEED",
      "displaytitle": "FLY ASSISTANT STALL SPEED(Set)",
      "description": "Set the simvar Returns the flight assistant stall speed: Units knots",
      "messagetype": "action_FLY ASSISTANT STALL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT STALL SPEED_get",
      "displaytitle": "FLY ASSISTANT STALL SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the flight assistant stall speed: Units knots",
      "messagetype": "action_FLY ASSISTANT STALL SPEED_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT STALL SPEED DISPLAY MODE_get",
      "displaytitle": "FLY ASSISTANT STALL SPEED DISPLAY MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the flight assistant stall speed display mode: Units null",
      "messagetype": "action_FLY ASSISTANT STALL SPEED DISPLAY MODE_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT TAKEOFF SPEED",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED(Set)",
      "description": "Set the simvar Returns the flight assistant takeoff speed: Units knots",
      "messagetype": "action_FLY ASSISTANT TAKEOFF SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT TAKEOFF SPEED_get",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the flight assistant takeoff speed: Units knots",
      "messagetype": "action_FLY ASSISTANT TAKEOFF SPEED_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE_get",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the flight assistant takeoff speed display mode: Units null",
      "messagetype": "action_FLY ASSISTANT TAKEOFF SPEED DISPLAY MODE_get",
      "parameters": {}
    },
    {
      "name": "FLY ASSISTANT TAKEOFF SPEED ESTIMATED",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED ESTIMATED(Set)",
      "description": "Set the simvar Can be set to override the estimated takeoff speed: Units knots",
      "messagetype": "action_FLY ASSISTANT TAKEOFF SPEED ESTIMATED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "FLY ASSISTANT TAKEOFF SPEED ESTIMATED_get",
      "displaytitle": "FLY ASSISTANT TAKEOFF SPEED ESTIMATED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be set to override the estimated takeoff speed: Units knots",
      "messagetype": "action_FLY ASSISTANT TAKEOFF SPEED ESTIMATED_get",
      "parameters": {}
    },
    {
      "name": "FLY BY WIRE ALPHA PROTECTION_get",
      "displaytitle": "FLY BY WIRE ALPHA PROTECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the fly-by-wire alpha protection is enabled or false otherwise: Units bool",
      "messagetype": "action_FLY BY WIRE ALPHA PROTECTION_get",
      "parameters": {}
    },
    {
      "name": "FLY BY WIRE ELAC FAILED_get",
      "displaytitle": "FLY BY WIRE ELAC FAILED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the Elevators and Ailerons computer has failed: Units bool",
      "messagetype": "action_FLY BY WIRE ELAC FAILED_get",
      "parameters": {}
    },
    {
      "name": "FLY BY WIRE ELAC SWITCH_get",
      "displaytitle": "FLY BY WIRE ELAC SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the fly by wire Elevators and Ailerons computer is on: Units bool",
      "messagetype": "action_FLY BY WIRE ELAC SWITCH_get",
      "parameters": {}
    },
    {
      "name": "FLY BY WIRE FAC FAILED_get",
      "displaytitle": "FLY BY WIRE FAC FAILED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the Flight Augmentation computer has failed: Units bool",
      "messagetype": "action_FLY BY WIRE FAC FAILED_get",
      "parameters": {}
    },
    {
      "name": "FLY BY WIRE FAC SWITCH_get",
      "displaytitle": "FLY BY WIRE FAC SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the fly by wire Flight Augmentation computer is on: Units bool",
      "messagetype": "action_FLY BY WIRE FAC SWITCH_get",
      "parameters": {}
    },
    {
      "name": "FLY BY WIRE SEC FAILED_get",
      "displaytitle": "FLY BY WIRE SEC FAILED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the Spoilers and Elevators computer has failed: Units bool",
      "messagetype": "action_FLY BY WIRE SEC FAILED_get",
      "parameters": {}
    },
    {
      "name": "FLY BY WIRE SEC SWITCH_get",
      "displaytitle": "FLY BY WIRE SEC SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the fly by wire Spoilers and Elevators computer is on: Units bool",
      "messagetype": "action_FLY BY WIRE SEC SWITCH_get",
      "parameters": {}
    },
    {
      "name": "FOLDING WING HANDLE POSITION_get",
      "displaytitle": "FOLDING WING HANDLE POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the folding wing handle is engaged: Units bool",
      "messagetype": "action_FOLDING WING HANDLE POSITION_get",
      "parameters": {}
    },
    {
      "name": "FOLDING WING LEFT PERCENT_get",
      "displaytitle": "FOLDING WING LEFT PERCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLeft folding wing position, 1.0 is fully folded: Units percent Over 100",
      "messagetype": "action_FOLDING WING LEFT PERCENT_get",
      "parameters": {}
    },
    {
      "name": "FOLDING WING RIGHT PERCENT_get",
      "displaytitle": "FOLDING WING RIGHT PERCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRight folding wing position, 1.0 is fully folded: Units percent Over 100",
      "messagetype": "action_FOLDING WING RIGHT PERCENT_get",
      "parameters": {}
    },
    {
      "name": "FUELTRUCK HOSE DEPLOYED_get",
      "displaytitle": "FUELTRUCK HOSE DEPLOYED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current deployment amount of the fuel truck hose. Currently can only be set to 0 (not deployed) and 1 (deployed).: Units percent Over 100",
      "messagetype": "action_FUELTRUCK HOSE DEPLOYED_get",
      "parameters": {}
    },
    {
      "name": "FUELTRUCK HOSE END POSX_get",
      "displaytitle": "FUELTRUCK HOSE END POSX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"X\" axis position of the end of the fuel truck hose when fully deployed, relative to the ground.: Units meters",
      "messagetype": "action_FUELTRUCK HOSE END POSX_get",
      "parameters": {}
    },
    {
      "name": "FUELTRUCK HOSE END POSZ_get",
      "displaytitle": "FUELTRUCK HOSE END POSZ(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Z\" axis position of the end of the fuel truck hose when fully deployed, relative to the ground.: Units meters",
      "messagetype": "action_FUELTRUCK HOSE END POSZ_get",
      "parameters": {}
    },
    {
      "name": "FUELTRUCK HOSE END RELATIVE HEADING_get",
      "displaytitle": "FUELTRUCK HOSE END RELATIVE HEADING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe heading of the end of the fuel truck hose, relative to the vehicle heading.: Units degrees",
      "messagetype": "action_FUELTRUCK HOSE END RELATIVE HEADING_get",
      "parameters": {}
    },
    {
      "name": "FULL THROTTLE THRUST TO WEIGHT RATIO_get",
      "displaytitle": "FULL THROTTLE THRUST TO WEIGHT RATIO(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFull throttle thrust to weight ratio: Units number",
      "messagetype": "action_FULL THROTTLE THRUST TO WEIGHT RATIO_get",
      "parameters": {}
    },
    {
      "name": "G FORCE",
      "displaytitle": "G FORCE(Set)",
      "description": "Set the simvar Current g force: Units gforce",
      "messagetype": "action_G FORCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "G FORCE_get",
      "displaytitle": "G FORCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent g force: Units gforce",
      "messagetype": "action_G FORCE_get",
      "parameters": {}
    },
    {
      "name": "G LIMITER SETTING_get",
      "displaytitle": "G LIMITER SETTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis returns the setting of the G-limiter, as set using the GLimiterSetting parameter: Units enum",
      "messagetype": "action_G LIMITER SETTING_get",
      "parameters": {}
    },
    {
      "name": "GAMEPLAY CAMERA FOCUS",
      "displaytitle": "GAMEPLAY CAMERA FOCUS(Set)",
      "description": "Set the simvar This gets/sets the focus for the camera zoom, which can be either manual, or auto. The setting affects both the Cockpit and the External (Chase) cameras.: Units enum",
      "messagetype": "action_GAMEPLAY CAMERA FOCUS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GAMEPLAY CAMERA FOCUS_get",
      "displaytitle": "GAMEPLAY CAMERA FOCUS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis gets/sets the focus for the camera zoom, which can be either manual, or auto. The setting affects both the Cockpit and the External (Chase) cameras.: Units enum",
      "messagetype": "action_GAMEPLAY CAMERA FOCUS_get",
      "parameters": {}
    },
    {
      "name": "GEAR ANIMATION POSITION:index_get",
      "displaytitle": "GEAR ANIMATION POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent indexed gear animation extended: Units percent",
      "messagetype": "action_GEAR ANIMATION POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GEAR AUX POSITION",
      "displaytitle": "GEAR AUX POSITION(Set)",
      "description": "Set the simvar Percent auxiliary gear extended: Units percent Over 100",
      "messagetype": "action_GEAR AUX POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR AUX POSITION_get",
      "displaytitle": "GEAR AUX POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent auxiliary gear extended: Units percent Over 100",
      "messagetype": "action_GEAR AUX POSITION_get",
      "parameters": {}
    },
    {
      "name": "GEAR AUX STEER ANGLE_get",
      "displaytitle": "GEAR AUX STEER ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAux wheel angle, negative to the left, positive to the right. The aux wheel is the fourth set of landing gear, sometimes used on helicopters: Units radians",
      "messagetype": "action_GEAR AUX STEER ANGLE_get",
      "parameters": {}
    },
    {
      "name": "GEAR AUX STEER ANGLE PCT_get",
      "displaytitle": "GEAR AUX STEER ANGLE PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAux steer angle as a percentage: Units percent Over 100",
      "messagetype": "action_GEAR AUX STEER ANGLE PCT_get",
      "parameters": {}
    },
    {
      "name": "GEAR CENTER POSITION",
      "displaytitle": "GEAR CENTER POSITION(Set)",
      "description": "Set the simvar Percent center gear extended: Units percent Over 100",
      "messagetype": "action_GEAR CENTER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR CENTER POSITION_get",
      "displaytitle": "GEAR CENTER POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent center gear extended: Units percent Over 100",
      "messagetype": "action_GEAR CENTER POSITION_get",
      "parameters": {}
    },
    {
      "name": "GEAR CENTER STEER ANGLE_get",
      "displaytitle": "GEAR CENTER STEER ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCenter wheel angle, negative to the left, positive to the right: Units radians",
      "messagetype": "action_GEAR CENTER STEER ANGLE_get",
      "parameters": {}
    },
    {
      "name": "GEAR CENTER STEER ANGLE PCT_get",
      "displaytitle": "GEAR CENTER STEER ANGLE PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCenter steer angle as a percentage: Units percent Over 100",
      "messagetype": "action_GEAR CENTER STEER ANGLE PCT_get",
      "parameters": {}
    },
    {
      "name": "GEAR DAMAGE BY SPEED_get",
      "displaytitle": "GEAR DAMAGE BY SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if gear has been damaged by excessive speed: Units bool",
      "messagetype": "action_GEAR DAMAGE BY SPEED_get",
      "parameters": {}
    },
    {
      "name": "GEAR EMERGENCY HANDLE POSITION_get",
      "displaytitle": "GEAR EMERGENCY HANDLE POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if gear emergency handle applied: Units bool",
      "messagetype": "action_GEAR EMERGENCY HANDLE POSITION_get",
      "parameters": {}
    },
    {
      "name": "GEAR HANDLE POSITION",
      "displaytitle": "GEAR HANDLE POSITION(Set)",
      "description": "Set the simvar The gear handle position, where 0 means the handle is retracted and 1 is the handle fully applied: Units percent Over 100",
      "messagetype": "action_GEAR HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR HANDLE POSITION_get",
      "displaytitle": "GEAR HANDLE POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe gear handle position, where 0 means the handle is retracted and 1 is the handle fully applied: Units percent Over 100",
      "messagetype": "action_GEAR HANDLE POSITION_get",
      "parameters": {}
    },
    {
      "name": "GEAR HYDRAULIC PRESSURE_get",
      "displaytitle": "GEAR HYDRAULIC PRESSURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGear hydraulic pressure: Units pounds",
      "messagetype": "action_GEAR HYDRAULIC PRESSURE_get",
      "parameters": {}
    },
    {
      "name": "GEAR IS ON GROUND:index_get",
      "displaytitle": "GEAR IS ON GROUND:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the gear is on the ground: Units bool",
      "messagetype": "action_GEAR IS ON GROUND:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GEAR IS SKIDDING:index_get",
      "displaytitle": "GEAR IS SKIDDING:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the gear is skidding: Units bool",
      "messagetype": "action_GEAR IS SKIDDING:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GEAR LEFT POSITION",
      "displaytitle": "GEAR LEFT POSITION(Set)",
      "description": "Set the simvar Percent left gear extended: Units percent Over 100",
      "messagetype": "action_GEAR LEFT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR LEFT POSITION_get",
      "displaytitle": "GEAR LEFT POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent left gear extended: Units percent Over 100",
      "messagetype": "action_GEAR LEFT POSITION_get",
      "parameters": {}
    },
    {
      "name": "GEAR LEFT STEER ANGLE_get",
      "displaytitle": "GEAR LEFT STEER ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLeft wheel angle, negative to the left, positive to the right: Units radians",
      "messagetype": "action_GEAR LEFT STEER ANGLE_get",
      "parameters": {}
    },
    {
      "name": "GEAR LEFT STEER ANGLE PCT_get",
      "displaytitle": "GEAR LEFT STEER ANGLE PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLeft steer angle as a percentage: Units percent Over 100",
      "messagetype": "action_GEAR LEFT STEER ANGLE PCT_get",
      "parameters": {}
    },
    {
      "name": "GEAR POSITION:index",
      "displaytitle": "GEAR POSITION:index(Set)",
      "description": "Set the simvar Position of landing gear: Units enum",
      "messagetype": "action_GEAR POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GEAR POSITION:index_get",
      "displaytitle": "GEAR POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPosition of landing gear: Units enum",
      "messagetype": "action_GEAR POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GEAR RIGHT POSITION",
      "displaytitle": "GEAR RIGHT POSITION(Set)",
      "description": "Set the simvar Percent right gear extended: Units percent Over 100",
      "messagetype": "action_GEAR RIGHT POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GEAR RIGHT POSITION_get",
      "displaytitle": "GEAR RIGHT POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent right gear extended: Units percent Over 100",
      "messagetype": "action_GEAR RIGHT POSITION_get",
      "parameters": {}
    },
    {
      "name": "GEAR RIGHT STEER ANGLE_get",
      "displaytitle": "GEAR RIGHT STEER ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRight wheel angle, negative to the left, positive to the right: Units radians",
      "messagetype": "action_GEAR RIGHT STEER ANGLE_get",
      "parameters": {}
    },
    {
      "name": "GEAR RIGHT STEER ANGLE PCT_get",
      "displaytitle": "GEAR RIGHT STEER ANGLE PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRight steer angle as a percentage: Units percent Over 100",
      "messagetype": "action_GEAR RIGHT STEER ANGLE PCT_get",
      "parameters": {}
    },
    {
      "name": "GEAR SPEED EXCEEDED_get",
      "displaytitle": "GEAR SPEED EXCEEDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if safe speed limit for gear exceeded: Units bool",
      "messagetype": "action_GEAR SPEED EXCEEDED_get",
      "parameters": {}
    },
    {
      "name": "GEAR STEER ANGLE PCT:index_get",
      "displaytitle": "GEAR STEER ANGLE PCT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAlternative method of getting steer angle as a percentage: Units percent Over 100",
      "messagetype": "action_GEAR STEER ANGLE PCT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GEAR STEER ANGLE:index_get",
      "displaytitle": "GEAR STEER ANGLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAlternative method of getting the steer angle: Units radians",
      "messagetype": "action_GEAR STEER ANGLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GEAR TOTAL PCT EXTENDED_get",
      "displaytitle": "GEAR TOTAL PCT EXTENDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent total gear extended: Units percent",
      "messagetype": "action_GEAR TOTAL PCT EXTENDED_get",
      "parameters": {}
    },
    {
      "name": "GEAR WARNING:index_get",
      "displaytitle": "GEAR WARNING:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGear warnings: Units enum",
      "messagetype": "action_GEAR WARNING:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GEAR WATER DEPTH_get",
      "displaytitle": "GEAR WATER DEPTH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe depth of the gear in the water: Units centimeters",
      "messagetype": "action_GEAR WATER DEPTH_get",
      "parameters": {}
    },
    {
      "name": "GENERAL ENG ANTI ICE POSITION:index_get",
      "displaytitle": "GENERAL ENG ANTI ICE POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine anti-ice switch state: Units bool",
      "messagetype": "action_GENERAL ENG ANTI ICE POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG COMBUSTION EX1:index",
      "displaytitle": "GENERAL ENG COMBUSTION EX1:index(Set)",
      "description": "Set the simvar This SimVar is similar to GENERAL ENG COMBUSTION, in that it can also be used to enable or disable engine combustion. However this SimVar will not interfere with the current state of ths simulation. For example, if the aircraft has a turbine engine with auto_ignition enabled or it's a propeller engine with magnetos, then in the subsequent simulation frames this SimVar may be set to 1 (TRUE) again as the engine restarts automatically: Units bool",
      "messagetype": "action_GENERAL ENG COMBUSTION EX1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG COMBUSTION EX1:index_get",
      "displaytitle": "GENERAL ENG COMBUSTION EX1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis SimVar is similar to GENERAL ENG COMBUSTION, in that it can also be used to enable or disable engine combustion. However this SimVar will not interfere with the current state of ths simulation. For example, if the aircraft has a turbine engine with auto_ignition enabled or it's a propeller engine with magnetos, then in the subsequent simulation frames this SimVar may be set to 1 (TRUE) again as the engine restarts automatically: Units bool",
      "messagetype": "action_GENERAL ENG COMBUSTION EX1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG COMBUSTION SOUND PERCENT:index_get",
      "displaytitle": "GENERAL ENG COMBUSTION SOUND PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of maximum sound being created by the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG COMBUSTION SOUND PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG COMBUSTION:index",
      "displaytitle": "GENERAL ENG COMBUSTION:index(Set)",
      "description": "Set the simvar Set the indexed engine combustion flag to TRUE or FALSE. Note that this will not only stop all combustion, but it will also set the engine RPM to 0, regardless of the actual state of the simulation: Units bool",
      "messagetype": "action_GENERAL ENG COMBUSTION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG COMBUSTION:index_get",
      "displaytitle": "GENERAL ENG COMBUSTION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSet the indexed engine combustion flag to TRUE or FALSE. Note that this will not only stop all combustion, but it will also set the engine RPM to 0, regardless of the actual state of the simulation: Units bool",
      "messagetype": "action_GENERAL ENG COMBUSTION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG DAMAGE PERCENT:index_get",
      "displaytitle": "GENERAL ENG DAMAGE PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of total damage to the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG DAMAGE PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG ELAPSED TIME:index_get",
      "displaytitle": "GENERAL ENG ELAPSED TIME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal elapsed time since the indexed engine was started: Units hours",
      "messagetype": "action_GENERAL ENG ELAPSED TIME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG EXHAUST GAS TEMPERATURE:index",
      "displaytitle": "GENERAL ENG EXHAUST GAS TEMPERATURE:index(Set)",
      "description": "Set the simvar The indexed engine exhaust gas temperature: Units rankine",
      "messagetype": "action_GENERAL ENG EXHAUST GAS TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG EXHAUST GAS TEMPERATURE:index_get",
      "displaytitle": "GENERAL ENG EXHAUST GAS TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine exhaust gas temperature: Units rankine",
      "messagetype": "action_GENERAL ENG EXHAUST GAS TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG FAILED:index_get",
      "displaytitle": "GENERAL ENG FAILED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine fail flag: Units bool",
      "messagetype": "action_GENERAL ENG FAILED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG FIRE DETECTED:index_get",
      "displaytitle": "GENERAL ENG FIRE DETECTED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDetects if a fire has been detected in an indexed engine or not. If 0 (FALSE) no fire has been detected and if 1 (TRUE) then it has: Units bool",
      "messagetype": "action_GENERAL ENG FIRE DETECTED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG FUEL PRESSURE:index",
      "displaytitle": "GENERAL ENG FUEL PRESSURE:index(Set)",
      "description": "Set the simvar The indexed engine fuel pressure: Units pounds",
      "messagetype": "action_GENERAL ENG FUEL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG FUEL PRESSURE:index_get",
      "displaytitle": "GENERAL ENG FUEL PRESSURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine fuel pressure: Units pounds",
      "messagetype": "action_GENERAL ENG FUEL PRESSURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG FUEL PUMP ON:index_get",
      "displaytitle": "GENERAL ENG FUEL PUMP ON:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the indexed engine fuel pump on (1, TRUE) or off (0, FALSE): Units bool",
      "messagetype": "action_GENERAL ENG FUEL PUMP ON:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG FUEL PUMP SWITCH EX1:index_get",
      "displaytitle": "GENERAL ENG FUEL PUMP SWITCH EX1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEquivalent to GENERAL ENG FUEL PUMP SWITCH but differentiates between ON and AUTO: Units bool",
      "messagetype": "action_GENERAL ENG FUEL PUMP SWITCH EX1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG FUEL PUMP SWITCH:index_get",
      "displaytitle": "GENERAL ENG FUEL PUMP SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel pump switch state the indexed engine. If 0 (FALSE) the pump is off and if 1 (TRUE) then it is on: Units bool",
      "messagetype": "action_GENERAL ENG FUEL PUMP SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG FUEL USED SINCE START:index_get",
      "displaytitle": "GENERAL ENG FUEL USED SINCE START:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel used since the indexed engine was last started: Units pounds",
      "messagetype": "action_GENERAL ENG FUEL USED SINCE START:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG FUEL VALVE:index_get",
      "displaytitle": "GENERAL ENG FUEL VALVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel valve state for the indexed engine. If 0 (FALSE) then the valve is closed and if 1 (TRUE) then it is open: Units bool",
      "messagetype": "action_GENERAL ENG FUEL VALVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG GENERATOR ACTIVE:index",
      "displaytitle": "GENERAL ENG GENERATOR ACTIVE:index(Set)",
      "description": "Set the simvar Settable alternator (generator) on/off switch for the indexed engine: Units bool",
      "messagetype": "action_GENERAL ENG GENERATOR ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG GENERATOR ACTIVE:index_get",
      "displaytitle": "GENERAL ENG GENERATOR ACTIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSettable alternator (generator) on/off switch for the indexed engine: Units bool",
      "messagetype": "action_GENERAL ENG GENERATOR ACTIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG GENERATOR SWITCH:index_get",
      "displaytitle": "GENERAL ENG GENERATOR SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAlternator (generator) on/off switch state for the indexed engine: Units bool",
      "messagetype": "action_GENERAL ENG GENERATOR SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG HOBBS ELAPSED TIME:index_get",
      "displaytitle": "GENERAL ENG HOBBS ELAPSED TIME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to find the time since the indexed engine started running: Units seconds",
      "messagetype": "action_GENERAL ENG HOBBS ELAPSED TIME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG MASTER ALTERNATOR_get",
      "displaytitle": "GENERAL ENG MASTER ALTERNATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe alternator switch for a specific engine. Requires an engine index (1:4) when used: Units bool",
      "messagetype": "action_GENERAL ENG MASTER ALTERNATOR_get",
      "parameters": {}
    },
    {
      "name": "GENERAL ENG MASTER ALTERNATOR:index_get",
      "displaytitle": "GENERAL ENG MASTER ALTERNATOR:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe alternator (generator) switch position, true if the switch is ON. Requires an engine index, and the use of an alternator index when referencing: Units bool",
      "messagetype": "action_GENERAL ENG MASTER ALTERNATOR:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG MAX REACHED RPM:index_get",
      "displaytitle": "GENERAL ENG MAX REACHED RPM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMaximum attained rpm for the indexed engine: Units RPM",
      "messagetype": "action_GENERAL ENG MAX REACHED RPM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG MIXTURE LEVER POSITION:index",
      "displaytitle": "GENERAL ENG MIXTURE LEVER POSITION:index(Set)",
      "description": "Set the simvar Percent of max mixture lever position for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG MIXTURE LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG MIXTURE LEVER POSITION:index_get",
      "displaytitle": "GENERAL ENG MIXTURE LEVER POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of max mixture lever position for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG MIXTURE LEVER POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG OIL LEAKED PERCENT:index_get",
      "displaytitle": "GENERAL ENG OIL LEAKED PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of max oil capacity leaked for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG OIL LEAKED PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG OIL PRESSURE:index",
      "displaytitle": "GENERAL ENG OIL PRESSURE:index(Set)",
      "description": "Set the simvar The indexed engine oil pressure: Units pounds",
      "messagetype": "action_GENERAL ENG OIL PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG OIL PRESSURE:index_get",
      "displaytitle": "GENERAL ENG OIL PRESSURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine oil pressure: Units pounds",
      "messagetype": "action_GENERAL ENG OIL PRESSURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG OIL TEMPERATURE:index",
      "displaytitle": "GENERAL ENG OIL TEMPERATURE:index(Set)",
      "description": "Set the simvar The indexed engine oil temperature: Units rankine",
      "messagetype": "action_GENERAL ENG OIL TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG OIL TEMPERATURE:index_get",
      "displaytitle": "GENERAL ENG OIL TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine oil temperature: Units rankine",
      "messagetype": "action_GENERAL ENG OIL TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG PCT MAX RPM:index",
      "displaytitle": "GENERAL ENG PCT MAX RPM:index(Set)",
      "description": "Set the simvar Percent of max rated rpm for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG PCT MAX RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG PCT MAX RPM:index_get",
      "displaytitle": "GENERAL ENG PCT MAX RPM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of max rated rpm for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG PCT MAX RPM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG PROPELLER LEVER POSITION:index",
      "displaytitle": "GENERAL ENG PROPELLER LEVER POSITION:index(Set)",
      "description": "Set the simvar Percent of max prop lever position for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG PROPELLER LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG PROPELLER LEVER POSITION:index_get",
      "displaytitle": "GENERAL ENG PROPELLER LEVER POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of max prop lever position for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG PROPELLER LEVER POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG REVERSE THRUST ENGAGED_get",
      "displaytitle": "GENERAL ENG REVERSE THRUST ENGAGED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will return 1 (TRUE) if the reverse thruster is engaged, or 0 (FALSE) otherwise: Units bool",
      "messagetype": "action_GENERAL ENG REVERSE THRUST ENGAGED_get",
      "parameters": {}
    },
    {
      "name": "GENERAL ENG RPM:index",
      "displaytitle": "GENERAL ENG RPM:index(Set)",
      "description": "Set the simvar The RPM for an indexed engine: Units RPM",
      "messagetype": "action_GENERAL ENG RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG RPM:index_get",
      "displaytitle": "GENERAL ENG RPM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe RPM for an indexed engine: Units RPM",
      "messagetype": "action_GENERAL ENG RPM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG STARTER ACTIVE:index_get",
      "displaytitle": "GENERAL ENG STARTER ACTIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the indexed engine starter is active: Units bool",
      "messagetype": "action_GENERAL ENG STARTER ACTIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG STARTER:index_get",
      "displaytitle": "GENERAL ENG STARTER:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine starter on/off state: Units bool",
      "messagetype": "action_GENERAL ENG STARTER:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG THROTTLE LEVER POSITION:index",
      "displaytitle": "GENERAL ENG THROTTLE LEVER POSITION:index(Set)",
      "description": "Set the simvar Percent of max throttle position for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG THROTTLE LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "GENERAL ENG THROTTLE LEVER POSITION:index_get",
      "displaytitle": "GENERAL ENG THROTTLE LEVER POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of max throttle position for the indexed engine: Units percent",
      "messagetype": "action_GENERAL ENG THROTTLE LEVER POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GENERAL ENG THROTTLE MANAGED MODE:index_get",
      "displaytitle": "GENERAL ENG THROTTLE MANAGED MODE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent mode of the managed throttle for the indexed engine: Units number",
      "messagetype": "action_GENERAL ENG THROTTLE MANAGED MODE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "GLASSCOCKPIT AUTOMATIC BRIGHTNESS_get",
      "displaytitle": "GLASSCOCKPIT AUTOMATIC BRIGHTNESS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis variable will return a value between 0 and 1 for the automatic brightness setting for glass cockpit displays, where 0 is the dimmest and 1 is the brightest. This value will vary depending on the time of day.: Units number",
      "messagetype": "action_GLASSCOCKPIT AUTOMATIC BRIGHTNESS_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH AIRPORT ID_get",
      "displaytitle": "GPS APPROACH AIRPORT ID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerID of airport.: Units null",
      "messagetype": "action_GPS APPROACH AIRPORT ID_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH APPROACH ID_get",
      "displaytitle": "GPS APPROACH APPROACH ID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerID of approach.: Units null",
      "messagetype": "action_GPS APPROACH APPROACH ID_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH APPROACH INDEX",
      "displaytitle": "GPS APPROACH APPROACH INDEX(Set)",
      "description": "Set the simvar Index of approach for given airport.: Units number",
      "messagetype": "action_GPS APPROACH APPROACH INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH APPROACH INDEX_get",
      "displaytitle": "GPS APPROACH APPROACH INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of approach for given airport.: Units number",
      "messagetype": "action_GPS APPROACH APPROACH INDEX_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH APPROACH TYPE",
      "displaytitle": "GPS APPROACH APPROACH TYPE(Set)",
      "description": "Set the simvar Approach type.: Units enum",
      "messagetype": "action_GPS APPROACH APPROACH TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH APPROACH TYPE_get",
      "displaytitle": "GPS APPROACH APPROACH TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerApproach type.: Units enum",
      "messagetype": "action_GPS APPROACH APPROACH TYPE_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH IS FINAL",
      "displaytitle": "GPS APPROACH IS FINAL(Set)",
      "description": "Set the simvar Is approach transition final approach segment.: Units bool",
      "messagetype": "action_GPS APPROACH IS FINAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH IS FINAL_get",
      "displaytitle": "GPS APPROACH IS FINAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs approach transition final approach segment.: Units bool",
      "messagetype": "action_GPS APPROACH IS FINAL_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH IS MISSED",
      "displaytitle": "GPS APPROACH IS MISSED(Set)",
      "description": "Set the simvar Is approach segment missed approach segment.: Units bool",
      "messagetype": "action_GPS APPROACH IS MISSED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH IS MISSED_get",
      "displaytitle": "GPS APPROACH IS MISSED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs approach segment missed approach segment.: Units bool",
      "messagetype": "action_GPS APPROACH IS MISSED_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH IS WP RUNWAY",
      "displaytitle": "GPS APPROACH IS WP RUNWAY(Set)",
      "description": "Set the simvar Waypoint is the runway.: Units bool",
      "messagetype": "action_GPS APPROACH IS WP RUNWAY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH IS WP RUNWAY_get",
      "displaytitle": "GPS APPROACH IS WP RUNWAY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWaypoint is the runway.: Units bool",
      "messagetype": "action_GPS APPROACH IS WP RUNWAY_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH MODE",
      "displaytitle": "GPS APPROACH MODE(Set)",
      "description": "Set the simvar Sub mode within approach mode.: Units enum",
      "messagetype": "action_GPS APPROACH MODE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH MODE_get",
      "displaytitle": "GPS APPROACH MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSub mode within approach mode.: Units enum",
      "messagetype": "action_GPS APPROACH MODE_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH SEGMENT TYPE",
      "displaytitle": "GPS APPROACH SEGMENT TYPE(Set)",
      "description": "Set the simvar Segment type within approach.: Units enum",
      "messagetype": "action_GPS APPROACH SEGMENT TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH SEGMENT TYPE_get",
      "displaytitle": "GPS APPROACH SEGMENT TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSegment type within approach.: Units enum",
      "messagetype": "action_GPS APPROACH SEGMENT TYPE_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH TIMEZONE DEVIATION_get",
      "displaytitle": "GPS APPROACH TIMEZONE DEVIATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDeviation of local time from GMT.: Units seconds",
      "messagetype": "action_GPS APPROACH TIMEZONE DEVIATION_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH TRANSITION ID",
      "displaytitle": "GPS APPROACH TRANSITION ID(Set)",
      "description": "Set the simvar ID of approach transition.: Units null",
      "messagetype": "action_GPS APPROACH TRANSITION ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH TRANSITION ID_get",
      "displaytitle": "GPS APPROACH TRANSITION ID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerID of approach transition.: Units null",
      "messagetype": "action_GPS APPROACH TRANSITION ID_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH TRANSITION INDEX",
      "displaytitle": "GPS APPROACH TRANSITION INDEX(Set)",
      "description": "Set the simvar Index of approach transition.: Units number",
      "messagetype": "action_GPS APPROACH TRANSITION INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH TRANSITION INDEX_get",
      "displaytitle": "GPS APPROACH TRANSITION INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of approach transition.: Units number",
      "messagetype": "action_GPS APPROACH TRANSITION INDEX_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH WP COUNT",
      "displaytitle": "GPS APPROACH WP COUNT(Set)",
      "description": "Set the simvar Number of waypoints.: Units number",
      "messagetype": "action_GPS APPROACH WP COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH WP COUNT_get",
      "displaytitle": "GPS APPROACH WP COUNT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNumber of waypoints.: Units number",
      "messagetype": "action_GPS APPROACH WP COUNT_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH WP INDEX",
      "displaytitle": "GPS APPROACH WP INDEX(Set)",
      "description": "Set the simvar Index of current waypoint.: Units number",
      "messagetype": "action_GPS APPROACH WP INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH WP INDEX_get",
      "displaytitle": "GPS APPROACH WP INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of current waypoint.: Units number",
      "messagetype": "action_GPS APPROACH WP INDEX_get",
      "parameters": {}
    },
    {
      "name": "GPS APPROACH WP TYPE",
      "displaytitle": "GPS APPROACH WP TYPE(Set)",
      "description": "Set the simvar Waypoint type within approach mode.: Units enum",
      "messagetype": "action_GPS APPROACH WP TYPE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS APPROACH WP TYPE_get",
      "displaytitle": "GPS APPROACH WP TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWaypoint type within approach mode.: Units enum",
      "messagetype": "action_GPS APPROACH WP TYPE_get",
      "parameters": {}
    },
    {
      "name": "GPS CDI NEEDLE_get",
      "displaytitle": "GPS CDI NEEDLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe course deviation of the needle for a CDI instrument. The SimVar displays the deviation from -127 to +127. It returns a value if a flight plan is set (otherwise it will return 0) even if the autopilot isn't on GPS mode. Scaling can also be set through the GPS CDI SCALING simvar.: Units number",
      "messagetype": "action_GPS CDI NEEDLE_get",
      "parameters": {}
    },
    {
      "name": "GPS CDI SCALING",
      "displaytitle": "GPS CDI SCALING(Set)",
      "description": "Set the simvar The full scale deflection of the CDI due to GPS cross-track error, in meters.: Units meters",
      "messagetype": "action_GPS CDI SCALING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS CDI SCALING_get",
      "displaytitle": "GPS CDI SCALING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe full scale deflection of the CDI due to GPS cross-track error, in meters.: Units meters",
      "messagetype": "action_GPS CDI SCALING_get",
      "parameters": {}
    },
    {
      "name": "GPS COURSE TO STEER",
      "displaytitle": "GPS COURSE TO STEER(Set)",
      "description": "Set the simvar Suggested heading to steer (for autopilot).: Units radians",
      "messagetype": "action_GPS COURSE TO STEER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS COURSE TO STEER_get",
      "displaytitle": "GPS COURSE TO STEER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSuggested heading to steer (for autopilot).: Units radians",
      "messagetype": "action_GPS COURSE TO STEER_get",
      "parameters": {}
    },
    {
      "name": "GPS DRIVES NAV1_get",
      "displaytitle": "GPS DRIVES NAV1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGPS is driving Nav 1 indicator. Note this setting will also affect the SimVars HSI_STATION_IDENT and HSI_BEARING.: Units bool",
      "messagetype": "action_GPS DRIVES NAV1_get",
      "parameters": {}
    },
    {
      "name": "GPS ETA_get",
      "displaytitle": "GPS ETA(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEstimated time of arrival at destination.: Units seconds",
      "messagetype": "action_GPS ETA_get",
      "parameters": {}
    },
    {
      "name": "GPS ETE_get",
      "displaytitle": "GPS ETE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEstimated time en route to destination.: Units seconds",
      "messagetype": "action_GPS ETE_get",
      "parameters": {}
    },
    {
      "name": "GPS FLIGHT PLAN WP COUNT",
      "displaytitle": "GPS FLIGHT PLAN WP COUNT(Set)",
      "description": "Set the simvar Number of waypoints.: Units number",
      "messagetype": "action_GPS FLIGHT PLAN WP COUNT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS FLIGHT PLAN WP COUNT_get",
      "displaytitle": "GPS FLIGHT PLAN WP COUNT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNumber of waypoints.: Units number",
      "messagetype": "action_GPS FLIGHT PLAN WP COUNT_get",
      "parameters": {}
    },
    {
      "name": "GPS FLIGHT PLAN WP INDEX",
      "displaytitle": "GPS FLIGHT PLAN WP INDEX(Set)",
      "description": "Set the simvar Index of waypoint.: Units number",
      "messagetype": "action_GPS FLIGHT PLAN WP INDEX",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS FLIGHT PLAN WP INDEX_get",
      "displaytitle": "GPS FLIGHT PLAN WP INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of waypoint.: Units number",
      "messagetype": "action_GPS FLIGHT PLAN WP INDEX_get",
      "parameters": {}
    },
    {
      "name": "GPS FLIGHTPLAN TOTAL DISTANCE_get",
      "displaytitle": "GPS FLIGHTPLAN TOTAL DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the complete flightplan length from start to end. Essentially the cumulative length of all the flight plan legs added together.: Units meters",
      "messagetype": "action_GPS FLIGHTPLAN TOTAL DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "GPS GROUND MAGNETIC TRACK",
      "displaytitle": "GPS GROUND MAGNETIC TRACK(Set)",
      "description": "Set the simvar Current magnetic ground track.: Units radians",
      "messagetype": "action_GPS GROUND MAGNETIC TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GROUND MAGNETIC TRACK_get",
      "displaytitle": "GPS GROUND MAGNETIC TRACK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent magnetic ground track.: Units radians",
      "messagetype": "action_GPS GROUND MAGNETIC TRACK_get",
      "parameters": {}
    },
    {
      "name": "GPS GROUND SPEED",
      "displaytitle": "GPS GROUND SPEED(Set)",
      "description": "Set the simvar Current ground speed.: Units Meters per second",
      "messagetype": "action_GPS GROUND SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GROUND SPEED_get",
      "displaytitle": "GPS GROUND SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent ground speed.: Units Meters per second",
      "messagetype": "action_GPS GROUND SPEED_get",
      "parameters": {}
    },
    {
      "name": "GPS GROUND TRUE HEADING",
      "displaytitle": "GPS GROUND TRUE HEADING(Set)",
      "description": "Set the simvar Current true heading.: Units radians",
      "messagetype": "action_GPS GROUND TRUE HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GROUND TRUE HEADING_get",
      "displaytitle": "GPS GROUND TRUE HEADING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent true heading.: Units radians",
      "messagetype": "action_GPS GROUND TRUE HEADING_get",
      "parameters": {}
    },
    {
      "name": "GPS GROUND TRUE TRACK",
      "displaytitle": "GPS GROUND TRUE TRACK(Set)",
      "description": "Set the simvar Current true ground track.: Units radians",
      "messagetype": "action_GPS GROUND TRUE TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GROUND TRUE TRACK_get",
      "displaytitle": "GPS GROUND TRUE TRACK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent true ground track.: Units radians",
      "messagetype": "action_GPS GROUND TRUE TRACK_get",
      "parameters": {}
    },
    {
      "name": "GPS GSI SCALING",
      "displaytitle": "GPS GSI SCALING(Set)",
      "description": "Set the simvar The full scale deflection of the vertical GSI due to GPS glidepath deviation, in meters.: Units meters",
      "messagetype": "action_GPS GSI SCALING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS GSI SCALING_get",
      "displaytitle": "GPS GSI SCALING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe full scale deflection of the vertical GSI due to GPS glidepath deviation, in meters.: Units meters",
      "messagetype": "action_GPS GSI SCALING_get",
      "parameters": {}
    },
    {
      "name": "GPS HAS GLIDEPATH",
      "displaytitle": "GPS HAS GLIDEPATH(Set)",
      "description": "Set the simvar Whether or not the GPS system has a presently available glidepath for guidance. Only applicable with GPS_OVERRIDDEN. When true and in GPS OVERRIDDEN, HSI_GSI_NEEDLE_VALID will also be true.: Units bool",
      "messagetype": "action_GPS HAS GLIDEPATH",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS HAS GLIDEPATH_get",
      "displaytitle": "GPS HAS GLIDEPATH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the GPS system has a presently available glidepath for guidance. Only applicable with GPS_OVERRIDDEN. When true and in GPS OVERRIDDEN, HSI_GSI_NEEDLE_VALID will also be true.: Units bool",
      "messagetype": "action_GPS HAS GLIDEPATH_get",
      "parameters": {}
    },
    {
      "name": "GPS IS ACTIVE FLIGHT PLAN",
      "displaytitle": "GPS IS ACTIVE FLIGHT PLAN(Set)",
      "description": "Set the simvar Flight plan mode active.: Units bool",
      "messagetype": "action_GPS IS ACTIVE FLIGHT PLAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS ACTIVE FLIGHT PLAN_get",
      "displaytitle": "GPS IS ACTIVE FLIGHT PLAN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlight plan mode active.: Units bool",
      "messagetype": "action_GPS IS ACTIVE FLIGHT PLAN_get",
      "parameters": {}
    },
    {
      "name": "GPS IS ACTIVE WAY POINT",
      "displaytitle": "GPS IS ACTIVE WAY POINT(Set)",
      "description": "Set the simvar Waypoint mode active.: Units bool",
      "messagetype": "action_GPS IS ACTIVE WAY POINT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS ACTIVE WAY POINT_get",
      "displaytitle": "GPS IS ACTIVE WAY POINT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWaypoint mode active.: Units bool",
      "messagetype": "action_GPS IS ACTIVE WAY POINT_get",
      "parameters": {}
    },
    {
      "name": "GPS IS ACTIVE WP LOCKED_get",
      "displaytitle": "GPS IS ACTIVE WP LOCKED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs switching to next waypoint locked.: Units bool",
      "messagetype": "action_GPS IS ACTIVE WP LOCKED_get",
      "parameters": {}
    },
    {
      "name": "GPS IS APPROACH ACTIVE_get",
      "displaytitle": "GPS IS APPROACH ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs approach mode active.: Units bool",
      "messagetype": "action_GPS IS APPROACH ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "GPS IS APPROACH LOADED_get",
      "displaytitle": "GPS IS APPROACH LOADED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs approach loaded.: Units bool",
      "messagetype": "action_GPS IS APPROACH LOADED_get",
      "parameters": {}
    },
    {
      "name": "GPS IS ARRIVED",
      "displaytitle": "GPS IS ARRIVED(Set)",
      "description": "Set the simvar Is flight plan destination reached.: Units bool",
      "messagetype": "action_GPS IS ARRIVED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS ARRIVED_get",
      "displaytitle": "GPS IS ARRIVED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs flight plan destination reached.: Units bool",
      "messagetype": "action_GPS IS ARRIVED_get",
      "parameters": {}
    },
    {
      "name": "GPS IS DIRECTTO FLIGHTPLAN",
      "displaytitle": "GPS IS DIRECTTO FLIGHTPLAN(Set)",
      "description": "Set the simvar Is Direct To Waypoint mode active.: Units bool",
      "messagetype": "action_GPS IS DIRECTTO FLIGHTPLAN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS IS DIRECTTO FLIGHTPLAN_get",
      "displaytitle": "GPS IS DIRECTTO FLIGHTPLAN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs Direct To Waypoint mode active.: Units bool",
      "messagetype": "action_GPS IS DIRECTTO FLIGHTPLAN_get",
      "parameters": {}
    },
    {
      "name": "GPS MAGVAR",
      "displaytitle": "GPS MAGVAR(Set)",
      "description": "Set the simvar Current GPS magnetic variation.: Units radians",
      "messagetype": "action_GPS MAGVAR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS MAGVAR_get",
      "displaytitle": "GPS MAGVAR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent GPS magnetic variation.: Units radians",
      "messagetype": "action_GPS MAGVAR_get",
      "parameters": {}
    },
    {
      "name": "GPS OBS ACTIVE",
      "displaytitle": "GPS OBS ACTIVE(Set)",
      "description": "Set the simvar Whether or not the OBS mode is currently active (disable the automatic sequencing of waypoints in GPS flight plan).: Units bool",
      "messagetype": "action_GPS OBS ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS OBS ACTIVE_get",
      "displaytitle": "GPS OBS ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the OBS mode is currently active (disable the automatic sequencing of waypoints in GPS flight plan).: Units bool",
      "messagetype": "action_GPS OBS ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "GPS OBS VALUE",
      "displaytitle": "GPS OBS VALUE(Set)",
      "description": "Set the simvar This is the currently selected OBS course in degrees, from 0 to 360.: Units degrees",
      "messagetype": "action_GPS OBS VALUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS OBS VALUE_get",
      "displaytitle": "GPS OBS VALUE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the currently selected OBS course in degrees, from 0 to 360.: Units degrees",
      "messagetype": "action_GPS OBS VALUE_get",
      "parameters": {}
    },
    {
      "name": "GPS OVERRIDDEN",
      "displaytitle": "GPS OVERRIDDEN(Set)",
      "description": "Set the simvar When it is active, all sim GPS system updates are suspended. This must be set to TRUE to be able to correctly set to any other GPS SimVar.: Units bool",
      "messagetype": "action_GPS OVERRIDDEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS OVERRIDDEN_get",
      "displaytitle": "GPS OVERRIDDEN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhen it is active, all sim GPS system updates are suspended. This must be set to TRUE to be able to correctly set to any other GPS SimVar.: Units bool",
      "messagetype": "action_GPS OVERRIDDEN_get",
      "parameters": {}
    },
    {
      "name": "GPS POSITION ALT",
      "displaytitle": "GPS POSITION ALT(Set)",
      "description": "Set the simvar Current GPS altitude.: Units meters",
      "messagetype": "action_GPS POSITION ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS POSITION ALT_get",
      "displaytitle": "GPS POSITION ALT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent GPS altitude.: Units meters",
      "messagetype": "action_GPS POSITION ALT_get",
      "parameters": {}
    },
    {
      "name": "GPS POSITION LAT",
      "displaytitle": "GPS POSITION LAT(Set)",
      "description": "Set the simvar Current GPS latitude.: Units degrees",
      "messagetype": "action_GPS POSITION LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS POSITION LAT_get",
      "displaytitle": "GPS POSITION LAT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent GPS latitude.: Units degrees",
      "messagetype": "action_GPS POSITION LAT_get",
      "parameters": {}
    },
    {
      "name": "GPS POSITION LON",
      "displaytitle": "GPS POSITION LON(Set)",
      "description": "Set the simvar Current GPS longitude.: Units degrees",
      "messagetype": "action_GPS POSITION LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS POSITION LON_get",
      "displaytitle": "GPS POSITION LON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrent GPS longitude.: Units degrees",
      "messagetype": "action_GPS POSITION LON_get",
      "parameters": {}
    },
    {
      "name": "GPS TARGET ALTITUDE",
      "displaytitle": "GPS TARGET ALTITUDE(Set)",
      "description": "Set the simvar Altitude of GPS target.: Units meters",
      "messagetype": "action_GPS TARGET ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS TARGET ALTITUDE_get",
      "displaytitle": "GPS TARGET ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude of GPS target.: Units meters",
      "messagetype": "action_GPS TARGET ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "GPS TARGET DISTANCE",
      "displaytitle": "GPS TARGET DISTANCE(Set)",
      "description": "Set the simvar Distance to target.: Units meters",
      "messagetype": "action_GPS TARGET DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS TARGET DISTANCE_get",
      "displaytitle": "GPS TARGET DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDistance to target.: Units meters",
      "messagetype": "action_GPS TARGET DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "GPS VERTICAL ANGLE",
      "displaytitle": "GPS VERTICAL ANGLE(Set)",
      "description": "Set the simvar Glidepath in degrees.: Units degrees",
      "messagetype": "action_GPS VERTICAL ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS VERTICAL ANGLE_get",
      "displaytitle": "GPS VERTICAL ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGlidepath in degrees.: Units degrees",
      "messagetype": "action_GPS VERTICAL ANGLE_get",
      "parameters": {}
    },
    {
      "name": "GPS VERTICAL ANGLE ERROR",
      "displaytitle": "GPS VERTICAL ANGLE ERROR(Set)",
      "description": "Set the simvar Vertical error in degrees from GlidePath.: Units degrees",
      "messagetype": "action_GPS VERTICAL ANGLE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS VERTICAL ANGLE ERROR_get",
      "displaytitle": "GPS VERTICAL ANGLE ERROR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVertical error in degrees from GlidePath.: Units degrees",
      "messagetype": "action_GPS VERTICAL ANGLE ERROR_get",
      "parameters": {}
    },
    {
      "name": "GPS VERTICAL ERROR",
      "displaytitle": "GPS VERTICAL ERROR(Set)",
      "description": "Set the simvar Vertical deviation in meters from GlidePath.: Units meters",
      "messagetype": "action_GPS VERTICAL ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS VERTICAL ERROR_get",
      "displaytitle": "GPS VERTICAL ERROR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVertical deviation in meters from GlidePath.: Units meters",
      "messagetype": "action_GPS VERTICAL ERROR_get",
      "parameters": {}
    },
    {
      "name": "GPS WP BEARING",
      "displaytitle": "GPS WP BEARING(Set)",
      "description": "Set the simvar Magnetic bearing to waypoint.: Units radians",
      "messagetype": "action_GPS WP BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP BEARING_get",
      "displaytitle": "GPS WP BEARING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMagnetic bearing to waypoint.: Units radians",
      "messagetype": "action_GPS WP BEARING_get",
      "parameters": {}
    },
    {
      "name": "GPS WP CROSS TRK",
      "displaytitle": "GPS WP CROSS TRK(Set)",
      "description": "Set the simvar Cross track distance.: Units meters",
      "messagetype": "action_GPS WP CROSS TRK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP CROSS TRK_get",
      "displaytitle": "GPS WP CROSS TRK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCross track distance.: Units meters",
      "messagetype": "action_GPS WP CROSS TRK_get",
      "parameters": {}
    },
    {
      "name": "GPS WP DESIRED TRACK",
      "displaytitle": "GPS WP DESIRED TRACK(Set)",
      "description": "Set the simvar The required heading (magnetic) from the previous waypoint to the next waypoint.: Units radians",
      "messagetype": "action_GPS WP DESIRED TRACK",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP DESIRED TRACK_get",
      "displaytitle": "GPS WP DESIRED TRACK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe required heading (magnetic) from the previous waypoint to the next waypoint.: Units radians",
      "messagetype": "action_GPS WP DESIRED TRACK_get",
      "parameters": {}
    },
    {
      "name": "GPS WP DISTANCE",
      "displaytitle": "GPS WP DISTANCE(Set)",
      "description": "Set the simvar Distance to waypoint.: Units meters",
      "messagetype": "action_GPS WP DISTANCE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP DISTANCE_get",
      "displaytitle": "GPS WP DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDistance to waypoint.: Units meters",
      "messagetype": "action_GPS WP DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "GPS WP ETA",
      "displaytitle": "GPS WP ETA(Set)",
      "description": "Set the simvar Estimated time of arrival at waypoint.: Units seconds",
      "messagetype": "action_GPS WP ETA",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP ETA_get",
      "displaytitle": "GPS WP ETA(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEstimated time of arrival at waypoint.: Units seconds",
      "messagetype": "action_GPS WP ETA_get",
      "parameters": {}
    },
    {
      "name": "GPS WP ETE",
      "displaytitle": "GPS WP ETE(Set)",
      "description": "Set the simvar Estimated time en route to waypoint.: Units seconds",
      "messagetype": "action_GPS WP ETE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP ETE_get",
      "displaytitle": "GPS WP ETE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEstimated time en route to waypoint.: Units seconds",
      "messagetype": "action_GPS WP ETE_get",
      "parameters": {}
    },
    {
      "name": "GPS WP NEXT ALT",
      "displaytitle": "GPS WP NEXT ALT(Set)",
      "description": "Set the simvar Altitude of next waypoint.: Units meters",
      "messagetype": "action_GPS WP NEXT ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP NEXT ALT_get",
      "displaytitle": "GPS WP NEXT ALT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude of next waypoint.: Units meters",
      "messagetype": "action_GPS WP NEXT ALT_get",
      "parameters": {}
    },
    {
      "name": "GPS WP NEXT ID",
      "displaytitle": "GPS WP NEXT ID(Set)",
      "description": "Set the simvar ID of next GPS waypoint.: Units null",
      "messagetype": "action_GPS WP NEXT ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP NEXT ID_get",
      "displaytitle": "GPS WP NEXT ID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerID of next GPS waypoint.: Units null",
      "messagetype": "action_GPS WP NEXT ID_get",
      "parameters": {}
    },
    {
      "name": "GPS WP NEXT LAT",
      "displaytitle": "GPS WP NEXT LAT(Set)",
      "description": "Set the simvar Latitude of next waypoint.: Units degrees",
      "messagetype": "action_GPS WP NEXT LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP NEXT LAT_get",
      "displaytitle": "GPS WP NEXT LAT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLatitude of next waypoint.: Units degrees",
      "messagetype": "action_GPS WP NEXT LAT_get",
      "parameters": {}
    },
    {
      "name": "GPS WP NEXT LON",
      "displaytitle": "GPS WP NEXT LON(Set)",
      "description": "Set the simvar Longitude of next waypoint.: Units degrees",
      "messagetype": "action_GPS WP NEXT LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP NEXT LON_get",
      "displaytitle": "GPS WP NEXT LON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLongitude of next waypoint.: Units degrees",
      "messagetype": "action_GPS WP NEXT LON_get",
      "parameters": {}
    },
    {
      "name": "GPS WP PREV ALT",
      "displaytitle": "GPS WP PREV ALT(Set)",
      "description": "Set the simvar Altitude of previous waypoint.: Units meters",
      "messagetype": "action_GPS WP PREV ALT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV ALT_get",
      "displaytitle": "GPS WP PREV ALT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude of previous waypoint.: Units meters",
      "messagetype": "action_GPS WP PREV ALT_get",
      "parameters": {}
    },
    {
      "name": "GPS WP PREV ID",
      "displaytitle": "GPS WP PREV ID(Set)",
      "description": "Set the simvar ID of previous GPS waypoint.: Units null",
      "messagetype": "action_GPS WP PREV ID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV ID_get",
      "displaytitle": "GPS WP PREV ID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerID of previous GPS waypoint.: Units null",
      "messagetype": "action_GPS WP PREV ID_get",
      "parameters": {}
    },
    {
      "name": "GPS WP PREV LAT",
      "displaytitle": "GPS WP PREV LAT(Set)",
      "description": "Set the simvar Latitude of previous waypoint.: Units degrees",
      "messagetype": "action_GPS WP PREV LAT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV LAT_get",
      "displaytitle": "GPS WP PREV LAT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLatitude of previous waypoint.: Units degrees",
      "messagetype": "action_GPS WP PREV LAT_get",
      "parameters": {}
    },
    {
      "name": "GPS WP PREV LON",
      "displaytitle": "GPS WP PREV LON(Set)",
      "description": "Set the simvar Longitude of previous waypoint.: Units degrees",
      "messagetype": "action_GPS WP PREV LON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV LON_get",
      "displaytitle": "GPS WP PREV LON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLongitude of previous waypoint.: Units degrees",
      "messagetype": "action_GPS WP PREV LON_get",
      "parameters": {}
    },
    {
      "name": "GPS WP PREV VALID",
      "displaytitle": "GPS WP PREV VALID(Set)",
      "description": "Set the simvar Is previous waypoint valid (i.e. current waypoint is not the first waypoint).: Units bool",
      "messagetype": "action_GPS WP PREV VALID",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP PREV VALID_get",
      "displaytitle": "GPS WP PREV VALID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs previous waypoint valid (i.e. current waypoint is not the first waypoint).: Units bool",
      "messagetype": "action_GPS WP PREV VALID_get",
      "parameters": {}
    },
    {
      "name": "GPS WP TRACK ANGLE ERROR",
      "displaytitle": "GPS WP TRACK ANGLE ERROR(Set)",
      "description": "Set the simvar Tracking angle error to waypoint.: Units radians",
      "messagetype": "action_GPS WP TRACK ANGLE ERROR",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP TRACK ANGLE ERROR_get",
      "displaytitle": "GPS WP TRACK ANGLE ERROR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTracking angle error to waypoint.: Units radians",
      "messagetype": "action_GPS WP TRACK ANGLE ERROR_get",
      "parameters": {}
    },
    {
      "name": "GPS WP TRUE BEARING",
      "displaytitle": "GPS WP TRUE BEARING(Set)",
      "description": "Set the simvar True bearing to waypoint.: Units radians",
      "messagetype": "action_GPS WP TRUE BEARING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP TRUE BEARING_get",
      "displaytitle": "GPS WP TRUE BEARING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue bearing to waypoint.: Units radians",
      "messagetype": "action_GPS WP TRUE BEARING_get",
      "parameters": {}
    },
    {
      "name": "GPS WP TRUE REQ HDG",
      "displaytitle": "GPS WP TRUE REQ HDG(Set)",
      "description": "Set the simvar Required true heading to waypoint.: Units radians",
      "messagetype": "action_GPS WP TRUE REQ HDG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP TRUE REQ HDG_get",
      "displaytitle": "GPS WP TRUE REQ HDG(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRequired true heading to waypoint.: Units radians",
      "messagetype": "action_GPS WP TRUE REQ HDG_get",
      "parameters": {}
    },
    {
      "name": "GPS WP VERTICAL SPEED",
      "displaytitle": "GPS WP VERTICAL SPEED(Set)",
      "description": "Set the simvar Vertical speed to waypoint.: Units Meters per second",
      "messagetype": "action_GPS WP VERTICAL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPS WP VERTICAL SPEED_get",
      "displaytitle": "GPS WP VERTICAL SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVertical speed to waypoint.: Units Meters per second",
      "messagetype": "action_GPS WP VERTICAL SPEED_get",
      "parameters": {}
    },
    {
      "name": "GPWS SYSTEM ACTIVE",
      "displaytitle": "GPWS SYSTEM ACTIVE(Set)",
      "description": "Set the simvar True if the Ground Proximity Warning System is active.: Units bool",
      "messagetype": "action_GPWS SYSTEM ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "GPWS SYSTEM ACTIVE_get",
      "displaytitle": "GPWS SYSTEM ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the Ground Proximity Warning System is active.: Units bool",
      "messagetype": "action_GPWS SYSTEM ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "GPWS WARNING_get",
      "displaytitle": "GPWS WARNING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if Ground Proximity Warning System installed.: Units bool",
      "messagetype": "action_GPWS WARNING_get",
      "parameters": {}
    },
    {
      "name": "GROUND ALTITUDE_get",
      "displaytitle": "GROUND ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude of surface.: Units meters",
      "messagetype": "action_GROUND ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "GROUND VELOCITY_get",
      "displaytitle": "GROUND VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger relative to the earths surface: Units knots",
      "messagetype": "action_GROUND VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "GROUNDPOWERUNIT HOSE DEPLOYED_get",
      "displaytitle": "GROUNDPOWERUNIT HOSE DEPLOYED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current deployment amount of the ground power unit hose. Currently can only be set to 0 (not deployed) and 1 (deployed).: Units percent Over 100",
      "messagetype": "action_GROUNDPOWERUNIT HOSE DEPLOYED_get",
      "parameters": {}
    },
    {
      "name": "GROUNDPOWERUNIT HOSE END POSX_get",
      "displaytitle": "GROUNDPOWERUNIT HOSE END POSX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"X\" axis position of the end of the ground power unit hose when fully deployed, relative to the ground.: Units meters",
      "messagetype": "action_GROUNDPOWERUNIT HOSE END POSX_get",
      "parameters": {}
    },
    {
      "name": "GROUNDPOWERUNIT HOSE END POSZ_get",
      "displaytitle": "GROUNDPOWERUNIT HOSE END POSZ(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Z\" axis position of the end of the ground power unit hose when fully deployed, relative to the ground.: Units meters",
      "messagetype": "action_GROUNDPOWERUNIT HOSE END POSZ_get",
      "parameters": {}
    },
    {
      "name": "GROUNDPOWERUNIT HOSE END RELATIVE HEADING_get",
      "displaytitle": "GROUNDPOWERUNIT HOSE END RELATIVE HEADING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe heading of the end of the ground power unit hose, relative to the vehicle heading.: Units degrees",
      "messagetype": "action_GROUNDPOWERUNIT HOSE END RELATIVE HEADING_get",
      "parameters": {}
    },
    {
      "name": "GYRO DRIFT ERROR_get",
      "displaytitle": "GYRO DRIFT ERROR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngular error of heading indicator.: Units radians",
      "messagetype": "action_GYRO DRIFT ERROR_get",
      "parameters": {}
    },
    {
      "name": "HAND ANIM STATE",
      "displaytitle": "HAND ANIM STATE(Set)",
      "description": "Set the simvar What frame of the hand is currently used.: Units enum",
      "messagetype": "action_HAND ANIM STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "HAND ANIM STATE_get",
      "displaytitle": "HAND ANIM STATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhat frame of the hand is currently used.: Units enum",
      "messagetype": "action_HAND ANIM STATE_get",
      "parameters": {}
    },
    {
      "name": "HAS STALL PROTECTION_get",
      "displaytitle": "HAS STALL PROTECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWill return whether the aircraft has stall protection (true) or not (false).: Units bool",
      "messagetype": "action_HAS STALL PROTECTION_get",
      "parameters": {}
    },
    {
      "name": "HEADING INDICATOR_get",
      "displaytitle": "HEADING INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerHeading indicator (directional gyro) indication.: Units radians",
      "messagetype": "action_HEADING INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "HOLDBACK BAR INSTALLED_get",
      "displaytitle": "HOLDBACK BAR INSTALLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerHoldback bars allow build up of thrust before takeoff from a catapult, and are installed by the deck crew of an aircraft carrier: Units bool",
      "messagetype": "action_HOLDBACK BAR INSTALLED_get",
      "parameters": {}
    },
    {
      "name": "HSI BEARING_get",
      "displaytitle": "HSI BEARING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIf the GPS_DRIVES_NAV1 variable is true and the HSI BEARING VALID variable is true, this variable contains the HSI needle bearing. If the GPS DRIVES NAV1 variable is false and the HSI BEARING VALID variable is true, this variable contains the ADF1 frequency.: Units degrees",
      "messagetype": "action_HSI BEARING_get",
      "parameters": {}
    },
    {
      "name": "HSI BEARING VALID_get",
      "displaytitle": "HSI BEARING VALID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will return true if the HSI BEARING variable contains valid data.: Units bool",
      "messagetype": "action_HSI BEARING VALID_get",
      "parameters": {}
    },
    {
      "name": "HSI CDI NEEDLE_get",
      "displaytitle": "HSI CDI NEEDLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNeedle deflection (+/- 127).: Units number",
      "messagetype": "action_HSI CDI NEEDLE_get",
      "parameters": {}
    },
    {
      "name": "HSI CDI NEEDLE VALID_get",
      "displaytitle": "HSI CDI NEEDLE VALID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSignal valid.: Units bool",
      "messagetype": "action_HSI CDI NEEDLE VALID_get",
      "parameters": {}
    },
    {
      "name": "HSI DISTANCE_get",
      "displaytitle": "HSI DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDME/GPS distance.: Units nautical miles",
      "messagetype": "action_HSI DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "HSI GSI NEEDLE_get",
      "displaytitle": "HSI GSI NEEDLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNeedle deflection (+/- 119).: Units number",
      "messagetype": "action_HSI GSI NEEDLE_get",
      "parameters": {}
    },
    {
      "name": "HSI GSI NEEDLE VALID_get",
      "displaytitle": "HSI GSI NEEDLE VALID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSignal valid.: Units bool",
      "messagetype": "action_HSI GSI NEEDLE VALID_get",
      "parameters": {}
    },
    {
      "name": "HSI HAS LOCALIZER_get",
      "displaytitle": "HSI HAS LOCALIZER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerStation is a localizer.: Units bool",
      "messagetype": "action_HSI HAS LOCALIZER_get",
      "parameters": {}
    },
    {
      "name": "HSI SPEED_get",
      "displaytitle": "HSI SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDME/GPS speed.: Units knots",
      "messagetype": "action_HSI SPEED_get",
      "parameters": {}
    },
    {
      "name": "HSI STATION IDENT_get",
      "displaytitle": "HSI STATION IDENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the ident of the the next GPS waypoint, if GPS_DRIVES_NAV1 is true. If GPS DRIVES NAV1 is false, it returns the identity of the station that is tuned on nav radio 1.: Units null",
      "messagetype": "action_HSI STATION IDENT_get",
      "parameters": {}
    },
    {
      "name": "HSI TF FLAGS_get",
      "displaytitle": "HSI TF FLAGS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNav TO/FROM flag.: Units enum",
      "messagetype": "action_HSI TF FLAGS_get",
      "parameters": {}
    },
    {
      "name": "HYDRAULIC PRESSURE:index_get",
      "displaytitle": "HYDRAULIC PRESSURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerHydraulic system pressure. Indexes start at 1.: Units pounds",
      "messagetype": "action_HYDRAULIC PRESSURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "HYDRAULIC RESERVOIR PERCENT:index",
      "displaytitle": "HYDRAULIC RESERVOIR PERCENT:index(Set)",
      "description": "Set the simvar Hydraulic pressure changes will follow changes to this variable. Indexes start at 1.: Units percent Over 100",
      "messagetype": "action_HYDRAULIC RESERVOIR PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "HYDRAULIC RESERVOIR PERCENT:index_get",
      "displaytitle": "HYDRAULIC RESERVOIR PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerHydraulic pressure changes will follow changes to this variable. Indexes start at 1.: Units percent Over 100",
      "messagetype": "action_HYDRAULIC RESERVOIR PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "HYDRAULIC SWITCH_get",
      "displaytitle": "HYDRAULIC SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if hydraulic switch is on.: Units bool",
      "messagetype": "action_HYDRAULIC SWITCH_get",
      "parameters": {}
    },
    {
      "name": "HYDRAULIC SYSTEM INTEGRITY_get",
      "displaytitle": "HYDRAULIC SYSTEM INTEGRITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent system functional.: Units percent Over 100",
      "messagetype": "action_HYDRAULIC SYSTEM INTEGRITY_get",
      "parameters": {}
    },
    {
      "name": "IDLE ANIMATION ID_get",
      "displaytitle": "IDLE ANIMATION ID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe ID of the idle animation for the sim object.: Units null",
      "messagetype": "action_IDLE ANIMATION ID_get",
      "parameters": {}
    },
    {
      "name": "INCIDENCE ALPHA_get",
      "displaytitle": "INCIDENCE ALPHA(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle of attack: Units radians",
      "messagetype": "action_INCIDENCE ALPHA_get",
      "parameters": {}
    },
    {
      "name": "INCIDENCE BETA_get",
      "displaytitle": "INCIDENCE BETA(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSideslip angle: Units radians",
      "messagetype": "action_INCIDENCE BETA_get",
      "parameters": {}
    },
    {
      "name": "INDICATED ALTITUDE",
      "displaytitle": "INDICATED ALTITUDE(Set)",
      "description": "Set the simvar The indicated altitude.: Units feet",
      "messagetype": "action_INDICATED ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INDICATED ALTITUDE_get",
      "displaytitle": "INDICATED ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indicated altitude.: Units feet",
      "messagetype": "action_INDICATED ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "INDICATED ALTITUDE CALIBRATED_get",
      "displaytitle": "INDICATED ALTITUDE CALIBRATED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndicated altitude with the altimeter calibrated to current sea level pressure.: Units feet",
      "messagetype": "action_INDICATED ALTITUDE CALIBRATED_get",
      "parameters": {}
    },
    {
      "name": "INDICATED ALTITUDE EX1_get",
      "displaytitle": "INDICATED ALTITUDE EX1(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSimilar to INDICATED_ALTITUDE but doesn't affect actual plane position when setting this variable.: Units feet",
      "messagetype": "action_INDICATED ALTITUDE EX1_get",
      "parameters": {}
    },
    {
      "name": "INDUCTOR COMPASS HEADING REF_get",
      "displaytitle": "INDUCTOR COMPASS HEADING REF(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInductor compass heading.: Units radians",
      "messagetype": "action_INDUCTOR COMPASS HEADING REF_get",
      "parameters": {}
    },
    {
      "name": "INDUCTOR COMPASS PERCENT DEVIATION_get",
      "displaytitle": "INDUCTOR COMPASS PERCENT DEVIATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInductor compass deviation reading.: Units percent Over 100",
      "messagetype": "action_INDUCTOR COMPASS PERCENT DEVIATION_get",
      "parameters": {}
    },
    {
      "name": "INNER MARKER",
      "displaytitle": "INNER MARKER(Set)",
      "description": "Set the simvar Inner marker state.: Units bool",
      "messagetype": "action_INNER MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INNER MARKER_get",
      "displaytitle": "INNER MARKER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInner marker state.: Units bool",
      "messagetype": "action_INNER MARKER_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT BANK_get",
      "displaytitle": "INTERACTIVE POINT BANK(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point orientation: Bank: Units degrees",
      "messagetype": "action_INTERACTIVE POINT BANK_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT GOAL",
      "displaytitle": "INTERACTIVE POINT GOAL(Set)",
      "description": "Set the simvar The Interactive Point goal percentage of opening (if it's for a door) or percentage of deployment (if it's for a hose or cable).: Units percent Over 100",
      "messagetype": "action_INTERACTIVE POINT GOAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT GOAL_get",
      "displaytitle": "INTERACTIVE POINT GOAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe Interactive Point goal percentage of opening (if it's for a door) or percentage of deployment (if it's for a hose or cable).: Units percent Over 100",
      "messagetype": "action_INTERACTIVE POINT GOAL_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT HEADING_get",
      "displaytitle": "INTERACTIVE POINT HEADING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point orientation: Heading: Units degrees",
      "messagetype": "action_INTERACTIVE POINT HEADING_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT JETWAY LEFT BEND_get",
      "displaytitle": "INTERACTIVE POINT JETWAY LEFT BEND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point Jetway constant, determining the desired left bend ratio of jetway hood: Units percent",
      "messagetype": "action_INTERACTIVE POINT JETWAY LEFT BEND_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT JETWAY LEFT DEPLOYMENT_get",
      "displaytitle": "INTERACTIVE POINT JETWAY LEFT DEPLOYMENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point Jetway constant, determining the desired left deployment angle of jetway hood: Units degrees",
      "messagetype": "action_INTERACTIVE POINT JETWAY LEFT DEPLOYMENT_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT JETWAY RIGHT BEND_get",
      "displaytitle": "INTERACTIVE POINT JETWAY RIGHT BEND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point Jetway constant, determining the desired right bend ratio of jetway hood: Units percent",
      "messagetype": "action_INTERACTIVE POINT JETWAY RIGHT BEND_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT_get",
      "displaytitle": "INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point Jetway constant, determining the desired right deployment angle of jetway hood: Units degrees",
      "messagetype": "action_INTERACTIVE POINT JETWAY RIGHT DEPLOYMENT_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT JETWAY TOP HORIZONTAL_get",
      "displaytitle": "INTERACTIVE POINT JETWAY TOP HORIZONTAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point Jetway constant, determining the desired top horizontal ratio of displacement of jetway hood: Units percent",
      "messagetype": "action_INTERACTIVE POINT JETWAY TOP HORIZONTAL_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT JETWAY TOP VERTICAL_get",
      "displaytitle": "INTERACTIVE POINT JETWAY TOP VERTICAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point Jetway constant, determining the desired top vertical ratio of displacement of jetway hood: Units percent",
      "messagetype": "action_INTERACTIVE POINT JETWAY TOP VERTICAL_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT OPEN",
      "displaytitle": "INTERACTIVE POINT OPEN(Set)",
      "description": "Set the simvar Interactive Point current percentage of opening (if door) or deployment (if hose/cable): Units percent Over 100",
      "messagetype": "action_INTERACTIVE POINT OPEN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "INTERACTIVE POINT OPEN_get",
      "displaytitle": "INTERACTIVE POINT OPEN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point current percentage of opening (if door) or deployment (if hose/cable): Units percent Over 100",
      "messagetype": "action_INTERACTIVE POINT OPEN_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT PITCH_get",
      "displaytitle": "INTERACTIVE POINT PITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point orientation: Pitch: Units degrees",
      "messagetype": "action_INTERACTIVE POINT PITCH_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT POSX_get",
      "displaytitle": "INTERACTIVE POINT POSX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point X position relative to datum reference point: Units feet",
      "messagetype": "action_INTERACTIVE POINT POSX_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT POSY_get",
      "displaytitle": "INTERACTIVE POINT POSY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point Y position relative to datum reference point: Units feet",
      "messagetype": "action_INTERACTIVE POINT POSY_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT POSZ_get",
      "displaytitle": "INTERACTIVE POINT POSZ(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInteractive Point Z position relative to datum reference point: Units feet",
      "messagetype": "action_INTERACTIVE POINT POSZ_get",
      "parameters": {}
    },
    {
      "name": "INTERACTIVE POINT TYPE_get",
      "displaytitle": "INTERACTIVE POINT TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe type of interactive point: Units enum",
      "messagetype": "action_INTERACTIVE POINT TYPE_get",
      "parameters": {}
    },
    {
      "name": "INTERCOM MODE_get",
      "displaytitle": "INTERCOM MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIntercom Mode: Units enum",
      "messagetype": "action_INTERCOM MODE_get",
      "parameters": {}
    },
    {
      "name": "INTERCOM SYSTEM ACTIVE_get",
      "displaytitle": "INTERCOM SYSTEM ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the intercom system is active.: Units bool",
      "messagetype": "action_INTERCOM SYSTEM ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "IS ALTITUDE FREEZE ON_get",
      "displaytitle": "IS ALTITUDE FREEZE ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the altitude of the aircraft is frozen.: Units bool",
      "messagetype": "action_IS ALTITUDE FREEZE ON_get",
      "parameters": {}
    },
    {
      "name": "IS ANY INTERIOR LIGHT ON_get",
      "displaytitle": "IS ANY INTERIOR LIGHT ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWill return true if any interior light is on or false otherwise.: Units bool",
      "messagetype": "action_IS ANY INTERIOR LIGHT ON_get",
      "parameters": {}
    },
    {
      "name": "IS ATTACHED TO SLING_get",
      "displaytitle": "IS ATTACHED TO SLING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSet to true if this object is attached to a sling.: Units bool",
      "messagetype": "action_IS ATTACHED TO SLING_get",
      "parameters": {}
    },
    {
      "name": "IS ATTITUDE FREEZE ON_get",
      "displaytitle": "IS ATTITUDE FREEZE ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the attitude (pitch, bank and heading) of the aircraft is frozen.: Units bool",
      "messagetype": "action_IS ATTITUDE FREEZE ON_get",
      "parameters": {}
    },
    {
      "name": "IS CAMERA RAY INTERSECT WITH NODE_get",
      "displaytitle": "IS CAMERA RAY INTERSECT WITH NODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis SimVar is used to check for a collision along a ray from the center of the user FOV and a model node. The available nodes that can be checked using this SimVar must be previously defined in the [CAMERA_RAY_NODE_COLLISION] of the camera.cfg file. The SimVar requires a node index value between 1 and 10, corresponding to the node defined in the CFG file, and the SimVar will return 1 (TRUE) if there is a collision along the camera ray or 0 (FALSE) otherwise. You may also supply an index of 0 to perform a collision check for all defined nodes, in which case the SimVar will return 1 (TRUE) if there is a collision between the ray and any of the defined nodes. Supplying an index outside of the range of 1 to 10, or supplying an index for which no node has been defined, will return 0 (FALSE).: Units bool",
      "messagetype": "action_IS CAMERA RAY INTERSECT WITH NODE_get",
      "parameters": {}
    },
    {
      "name": "IS GEAR FLOATS_get",
      "displaytitle": "IS GEAR FLOATS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if landing gear are floats: Units bool",
      "messagetype": "action_IS GEAR FLOATS_get",
      "parameters": {}
    },
    {
      "name": "IS GEAR RETRACTABLE_get",
      "displaytitle": "IS GEAR RETRACTABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if gear can be retracted: Units bool",
      "messagetype": "action_IS GEAR RETRACTABLE_get",
      "parameters": {}
    },
    {
      "name": "IS GEAR SKIDS_get",
      "displaytitle": "IS GEAR SKIDS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if landing gear is skids: Units bool",
      "messagetype": "action_IS GEAR SKIDS_get",
      "parameters": {}
    },
    {
      "name": "IS GEAR SKIS_get",
      "displaytitle": "IS GEAR SKIS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if landing gear is skis: Units bool",
      "messagetype": "action_IS GEAR SKIS_get",
      "parameters": {}
    },
    {
      "name": "IS GEAR WHEELS_get",
      "displaytitle": "IS GEAR WHEELS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if landing gear is wheels: Units bool",
      "messagetype": "action_IS GEAR WHEELS_get",
      "parameters": {}
    },
    {
      "name": "IS LATITUDE LONGITUDE FREEZE ON_get",
      "displaytitle": "IS LATITUDE LONGITUDE FREEZE ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the lat/lon of the aircraft (either user or AI controlled) is frozen. If this variable returns true, it means that the latitude and longitude of the aircraft are not being controlled by ESP, so enabling, for example, a SimConnect client to control the position of the aircraft. This can also apply to altitude and attitude. Also refer to the range of KEY_FREEZE..... Event IDs.: Units bool",
      "messagetype": "action_IS LATITUDE LONGITUDE FREEZE ON_get",
      "parameters": {}
    },
    {
      "name": "IS SLEW ACTIVE",
      "displaytitle": "IS SLEW ACTIVE(Set)",
      "description": "Set the simvar True if slew is active: Units bool",
      "messagetype": "action_IS SLEW ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS SLEW ACTIVE_get",
      "displaytitle": "IS SLEW ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if slew is active: Units bool",
      "messagetype": "action_IS SLEW ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "IS SLEW ALLOWED",
      "displaytitle": "IS SLEW ALLOWED(Set)",
      "description": "Set the simvar True if slew is enabled: Units bool",
      "messagetype": "action_IS SLEW ALLOWED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "IS SLEW ALLOWED_get",
      "displaytitle": "IS SLEW ALLOWED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if slew is enabled: Units bool",
      "messagetype": "action_IS SLEW ALLOWED_get",
      "parameters": {}
    },
    {
      "name": "IS TAIL DRAGGER_get",
      "displaytitle": "IS TAIL DRAGGER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the aircraft is a taildragger: Units bool",
      "messagetype": "action_IS TAIL DRAGGER_get",
      "parameters": {}
    },
    {
      "name": "IS USER SIM_get",
      "displaytitle": "IS USER SIM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs this the user loaded aircraft: Units bool",
      "messagetype": "action_IS USER SIM_get",
      "parameters": {}
    },
    {
      "name": "JETWAY HOOD LEFT BEND_get",
      "displaytitle": "JETWAY HOOD LEFT BEND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe target position for the left bend animation of the jetway hood.: Units percent",
      "messagetype": "action_JETWAY HOOD LEFT BEND_get",
      "parameters": {}
    },
    {
      "name": "JETWAY HOOD LEFT DEPLOYMENT_get",
      "displaytitle": "JETWAY HOOD LEFT DEPLOYMENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe target angle for the left deployment animation of the jetway hood, where 0 is considered vertical.: Units degrees",
      "messagetype": "action_JETWAY HOOD LEFT DEPLOYMENT_get",
      "parameters": {}
    },
    {
      "name": "JETWAY HOOD RIGHT BEND_get",
      "displaytitle": "JETWAY HOOD RIGHT BEND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe target position for the right bend animation of the jetway hood.: Units percent",
      "messagetype": "action_JETWAY HOOD RIGHT BEND_get",
      "parameters": {}
    },
    {
      "name": "JETWAY HOOD RIGHT DEPLOYMENT_get",
      "displaytitle": "JETWAY HOOD RIGHT DEPLOYMENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe target angle for the right deployment animation of the jetway hood, where 0 is considered vertical.: Units degrees",
      "messagetype": "action_JETWAY HOOD RIGHT DEPLOYMENT_get",
      "parameters": {}
    },
    {
      "name": "JETWAY HOOD TOP HORIZONTAL_get",
      "displaytitle": "JETWAY HOOD TOP HORIZONTAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTarget position for the top horizontal animation of the jetway hood. Values can be between -100% and 100%.: Units percent",
      "messagetype": "action_JETWAY HOOD TOP HORIZONTAL_get",
      "parameters": {}
    },
    {
      "name": "JETWAY HOOD TOP VERTICAL_get",
      "displaytitle": "JETWAY HOOD TOP VERTICAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTarget position for the top vertical animation of the jetway hood. Values can be between -100% and 100%.: Units percent",
      "messagetype": "action_JETWAY HOOD TOP VERTICAL_get",
      "parameters": {}
    },
    {
      "name": "JETWAY MOVING_get",
      "displaytitle": "JETWAY MOVING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be 1 (TRUE) id the jetway body is currently moving (it will not include checks on hood animation).: Units bool",
      "messagetype": "action_JETWAY MOVING_get",
      "parameters": {}
    },
    {
      "name": "JETWAY WHEEL ORIENTATION CURRENT_get",
      "displaytitle": "JETWAY WHEEL ORIENTATION CURRENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current angle of the jetway wheels.: Units degrees",
      "messagetype": "action_JETWAY WHEEL ORIENTATION CURRENT_get",
      "parameters": {}
    },
    {
      "name": "JETWAY WHEEL ORIENTATION TARGET_get",
      "displaytitle": "JETWAY WHEEL ORIENTATION TARGET(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe (approximate) target angle for the jetway wheels.: Units degrees",
      "messagetype": "action_JETWAY WHEEL ORIENTATION TARGET_get",
      "parameters": {}
    },
    {
      "name": "JETWAY WHEEL SPEED_get",
      "displaytitle": "JETWAY WHEEL SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current speed of the jetway wheels.: Units Meters per second",
      "messagetype": "action_JETWAY WHEEL SPEED_get",
      "parameters": {}
    },
    {
      "name": "KOHLSMAN SETTING HG:index_get",
      "displaytitle": "KOHLSMAN SETTING HG:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe value for the given altimeter index in inches of mercury.: Units Inches of Mercury",
      "messagetype": "action_KOHLSMAN SETTING HG:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "KOHLSMAN SETTING MB:index_get",
      "displaytitle": "KOHLSMAN SETTING MB:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe value for the given altimeter index in millibars.: Units Millibars",
      "messagetype": "action_KOHLSMAN SETTING MB:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "KOHLSMAN SETTING STD:index_get",
      "displaytitle": "KOHLSMAN SETTING STD:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the indexed altimeter is in\"Standard\" mode, or false otherwise.: Units bool",
      "messagetype": "action_KOHLSMAN SETTING STD:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "LAUNCHBAR HELD EXTENDED_get",
      "displaytitle": "LAUNCHBAR HELD EXTENDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be True if the launchbar is fully extended, and can be used, for example, to change the color of an instrument light: Units bool",
      "messagetype": "action_LAUNCHBAR HELD EXTENDED_get",
      "parameters": {}
    },
    {
      "name": "LAUNCHBAR POSITION_get",
      "displaytitle": "LAUNCHBAR POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerInstalled on aircraft before takeoff from a carrier catapult. Note that gear cannot retract with this extended. 100 = fully extended: Units percent Over 100",
      "messagetype": "action_LAUNCHBAR POSITION_get",
      "parameters": {}
    },
    {
      "name": "LAUNCHBAR SWITCH_get",
      "displaytitle": "LAUNCHBAR SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIf this is set to True the launch bar switch has been engaged: Units bool",
      "messagetype": "action_LAUNCHBAR SWITCH_get",
      "parameters": {}
    },
    {
      "name": "LEADING EDGE FLAPS LEFT ANGLE_get",
      "displaytitle": "LEADING EDGE FLAPS LEFT ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle left leading edge flap extended. Use LEADING_EDGE_FLAPS_LEFT_PERCENT to set a value: Units radians",
      "messagetype": "action_LEADING EDGE FLAPS LEFT ANGLE_get",
      "parameters": {}
    },
    {
      "name": "LEADING EDGE FLAPS LEFT INDEX_get",
      "displaytitle": "LEADING EDGE FLAPS LEFT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of left leading edge flap position: Units number",
      "messagetype": "action_LEADING EDGE FLAPS LEFT INDEX_get",
      "parameters": {}
    },
    {
      "name": "LEADING EDGE FLAPS LEFT PERCENT",
      "displaytitle": "LEADING EDGE FLAPS LEFT PERCENT(Set)",
      "description": "Set the simvar Percent left leading edge flap extended: Units percent Over 100",
      "messagetype": "action_LEADING EDGE FLAPS LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEADING EDGE FLAPS LEFT PERCENT_get",
      "displaytitle": "LEADING EDGE FLAPS LEFT PERCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent left leading edge flap extended: Units percent Over 100",
      "messagetype": "action_LEADING EDGE FLAPS LEFT PERCENT_get",
      "parameters": {}
    },
    {
      "name": "LEADING EDGE FLAPS RIGHT ANGLE_get",
      "displaytitle": "LEADING EDGE FLAPS RIGHT ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle right leading edge flap extended. Use LEADING_EDGE_FLAPS_RIGHT_PERCENT to set a value: Units radians",
      "messagetype": "action_LEADING EDGE FLAPS RIGHT ANGLE_get",
      "parameters": {}
    },
    {
      "name": "LEADING EDGE FLAPS RIGHT INDEX_get",
      "displaytitle": "LEADING EDGE FLAPS RIGHT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of right leading edge flap position: Units number",
      "messagetype": "action_LEADING EDGE FLAPS RIGHT INDEX_get",
      "parameters": {}
    },
    {
      "name": "LEADING EDGE FLAPS RIGHT PERCENT",
      "displaytitle": "LEADING EDGE FLAPS RIGHT PERCENT(Set)",
      "description": "Set the simvar Percent right leading edge flap extended: Units percent Over 100",
      "messagetype": "action_LEADING EDGE FLAPS RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LEADING EDGE FLAPS RIGHT PERCENT_get",
      "displaytitle": "LEADING EDGE FLAPS RIGHT PERCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent right leading edge flap extended: Units percent Over 100",
      "messagetype": "action_LEADING EDGE FLAPS RIGHT PERCENT_get",
      "parameters": {}
    },
    {
      "name": "LEFT WHEEL ROTATION ANGLE_get",
      "displaytitle": "LEFT WHEEL ROTATION ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLeft wheel rotation angle (rotation around the axis for the wheel): Units radians",
      "messagetype": "action_LEFT WHEEL ROTATION ANGLE_get",
      "parameters": {}
    },
    {
      "name": "LEFT WHEEL RPM_get",
      "displaytitle": "LEFT WHEEL RPM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLeft landing gear rpm: Units RPM",
      "messagetype": "action_LEFT WHEEL RPM_get",
      "parameters": {}
    },
    {
      "name": "LIGHT BACKLIGHT INTENSITY",
      "displaytitle": "LIGHT BACKLIGHT INTENSITY(Set)",
      "description": "Set the simvar Vehicle backlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100",
      "messagetype": "action_LIGHT BACKLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT BACKLIGHT INTENSITY_get",
      "displaytitle": "LIGHT BACKLIGHT INTENSITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVehicle backlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100",
      "messagetype": "action_LIGHT BACKLIGHT INTENSITY_get",
      "parameters": {}
    },
    {
      "name": "LIGHT BEACON",
      "displaytitle": "LIGHT BEACON(Set)",
      "description": "Set the simvar Light switch state.: Units bool",
      "messagetype": "action_LIGHT BEACON",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT BEACON_get",
      "displaytitle": "LIGHT BEACON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state.: Units bool",
      "messagetype": "action_LIGHT BEACON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT BEACON ON_get",
      "displaytitle": "LIGHT BEACON ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target beacon light is functioning or if the switch is ON. Use beacon lightdef index.: Units bool",
      "messagetype": "action_LIGHT BEACON ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT BRAKE ON_get",
      "displaytitle": "LIGHT BRAKE ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target brake light is functioning or if the switch is ON.: Units bool",
      "messagetype": "action_LIGHT BRAKE ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT CABIN",
      "displaytitle": "LIGHT CABIN(Set)",
      "description": "Set the simvar Light switch state.: Units bool",
      "messagetype": "action_LIGHT CABIN",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT CABIN_get",
      "displaytitle": "LIGHT CABIN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state.: Units bool",
      "messagetype": "action_LIGHT CABIN_get",
      "parameters": {}
    },
    {
      "name": "LIGHT CABIN ON_get",
      "displaytitle": "LIGHT CABIN ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target cabin light is functioning or if the switch is ON. Use the cabin lightdef index.: Units bool",
      "messagetype": "action_LIGHT CABIN ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT CABIN POWER SETTING_get",
      "displaytitle": "LIGHT CABIN POWER SETTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current cabin light power setting. Requires the cabin lightdef index.: Units percent",
      "messagetype": "action_LIGHT CABIN POWER SETTING_get",
      "parameters": {}
    },
    {
      "name": "LIGHT GLARESHIELD",
      "displaytitle": "LIGHT GLARESHIELD(Set)",
      "description": "Set the simvar Whether or not the Light switch for the Glareshield is enabled.: Units bool",
      "messagetype": "action_LIGHT GLARESHIELD",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT GLARESHIELD_get",
      "displaytitle": "LIGHT GLARESHIELD(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Light switch for the Glareshield is enabled.: Units bool",
      "messagetype": "action_LIGHT GLARESHIELD_get",
      "parameters": {}
    },
    {
      "name": "LIGHT GLARESHIELD ON_get",
      "displaytitle": "LIGHT GLARESHIELD ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target glareshield light is functioning or if the switch is ON. Use the glareshield lightdef index.: Units bool",
      "messagetype": "action_LIGHT GLARESHIELD ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT GLARESHIELD POWER SETTING_get",
      "displaytitle": "LIGHT GLARESHIELD POWER SETTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current glareshield light power setting. Requires the glareshield lightdef index.: Units percent",
      "messagetype": "action_LIGHT GLARESHIELD POWER SETTING_get",
      "parameters": {}
    },
    {
      "name": "LIGHT GYROLIGHT INTENSITY",
      "displaytitle": "LIGHT GYROLIGHT INTENSITY(Set)",
      "description": "Set the simvar Vehicle gyrolights current intensity (0 = off, 1 = full intensity).: Units percent Over 100",
      "messagetype": "action_LIGHT GYROLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT GYROLIGHT INTENSITY_get",
      "displaytitle": "LIGHT GYROLIGHT INTENSITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVehicle gyrolights current intensity (0 = off, 1 = full intensity).: Units percent Over 100",
      "messagetype": "action_LIGHT GYROLIGHT INTENSITY_get",
      "parameters": {}
    },
    {
      "name": "LIGHT HEAD ON_get",
      "displaytitle": "LIGHT HEAD ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target navigation light is functioning or if the switch is ON.: Units bool",
      "messagetype": "action_LIGHT HEAD ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT HEADLIGHT INTENSITY",
      "displaytitle": "LIGHT HEADLIGHT INTENSITY(Set)",
      "description": "Set the simvar Vehicle headlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100",
      "messagetype": "action_LIGHT HEADLIGHT INTENSITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT HEADLIGHT INTENSITY_get",
      "displaytitle": "LIGHT HEADLIGHT INTENSITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVehicle headlights current intensity (0 = off, 1 = full intensity).: Units percent Over 100",
      "messagetype": "action_LIGHT HEADLIGHT INTENSITY_get",
      "parameters": {}
    },
    {
      "name": "LIGHT LANDING",
      "displaytitle": "LIGHT LANDING(Set)",
      "description": "Set the simvar Light switch state for landing light.: Units bool",
      "messagetype": "action_LIGHT LANDING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT LANDING_get",
      "displaytitle": "LIGHT LANDING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state for landing light.: Units bool",
      "messagetype": "action_LIGHT LANDING_get",
      "parameters": {}
    },
    {
      "name": "LIGHT LANDING ON_get",
      "displaytitle": "LIGHT LANDING ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target landing light is functioning or if the switch is ON. Use landing lightdef index.: Units bool",
      "messagetype": "action_LIGHT LANDING ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT LOGO",
      "displaytitle": "LIGHT LOGO(Set)",
      "description": "Set the simvar Light switch state for logo light.: Units bool",
      "messagetype": "action_LIGHT LOGO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT LOGO_get",
      "displaytitle": "LIGHT LOGO(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state for logo light.: Units bool",
      "messagetype": "action_LIGHT LOGO_get",
      "parameters": {}
    },
    {
      "name": "LIGHT LOGO ON_get",
      "displaytitle": "LIGHT LOGO ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target logo light is functioning or if the switch is ON. Use the logo lightdef index.: Units bool",
      "messagetype": "action_LIGHT LOGO ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT NAV",
      "displaytitle": "LIGHT NAV(Set)",
      "description": "Set the simvar Light switch state for the NAV light.: Units bool",
      "messagetype": "action_LIGHT NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT NAV_get",
      "displaytitle": "LIGHT NAV(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state for the NAV light.: Units bool",
      "messagetype": "action_LIGHT NAV_get",
      "parameters": {}
    },
    {
      "name": "LIGHT NAV ON_get",
      "displaytitle": "LIGHT NAV ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target navigation light is functioning or if the switch is ON. Use navigation lightdef index.: Units bool",
      "messagetype": "action_LIGHT NAV ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT ON STATES_get",
      "displaytitle": "LIGHT ON STATES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerlight on using bit mask (see documentation): Units mask",
      "messagetype": "action_LIGHT ON STATES_get",
      "parameters": {}
    },
    {
      "name": "LIGHT PANEL",
      "displaytitle": "LIGHT PANEL(Set)",
      "description": "Set the simvar Light switch state of the panel light.: Units bool",
      "messagetype": "action_LIGHT PANEL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT PANEL_get",
      "displaytitle": "LIGHT PANEL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state of the panel light.: Units bool",
      "messagetype": "action_LIGHT PANEL_get",
      "parameters": {}
    },
    {
      "name": "LIGHT PANEL ON_get",
      "displaytitle": "LIGHT PANEL ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target panel light is functioning or if the switch is ON. Use the panel lightdef index.: Units bool",
      "messagetype": "action_LIGHT PANEL ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT PANEL POWER SETTING_get",
      "displaytitle": "LIGHT PANEL POWER SETTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current panel light power setting. Requires the panel lightdef index.: Units percent",
      "messagetype": "action_LIGHT PANEL POWER SETTING_get",
      "parameters": {}
    },
    {
      "name": "LIGHT PEDESTRAL",
      "displaytitle": "LIGHT PEDESTRAL(Set)",
      "description": "Set the simvar Whether or not the Light switch for the Pedestal is enabled.: Units bool",
      "messagetype": "action_LIGHT PEDESTRAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT PEDESTRAL_get",
      "displaytitle": "LIGHT PEDESTRAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Light switch for the Pedestal is enabled.: Units bool",
      "messagetype": "action_LIGHT PEDESTRAL_get",
      "parameters": {}
    },
    {
      "name": "LIGHT PEDESTRAL ON_get",
      "displaytitle": "LIGHT PEDESTRAL ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target pedestral light is functioning or if the switch is ON. Requires the pedestral lightdef index.: Units bool",
      "messagetype": "action_LIGHT PEDESTRAL ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT PEDESTRAL POWER SETTING_get",
      "displaytitle": "LIGHT PEDESTRAL POWER SETTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current pedestral light power setting. Requires the pedestral lightdef index.: Units percent",
      "messagetype": "action_LIGHT PEDESTRAL POWER SETTING_get",
      "parameters": {}
    },
    {
      "name": "LIGHT POTENTIOMETER:index_get",
      "displaytitle": "LIGHT POTENTIOMETER:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAdjust the potentiometer of the indexed lighting. Index is defined in the appropriate lightdef hashmap setting.: Units percent Over 100",
      "messagetype": "action_LIGHT POTENTIOMETER:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "LIGHT RECOGNITION",
      "displaytitle": "LIGHT RECOGNITION(Set)",
      "description": "Set the simvar Light switch state for the recognition light.: Units bool",
      "messagetype": "action_LIGHT RECOGNITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT RECOGNITION_get",
      "displaytitle": "LIGHT RECOGNITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state for the recognition light.: Units bool",
      "messagetype": "action_LIGHT RECOGNITION_get",
      "parameters": {}
    },
    {
      "name": "LIGHT RECOGNITION ON_get",
      "displaytitle": "LIGHT RECOGNITION ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target recognition light is functioning or if the switch is ON. Use the recognition lightdef index.: Units bool",
      "messagetype": "action_LIGHT RECOGNITION ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT STATES_get",
      "displaytitle": "LIGHT STATES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSame as LIGHT_ON_STATES.: Units mask",
      "messagetype": "action_LIGHT STATES_get",
      "parameters": {}
    },
    {
      "name": "LIGHT STROBE",
      "displaytitle": "LIGHT STROBE(Set)",
      "description": "Set the simvar Light switch state.: Units bool",
      "messagetype": "action_LIGHT STROBE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT STROBE_get",
      "displaytitle": "LIGHT STROBE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state.: Units bool",
      "messagetype": "action_LIGHT STROBE_get",
      "parameters": {}
    },
    {
      "name": "LIGHT STROBE ON_get",
      "displaytitle": "LIGHT STROBE ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target strobe light is functioning or if the switch is ON. Use the strobe lightdef index.: Units bool",
      "messagetype": "action_LIGHT STROBE ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT TAXI",
      "displaytitle": "LIGHT TAXI(Set)",
      "description": "Set the simvar Light switch state for the taxi light.: Units bool",
      "messagetype": "action_LIGHT TAXI",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT TAXI_get",
      "displaytitle": "LIGHT TAXI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state for the taxi light.: Units bool",
      "messagetype": "action_LIGHT TAXI_get",
      "parameters": {}
    },
    {
      "name": "LIGHT TAXI ON_get",
      "displaytitle": "LIGHT TAXI ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target taxi light is functioning or if the switch is ON. Use taxi lightdef index.: Units bool",
      "messagetype": "action_LIGHT TAXI ON_get",
      "parameters": {}
    },
    {
      "name": "LIGHT WING",
      "displaytitle": "LIGHT WING(Set)",
      "description": "Set the simvar Light switch state for the wing lights.: Units bool",
      "messagetype": "action_LIGHT WING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "LIGHT WING_get",
      "displaytitle": "LIGHT WING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLight switch state for the wing lights.: Units bool",
      "messagetype": "action_LIGHT WING_get",
      "parameters": {}
    },
    {
      "name": "LIGHT WING ON_get",
      "displaytitle": "LIGHT WING ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if the target wing light is functioning or if the switch is ON. Use the wing lightdef index.: Units bool",
      "messagetype": "action_LIGHT WING ON_get",
      "parameters": {}
    },
    {
      "name": "LINEAR CL ALPHA_get",
      "displaytitle": "LINEAR CL ALPHA(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLinear CL alpha: Units per radian",
      "messagetype": "action_LINEAR CL ALPHA_get",
      "parameters": {}
    },
    {
      "name": "MACH MAX OPERATE_get",
      "displaytitle": "MACH MAX OPERATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMaximum design mach: Units mach",
      "messagetype": "action_MACH MAX OPERATE_get",
      "parameters": {}
    },
    {
      "name": "MAGNETIC COMPASS",
      "displaytitle": "MAGNETIC COMPASS(Set)",
      "description": "Set the simvar Compass reading.: Units degrees",
      "messagetype": "action_MAGNETIC COMPASS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MAGNETIC COMPASS_get",
      "displaytitle": "MAGNETIC COMPASS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCompass reading.: Units degrees",
      "messagetype": "action_MAGNETIC COMPASS_get",
      "parameters": {}
    },
    {
      "name": "MAGVAR_get",
      "displaytitle": "MAGVAR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMagnetic variation.: Units degrees",
      "messagetype": "action_MAGVAR_get",
      "parameters": {}
    },
    {
      "name": "MANUAL FUEL PUMP HANDLE_get",
      "displaytitle": "MANUAL FUEL PUMP HANDLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPosition of manual fuel pump handle. 1 is fully deployed.: Units percent Over 100",
      "messagetype": "action_MANUAL FUEL PUMP HANDLE_get",
      "parameters": {}
    },
    {
      "name": "MANUAL INSTRUMENT LIGHTS_get",
      "displaytitle": "MANUAL INSTRUMENT LIGHTS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if instrument lights are set manually.: Units bool",
      "messagetype": "action_MANUAL INSTRUMENT LIGHTS_get",
      "parameters": {}
    },
    {
      "name": "MARKER AVAILABLE_get",
      "displaytitle": "MARKER AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if Marker is available.: Units bool",
      "messagetype": "action_MARKER AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "MARKER BEACON SENSITIVITY HIGH_get",
      "displaytitle": "MARKER BEACON SENSITIVITY HIGH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Marker Beacon is in High Sensitivity mode.: Units bool",
      "messagetype": "action_MARKER BEACON SENSITIVITY HIGH_get",
      "parameters": {}
    },
    {
      "name": "MARKER BEACON STATE",
      "displaytitle": "MARKER BEACON STATE(Set)",
      "description": "Set the simvar Marker beacon state.: Units enum",
      "messagetype": "action_MARKER BEACON STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MARKER BEACON STATE_get",
      "displaytitle": "MARKER BEACON STATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMarker beacon state.: Units enum",
      "messagetype": "action_MARKER BEACON STATE_get",
      "parameters": {}
    },
    {
      "name": "MARKER BEACON TEST MUTE_get",
      "displaytitle": "MARKER BEACON TEST MUTE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Marker Beacon is in Test/Mute mode.: Units bool",
      "messagetype": "action_MARKER BEACON TEST MUTE_get",
      "parameters": {}
    },
    {
      "name": "MARKER SOUND_get",
      "displaytitle": "MARKER SOUND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMarker audio flag.: Units bool",
      "messagetype": "action_MARKER SOUND_get",
      "parameters": {}
    },
    {
      "name": "MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE_get",
      "displaytitle": "MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCurrently not used in the simulation.: Units degrees",
      "messagetype": "action_MARSHALLER AIRCRAFT DIRECTION PARKINGSPACE_get",
      "parameters": {}
    },
    {
      "name": "MARSHALLER AIRCRAFT DISTANCE_get",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe distance between the Marshaller and the aircraft.: Units meters",
      "messagetype": "action_MARSHALLER AIRCRAFT DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE_get",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPosition on the X axis of the aircraft in the parking space (negative means the aircraft is on the left side and positive the right side).: Units meters",
      "messagetype": "action_MARSHALLER AIRCRAFT DISTANCE DIRECTION X PARKINGSPACE_get",
      "parameters": {}
    },
    {
      "name": "MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE_get",
      "displaytitle": "MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPosition on the Z axis of the aircraft in the parking space (negative means the aircraft is behind the parking space and positive is in front of the parking space).: Units meters",
      "messagetype": "action_MARSHALLER AIRCRAFT DISTANCE DIRECTION Z PARKINGSPACE_get",
      "parameters": {}
    },
    {
      "name": "MARSHALLER AIRCRAFT ENGINE SHUTDOWN_get",
      "displaytitle": "MARSHALLER AIRCRAFT ENGINE SHUTDOWN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the engine(s) of the aircraft is (are) shut down.: Units bool",
      "messagetype": "action_MARSHALLER AIRCRAFT ENGINE SHUTDOWN_get",
      "parameters": {}
    },
    {
      "name": "MARSHALLER AIRCRAFT HEADING PARKINGSPACE_get",
      "displaytitle": "MARSHALLER AIRCRAFT HEADING PARKINGSPACE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle between the direction of the aircraft and the direction of the parking place.: Units degrees",
      "messagetype": "action_MARSHALLER AIRCRAFT HEADING PARKINGSPACE_get",
      "parameters": {}
    },
    {
      "name": "MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE_get",
      "displaytitle": "MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerValue in Z axis of the projection from the aircraft position following the heading of the aircraft.  : Units meters",
      "messagetype": "action_MARSHALLER AIRCRAFT PROJECTION POINT PARKINGSPACE_get",
      "parameters": {}
    },
    {
      "name": "MARSHALLER AIRCRAFT VELOCITY_get",
      "displaytitle": "MARSHALLER AIRCRAFT VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe velocity of the aircraft.: Units knots",
      "messagetype": "action_MARSHALLER AIRCRAFT VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "MASTER IGNITION SWITCH_get",
      "displaytitle": "MASTER IGNITION SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAircraft master ignition switch (grounds all engines magnetos): Units bool",
      "messagetype": "action_MASTER IGNITION SWITCH_get",
      "parameters": {}
    },
    {
      "name": "MAX EGT_get",
      "displaytitle": "MAX EGT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe maximum EGT, as set using the egt_peak_temperature parameter in the engine.cfg file: Units rankine",
      "messagetype": "action_MAX EGT_get",
      "parameters": {}
    },
    {
      "name": "MAX G FORCE_get",
      "displaytitle": "MAX G FORCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMaximum G force attained: Units gforce",
      "messagetype": "action_MAX G FORCE_get",
      "parameters": {}
    },
    {
      "name": "MAX GROSS WEIGHT_get",
      "displaytitle": "MAX GROSS WEIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMaximum gross weight of the aircaft: Units pounds",
      "messagetype": "action_MAX GROSS WEIGHT_get",
      "parameters": {}
    },
    {
      "name": "MAX OIL TEMPERATURE_get",
      "displaytitle": "MAX OIL TEMPERATURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe maximum oil temperature, as set using the parameter oil_temp_heating_constant in the engine.cfg file: Units rankine",
      "messagetype": "action_MAX OIL TEMPERATURE_get",
      "parameters": {}
    },
    {
      "name": "MAX RATED ENGINE RPM_get",
      "displaytitle": "MAX RATED ENGINE RPM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMaximum rated rpm for the indexed engine: Units RPM",
      "messagetype": "action_MAX RATED ENGINE RPM_get",
      "parameters": {}
    },
    {
      "name": "MIDDLE MARKER",
      "displaytitle": "MIDDLE MARKER(Set)",
      "description": "Set the simvar Middle marker state.: Units bool",
      "messagetype": "action_MIDDLE MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MIDDLE MARKER_get",
      "displaytitle": "MIDDLE MARKER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMiddle marker state.: Units bool",
      "messagetype": "action_MIDDLE MARKER_get",
      "parameters": {}
    },
    {
      "name": "MIN DRAG VELOCITY_get",
      "displaytitle": "MIN DRAG VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMinimum drag velocity, in clean, with no input and no gears, when at 10000ft.: Units feet",
      "messagetype": "action_MIN DRAG VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "MIN G FORCE_get",
      "displaytitle": "MIN G FORCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMinimum G force attained: Units gforce",
      "messagetype": "action_MIN G FORCE_get",
      "parameters": {}
    },
    {
      "name": "MISSION SCORE",
      "displaytitle": "MISSION SCORE(Set)",
      "description": "Set the simvar : Units number",
      "messagetype": "action_MISSION SCORE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "MISSION SCORE_get",
      "displaytitle": "MISSION SCORE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger: Units number",
      "messagetype": "action_MISSION SCORE_get",
      "parameters": {}
    },
    {
      "name": "NAV ACTIVE FREQUENCY:index_get",
      "displaytitle": "NAV ACTIVE FREQUENCY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNav active frequency. Index is 1 or 2.: Units MHz",
      "messagetype": "action_NAV ACTIVE FREQUENCY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV AVAILABLE:index_get",
      "displaytitle": "NAV AVAILABLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag if Nav equipped on aircraft.: Units bool",
      "messagetype": "action_NAV AVAILABLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV BACK COURSE FLAGS:index_get",
      "displaytitle": "NAV BACK COURSE FLAGS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns the listed bit flags.: Units Flags",
      "messagetype": "action_NAV BACK COURSE FLAGS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV CDI:index_get",
      "displaytitle": "NAV CDI:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCDI needle deflection (+/- 127).: Units number",
      "messagetype": "action_NAV CDI:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV CLOSE DME:index_get",
      "displaytitle": "NAV CLOSE DME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerClosest DME distance. Requires an index value from 1 to 4 to set which NAV to target.: Units nautical miles",
      "messagetype": "action_NAV CLOSE DME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV CLOSE FREQUENCY:index_get",
      "displaytitle": "NAV CLOSE FREQUENCY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerClosest Localizer course frequency. Requires an index value from 1 to 4 to set which NAV to target.: Units Hz",
      "messagetype": "action_NAV CLOSE FREQUENCY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV CLOSE IDENT:index_get",
      "displaytitle": "NAV CLOSE IDENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerICAO code. Requires an index value from 1 to 4 to set which NAV to target.: Units null",
      "messagetype": "action_NAV CLOSE IDENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV CLOSE LOCALIZER:index_get",
      "displaytitle": "NAV CLOSE LOCALIZER:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerClosest Localizer course heading. Requires an index value from 1 to 4 to set which NAV to target.: Units degrees",
      "messagetype": "action_NAV CLOSE LOCALIZER:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV CLOSE NAME:index_get",
      "displaytitle": "NAV CLOSE NAME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDescriptive name. Requires an index value from 1 to 4 to set which NAV to target.: Units null",
      "messagetype": "action_NAV CLOSE NAME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV CODES_get",
      "displaytitle": "NAV CODES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns bit flags with the listed meaning.: Units Flags",
      "messagetype": "action_NAV CODES_get",
      "parameters": {}
    },
    {
      "name": "NAV DME_get",
      "displaytitle": "NAV DME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDME distance.: Units nautical miles",
      "messagetype": "action_NAV DME_get",
      "parameters": {}
    },
    {
      "name": "NAV DMESPEED_get",
      "displaytitle": "NAV DMESPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDME speed.: Units knots",
      "messagetype": "action_NAV DMESPEED_get",
      "parameters": {}
    },
    {
      "name": "NAV FREQUENCY_get",
      "displaytitle": "NAV FREQUENCY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLocalizer course frequency: Units Hz",
      "messagetype": "action_NAV FREQUENCY_get",
      "parameters": {}
    },
    {
      "name": "NAV GLIDE SLOPE_get",
      "displaytitle": "NAV GLIDE SLOPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe glide slope gradient. The value returned is an integer value formed as sin(slope) * 65536 * 2: Units number",
      "messagetype": "action_NAV GLIDE SLOPE_get",
      "parameters": {}
    },
    {
      "name": "NAV GLIDE SLOPE ERROR_get",
      "displaytitle": "NAV GLIDE SLOPE ERROR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDifference between current position and glideslope angle. Note that this provides 32 bit floating point precision, rather than the 8 bit integer precision of NAV GSI.: Units degrees",
      "messagetype": "action_NAV GLIDE SLOPE ERROR_get",
      "parameters": {}
    },
    {
      "name": "NAV GLIDE SLOPE LENGTH_get",
      "displaytitle": "NAV GLIDE SLOPE LENGTH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe distance between the plane and the Glide beacon.: Units feet",
      "messagetype": "action_NAV GLIDE SLOPE LENGTH_get",
      "parameters": {}
    },
    {
      "name": "NAV GS FLAG_get",
      "displaytitle": "NAV GS FLAG(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGlideslope flag.: Units bool",
      "messagetype": "action_NAV GS FLAG_get",
      "parameters": {}
    },
    {
      "name": "NAV GSI_get",
      "displaytitle": "NAV GSI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGlideslope needle deflection (+/- 119). Note that this provides only 8 bit precision, whereas NAV GLIDE SLOPE ERROR provides 32 bit floating point precision.: Units number",
      "messagetype": "action_NAV GSI_get",
      "parameters": {}
    },
    {
      "name": "NAV HAS CLOSE DME_get",
      "displaytitle": "NAV HAS CLOSE DME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag if found a close station with a DME.: Units bool",
      "messagetype": "action_NAV HAS CLOSE DME_get",
      "parameters": {}
    },
    {
      "name": "NAV HAS CLOSE LOCALIZER_get",
      "displaytitle": "NAV HAS CLOSE LOCALIZER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag if found a close localizer station.: Units bool",
      "messagetype": "action_NAV HAS CLOSE LOCALIZER_get",
      "parameters": {}
    },
    {
      "name": "NAV HAS DME_get",
      "displaytitle": "NAV HAS DME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag if tuned station has a DME.: Units bool",
      "messagetype": "action_NAV HAS DME_get",
      "parameters": {}
    },
    {
      "name": "NAV HAS GLIDE SLOPE_get",
      "displaytitle": "NAV HAS GLIDE SLOPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag if tuned station has a glide slope.: Units bool",
      "messagetype": "action_NAV HAS GLIDE SLOPE_get",
      "parameters": {}
    },
    {
      "name": "NAV HAS LOCALIZER_get",
      "displaytitle": "NAV HAS LOCALIZER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag if tuned station is a localizer.: Units bool",
      "messagetype": "action_NAV HAS LOCALIZER_get",
      "parameters": {}
    },
    {
      "name": "NAV HAS NAV_get",
      "displaytitle": "NAV HAS NAV(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag if Nav has signal.: Units bool",
      "messagetype": "action_NAV HAS NAV_get",
      "parameters": {}
    },
    {
      "name": "NAV HAS TACAN_get",
      "displaytitle": "NAV HAS TACAN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFlag if Nav has a Tacan.: Units bool",
      "messagetype": "action_NAV HAS TACAN_get",
      "parameters": {}
    },
    {
      "name": "NAV IDENT_get",
      "displaytitle": "NAV IDENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerICAO code.: Units null",
      "messagetype": "action_NAV IDENT_get",
      "parameters": {}
    },
    {
      "name": "NAV LOC AIRPORT IDENT_get",
      "displaytitle": "NAV LOC AIRPORT IDENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe airport ICAO ident for the localizer that is currently tuned on the nav radio (like 'EGLL' or 'KJFK'): Units null",
      "messagetype": "action_NAV LOC AIRPORT IDENT_get",
      "parameters": {}
    },
    {
      "name": "NAV LOC RUNWAY DESIGNATOR_get",
      "displaytitle": "NAV LOC RUNWAY DESIGNATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe letter code for the runway that the currently tuned localizer is tuned to.: Units null",
      "messagetype": "action_NAV LOC RUNWAY DESIGNATOR_get",
      "parameters": {}
    },
    {
      "name": "NAV LOC RUNWAY NUMBER_get",
      "displaytitle": "NAV LOC RUNWAY NUMBER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNAV LOC RUNWAY NUMBER - The number portion of the runway that the currently tuned localizer is tuned to (so if the runway was 15L, this would be 15).: Units null",
      "messagetype": "action_NAV LOC RUNWAY NUMBER_get",
      "parameters": {}
    },
    {
      "name": "NAV LOCALIZER_get",
      "displaytitle": "NAV LOCALIZER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLocalizer course heading.: Units degrees",
      "messagetype": "action_NAV LOCALIZER_get",
      "parameters": {}
    },
    {
      "name": "NAV MAGVAR_get",
      "displaytitle": "NAV MAGVAR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMagnetic variation of tuned Nav station.: Units degrees",
      "messagetype": "action_NAV MAGVAR_get",
      "parameters": {}
    },
    {
      "name": "NAV NAME_get",
      "displaytitle": "NAV NAME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDescriptive name.: Units null",
      "messagetype": "action_NAV NAME_get",
      "parameters": {}
    },
    {
      "name": "NAV OBS_get",
      "displaytitle": "NAV OBS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOBS setting. Index of 1 or 2.: Units degrees",
      "messagetype": "action_NAV OBS_get",
      "parameters": {}
    },
    {
      "name": "NAV RADIAL_get",
      "displaytitle": "NAV RADIAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRadial that aircraft is on.: Units degrees",
      "messagetype": "action_NAV RADIAL_get",
      "parameters": {}
    },
    {
      "name": "NAV RADIAL ERROR_get",
      "displaytitle": "NAV RADIAL ERROR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDifference between current radial and OBS tuned radial.: Units degrees",
      "messagetype": "action_NAV RADIAL ERROR_get",
      "parameters": {}
    },
    {
      "name": "NAV RAW GLIDE SLOPE_get",
      "displaytitle": "NAV RAW GLIDE SLOPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe glide slope angle.: Units degrees",
      "messagetype": "action_NAV RAW GLIDE SLOPE_get",
      "parameters": {}
    },
    {
      "name": "NAV RELATIVE BEARING TO STATION_get",
      "displaytitle": "NAV RELATIVE BEARING TO STATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRelative bearing to station.: Units degrees",
      "messagetype": "action_NAV RELATIVE BEARING TO STATION_get",
      "parameters": {}
    },
    {
      "name": "NAV SIGNAL_get",
      "displaytitle": "NAV SIGNAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNav signal strength.: Units number",
      "messagetype": "action_NAV SIGNAL_get",
      "parameters": {}
    },
    {
      "name": "NAV SOUND:index_get",
      "displaytitle": "NAV SOUND:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNav audio flag. Index of 1 or 2.: Units bool",
      "messagetype": "action_NAV SOUND:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV STANDBY FREQUENCY:index_get",
      "displaytitle": "NAV STANDBY FREQUENCY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNav standby frequency. Index is 1 or 2.: Units MHz",
      "messagetype": "action_NAV STANDBY FREQUENCY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "NAV TOFROM_get",
      "displaytitle": "NAV TOFROM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the Nav is going to or from the current radial (or is off).: Units enum",
      "messagetype": "action_NAV TOFROM_get",
      "parameters": {}
    },
    {
      "name": "NAV VOLUME_get",
      "displaytitle": "NAV VOLUME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe volume of the Nav radio.: Units percent",
      "messagetype": "action_NAV VOLUME_get",
      "parameters": {}
    },
    {
      "name": "NAV VOR DISTANCE_get",
      "displaytitle": "NAV VOR DISTANCE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDistance of the VOR beacon.: Units meters",
      "messagetype": "action_NAV VOR DISTANCE_get",
      "parameters": {}
    },
    {
      "name": "NEW ELECTRICAL SYSTEM_get",
      "displaytitle": "NEW ELECTRICAL SYSTEM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs the aircraft using the new Electrical System or the legacy FSX one: Units bool",
      "messagetype": "action_NEW ELECTRICAL SYSTEM_get",
      "parameters": {}
    },
    {
      "name": "NOSEWHEEL LOCK ON_get",
      "displaytitle": "NOSEWHEEL LOCK ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the nosewheel lock is engaged. This can be set using the NosewheelLock parameter.: Units bool",
      "messagetype": "action_NOSEWHEEL LOCK ON_get",
      "parameters": {}
    },
    {
      "name": "NOSEWHEEL MAX STEERING ANGLE",
      "displaytitle": "NOSEWHEEL MAX STEERING ANGLE(Set)",
      "description": "Set the simvar Can be used to get or set the maximum permitted steering angle for the nose wheel of the aircraft: Units radians",
      "messagetype": "action_NOSEWHEEL MAX STEERING ANGLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "NOSEWHEEL MAX STEERING ANGLE_get",
      "displaytitle": "NOSEWHEEL MAX STEERING ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCan be used to get or set the maximum permitted steering angle for the nose wheel of the aircraft: Units radians",
      "messagetype": "action_NOSEWHEEL MAX STEERING ANGLE_get",
      "parameters": {}
    },
    {
      "name": "NUM SLING CABLES_get",
      "displaytitle": "NUM SLING CABLES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe number of sling cables (not hoists) that are configured for the helicopter.: Units number",
      "messagetype": "action_NUM SLING CABLES_get",
      "parameters": {}
    },
    {
      "name": "NUMBER OF CATAPULTS_get",
      "displaytitle": "NUMBER OF CATAPULTS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerMaximum of 4. A model can contain more than 4 catapults, but only the first four will be read and recognized by the simulation: Units number",
      "messagetype": "action_NUMBER OF CATAPULTS_get",
      "parameters": {}
    },
    {
      "name": "NUMBER OF ENGINES_get",
      "displaytitle": "NUMBER OF ENGINES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNumber of engines (minimum 0, maximum 4): Units number",
      "messagetype": "action_NUMBER OF ENGINES_get",
      "parameters": {}
    },
    {
      "name": "ON ANY RUNWAY_get",
      "displaytitle": "ON ANY RUNWAY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the plane is currently on a runway: Units bool",
      "messagetype": "action_ON ANY RUNWAY_get",
      "parameters": {}
    },
    {
      "name": "OUTER MARKER",
      "displaytitle": "OUTER MARKER(Set)",
      "description": "Set the simvar Outer marker state.: Units bool",
      "messagetype": "action_OUTER MARKER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "OUTER MARKER_get",
      "displaytitle": "OUTER MARKER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOuter marker state.: Units bool",
      "messagetype": "action_OUTER MARKER_get",
      "parameters": {}
    },
    {
      "name": "OVERSPEED WARNING_get",
      "displaytitle": "OVERSPEED WARNING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOverspeed warning state.: Units bool",
      "messagetype": "action_OVERSPEED WARNING_get",
      "parameters": {}
    },
    {
      "name": "PANEL ANTI ICE SWITCH_get",
      "displaytitle": "PANEL ANTI ICE SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if panel anti-ice switch is on.: Units bool",
      "messagetype": "action_PANEL ANTI ICE SWITCH_get",
      "parameters": {}
    },
    {
      "name": "PANEL AUTO FEATHER SWITCH:index_get",
      "displaytitle": "PANEL AUTO FEATHER SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAuto-feather arming switch for the indexed engine: Units bool",
      "messagetype": "action_PANEL AUTO FEATHER SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PARTIAL PANEL ADF",
      "displaytitle": "PARTIAL PANEL ADF(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ADF",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ADF_get",
      "displaytitle": "PARTIAL PANEL ADF(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ADF_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL AIRSPEED",
      "displaytitle": "PARTIAL PANEL AIRSPEED(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL AIRSPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL AIRSPEED_get",
      "displaytitle": "PARTIAL PANEL AIRSPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL AIRSPEED_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL ALTIMETER",
      "displaytitle": "PARTIAL PANEL ALTIMETER(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ALTIMETER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ALTIMETER_get",
      "displaytitle": "PARTIAL PANEL ALTIMETER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ALTIMETER_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL ATTITUDE",
      "displaytitle": "PARTIAL PANEL ATTITUDE(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ATTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ATTITUDE_get",
      "displaytitle": "PARTIAL PANEL ATTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ATTITUDE_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL AVIONICS_get",
      "displaytitle": "PARTIAL PANEL AVIONICS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL AVIONICS_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL COMM",
      "displaytitle": "PARTIAL PANEL COMM(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL COMM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL COMM_get",
      "displaytitle": "PARTIAL PANEL COMM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL COMM_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL COMPASS",
      "displaytitle": "PARTIAL PANEL COMPASS(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL COMPASS",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL COMPASS_get",
      "displaytitle": "PARTIAL PANEL COMPASS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL COMPASS_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL ELECTRICAL",
      "displaytitle": "PARTIAL PANEL ELECTRICAL(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ELECTRICAL",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ELECTRICAL_get",
      "displaytitle": "PARTIAL PANEL ELECTRICAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ELECTRICAL_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL ENGINE",
      "displaytitle": "PARTIAL PANEL ENGINE(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ENGINE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL ENGINE_get",
      "displaytitle": "PARTIAL PANEL ENGINE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL ENGINE_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL FUEL INDICATOR_get",
      "displaytitle": "PARTIAL PANEL FUEL INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL FUEL INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL HEADING",
      "displaytitle": "PARTIAL PANEL HEADING(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL HEADING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL HEADING_get",
      "displaytitle": "PARTIAL PANEL HEADING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL HEADING_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL NAV",
      "displaytitle": "PARTIAL PANEL NAV(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL NAV",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL NAV_get",
      "displaytitle": "PARTIAL PANEL NAV(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL NAV_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL PITOT",
      "displaytitle": "PARTIAL PANEL PITOT(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL PITOT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL PITOT_get",
      "displaytitle": "PARTIAL PANEL PITOT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL PITOT_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL TRANSPONDER",
      "displaytitle": "PARTIAL PANEL TRANSPONDER(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL TRANSPONDER",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL TRANSPONDER_get",
      "displaytitle": "PARTIAL PANEL TRANSPONDER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL TRANSPONDER_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL TURN COORDINATOR_get",
      "displaytitle": "PARTIAL PANEL TURN COORDINATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL TURN COORDINATOR_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL VACUUM",
      "displaytitle": "PARTIAL PANEL VACUUM(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL VACUUM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL VACUUM_get",
      "displaytitle": "PARTIAL PANEL VACUUM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL VACUUM_get",
      "parameters": {}
    },
    {
      "name": "PARTIAL PANEL VERTICAL VELOCITY",
      "displaytitle": "PARTIAL PANEL VERTICAL VELOCITY(Set)",
      "description": "Set the simvar Gauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL VERTICAL VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PARTIAL PANEL VERTICAL VELOCITY_get",
      "displaytitle": "PARTIAL PANEL VERTICAL VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGauge fail flag.: Units enum",
      "messagetype": "action_PARTIAL PANEL VERTICAL VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "PAYLOAD STATION COUNT_get",
      "displaytitle": "PAYLOAD STATION COUNT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNumber of payload stations (1 to 15).: Units number",
      "messagetype": "action_PAYLOAD STATION COUNT_get",
      "parameters": {}
    },
    {
      "name": "PAYLOAD STATION NAME:index_get",
      "displaytitle": "PAYLOAD STATION NAME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDescriptive name for payload station.: Units null",
      "messagetype": "action_PAYLOAD STATION NAME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PAYLOAD STATION NUM SIMOBJECTS:index_get",
      "displaytitle": "PAYLOAD STATION NUM SIMOBJECTS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe number of objects at the payload station.: Units number",
      "messagetype": "action_PAYLOAD STATION NUM SIMOBJECTS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PAYLOAD STATION OBJECT:index_get",
      "displaytitle": "PAYLOAD STATION OBJECT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPlaces the named object at the payload station identified by the index (starting from 1). The string is the Container name (refer to the title property of Simulation Object Configuration Files).: Units null",
      "messagetype": "action_PAYLOAD STATION OBJECT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PAYLOAD STATION WEIGHT:index",
      "displaytitle": "PAYLOAD STATION WEIGHT:index(Set)",
      "description": "Set the simvar Individual payload station weight.: Units pounds",
      "messagetype": "action_PAYLOAD STATION WEIGHT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PAYLOAD STATION WEIGHT:index_get",
      "displaytitle": "PAYLOAD STATION WEIGHT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndividual payload station weight.: Units pounds",
      "messagetype": "action_PAYLOAD STATION WEIGHT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PILOT TRANSMITTER TYPE_get",
      "displaytitle": "PILOT TRANSMITTER TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOn which channel the pilot is transmitting.: Units enum",
      "messagetype": "action_PILOT TRANSMITTER TYPE_get",
      "parameters": {}
    },
    {
      "name": "PILOT TRANSMITTING_get",
      "displaytitle": "PILOT TRANSMITTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the pilot is transmitting.: Units bool",
      "messagetype": "action_PILOT TRANSMITTING_get",
      "parameters": {}
    },
    {
      "name": "PITOT HEAT_get",
      "displaytitle": "PITOT HEAT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPitot heat active.: Units bool",
      "messagetype": "action_PITOT HEAT_get",
      "parameters": {}
    },
    {
      "name": "PITOT HEAT SWITCH:index_get",
      "displaytitle": "PITOT HEAT SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPitot heat switch state.: Units enum",
      "messagetype": "action_PITOT HEAT SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PITOT ICE PCT_get",
      "displaytitle": "PITOT ICE PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAmount of pitot ice. 100 is fully iced.: Units percent Over 100",
      "messagetype": "action_PITOT ICE PCT_get",
      "parameters": {}
    },
    {
      "name": "PLANE ALT ABOVE GROUND",
      "displaytitle": "PLANE ALT ABOVE GROUND(Set)",
      "description": "Set the simvar Altitude above the surface: Units feet",
      "messagetype": "action_PLANE ALT ABOVE GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE ALT ABOVE GROUND_get",
      "displaytitle": "PLANE ALT ABOVE GROUND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude above the surface: Units feet",
      "messagetype": "action_PLANE ALT ABOVE GROUND_get",
      "parameters": {}
    },
    {
      "name": "PLANE ALT ABOVE GROUND MINUS CG",
      "displaytitle": "PLANE ALT ABOVE GROUND MINUS CG(Set)",
      "description": "Set the simvar Altitude above the surface minus CG: Units feet",
      "messagetype": "action_PLANE ALT ABOVE GROUND MINUS CG",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE ALT ABOVE GROUND MINUS CG_get",
      "displaytitle": "PLANE ALT ABOVE GROUND MINUS CG(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude above the surface minus CG: Units feet",
      "messagetype": "action_PLANE ALT ABOVE GROUND MINUS CG_get",
      "parameters": {}
    },
    {
      "name": "PLANE ALTITUDE",
      "displaytitle": "PLANE ALTITUDE(Set)",
      "description": "Set the simvar Altitude of aircraft: Units feet",
      "messagetype": "action_PLANE ALTITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE ALTITUDE_get",
      "displaytitle": "PLANE ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAltitude of aircraft: Units feet",
      "messagetype": "action_PLANE ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "PLANE BANK DEGREES",
      "displaytitle": "PLANE BANK DEGREES(Set)",
      "description": "Set the simvar Bank angle, although the name mentions degrees the units used are radians: Units radians",
      "messagetype": "action_PLANE BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE BANK DEGREES_get",
      "displaytitle": "PLANE BANK DEGREES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBank angle, although the name mentions degrees the units used are radians: Units radians",
      "messagetype": "action_PLANE BANK DEGREES_get",
      "parameters": {}
    },
    {
      "name": "PLANE HEADING DEGREES GYRO",
      "displaytitle": "PLANE HEADING DEGREES GYRO(Set)",
      "description": "Set the simvar Heading indicator (directional gyro) indication.: Units radians",
      "messagetype": "action_PLANE HEADING DEGREES GYRO",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE HEADING DEGREES GYRO_get",
      "displaytitle": "PLANE HEADING DEGREES GYRO(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerHeading indicator (directional gyro) indication.: Units radians",
      "messagetype": "action_PLANE HEADING DEGREES GYRO_get",
      "parameters": {}
    },
    {
      "name": "PLANE HEADING DEGREES MAGNETIC",
      "displaytitle": "PLANE HEADING DEGREES MAGNETIC(Set)",
      "description": "Set the simvar Heading relative to magnetic north - although the name mentions degrees the units used are radians: Units radians",
      "messagetype": "action_PLANE HEADING DEGREES MAGNETIC",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE HEADING DEGREES MAGNETIC_get",
      "displaytitle": "PLANE HEADING DEGREES MAGNETIC(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerHeading relative to magnetic north - although the name mentions degrees the units used are radians: Units radians",
      "messagetype": "action_PLANE HEADING DEGREES MAGNETIC_get",
      "parameters": {}
    },
    {
      "name": "PLANE HEADING DEGREES TRUE",
      "displaytitle": "PLANE HEADING DEGREES TRUE(Set)",
      "description": "Set the simvar Heading relative to true north - although the name mentions degrees the units used are radians: Units radians",
      "messagetype": "action_PLANE HEADING DEGREES TRUE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE HEADING DEGREES TRUE_get",
      "displaytitle": "PLANE HEADING DEGREES TRUE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerHeading relative to true north - although the name mentions degrees the units used are radians: Units radians",
      "messagetype": "action_PLANE HEADING DEGREES TRUE_get",
      "parameters": {}
    },
    {
      "name": "PLANE IN PARKING STATE_get",
      "displaytitle": "PLANE IN PARKING STATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the plane is currently parked (true) or not (false): Units bool",
      "messagetype": "action_PLANE IN PARKING STATE_get",
      "parameters": {}
    },
    {
      "name": "PLANE LATITUDE",
      "displaytitle": "PLANE LATITUDE(Set)",
      "description": "Set the simvar Latitude of aircraft, North is positive, South negative: Units radians",
      "messagetype": "action_PLANE LATITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE LATITUDE_get",
      "displaytitle": "PLANE LATITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLatitude of aircraft, North is positive, South negative: Units radians",
      "messagetype": "action_PLANE LATITUDE_get",
      "parameters": {}
    },
    {
      "name": "PLANE LONGITUDE",
      "displaytitle": "PLANE LONGITUDE(Set)",
      "description": "Set the simvar Longitude of aircraft, East is positive, West negative: Units radians",
      "messagetype": "action_PLANE LONGITUDE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE LONGITUDE_get",
      "displaytitle": "PLANE LONGITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLongitude of aircraft, East is positive, West negative: Units radians",
      "messagetype": "action_PLANE LONGITUDE_get",
      "parameters": {}
    },
    {
      "name": "PLANE PITCH DEGREES",
      "displaytitle": "PLANE PITCH DEGREES(Set)",
      "description": "Set the simvar Pitch angle, although the name mentions degrees the units used are radians: Units radians",
      "messagetype": "action_PLANE PITCH DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE PITCH DEGREES_get",
      "displaytitle": "PLANE PITCH DEGREES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPitch angle, although the name mentions degrees the units used are radians: Units radians",
      "messagetype": "action_PLANE PITCH DEGREES_get",
      "parameters": {}
    },
    {
      "name": "PLANE TOUCHDOWN BANK DEGREES",
      "displaytitle": "PLANE TOUCHDOWN BANK DEGREES(Set)",
      "description": "Set the simvar This float represents the bank of the player's plane from the last touchdown: Units degrees",
      "messagetype": "action_PLANE TOUCHDOWN BANK DEGREES",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PLANE TOUCHDOWN BANK DEGREES_get",
      "displaytitle": "PLANE TOUCHDOWN BANK DEGREES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the bank of the player's plane from the last touchdown: Units degrees",
      "messagetype": "action_PLANE TOUCHDOWN BANK DEGREES_get",
      "parameters": {}
    },
    {
      "name": "PLANE TOUCHDOWN HEADING DEGREES MAGNETIC_get",
      "displaytitle": "PLANE TOUCHDOWN HEADING DEGREES MAGNETIC(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the magnetic heading of the player's plane from the last touchdown: Units degrees",
      "messagetype": "action_PLANE TOUCHDOWN HEADING DEGREES MAGNETIC_get",
      "parameters": {}
    },
    {
      "name": "PLANE TOUCHDOWN HEADING DEGREES TRUE_get",
      "displaytitle": "PLANE TOUCHDOWN HEADING DEGREES TRUE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the true heading of the player's plane from the last touchdown: Units degrees",
      "messagetype": "action_PLANE TOUCHDOWN HEADING DEGREES TRUE_get",
      "parameters": {}
    },
    {
      "name": "PLANE TOUCHDOWN LATITUDE_get",
      "displaytitle": "PLANE TOUCHDOWN LATITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the plane latitude for the last touchdown: Units radians",
      "messagetype": "action_PLANE TOUCHDOWN LATITUDE_get",
      "parameters": {}
    },
    {
      "name": "PLANE TOUCHDOWN LONGITUDE_get",
      "displaytitle": "PLANE TOUCHDOWN LONGITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the plane longitude for the last touchdown: Units radians",
      "messagetype": "action_PLANE TOUCHDOWN LONGITUDE_get",
      "parameters": {}
    },
    {
      "name": "PLANE TOUCHDOWN NORMAL VELOCITY_get",
      "displaytitle": "PLANE TOUCHDOWN NORMAL VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the player's plane speed according to ground normal from the last touchdown: Units feet",
      "messagetype": "action_PLANE TOUCHDOWN NORMAL VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "PLANE TOUCHDOWN PITCH DEGREES_get",
      "displaytitle": "PLANE TOUCHDOWN PITCH DEGREES(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis float represents the pitch of the player's plane from the last touchdown: Units degrees",
      "messagetype": "action_PLANE TOUCHDOWN PITCH DEGREES_get",
      "parameters": {}
    },
    {
      "name": "PRESSURE ALTITUDE_get",
      "displaytitle": "PRESSURE ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerStandard Altitude, ie: at a 1013.25 hPa (1 atmosphere) setting.: Units meters",
      "messagetype": "action_PRESSURE ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "PRESSURIZATION CABIN ALTITUDE_get",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current altitude of the cabin pressurization.: Units feet",
      "messagetype": "action_PRESSURIZATION CABIN ALTITUDE_get",
      "parameters": {}
    },
    {
      "name": "PRESSURIZATION CABIN ALTITUDE GOAL_get",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE GOAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe set altitude of the cabin pressurization.: Units feet",
      "messagetype": "action_PRESSURIZATION CABIN ALTITUDE GOAL_get",
      "parameters": {}
    },
    {
      "name": "PRESSURIZATION CABIN ALTITUDE RATE_get",
      "displaytitle": "PRESSURIZATION CABIN ALTITUDE RATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe rate at which cabin pressurization changes.: Units feet per second",
      "messagetype": "action_PRESSURIZATION CABIN ALTITUDE RATE_get",
      "parameters": {}
    },
    {
      "name": "PRESSURIZATION DUMP SWITCH_get",
      "displaytitle": "PRESSURIZATION DUMP SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the cabin pressurization dump switch is on.: Units bool",
      "messagetype": "action_PRESSURIZATION DUMP SWITCH_get",
      "parameters": {}
    },
    {
      "name": "PRESSURIZATION PRESSURE DIFFERENTIAL_get",
      "displaytitle": "PRESSURIZATION PRESSURE DIFFERENTIAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe difference in pressure between the set altitude pressurization and the current pressurization.: Units pounds",
      "messagetype": "action_PRESSURIZATION PRESSURE DIFFERENTIAL_get",
      "parameters": {}
    },
    {
      "name": "PROP AUTO CRUISE ACTIVE_get",
      "displaytitle": "PROP AUTO CRUISE ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if prop auto cruise active: Units bool",
      "messagetype": "action_PROP AUTO CRUISE ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "PROP AUTO FEATHER ARMED:index_get",
      "displaytitle": "PROP AUTO FEATHER ARMED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAuto-feather armed state for the indexed engine: Units bool",
      "messagetype": "action_PROP AUTO FEATHER ARMED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP BETA FORCED ACTIVE",
      "displaytitle": "PROP BETA FORCED ACTIVE(Set)",
      "description": "Set the simvar This can be used to enable the propeller forced beta mode (1, TRUE) or disable it (0, FALSE), when being written to. When being read from, it will return TRUE (1) if the forced beta mode is enabled or FALSE (0) if it isn't. When enabled, the PROP BETA FORCED POSITION value will be used to drive the prop beta, while the internal coded simulation logic is used when this is disabled: Units bool",
      "messagetype": "action_PROP BETA FORCED ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "PROP BETA FORCED ACTIVE_get",
      "displaytitle": "PROP BETA FORCED ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to enable the propeller forced beta mode (1, TRUE) or disable it (0, FALSE), when being written to. When being read from, it will return TRUE (1) if the forced beta mode is enabled or FALSE (0) if it isn't. When enabled, the PROP BETA FORCED POSITION value will be used to drive the prop beta, while the internal coded simulation logic is used when this is disabled: Units bool",
      "messagetype": "action_PROP BETA FORCED ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "PROP BETA FORCED POSITION_get",
      "displaytitle": "PROP BETA FORCED POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGet or set the beta at which the prop is forced. Only valid when PROP BETA FORCED ACTIVE is TRUE (1): Units radians",
      "messagetype": "action_PROP BETA FORCED POSITION_get",
      "parameters": {}
    },
    {
      "name": "PROP BETA MAX_get",
      "displaytitle": "PROP BETA MAX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"prop beta\" is the pitch of the blades of the propeller. This retrieves the maximum possible pitch value for all engines: Units radians",
      "messagetype": "action_PROP BETA MAX_get",
      "parameters": {}
    },
    {
      "name": "PROP BETA MIN_get",
      "displaytitle": "PROP BETA MIN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"prop beta\" is the pitch of the blades of the propeller. This retrieves the minimum possible pitch value for all engines: Units radians",
      "messagetype": "action_PROP BETA MIN_get",
      "parameters": {}
    },
    {
      "name": "PROP BETA MIN REVERSE_get",
      "displaytitle": "PROP BETA MIN REVERSE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"prop beta\" is the pitch of the blades of the propeller. This retrieves the minimum possible pitch value when the propeller is in reverse for all engines: Units radians",
      "messagetype": "action_PROP BETA MIN REVERSE_get",
      "parameters": {}
    },
    {
      "name": "PROP BETA:index",
      "displaytitle": "PROP BETA:index(Set)",
      "description": "Set the simvar The \"prop beta\" is the pitch of the blades of the propeller, and this can be used to retrieve the current pitch setting, per indexed engine: Units radians",
      "messagetype": "action_PROP BETA:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP BETA:index_get",
      "displaytitle": "PROP BETA:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"prop beta\" is the pitch of the blades of the propeller, and this can be used to retrieve the current pitch setting, per indexed engine: Units radians",
      "messagetype": "action_PROP BETA:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP DEICE SWITCH:index_get",
      "displaytitle": "PROP DEICE SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if prop deice switch on for the indexed engine: Units bool",
      "messagetype": "action_PROP DEICE SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP FEATHER SWITCH:index_get",
      "displaytitle": "PROP FEATHER SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerProp feather switch for the indexed engine: Units bool",
      "messagetype": "action_PROP FEATHER SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP FEATHERED:index_get",
      "displaytitle": "PROP FEATHERED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will return the feathered state of the propeller for an indexed engine. The state is either feathered (true) or not (false): Units bool",
      "messagetype": "action_PROP FEATHERED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP FEATHERING INHIBIT:index_get",
      "displaytitle": "PROP FEATHERING INHIBIT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFeathering inhibit flag for the indexed engine: Units bool",
      "messagetype": "action_PROP FEATHERING INHIBIT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP MAX RPM PERCENT:index",
      "displaytitle": "PROP MAX RPM PERCENT:index(Set)",
      "description": "Set the simvar Percent of max rated rpm for the indexed engine: Units percent",
      "messagetype": "action_PROP MAX RPM PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP MAX RPM PERCENT:index_get",
      "displaytitle": "PROP MAX RPM PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of max rated rpm for the indexed engine: Units percent",
      "messagetype": "action_PROP MAX RPM PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP ROTATION ANGLE_get",
      "displaytitle": "PROP ROTATION ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerProp rotation angle: Units radians",
      "messagetype": "action_PROP ROTATION ANGLE_get",
      "parameters": {}
    },
    {
      "name": "PROP RPM:index",
      "displaytitle": "PROP RPM:index(Set)",
      "description": "Set the simvar Propeller rpm for the indexed engine: Units RPM",
      "messagetype": "action_PROP RPM:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "PROP RPM:index_get",
      "displaytitle": "PROP RPM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPropeller rpm for the indexed engine: Units RPM",
      "messagetype": "action_PROP RPM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP SYNC ACTIVE:index_get",
      "displaytitle": "PROP SYNC ACTIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if prop sync is active the indexed engine: Units bool",
      "messagetype": "action_PROP SYNC ACTIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP SYNC DELTA LEVER:index_get",
      "displaytitle": "PROP SYNC DELTA LEVER:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCorrected prop correction input on slaved engine for the indexed engine: Units position",
      "messagetype": "action_PROP SYNC DELTA LEVER:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PROP THRUST:index_get",
      "displaytitle": "PROP THRUST:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPropeller thrust for the indexed engine: Units pounds",
      "messagetype": "action_PROP THRUST:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PUSHBACK ANGLE_get",
      "displaytitle": "PUSHBACK ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPushback angle (the heading of the tug).: Units radians",
      "messagetype": "action_PUSHBACK ANGLE_get",
      "parameters": {}
    },
    {
      "name": "PUSHBACK ATTACHED_get",
      "displaytitle": "PUSHBACK ATTACHED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if this vehicle is attached to an aircraft.: Units bool",
      "messagetype": "action_PUSHBACK ATTACHED_get",
      "parameters": {}
    },
    {
      "name": "PUSHBACK AVAILABLE_get",
      "displaytitle": "PUSHBACK AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if a push back is available on the parking space.: Units bool",
      "messagetype": "action_PUSHBACK AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "PUSHBACK CONTACTX_get",
      "displaytitle": "PUSHBACK CONTACTX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe towpoint position, relative to the aircrafts datum reference point.: Units feet",
      "messagetype": "action_PUSHBACK CONTACTX_get",
      "parameters": {}
    },
    {
      "name": "PUSHBACK CONTACTY_get",
      "displaytitle": "PUSHBACK CONTACTY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPushback contact position in vertical direction.: Units feet",
      "messagetype": "action_PUSHBACK CONTACTY_get",
      "parameters": {}
    },
    {
      "name": "PUSHBACK CONTACTZ_get",
      "displaytitle": "PUSHBACK CONTACTZ(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPushback contact position in fore/aft direction.: Units feet",
      "messagetype": "action_PUSHBACK CONTACTZ_get",
      "parameters": {}
    },
    {
      "name": "PUSHBACK STATE:index_get",
      "displaytitle": "PUSHBACK STATE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerType of pushback.: Units enum",
      "messagetype": "action_PUSHBACK STATE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "PUSHBACK WAIT_get",
      "displaytitle": "PUSHBACK WAIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if waiting for pushback.: Units bool",
      "messagetype": "action_PUSHBACK WAIT_get",
      "parameters": {}
    },
    {
      "name": "RAD INS SWITCH_get",
      "displaytitle": "RAD INS SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if Rad INS switch on.: Units bool",
      "messagetype": "action_RAD INS SWITCH_get",
      "parameters": {}
    },
    {
      "name": "RADIO HEIGHT_get",
      "displaytitle": "RADIO HEIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRadar altitude.: Units feet",
      "messagetype": "action_RADIO HEIGHT_get",
      "parameters": {}
    },
    {
      "name": "REALISM",
      "displaytitle": "REALISM(Set)",
      "description": "Set the simvar General realism percent.: Units number",
      "messagetype": "action_REALISM",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "REALISM_get",
      "displaytitle": "REALISM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGeneral realism percent.: Units number",
      "messagetype": "action_REALISM_get",
      "parameters": {}
    },
    {
      "name": "REALISM CRASH DETECTION_get",
      "displaytitle": "REALISM CRASH DETECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue indicates crash detection is turned on.: Units bool",
      "messagetype": "action_REALISM CRASH DETECTION_get",
      "parameters": {}
    },
    {
      "name": "REALISM CRASH WITH OTHERS_get",
      "displaytitle": "REALISM CRASH WITH OTHERS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue indicates crashing with other aircraft is possible.: Units bool",
      "messagetype": "action_REALISM CRASH WITH OTHERS_get",
      "parameters": {}
    },
    {
      "name": "RECIP CARBURETOR TEMPERATURE:index",
      "displaytitle": "RECIP CARBURETOR TEMPERATURE:index(Set)",
      "description": "Set the simvar Carburetor temperature the indexed engine: Units celsius",
      "messagetype": "action_RECIP CARBURETOR TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP CARBURETOR TEMPERATURE:index_get",
      "displaytitle": "RECIP CARBURETOR TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCarburetor temperature the indexed engine: Units celsius",
      "messagetype": "action_RECIP CARBURETOR TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG ALTERNATE AIR POSITION:index",
      "displaytitle": "RECIP ENG ALTERNATE AIR POSITION:index(Set)",
      "description": "Set the simvar Alternate air control the indexed engine: Units position",
      "messagetype": "action_RECIP ENG ALTERNATE AIR POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ALTERNATE AIR POSITION:index_get",
      "displaytitle": "RECIP ENG ALTERNATE AIR POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAlternate air control the indexed engine: Units position",
      "messagetype": "action_RECIP ENG ALTERNATE AIR POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION FLOW RATE:index_get",
      "displaytitle": "RECIP ENG ANTIDETONATION FLOW RATE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis gives the actual flow rate of the Anti Detonation system for the indexed engine: Units gallons per hour",
      "messagetype": "action_RECIP ENG ANTIDETONATION FLOW RATE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index_get",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe maximum quantity of water/methanol mixture in the ADI tank for the indexed engine. This value is set as part of the [ANTIDETONATION_SYSTEM.N] section in the aircraft configuration files: Units gallons",
      "messagetype": "action_RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION TANK QUANTITY:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK QUANTITY:index(Set)",
      "description": "Set the simvar The quantity of water/methanol mixture currently in the ADI tank for the indexed engine: Units gallons",
      "messagetype": "action_RECIP ENG ANTIDETONATION TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION TANK QUANTITY:index_get",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK QUANTITY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe quantity of water/methanol mixture currently in the ADI tank for the indexed engine: Units gallons",
      "messagetype": "action_RECIP ENG ANTIDETONATION TANK QUANTITY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION TANK VALVE:index",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK VALVE:index(Set)",
      "description": "Set the simvar The status of the ADI tank valve for the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG ANTIDETONATION TANK VALVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG ANTIDETONATION TANK VALVE:index_get",
      "displaytitle": "RECIP ENG ANTIDETONATION TANK VALVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe status of the ADI tank valve for the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG ANTIDETONATION TANK VALVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG BRAKE POWER:index",
      "displaytitle": "RECIP ENG BRAKE POWER:index(Set)",
      "description": "Set the simvar Brake power produced by the indexed engine: Units pounds",
      "messagetype": "action_RECIP ENG BRAKE POWER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG BRAKE POWER:index_get",
      "displaytitle": "RECIP ENG BRAKE POWER:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBrake power produced by the indexed engine: Units pounds",
      "messagetype": "action_RECIP ENG BRAKE POWER:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG COOLANT RESERVOIR PERCENT:index",
      "displaytitle": "RECIP ENG COOLANT RESERVOIR PERCENT:index(Set)",
      "description": "Set the simvar Percent coolant available for the indexed engine: Units percent",
      "messagetype": "action_RECIP ENG COOLANT RESERVOIR PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG COOLANT RESERVOIR PERCENT:index_get",
      "displaytitle": "RECIP ENG COOLANT RESERVOIR PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent coolant available for the indexed engine: Units percent",
      "messagetype": "action_RECIP ENG COOLANT RESERVOIR PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG COWL FLAP POSITION:index",
      "displaytitle": "RECIP ENG COWL FLAP POSITION:index(Set)",
      "description": "Set the simvar Percent cowl flap opened for the indexed engine: Units percent",
      "messagetype": "action_RECIP ENG COWL FLAP POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG COWL FLAP POSITION:index_get",
      "displaytitle": "RECIP ENG COWL FLAP POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent cowl flap opened for the indexed engine: Units percent",
      "messagetype": "action_RECIP ENG COWL FLAP POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG CYLINDER HEAD TEMPERATURE:index",
      "displaytitle": "RECIP ENG CYLINDER HEAD TEMPERATURE:index(Set)",
      "description": "Set the simvar Engine cylinder head temperature for the indexed engine: Units celsius",
      "messagetype": "action_RECIP ENG CYLINDER HEAD TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG CYLINDER HEAD TEMPERATURE:index_get",
      "displaytitle": "RECIP ENG CYLINDER HEAD TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerEngine cylinder head temperature for the indexed engine: Units celsius",
      "messagetype": "action_RECIP ENG CYLINDER HEAD TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG CYLINDER HEALTH:index_get",
      "displaytitle": "RECIP ENG CYLINDER HEALTH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex high 16 bits is engine number, low16 cylinder number, both indexed from 1: Units percent Over 100",
      "messagetype": "action_RECIP ENG CYLINDER HEALTH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG DETONATING:index_get",
      "displaytitle": "RECIP ENG DETONATING:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSet to 1 (TRUE) if the indexed engine is detonating: Units bool",
      "messagetype": "action_RECIP ENG DETONATING:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG EMERGENCY BOOST ACTIVE:index",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ACTIVE:index(Set)",
      "description": "Set the simvar Whether emergency boost is active (1, TRUE) or not (0, FALSE) for the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG EMERGENCY BOOST ACTIVE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG EMERGENCY BOOST ACTIVE:index_get",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ACTIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether emergency boost is active (1, TRUE) or not (0, FALSE) for the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG EMERGENCY BOOST ACTIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG EMERGENCY BOOST ELAPSED TIME:index",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ELAPSED TIME:index(Set)",
      "description": "Set the simvar  The elapsed time that emergency boost has been active on the indexed engine. The timer will start when boost is first activated: Units hours",
      "messagetype": "action_RECIP ENG EMERGENCY BOOST ELAPSED TIME:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG EMERGENCY BOOST ELAPSED TIME:index_get",
      "displaytitle": "RECIP ENG EMERGENCY BOOST ELAPSED TIME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger The elapsed time that emergency boost has been active on the indexed engine. The timer will start when boost is first activated: Units hours",
      "messagetype": "action_RECIP ENG EMERGENCY BOOST ELAPSED TIME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG ENGINE MASTER SWITCH:index_get",
      "displaytitle": "RECIP ENG ENGINE MASTER SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Engine Master switch is active on an indexed engine: Units bool",
      "messagetype": "action_RECIP ENG ENGINE MASTER SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG FUEL AVAILABLE:index",
      "displaytitle": "RECIP ENG FUEL AVAILABLE:index(Set)",
      "description": "Set the simvar True if fuel is available for the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG FUEL AVAILABLE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG FUEL AVAILABLE:index_get",
      "displaytitle": "RECIP ENG FUEL AVAILABLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if fuel is available for the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG FUEL AVAILABLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG FUEL FLOW:index",
      "displaytitle": "RECIP ENG FUEL FLOW:index(Set)",
      "description": "Set the simvar The indexed engine fuel flow: Units pounds per hour",
      "messagetype": "action_RECIP ENG FUEL FLOW:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG FUEL FLOW:index_get",
      "displaytitle": "RECIP ENG FUEL FLOW:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine fuel flow: Units pounds per hour",
      "messagetype": "action_RECIP ENG FUEL FLOW:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG FUEL NUMBER TANKS USED:index_get",
      "displaytitle": "RECIP ENG FUEL NUMBER TANKS USED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNumber of tanks currently being used by the indexed engine: Units number",
      "messagetype": "action_RECIP ENG FUEL NUMBER TANKS USED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG FUEL TANK SELECTOR:index_get",
      "displaytitle": "RECIP ENG FUEL TANK SELECTOR:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel tank selected for the indexed engine. See Fuel Tank Selection for a list of values: Units enum",
      "messagetype": "action_RECIP ENG FUEL TANK SELECTOR:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG FUEL TANKS USED:index",
      "displaytitle": "RECIP ENG FUEL TANKS USED:index(Set)",
      "description": "Set the simvar Fuel tanks used by the indexed engine, one or more bit flags: Units mask",
      "messagetype": "action_RECIP ENG FUEL TANKS USED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG FUEL TANKS USED:index_get",
      "displaytitle": "RECIP ENG FUEL TANKS USED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel tanks used by the indexed engine, one or more bit flags: Units mask",
      "messagetype": "action_RECIP ENG FUEL TANKS USED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG GLOW PLUG ACTIVE:index_get",
      "displaytitle": "RECIP ENG GLOW PLUG ACTIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Glow Plug is active on the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG GLOW PLUG ACTIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG LEFT MAGNETO:index",
      "displaytitle": "RECIP ENG LEFT MAGNETO:index(Set)",
      "description": "Set the simvar  Left magneto state for the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG LEFT MAGNETO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG LEFT MAGNETO:index_get",
      "displaytitle": "RECIP ENG LEFT MAGNETO:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger Left magneto state for the indexed engine: Units bool",
      "messagetype": "action_RECIP ENG LEFT MAGNETO:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG MANIFOLD PRESSURE:index",
      "displaytitle": "RECIP ENG MANIFOLD PRESSURE:index(Set)",
      "description": "Set the simvar The indexed engine manifold pressure: Units pounds",
      "messagetype": "action_RECIP ENG MANIFOLD PRESSURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG MANIFOLD PRESSURE:index_get",
      "displaytitle": "RECIP ENG MANIFOLD PRESSURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine manifold pressure: Units pounds",
      "messagetype": "action_RECIP ENG MANIFOLD PRESSURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG NITROUS TANK MAX QUANTITY:index_get",
      "displaytitle": "RECIP ENG NITROUS TANK MAX QUANTITY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe maximum quantity of nitrous permitted per indexed engine: Units gallons",
      "messagetype": "action_RECIP ENG NITROUS TANK MAX QUANTITY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG NITROUS TANK QUANTITY:index",
      "displaytitle": "RECIP ENG NITROUS TANK QUANTITY:index(Set)",
      "description": "Set the simvar The quantity of nitrous per indexed engine: Units gallons",
      "messagetype": "action_RECIP ENG NITROUS TANK QUANTITY:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG NITROUS TANK QUANTITY:index_get",
      "displaytitle": "RECIP ENG NITROUS TANK QUANTITY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe quantity of nitrous per indexed engine: Units gallons",
      "messagetype": "action_RECIP ENG NITROUS TANK QUANTITY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG NITROUS TANK VALVE",
      "displaytitle": "RECIP ENG NITROUS TANK VALVE(Set)",
      "description": "Set the simvar The statte of the nitrous tank valve for the indexed engine. Either 1 (TRUE) for open or 0 (FALSE) for closed: Units bool",
      "messagetype": "action_RECIP ENG NITROUS TANK VALVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RECIP ENG NITROUS TANK VALVE_get",
      "displaytitle": "RECIP ENG NITROUS TANK VALVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe statte of the nitrous tank valve for the indexed engine. Either 1 (TRUE) for open or 0 (FALSE) for closed: Units bool",
      "messagetype": "action_RECIP ENG NITROUS TANK VALVE_get",
      "parameters": {}
    },
    {
      "name": "RECIP ENG NUM CYLINDERS FAILED:index_get",
      "displaytitle": "RECIP ENG NUM CYLINDERS FAILED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe number of cylinders that have failed in the indexed engine: Units number",
      "messagetype": "action_RECIP ENG NUM CYLINDERS FAILED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG NUM CYLINDERS:index_get",
      "displaytitle": "RECIP ENG NUM CYLINDERS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe number of cylinders for the indexed engine: Units number",
      "messagetype": "action_RECIP ENG NUM CYLINDERS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG PRIMER:index",
      "displaytitle": "RECIP ENG PRIMER:index(Set)",
      "description": "Set the simvar The indexed engine primer state: Units bool",
      "messagetype": "action_RECIP ENG PRIMER:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG PRIMER:index_get",
      "displaytitle": "RECIP ENG PRIMER:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine primer state: Units bool",
      "messagetype": "action_RECIP ENG PRIMER:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG RADIATOR TEMPERATURE:index",
      "displaytitle": "RECIP ENG RADIATOR TEMPERATURE:index(Set)",
      "description": "Set the simvar The indexed engine radiator temperature: Units celsius",
      "messagetype": "action_RECIP ENG RADIATOR TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG RADIATOR TEMPERATURE:index_get",
      "displaytitle": "RECIP ENG RADIATOR TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine radiator temperature: Units celsius",
      "messagetype": "action_RECIP ENG RADIATOR TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG RIGHT MAGNETO:index",
      "displaytitle": "RECIP ENG RIGHT MAGNETO:index(Set)",
      "description": "Set the simvar  The indexed engine right magneto state: Units bool",
      "messagetype": "action_RECIP ENG RIGHT MAGNETO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG RIGHT MAGNETO:index_get",
      "displaytitle": "RECIP ENG RIGHT MAGNETO:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger The indexed engine right magneto state: Units bool",
      "messagetype": "action_RECIP ENG RIGHT MAGNETO:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG STARTER TORQUE:index",
      "displaytitle": "RECIP ENG STARTER TORQUE:index(Set)",
      "description": "Set the simvar Torque produced by the indexed engine: Units foot pound",
      "messagetype": "action_RECIP ENG STARTER TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG STARTER TORQUE:index_get",
      "displaytitle": "RECIP ENG STARTER TORQUE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTorque produced by the indexed engine: Units foot pound",
      "messagetype": "action_RECIP ENG STARTER TORQUE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG SUPERCHARGER ACTIVE GEAR:index_get",
      "displaytitle": "RECIP ENG SUPERCHARGER ACTIVE GEAR:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns which of the supercharger gears is engaged for the indexed engine: Units number",
      "messagetype": "action_RECIP ENG SUPERCHARGER ACTIVE GEAR:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG TURBINE INLET TEMPERATURE:index",
      "displaytitle": "RECIP ENG TURBINE INLET TEMPERATURE:index(Set)",
      "description": "Set the simvar The indexed engine turbine inlet temperature: Units celsius",
      "messagetype": "action_RECIP ENG TURBINE INLET TEMPERATURE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG TURBINE INLET TEMPERATURE:index_get",
      "displaytitle": "RECIP ENG TURBINE INLET TEMPERATURE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine turbine inlet temperature: Units celsius",
      "messagetype": "action_RECIP ENG TURBINE INLET TEMPERATURE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG TURBOCHARGER FAILED:index",
      "displaytitle": "RECIP ENG TURBOCHARGER FAILED:index(Set)",
      "description": "Set the simvar The indexed engine turbo failed state: Units bool",
      "messagetype": "action_RECIP ENG TURBOCHARGER FAILED:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG TURBOCHARGER FAILED:index_get",
      "displaytitle": "RECIP ENG TURBOCHARGER FAILED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine turbo failed state: Units bool",
      "messagetype": "action_RECIP ENG TURBOCHARGER FAILED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP ENG WASTEGATE POSITION:index",
      "displaytitle": "RECIP ENG WASTEGATE POSITION:index(Set)",
      "description": "Set the simvar When the engine.cfg parameter turbocharged is TRUE, this SimVar will return the percentage that the turbo waste gate is closed for the indexed engine. If the turbocharged variable is FALSE and the manifold_pressure_regulator parameter is TRUE, then this will return the percentage that the manifold pressure regulator is closed for the indexed engine: Units percent",
      "messagetype": "action_RECIP ENG WASTEGATE POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP ENG WASTEGATE POSITION:index_get",
      "displaytitle": "RECIP ENG WASTEGATE POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhen the engine.cfg parameter turbocharged is TRUE, this SimVar will return the percentage that the turbo waste gate is closed for the indexed engine. If the turbocharged variable is FALSE and the manifold_pressure_regulator parameter is TRUE, then this will return the percentage that the manifold pressure regulator is closed for the indexed engine: Units percent",
      "messagetype": "action_RECIP ENG WASTEGATE POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "RECIP MAX CHT_get",
      "displaytitle": "RECIP MAX CHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will return the cylinder head temperature value set by the cht_heating_constant parameter in the engine.cfg file: Units rankine",
      "messagetype": "action_RECIP MAX CHT_get",
      "parameters": {}
    },
    {
      "name": "RECIP MIXTURE RATIO:index",
      "displaytitle": "RECIP MIXTURE RATIO:index(Set)",
      "description": "Set the simvar Fuel / Air mixture ratio for the indexed engine: Units ratio",
      "messagetype": "action_RECIP MIXTURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "RECIP MIXTURE RATIO:index_get",
      "displaytitle": "RECIP MIXTURE RATIO:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel / Air mixture ratio for the indexed engine: Units ratio",
      "messagetype": "action_RECIP MIXTURE RATIO:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "REJECTED TAKEOFF BRAKES ACTIVE_get",
      "displaytitle": "REJECTED TAKEOFF BRAKES ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the rejected takeoff brakes are currently active.: Units bool",
      "messagetype": "action_REJECTED TAKEOFF BRAKES ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "RELATIVE WIND VELOCITY BODY X_get",
      "displaytitle": "RELATIVE WIND VELOCITY BODY X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLateral (X axis) speed relative to wind: Units feet",
      "messagetype": "action_RELATIVE WIND VELOCITY BODY X_get",
      "parameters": {}
    },
    {
      "name": "RELATIVE WIND VELOCITY BODY Y_get",
      "displaytitle": "RELATIVE WIND VELOCITY BODY Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVertical (Y axis) speed relative to wind: Units feet",
      "messagetype": "action_RELATIVE WIND VELOCITY BODY Y_get",
      "parameters": {}
    },
    {
      "name": "RELATIVE WIND VELOCITY BODY Z_get",
      "displaytitle": "RELATIVE WIND VELOCITY BODY Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLongitudinal (Z axis) speed relative to wind: Units feet",
      "messagetype": "action_RELATIVE WIND VELOCITY BODY Z_get",
      "parameters": {}
    },
    {
      "name": "RETRACT FLOAT SWITCH_get",
      "displaytitle": "RETRACT FLOAT SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if retract float switch on: Units bool",
      "messagetype": "action_RETRACT FLOAT SWITCH_get",
      "parameters": {}
    },
    {
      "name": "RETRACT LEFT FLOAT EXTENDED_get",
      "displaytitle": "RETRACT LEFT FLOAT EXTENDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIf aircraft has retractable floats: Units percent",
      "messagetype": "action_RETRACT LEFT FLOAT EXTENDED_get",
      "parameters": {}
    },
    {
      "name": "RETRACT RIGHT FLOAT EXTENDED_get",
      "displaytitle": "RETRACT RIGHT FLOAT EXTENDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIf aircraft has retractable floats: Units percent",
      "messagetype": "action_RETRACT RIGHT FLOAT EXTENDED_get",
      "parameters": {}
    },
    {
      "name": "RIGHT WHEEL ROTATION ANGLE_get",
      "displaytitle": "RIGHT WHEEL ROTATION ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRight wheel rotation angle (rotation around the axis for the wheel): Units radians",
      "messagetype": "action_RIGHT WHEEL ROTATION ANGLE_get",
      "parameters": {}
    },
    {
      "name": "RIGHT WHEEL RPM_get",
      "displaytitle": "RIGHT WHEEL RPM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRight landing gear rpm.: Units RPM",
      "messagetype": "action_RIGHT WHEEL RPM_get",
      "parameters": {}
    },
    {
      "name": "ROTATION ACCELERATION BODY X",
      "displaytitle": "ROTATION ACCELERATION BODY X(Set)",
      "description": "Set the simvar Rotation acceleration relative to aircraft X axis: Units radians per second squared",
      "messagetype": "action_ROTATION ACCELERATION BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION ACCELERATION BODY X_get",
      "displaytitle": "ROTATION ACCELERATION BODY X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotation acceleration relative to aircraft X axis: Units radians per second squared",
      "messagetype": "action_ROTATION ACCELERATION BODY X_get",
      "parameters": {}
    },
    {
      "name": "ROTATION ACCELERATION BODY Y",
      "displaytitle": "ROTATION ACCELERATION BODY Y(Set)",
      "description": "Set the simvar Rotation acceleration relative to aircraft Y axis: Units radians per second squared",
      "messagetype": "action_ROTATION ACCELERATION BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION ACCELERATION BODY Y_get",
      "displaytitle": "ROTATION ACCELERATION BODY Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotation acceleration relative to aircraft Y axis: Units radians per second squared",
      "messagetype": "action_ROTATION ACCELERATION BODY Y_get",
      "parameters": {}
    },
    {
      "name": "ROTATION ACCELERATION BODY Z",
      "displaytitle": "ROTATION ACCELERATION BODY Z(Set)",
      "description": "Set the simvar Rotation acceleration relative to aircraft Z axis: Units radians per second squared",
      "messagetype": "action_ROTATION ACCELERATION BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION ACCELERATION BODY Z_get",
      "displaytitle": "ROTATION ACCELERATION BODY Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotation acceleration relative to aircraft Z axis: Units radians per second squared",
      "messagetype": "action_ROTATION ACCELERATION BODY Z_get",
      "parameters": {}
    },
    {
      "name": "ROTATION VELOCITY BODY X",
      "displaytitle": "ROTATION VELOCITY BODY X(Set)",
      "description": "Set the simvar Rotation velocity relative to aircraft X axis: Units feet",
      "messagetype": "action_ROTATION VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION VELOCITY BODY X_get",
      "displaytitle": "ROTATION VELOCITY BODY X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotation velocity relative to aircraft X axis: Units feet",
      "messagetype": "action_ROTATION VELOCITY BODY X_get",
      "parameters": {}
    },
    {
      "name": "ROTATION VELOCITY BODY Y",
      "displaytitle": "ROTATION VELOCITY BODY Y(Set)",
      "description": "Set the simvar Rotation velocity relative to aircraft Y axis: Units feet",
      "messagetype": "action_ROTATION VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION VELOCITY BODY Y_get",
      "displaytitle": "ROTATION VELOCITY BODY Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotation velocity relative to aircraft Y axis: Units feet",
      "messagetype": "action_ROTATION VELOCITY BODY Y_get",
      "parameters": {}
    },
    {
      "name": "ROTATION VELOCITY BODY Z",
      "displaytitle": "ROTATION VELOCITY BODY Z(Set)",
      "description": "Set the simvar Rotation velocity relative to aircraft Z axis: Units feet",
      "messagetype": "action_ROTATION VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "ROTATION VELOCITY BODY Z_get",
      "displaytitle": "ROTATION VELOCITY BODY Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotation velocity relative to aircraft Z axis: Units feet",
      "messagetype": "action_ROTATION VELOCITY BODY Z_get",
      "parameters": {}
    },
    {
      "name": "ROTOR BRAKE ACTIVE_get",
      "displaytitle": "ROTOR BRAKE ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the rotor brake is active (1, TRUE) or not (0, FALSE).: Units bool",
      "messagetype": "action_ROTOR BRAKE ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "ROTOR BRAKE HANDLE POS_get",
      "displaytitle": "ROTOR BRAKE HANDLE POS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe percentage actuated of the rotor brake handle.: Units percent Over 100",
      "messagetype": "action_ROTOR BRAKE HANDLE POS_get",
      "parameters": {}
    },
    {
      "name": "ROTOR CHIP DETECTED_get",
      "displaytitle": "ROTOR CHIP DETECTED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the rotor chip is detected (1,TRUE) or not (0, FALSE).: Units bool",
      "messagetype": "action_ROTOR CHIP DETECTED_get",
      "parameters": {}
    },
    {
      "name": "ROTOR CLUTCH ACTIVE_get",
      "displaytitle": "ROTOR CLUTCH ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the rotor clutch is active (1, TRUE) or not (0, FALSE).: Units bool",
      "messagetype": "action_ROTOR CLUTCH ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "ROTOR CLUTCH SWITCH POS_get",
      "displaytitle": "ROTOR CLUTCH SWITCH POS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe rotor clutch switch position, either on (1 TRUE) or off (0, FALSE).: Units bool",
      "messagetype": "action_ROTOR CLUTCH SWITCH POS_get",
      "parameters": {}
    },
    {
      "name": "ROTOR COLLECTIVE BLADE PITCH PCT_get",
      "displaytitle": "ROTOR COLLECTIVE BLADE PITCH PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe rotor collective blade pitch.: Units percent Over 100",
      "messagetype": "action_ROTOR COLLECTIVE BLADE PITCH PCT_get",
      "parameters": {}
    },
    {
      "name": "ROTOR CYCLIC BLADE MAX PITCH POSITION_get",
      "displaytitle": "ROTOR CYCLIC BLADE MAX PITCH POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe position (angle) at which blade has the maximum cyclic pitch.: Units degrees",
      "messagetype": "action_ROTOR CYCLIC BLADE MAX PITCH POSITION_get",
      "parameters": {}
    },
    {
      "name": "ROTOR CYCLIC BLADE PITCH PCT_get",
      "displaytitle": "ROTOR CYCLIC BLADE PITCH PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe rotor cyclic blade (maximum) pitch.: Units percent Over 100",
      "messagetype": "action_ROTOR CYCLIC BLADE PITCH PCT_get",
      "parameters": {}
    },
    {
      "name": "ROTOR GOV ACTIVE_get",
      "displaytitle": "ROTOR GOV ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether the rotor governor is active (1, TRUE) or not (0, FALSE).: Units bool",
      "messagetype": "action_ROTOR GOV ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "ROTOR GOV SWITCH POS_get",
      "displaytitle": "ROTOR GOV SWITCH POS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe rotor governor switch position, either on (1 TRUE) or off (0, FALSE).: Units bool",
      "messagetype": "action_ROTOR GOV SWITCH POS_get",
      "parameters": {}
    },
    {
      "name": "ROTOR LATERAL TRIM PCT_get",
      "displaytitle": "ROTOR LATERAL TRIM PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe rotor lateral trim percentage.: Units percent Over 100",
      "messagetype": "action_ROTOR LATERAL TRIM PCT_get",
      "parameters": {}
    },
    {
      "name": "ROTOR LONGITUDINAL TRIM PCT_get",
      "displaytitle": "ROTOR LONGITUDINAL TRIM PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe rotor longitudinal trim percentage.: Units percent Over 100",
      "messagetype": "action_ROTOR LONGITUDINAL TRIM PCT_get",
      "parameters": {}
    },
    {
      "name": "ROTOR ROTATION ANGLE:index_get",
      "displaytitle": "ROTOR ROTATION ANGLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRotor rotation angle of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units radians",
      "messagetype": "action_ROTOR ROTATION ANGLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ROTOR RPM PCT:index_get",
      "displaytitle": "ROTOR RPM PCT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent max rated rpm of the given rotor index. Index should be specified to 1 for main rotor and 2 for tail rotor.: Units percent Over 100",
      "messagetype": "action_ROTOR RPM PCT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ROTOR RPM:index_get",
      "displaytitle": "ROTOR RPM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed rotor RPM.: Units RPM",
      "messagetype": "action_ROTOR RPM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "ROTOR TEMPERATURE_get",
      "displaytitle": "ROTOR TEMPERATURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe main rotor transmission temperature.: Units rankine",
      "messagetype": "action_ROTOR TEMPERATURE_get",
      "parameters": {}
    },
    {
      "name": "RUDDER DEFLECTION_get",
      "displaytitle": "RUDDER DEFLECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle deflection: Units radians",
      "messagetype": "action_RUDDER DEFLECTION_get",
      "parameters": {}
    },
    {
      "name": "RUDDER DEFLECTION PCT_get",
      "displaytitle": "RUDDER DEFLECTION PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent deflection: Units percent Over 100",
      "messagetype": "action_RUDDER DEFLECTION PCT_get",
      "parameters": {}
    },
    {
      "name": "RUDDER PEDAL INDICATOR_get",
      "displaytitle": "RUDDER PEDAL INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRudder pedal position: Units position",
      "messagetype": "action_RUDDER PEDAL INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "RUDDER PEDAL POSITION",
      "displaytitle": "RUDDER PEDAL POSITION(Set)",
      "description": "Set the simvar Percent rudder pedal deflection (for animation): Units position",
      "messagetype": "action_RUDDER PEDAL POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER PEDAL POSITION_get",
      "displaytitle": "RUDDER PEDAL POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent rudder pedal deflection (for animation): Units position",
      "messagetype": "action_RUDDER PEDAL POSITION_get",
      "parameters": {}
    },
    {
      "name": "RUDDER POSITION",
      "displaytitle": "RUDDER POSITION(Set)",
      "description": "Set the simvar Percent rudder input deflection: Units position",
      "messagetype": "action_RUDDER POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER POSITION_get",
      "displaytitle": "RUDDER POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent rudder input deflection: Units position",
      "messagetype": "action_RUDDER POSITION_get",
      "parameters": {}
    },
    {
      "name": "RUDDER TRIM_get",
      "displaytitle": "RUDDER TRIM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle deflection: Units radians",
      "messagetype": "action_RUDDER TRIM_get",
      "parameters": {}
    },
    {
      "name": "RUDDER TRIM DISABLED_get",
      "displaytitle": "RUDDER TRIM DISABLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the Rudder Trim has been disabled: Units bool",
      "messagetype": "action_RUDDER TRIM DISABLED_get",
      "parameters": {}
    },
    {
      "name": "RUDDER TRIM PCT",
      "displaytitle": "RUDDER TRIM PCT(Set)",
      "description": "Set the simvar The trim position of the rudder. Zero is no trim: Units percent Over 100",
      "messagetype": "action_RUDDER TRIM PCT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "RUDDER TRIM PCT_get",
      "displaytitle": "RUDDER TRIM PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe trim position of the rudder. Zero is no trim: Units percent Over 100",
      "messagetype": "action_RUDDER TRIM PCT_get",
      "parameters": {}
    },
    {
      "name": "SEA LEVEL PRESSURE_get",
      "displaytitle": "SEA LEVEL PRESSURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBarometric pressure at sea level.: Units Millibars",
      "messagetype": "action_SEA LEVEL PRESSURE_get",
      "parameters": {}
    },
    {
      "name": "SELECTED DME_get",
      "displaytitle": "SELECTED DME(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSelected DME.: Units number",
      "messagetype": "action_SELECTED DME_get",
      "parameters": {}
    },
    {
      "name": "SEMIBODY LOADFACTOR Y_get",
      "displaytitle": "SEMIBODY LOADFACTOR Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAcceleration along the axis Y divided by the gravity constant g (usually around 9.81m.s²): Units number",
      "messagetype": "action_SEMIBODY LOADFACTOR Y_get",
      "parameters": {}
    },
    {
      "name": "SEMIBODY LOADFACTOR YDOT_get",
      "displaytitle": "SEMIBODY LOADFACTOR YDOT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDerivative of SEMIBODY LOADFACTOR Y in relation to time.: Units number",
      "messagetype": "action_SEMIBODY LOADFACTOR YDOT_get",
      "parameters": {}
    },
    {
      "name": "SHUTOFF VALVE PULLED_get",
      "displaytitle": "SHUTOFF VALVE PULLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis checks if the shutoff valve to the engine has been pulled (true) or not (false). When pulled piston engines will be blocked from getting any fuel: Units bool",
      "messagetype": "action_SHUTOFF VALVE PULLED_get",
      "parameters": {}
    },
    {
      "name": "SIGMA SQRT_get",
      "displaytitle": "SIGMA SQRT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSigma sqrt: Units number",
      "messagetype": "action_SIGMA SQRT_get",
      "parameters": {}
    },
    {
      "name": "SIM DISABLED",
      "displaytitle": "SIM DISABLED(Set)",
      "description": "Set the simvar Is sim disabled.: Units bool",
      "messagetype": "action_SIM DISABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SIM DISABLED_get",
      "displaytitle": "SIM DISABLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs sim disabled.: Units bool",
      "messagetype": "action_SIM DISABLED_get",
      "parameters": {}
    },
    {
      "name": "SIM ON GROUND_get",
      "displaytitle": "SIM ON GROUND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOn ground flag.: Units bool",
      "messagetype": "action_SIM ON GROUND_get",
      "parameters": {}
    },
    {
      "name": "SIM SHOULD SET ON GROUND",
      "displaytitle": "SIM SHOULD SET ON GROUND(Set)",
      "description": "Set the simvar : Units bool",
      "messagetype": "action_SIM SHOULD SET ON GROUND",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SIM SHOULD SET ON GROUND_get",
      "displaytitle": "SIM SHOULD SET ON GROUND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger: Units bool",
      "messagetype": "action_SIM SHOULD SET ON GROUND_get",
      "parameters": {}
    },
    {
      "name": "SIMULATED RADIUS_get",
      "displaytitle": "SIMULATED RADIUS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSimulated radius: Units feet",
      "messagetype": "action_SIMULATED RADIUS_get",
      "parameters": {}
    },
    {
      "name": "SLING CABLE BROKEN:index_get",
      "displaytitle": "SLING CABLE BROKEN:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTHis will be True (1) if the indexed cable is broken, or False (0) otherwise.: Units bool",
      "messagetype": "action_SLING CABLE BROKEN:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "SLING CABLE EXTENDED LENGTH:index",
      "displaytitle": "SLING CABLE EXTENDED LENGTH:index(Set)",
      "description": "Set the simvar The length of the indexed cable extending from the aircraft.: Units feet",
      "messagetype": "action_SLING CABLE EXTENDED LENGTH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SLING CABLE EXTENDED LENGTH:index_get",
      "displaytitle": "SLING CABLE EXTENDED LENGTH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe length of the indexed cable extending from the aircraft.: Units feet",
      "messagetype": "action_SLING CABLE EXTENDED LENGTH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "SLING HOIST PERCENT DEPLOYED:index_get",
      "displaytitle": "SLING HOIST PERCENT DEPLOYED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe percentage of the full length of the sling cable deployed.: Units percent Over 100",
      "messagetype": "action_SLING HOIST PERCENT DEPLOYED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "SLING HOIST SWITCH:index",
      "displaytitle": "SLING HOIST SWITCH:index(Set)",
      "description": "Set the simvar This will be True (1) if the hoist is enabled or False (0) otherwise.: Units bool",
      "messagetype": "action_SLING HOIST SWITCH:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SLING HOIST SWITCH:index_get",
      "displaytitle": "SLING HOIST SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be True (1) if the hoist is enabled or False (0) otherwise.: Units bool",
      "messagetype": "action_SLING HOIST SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "SLING HOOK IN PICKUP MODE_get",
      "displaytitle": "SLING HOOK IN PICKUP MODE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis will be True (1) if the hook is in pickup mode or False (0) otherwise. When True, the hook will be capable of picking up another object.: Units bool",
      "messagetype": "action_SLING HOOK IN PICKUP MODE_get",
      "parameters": {}
    },
    {
      "name": "SLOPE TO ATC RUNWAY_get",
      "displaytitle": "SLOPE TO ATC RUNWAY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe slope between the plane and the expected landing position of the runway. Returns 0 if no runway is assigned: Units radians",
      "messagetype": "action_SLOPE TO ATC RUNWAY_get",
      "parameters": {}
    },
    {
      "name": "SMART CAMERA ACTIVE",
      "displaytitle": "SMART CAMERA ACTIVE(Set)",
      "description": "Set the simvar Sets/gets the whether the smart camera is active or not.: Units bool",
      "messagetype": "action_SMART CAMERA ACTIVE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SMART CAMERA ACTIVE_get",
      "displaytitle": "SMART CAMERA ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSets/gets the whether the smart camera is active or not.: Units bool",
      "messagetype": "action_SMART CAMERA ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "SMART CAMERA INFO:index",
      "displaytitle": "SMART CAMERA INFO:index(Set)",
      "description": "Set the simvar Gets information on the smartcam system. The index sets what kind of information will be returned (or set).: Units number",
      "messagetype": "action_SMART CAMERA INFO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SMART CAMERA INFO:index_get",
      "displaytitle": "SMART CAMERA INFO:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerGets information on the smartcam system. The index sets what kind of information will be returned (or set).: Units number",
      "messagetype": "action_SMART CAMERA INFO:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "SMART CAMERA LIST DESCRIPTION:index_get",
      "displaytitle": "SMART CAMERA LIST DESCRIPTION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis returns a localized string that represents the smartcam target specified by the given index. Indices count from 0 so index 0 is the first target in the list. \tString: Units null",
      "messagetype": "action_SMART CAMERA LIST DESCRIPTION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "SMART CAMERA LIST:index",
      "displaytitle": "SMART CAMERA LIST:index(Set)",
      "description": "Set the simvar Retrieves the type of target for the indexed position in the smartcam list, counting from 0 (so index 0 is the first target in the list).: Units enum",
      "messagetype": "action_SMART CAMERA LIST:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "SMART CAMERA LIST:index_get",
      "displaytitle": "SMART CAMERA LIST:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRetrieves the type of target for the indexed position in the smartcam list, counting from 0 (so index 0 is the first target in the list).: Units enum",
      "messagetype": "action_SMART CAMERA LIST:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "SMOKE ENABLE",
      "displaytitle": "SMOKE ENABLE(Set)",
      "description": "Set the simvar Set to True to activate the smoke system, if one is available. Please see the notes for SMOKESYSTEM AVAILABLE for more information.: Units bool",
      "messagetype": "action_SMOKE ENABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SMOKE ENABLE_get",
      "displaytitle": "SMOKE ENABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSet to True to activate the smoke system, if one is available. Please see the notes for SMOKESYSTEM AVAILABLE for more information.: Units bool",
      "messagetype": "action_SMOKE ENABLE_get",
      "parameters": {}
    },
    {
      "name": "SMOKESYSTEM AVAILABLE_get",
      "displaytitle": "SMOKESYSTEM AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSmoke system available.: Units bool",
      "messagetype": "action_SMOKESYSTEM AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "SPEAKER ACTIVE_get",
      "displaytitle": "SPEAKER ACTIVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the speaker is active.: Units bool",
      "messagetype": "action_SPEAKER ACTIVE_get",
      "parameters": {}
    },
    {
      "name": "SPOILER AVAILABLE_get",
      "displaytitle": "SPOILER AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if spoiler system available: Units bool",
      "messagetype": "action_SPOILER AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "SPOILERS ARMED_get",
      "displaytitle": "SPOILERS ARMED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerChecks if autospoilers are armed (true) or not (false): Units bool",
      "messagetype": "action_SPOILERS ARMED_get",
      "parameters": {}
    },
    {
      "name": "SPOILERS HANDLE POSITION_get",
      "displaytitle": "SPOILERS HANDLE POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSpoiler handle position: Units percent Over 100",
      "messagetype": "action_SPOILERS HANDLE POSITION_get",
      "parameters": {}
    },
    {
      "name": "SPOILERS LEFT POSITION_get",
      "displaytitle": "SPOILERS LEFT POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent left spoiler deflected: Units percent Over 100",
      "messagetype": "action_SPOILERS LEFT POSITION_get",
      "parameters": {}
    },
    {
      "name": "SPOILERS RIGHT POSITION_get",
      "displaytitle": "SPOILERS RIGHT POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent right spoiler deflected: Units percent Over 100",
      "messagetype": "action_SPOILERS RIGHT POSITION_get",
      "parameters": {}
    },
    {
      "name": "STALL ALPHA_get",
      "displaytitle": "STALL ALPHA(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe angle of attack which produces the maximum lift coefficient before entering into stall conditions.: Units radians",
      "messagetype": "action_STALL ALPHA_get",
      "parameters": {}
    },
    {
      "name": "STALL HORN AVAILABLE_get",
      "displaytitle": "STALL HORN AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if stall alarm available.: Units bool",
      "messagetype": "action_STALL HORN AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "STALL PROTECTION OFF LIMIT_get",
      "displaytitle": "STALL PROTECTION OFF LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAlpha below which the Stall Protection can be disabled. See the [STALL PROTECTION] section for more information.: Units radians",
      "messagetype": "action_STALL PROTECTION OFF LIMIT_get",
      "parameters": {}
    },
    {
      "name": "STALL PROTECTION ON GOAL_get",
      "displaytitle": "STALL PROTECTION ON GOAL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe alpha that the Stall Protection will attempt to reach when triggered. See the [STALL PROTECTION] section for more information.: Units radians",
      "messagetype": "action_STALL PROTECTION ON GOAL_get",
      "parameters": {}
    },
    {
      "name": "STALL PROTECTION ON LIMIT_get",
      "displaytitle": "STALL PROTECTION ON LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAlpha above which the Stall Protection timer starts. See the [STALL PROTECTION] section for more information.: Units radians",
      "messagetype": "action_STALL PROTECTION ON LIMIT_get",
      "parameters": {}
    },
    {
      "name": "STALL WARNING_get",
      "displaytitle": "STALL WARNING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerStall warning state.: Units bool",
      "messagetype": "action_STALL WARNING_get",
      "parameters": {}
    },
    {
      "name": "STANDARD ATM TEMPERATURE_get",
      "displaytitle": "STANDARD ATM TEMPERATURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOutside temperature on the standard ATM scale: Units rankine",
      "messagetype": "action_STANDARD ATM TEMPERATURE_get",
      "parameters": {}
    },
    {
      "name": "STATIC CG TO GROUND_get",
      "displaytitle": "STATIC CG TO GROUND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerStatic CG position with reference to the ground: Units feet",
      "messagetype": "action_STATIC CG TO GROUND_get",
      "parameters": {}
    },
    {
      "name": "STATIC PITCH_get",
      "displaytitle": "STATIC PITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe angle at which static pitch stability is achieved.: Units radians",
      "messagetype": "action_STATIC PITCH_get",
      "parameters": {}
    },
    {
      "name": "STEER INPUT CONTROL_get",
      "displaytitle": "STEER INPUT CONTROL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPosition of steering tiller: Units percent Over 100",
      "messagetype": "action_STEER INPUT CONTROL_get",
      "parameters": {}
    },
    {
      "name": "STROBES AVAILABLE_get",
      "displaytitle": "STROBES AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if strobe lights are available.: Units bool",
      "messagetype": "action_STROBES AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "STRUCT AMBIENT WIND_get",
      "displaytitle": "STRUCT AMBIENT WIND(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerX (latitude), Y (vertical) and Z (longitude) components of the wind.: Units feet per second",
      "messagetype": "action_STRUCT AMBIENT WIND_get",
      "parameters": {}
    },
    {
      "name": "STRUCTURAL DEICE SWITCH_get",
      "displaytitle": "STRUCTURAL DEICE SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the aircraft structure deice switch is on.: Units bool",
      "messagetype": "action_STRUCTURAL DEICE SWITCH_get",
      "parameters": {}
    },
    {
      "name": "STRUCTURAL ICE PCT_get",
      "displaytitle": "STRUCTURAL ICE PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAmount of ice on aircraft structure. 100 is fully iced: Units percent Over 100",
      "messagetype": "action_STRUCTURAL ICE PCT_get",
      "parameters": {}
    },
    {
      "name": "SUCTION PRESSURE",
      "displaytitle": "SUCTION PRESSURE(Set)",
      "description": "Set the simvar Vacuum system suction pressure.: Units Inches of Mercury",
      "messagetype": "action_SUCTION PRESSURE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "SUCTION PRESSURE_get",
      "displaytitle": "SUCTION PRESSURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVacuum system suction pressure.: Units Inches of Mercury",
      "messagetype": "action_SUCTION PRESSURE_get",
      "parameters": {}
    },
    {
      "name": "SURFACE CONDITION_get",
      "displaytitle": "SURFACE CONDITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe state of the surface directly under the aircraft: Units enum",
      "messagetype": "action_SURFACE CONDITION_get",
      "parameters": {}
    },
    {
      "name": "SURFACE INFO VALID_get",
      "displaytitle": "SURFACE INFO VALID(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue indicates that the SURFACE CONDITION return value is meaningful: Units bool",
      "messagetype": "action_SURFACE INFO VALID_get",
      "parameters": {}
    },
    {
      "name": "SURFACE RELATIVE GROUND SPEED_get",
      "displaytitle": "SURFACE RELATIVE GROUND SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe speed of the aircraft relative to the speed of the first surface directly underneath it. Use this to retrieve, for example, an aircraft's taxiing speed while it is moving on a moving carrier. It also applies to airborne aircraft, for example when a helicopter is successfully hovering above a moving ship, this value should be zero. The returned value will be the same as GROUND VELOCITY if the first surface beneath it is not moving: Units feet per second",
      "messagetype": "action_SURFACE RELATIVE GROUND SPEED_get",
      "parameters": {}
    },
    {
      "name": "SURFACE TYPE_get",
      "displaytitle": "SURFACE TYPE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe type of surface under the aircraft: Units enum",
      "messagetype": "action_SURFACE TYPE_get",
      "parameters": {}
    },
    {
      "name": "TACAN ACTIVE CHANNEL:index_get",
      "displaytitle": "TACAN ACTIVE CHANNEL:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe active channel used by the indexed Tacan receiver on the aircraft, from 1 to 127.: Units number",
      "messagetype": "action_TACAN ACTIVE CHANNEL:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN ACTIVE MODE:index_get",
      "displaytitle": "TACAN ACTIVE MODE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe active mode used by the indexed Tacan receiver on the aircraft, where 0 = X and 1 = Y.: Units bool",
      "messagetype": "action_TACAN ACTIVE MODE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN AVAILABLE:index_get",
      "displaytitle": "TACAN AVAILABLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWill be TRUE (1) if NAV1, NAV2, NAV3 or NAV4 can receive Tacan (depending on the index - 1, 2, 3, or 4), or FALSE (0) otherwise.: Units bool",
      "messagetype": "action_TACAN AVAILABLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN DRIVES NAV1:index_get",
      "displaytitle": "TACAN DRIVES NAV1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTells whether the Tacan is driving the Nav 1 indicator (TRUE, 1) or not (FALSE, 0), for autopilot purposes.: Units bool",
      "messagetype": "action_TACAN DRIVES NAV1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN OBS:index_get",
      "displaytitle": "TACAN OBS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe Tacan OBS setting, in degrees.: Units degrees",
      "messagetype": "action_TACAN OBS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN STANDBY CHANNEL:index_get",
      "displaytitle": "TACAN STANDBY CHANNEL:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe standby channel used by the indexed Tacan receiver on the aircraft, from 1 to 127.: Units number",
      "messagetype": "action_TACAN STANDBY CHANNEL:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN STANDBY MODE:index_get",
      "displaytitle": "TACAN STANDBY MODE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndicates the indexed Tacan receiver standby mode, where 0 = X and 1 = Y.: Units bool",
      "messagetype": "action_TACAN STANDBY MODE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN STATION CDI:index_get",
      "displaytitle": "TACAN STATION CDI:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe CDI needle deflection amount(course deviation) to the station. Can be +/- 127.: Units number",
      "messagetype": "action_TACAN STATION CDI:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN STATION DISTANCE:index_get",
      "displaytitle": "TACAN STATION DISTANCE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe distance between the Tacan station position and the aircraft position. The index value refers to the Tacan receiver connected to the station (1 or 2).: Units meters",
      "messagetype": "action_TACAN STATION DISTANCE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN STATION IDENT:index_get",
      "displaytitle": "TACAN STATION IDENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe tuned station identifier for the indexed Tacan.: Units null",
      "messagetype": "action_TACAN STATION IDENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN STATION RADIAL ERROR:index_get",
      "displaytitle": "TACAN STATION RADIAL ERROR:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerDifference between the current radial and OBS tuned radial, in degrees.: Units degrees",
      "messagetype": "action_TACAN STATION RADIAL ERROR:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN STATION RADIAL:index_get",
      "displaytitle": "TACAN STATION RADIAL:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe radial between the Tacan station and the aircraft.: Units degrees",
      "messagetype": "action_TACAN STATION RADIAL:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN STATION TOFROM:index_get",
      "displaytitle": "TACAN STATION TOFROM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns whether the indexed Tacan is going to or from the current radial (or is off).: Units enum",
      "messagetype": "action_TACAN STATION TOFROM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TACAN VOLUME:index_get",
      "displaytitle": "TACAN VOLUME:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe volume value of the indexed Tacan receiver on the aircraft.: Units percent Over 100",
      "messagetype": "action_TACAN VOLUME:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TAIL ROTOR BLADE PITCH PCT_get",
      "displaytitle": "TAIL ROTOR BLADE PITCH PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe pitch position of the tailrotor blades.: Units percent Over 100",
      "messagetype": "action_TAIL ROTOR BLADE PITCH PCT_get",
      "parameters": {}
    },
    {
      "name": "TAIL ROTOR PEDAL POSITION_get",
      "displaytitle": "TAIL ROTOR PEDAL POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent tail rotor pedal deflection.: Units percent Over 100",
      "messagetype": "action_TAIL ROTOR PEDAL POSITION_get",
      "parameters": {}
    },
    {
      "name": "TAILHOOK HANDLE_get",
      "displaytitle": "TAILHOOK HANDLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the tailhook handle is engaged.: Units bool",
      "messagetype": "action_TAILHOOK HANDLE_get",
      "parameters": {}
    },
    {
      "name": "TAILHOOK POSITION",
      "displaytitle": "TAILHOOK POSITION(Set)",
      "description": "Set the simvar Percent tail hook extended.: Units percent Over 100",
      "messagetype": "action_TAILHOOK POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TAILHOOK POSITION_get",
      "displaytitle": "TAILHOOK POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent tail hook extended.: Units percent Over 100",
      "messagetype": "action_TAILHOOK POSITION_get",
      "parameters": {}
    },
    {
      "name": "TAILWHEEL LOCK ON_get",
      "displaytitle": "TAILWHEEL LOCK ON(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if tailwheel lock applied. This can be set using the TailwheelLock parameter.: Units bool",
      "messagetype": "action_TAILWHEEL LOCK ON_get",
      "parameters": {}
    },
    {
      "name": "THROTTLE LOWER LIMIT_get",
      "displaytitle": "THROTTLE LOWER LIMIT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent throttle defining lower limit (negative for reverse thrust equipped airplanes): Units percent",
      "messagetype": "action_THROTTLE LOWER LIMIT_get",
      "parameters": {}
    },
    {
      "name": "TITLE_get",
      "displaytitle": "TITLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTitle from aircraft.cfg: Units null",
      "messagetype": "action_TITLE_get",
      "parameters": {}
    },
    {
      "name": "TOE BRAKES AVAILABLE_get",
      "displaytitle": "TOE BRAKES AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if toe brakes are available: Units bool",
      "messagetype": "action_TOE BRAKES AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "TOTAL AIR TEMPERATURE_get",
      "displaytitle": "TOTAL AIR TEMPERATURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal air temperature is the air temperature at the front of the aircraft where the ram pressure from the speed of the aircraft is taken into account: Units celsius",
      "messagetype": "action_TOTAL AIR TEMPERATURE_get",
      "parameters": {}
    },
    {
      "name": "TOTAL VELOCITY_get",
      "displaytitle": "TOTAL VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVelocity regardless of direction. For example, if a helicopter is ascending vertically at 100 fps, getting this variable will return 100.: Units feet",
      "messagetype": "action_TOTAL VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "TOTAL WEIGHT_get",
      "displaytitle": "TOTAL WEIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal weight of the aircraft: Units pounds",
      "messagetype": "action_TOTAL WEIGHT_get",
      "parameters": {}
    },
    {
      "name": "TOTAL WEIGHT CROSS COUPLED MOI_get",
      "displaytitle": "TOTAL WEIGHT CROSS COUPLED MOI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal weight cross coupled moment of inertia: Units slugs",
      "messagetype": "action_TOTAL WEIGHT CROSS COUPLED MOI_get",
      "parameters": {}
    },
    {
      "name": "TOTAL WEIGHT PITCH MOI_get",
      "displaytitle": "TOTAL WEIGHT PITCH MOI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal weight pitch moment of inertia: Units slugs",
      "messagetype": "action_TOTAL WEIGHT PITCH MOI_get",
      "parameters": {}
    },
    {
      "name": "TOTAL WEIGHT ROLL MOI_get",
      "displaytitle": "TOTAL WEIGHT ROLL MOI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal weight roll moment of inertia: Units slugs",
      "messagetype": "action_TOTAL WEIGHT ROLL MOI_get",
      "parameters": {}
    },
    {
      "name": "TOTAL WEIGHT YAW MOI_get",
      "displaytitle": "TOTAL WEIGHT YAW MOI(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal weight yaw moment of inertia: Units slugs",
      "messagetype": "action_TOTAL WEIGHT YAW MOI_get",
      "parameters": {}
    },
    {
      "name": "TOTAL WORLD VELOCITY",
      "displaytitle": "TOTAL WORLD VELOCITY(Set)",
      "description": "Set the simvar Speed relative to the earths center.: Units feet per second",
      "messagetype": "action_TOTAL WORLD VELOCITY",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TOTAL WORLD VELOCITY_get",
      "displaytitle": "TOTAL WORLD VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSpeed relative to the earths center.: Units feet per second",
      "messagetype": "action_TOTAL WORLD VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "TOW CONNECTION_get",
      "displaytitle": "TOW CONNECTION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if a towline is connected to both tow plane and glider: Units bool",
      "messagetype": "action_TOW CONNECTION_get",
      "parameters": {}
    },
    {
      "name": "TOW RELEASE HANDLE_get",
      "displaytitle": "TOW RELEASE HANDLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPosition of tow release handle. 100 is fully deployed.: Units percent Over 100",
      "messagetype": "action_TOW RELEASE HANDLE_get",
      "parameters": {}
    },
    {
      "name": "TRACK IR ENABLE",
      "displaytitle": "TRACK IR ENABLE(Set)",
      "description": "Set the simvar Returns true if Track IR is enabled or not.: Units bool",
      "messagetype": "action_TRACK IR ENABLE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRACK IR ENABLE_get",
      "displaytitle": "TRACK IR ENABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerReturns true if Track IR is enabled or not.: Units bool",
      "messagetype": "action_TRACK IR ENABLE_get",
      "parameters": {}
    },
    {
      "name": "TRAILING EDGE FLAPS LEFT ANGLE_get",
      "displaytitle": "TRAILING EDGE FLAPS LEFT ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle left trailing edge flap extended. Use TRAILING_EDGE_FLAPS_LEFT_PERCENT to set a value: Units radians",
      "messagetype": "action_TRAILING EDGE FLAPS LEFT ANGLE_get",
      "parameters": {}
    },
    {
      "name": "TRAILING EDGE FLAPS LEFT INDEX_get",
      "displaytitle": "TRAILING EDGE FLAPS LEFT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of left trailing edge flap position: Units number",
      "messagetype": "action_TRAILING EDGE FLAPS LEFT INDEX_get",
      "parameters": {}
    },
    {
      "name": "TRAILING EDGE FLAPS LEFT PERCENT",
      "displaytitle": "TRAILING EDGE FLAPS LEFT PERCENT(Set)",
      "description": "Set the simvar Percent left trailing edge flap extended: Units percent Over 100",
      "messagetype": "action_TRAILING EDGE FLAPS LEFT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS LEFT PERCENT_get",
      "displaytitle": "TRAILING EDGE FLAPS LEFT PERCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent left trailing edge flap extended: Units percent Over 100",
      "messagetype": "action_TRAILING EDGE FLAPS LEFT PERCENT_get",
      "parameters": {}
    },
    {
      "name": "TRAILING EDGE FLAPS RIGHT ANGLE_get",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAngle right trailing edge flap extended. Use TRAILING_EDGE_FLAPS_RIGHT_PERCENT to set a value: Units radians",
      "messagetype": "action_TRAILING EDGE FLAPS RIGHT ANGLE_get",
      "parameters": {}
    },
    {
      "name": "TRAILING EDGE FLAPS RIGHT INDEX_get",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT INDEX(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIndex of right trailing edge flap position: Units number",
      "messagetype": "action_TRAILING EDGE FLAPS RIGHT INDEX_get",
      "parameters": {}
    },
    {
      "name": "TRAILING EDGE FLAPS RIGHT PERCENT",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT PERCENT(Set)",
      "description": "Set the simvar Percent right trailing edge flap extended: Units percent Over 100",
      "messagetype": "action_TRAILING EDGE FLAPS RIGHT PERCENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRAILING EDGE FLAPS RIGHT PERCENT_get",
      "displaytitle": "TRAILING EDGE FLAPS RIGHT PERCENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent right trailing edge flap extended: Units percent Over 100",
      "messagetype": "action_TRAILING EDGE FLAPS RIGHT PERCENT_get",
      "parameters": {}
    },
    {
      "name": "TRAILING EDGE FLAPS0 LEFT ANGLE_get",
      "displaytitle": "TRAILING EDGE FLAPS0 LEFT ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTESTING: Units radians",
      "messagetype": "action_TRAILING EDGE FLAPS0 LEFT ANGLE_get",
      "parameters": {}
    },
    {
      "name": "TRAILING EDGE FLAPS0 RIGHT ANGLE_get",
      "displaytitle": "TRAILING EDGE FLAPS0 RIGHT ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTESTING: Units radians",
      "messagetype": "action_TRAILING EDGE FLAPS0 RIGHT ANGLE_get",
      "parameters": {}
    },
    {
      "name": "TRANSPONDER AVAILABLE_get",
      "displaytitle": "TRANSPONDER AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if a transponder is available.: Units bool",
      "messagetype": "action_TRANSPONDER AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "TRANSPONDER CODE:index_get",
      "displaytitle": "TRANSPONDER CODE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger4-digit code.: Units number",
      "messagetype": "action_TRANSPONDER CODE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TRANSPONDER IDENT",
      "displaytitle": "TRANSPONDER IDENT(Set)",
      "description": "Set the simvar This can set the Ident transponder using the KEY_XPNDR_IDENT_SET, KEY_XPNDR_IDENT_TOGGLE, KEY_XPNDR_IDENT_ON or KEY_XPNDR_IDENT_OFF Event IDs (see XPNDR (Transponder) section for more information). When set to true, it will automatically turn false after 18 seconds.: Units bool",
      "messagetype": "action_TRANSPONDER IDENT",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRANSPONDER IDENT_get",
      "displaytitle": "TRANSPONDER IDENT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can set the Ident transponder using the KEY_XPNDR_IDENT_SET, KEY_XPNDR_IDENT_TOGGLE, KEY_XPNDR_IDENT_ON or KEY_XPNDR_IDENT_OFF Event IDs (see XPNDR (Transponder) section for more information). When set to true, it will automatically turn false after 18 seconds.: Units bool",
      "messagetype": "action_TRANSPONDER IDENT_get",
      "parameters": {}
    },
    {
      "name": "TRANSPONDER STATE",
      "displaytitle": "TRANSPONDER STATE(Set)",
      "description": "Set the simvar Transponder State.: Units enum",
      "messagetype": "action_TRANSPONDER STATE",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRANSPONDER STATE_get",
      "displaytitle": "TRANSPONDER STATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTransponder State.: Units enum",
      "messagetype": "action_TRANSPONDER STATE_get",
      "parameters": {}
    },
    {
      "name": "TRUE AIRSPEED SELECTED",
      "displaytitle": "TRUE AIRSPEED SELECTED(Set)",
      "description": "Set the simvar True if True Airspeed has been selected.: Units bool",
      "messagetype": "action_TRUE AIRSPEED SELECTED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "TRUE AIRSPEED SELECTED_get",
      "displaytitle": "TRUE AIRSPEED SELECTED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if True Airspeed has been selected.: Units bool",
      "messagetype": "action_TRUE AIRSPEED SELECTED_get",
      "parameters": {}
    },
    {
      "name": "TURB ENG AFTERBURNER PCT ACTIVE:index_get",
      "displaytitle": "TURB ENG AFTERBURNER PCT ACTIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe percentage that the afterburner is running at: Units percent Over 100",
      "messagetype": "action_TURB ENG AFTERBURNER PCT ACTIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG AFTERBURNER STAGE ACTIVE:index_get",
      "displaytitle": "TURB ENG AFTERBURNER STAGE ACTIVE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe stage of the afterburner, or 0 if the afterburner is not active: Units number",
      "messagetype": "action_TURB ENG AFTERBURNER STAGE ACTIVE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG AFTERBURNER:index_get",
      "displaytitle": "TURB ENG AFTERBURNER:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerAfterburner state for the indexed engine: Units bool",
      "messagetype": "action_TURB ENG AFTERBURNER:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG BLEED AIR:index_get",
      "displaytitle": "TURB ENG BLEED AIR:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerBleed air pressure for the indexed engine: Units pounds",
      "messagetype": "action_TURB ENG BLEED AIR:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG COMMANDED N1:index",
      "displaytitle": "TURB ENG COMMANDED N1:index(Set)",
      "description": "Set the simvar  Effective commanded N1 for the indexed turbine engine: Units percent",
      "messagetype": "action_TURB ENG COMMANDED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG COMMANDED N1:index_get",
      "displaytitle": "TURB ENG COMMANDED N1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger Effective commanded N1 for the indexed turbine engine: Units percent",
      "messagetype": "action_TURB ENG COMMANDED N1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG CONDITION LEVER POSITION:index",
      "displaytitle": "TURB ENG CONDITION LEVER POSITION:index(Set)",
      "description": "Set the simvar  See documentation: Units enum",
      "messagetype": "action_TURB ENG CONDITION LEVER POSITION:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG CONDITION LEVER POSITION:index_get",
      "displaytitle": "TURB ENG CONDITION LEVER POSITION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger See documentation: Units enum",
      "messagetype": "action_TURB ENG CONDITION LEVER POSITION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG CORRECTED FF:index",
      "displaytitle": "TURB ENG CORRECTED FF:index(Set)",
      "description": "Set the simvar Corrected fuel flow for the indexed engine: Units pounds per hour",
      "messagetype": "action_TURB ENG CORRECTED FF:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG CORRECTED FF:index_get",
      "displaytitle": "TURB ENG CORRECTED FF:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerCorrected fuel flow for the indexed engine: Units pounds per hour",
      "messagetype": "action_TURB ENG CORRECTED FF:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG CORRECTED N1:index",
      "displaytitle": "TURB ENG CORRECTED N1:index(Set)",
      "description": "Set the simvar The indexed turbine engine corrected N1: Units percent",
      "messagetype": "action_TURB ENG CORRECTED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG CORRECTED N1:index_get",
      "displaytitle": "TURB ENG CORRECTED N1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed turbine engine corrected N1: Units percent",
      "messagetype": "action_TURB ENG CORRECTED N1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG CORRECTED N2:index",
      "displaytitle": "TURB ENG CORRECTED N2:index(Set)",
      "description": "Set the simvar The indexed turbine engine corrected N2: Units percent",
      "messagetype": "action_TURB ENG CORRECTED N2:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG CORRECTED N2:index_get",
      "displaytitle": "TURB ENG CORRECTED N2:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed turbine engine corrected N2: Units percent",
      "messagetype": "action_TURB ENG CORRECTED N2:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG FREE TURBINE TORQUE:index",
      "displaytitle": "TURB ENG FREE TURBINE TORQUE:index(Set)",
      "description": "Set the simvar The amount of free torque for the indexed turbine engine: Units foot pound",
      "messagetype": "action_TURB ENG FREE TURBINE TORQUE:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG FREE TURBINE TORQUE:index_get",
      "displaytitle": "TURB ENG FREE TURBINE TORQUE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe amount of free torque for the indexed turbine engine: Units foot pound",
      "messagetype": "action_TURB ENG FREE TURBINE TORQUE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG FUEL AVAILABLE:index_get",
      "displaytitle": "TURB ENG FUEL AVAILABLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if fuel is available for the indexed engine: Units bool",
      "messagetype": "action_TURB ENG FUEL AVAILABLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG FUEL EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG FUEL EFFICIENCY LOSS:index(Set)",
      "description": "Set the simvar This is used to control the fuel efficiency loss of the indexed engine: Units percent",
      "messagetype": "action_TURB ENG FUEL EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG FUEL EFFICIENCY LOSS:index_get",
      "displaytitle": "TURB ENG FUEL EFFICIENCY LOSS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is used to control the fuel efficiency loss of the indexed engine: Units percent",
      "messagetype": "action_TURB ENG FUEL EFFICIENCY LOSS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG FUEL FLOW PPH:index_get",
      "displaytitle": "TURB ENG FUEL FLOW PPH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine fuel flow rate: Units pounds per hour",
      "messagetype": "action_TURB ENG FUEL FLOW PPH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG HIGH IDLE:index_get",
      "displaytitle": "TURB ENG HIGH IDLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRetrieves the high idle N1 value to be reached by the the indexed turboprop engine with throttle in idle position and condition lever in high idle position (condition lever position can be checked or set using the TURB_ENG_CONDITION_LEVER_POSITION SimVar): Units percent",
      "messagetype": "action_TURB ENG HIGH IDLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG IGNITION SWITCH EX1:index_get",
      "displaytitle": "TURB ENG IGNITION SWITCH EX1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPosition of the the indexed turbine engine Ignition Switch. Similar to TURB_ENG_IGNITION_SWITCH but differentiates between ON and AUTO: Units enum",
      "messagetype": "action_TURB ENG IGNITION SWITCH EX1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG IGNITION SWITCH:index_get",
      "displaytitle": "TURB ENG IGNITION SWITCH:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the the indexed turbine engine ignition switch is on: Units bool",
      "messagetype": "action_TURB ENG IGNITION SWITCH:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG IS IGNITING:index_get",
      "displaytitle": "TURB ENG IS IGNITING:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWhether or not the ignition system is currently running for the indexed engine. Depends on TURB_ENG_IGNITION_SWITCH_EX1 Enum, the cfg var ignition_auto_type and current state of the plane: Units bool",
      "messagetype": "action_TURB ENG IS IGNITING:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG ITT COOLING EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG ITT COOLING EFFICIENCY LOSS:index(Set)",
      "description": "Set the simvar This is used to control the ITT cooling efficiency loss of the indexed engine: Units percent",
      "messagetype": "action_TURB ENG ITT COOLING EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG ITT COOLING EFFICIENCY LOSS:index_get",
      "displaytitle": "TURB ENG ITT COOLING EFFICIENCY LOSS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is used to control the ITT cooling efficiency loss of the indexed engine: Units percent",
      "messagetype": "action_TURB ENG ITT COOLING EFFICIENCY LOSS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG ITT:index",
      "displaytitle": "TURB ENG ITT:index(Set)",
      "description": "Set the simvar Retrieve or set the ITT for the indexed engine: Units rankine",
      "messagetype": "action_TURB ENG ITT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG ITT:index_get",
      "displaytitle": "TURB ENG ITT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRetrieve or set the ITT for the indexed engine: Units rankine",
      "messagetype": "action_TURB ENG ITT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG JET THRUST:index_get",
      "displaytitle": "TURB ENG JET THRUST:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine jet thrust: Units pounds",
      "messagetype": "action_TURB ENG JET THRUST:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG LOW IDLE:index_get",
      "displaytitle": "TURB ENG LOW IDLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRetrieves the low idle N1 value to be reached by the the indexed turboprop engine with throttle in idle position and condition lever in low idle position (condition lever position can be checked or set using the TURB_ENG_CONDITION_LEVER_POSITION SimVar): Units percent",
      "messagetype": "action_TURB ENG LOW IDLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG MASTER STARTER SWITCH_get",
      "displaytitle": "TURB ENG MASTER STARTER SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the turbine engine master starter switch is on, false otherwise: Units bool",
      "messagetype": "action_TURB ENG MASTER STARTER SWITCH_get",
      "parameters": {}
    },
    {
      "name": "TURB ENG MAX TORQUE PERCENT:index",
      "displaytitle": "TURB ENG MAX TORQUE PERCENT:index(Set)",
      "description": "Set the simvar Percent of max rated torque for the indexed engine: Units percent",
      "messagetype": "action_TURB ENG MAX TORQUE PERCENT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG MAX TORQUE PERCENT:index_get",
      "displaytitle": "TURB ENG MAX TORQUE PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent of max rated torque for the indexed engine: Units percent",
      "messagetype": "action_TURB ENG MAX TORQUE PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG N1 LOSS:index",
      "displaytitle": "TURB ENG N1 LOSS:index(Set)",
      "description": "Set the simvar This is used to control the N1 loss of the indexed engine: Units percent",
      "messagetype": "action_TURB ENG N1 LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG N1 LOSS:index_get",
      "displaytitle": "TURB ENG N1 LOSS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is used to control the N1 loss of the indexed engine: Units percent",
      "messagetype": "action_TURB ENG N1 LOSS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG N1:index",
      "displaytitle": "TURB ENG N1:index(Set)",
      "description": "Set the simvar The indexed turbine engine N1 value: Units percent",
      "messagetype": "action_TURB ENG N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG N1:index_get",
      "displaytitle": "TURB ENG N1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed turbine engine N1 value: Units percent",
      "messagetype": "action_TURB ENG N1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG N2:index",
      "displaytitle": "TURB ENG N2:index(Set)",
      "description": "Set the simvar  The indexed turbine engine N2 value: Units percent",
      "messagetype": "action_TURB ENG N2:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG N2:index_get",
      "displaytitle": "TURB ENG N2:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger The indexed turbine engine N2 value: Units percent",
      "messagetype": "action_TURB ENG N2:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG NUM TANKS USED:index_get",
      "displaytitle": "TURB ENG NUM TANKS USED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerNumber of tanks currently being used by the indexed engine: Units number",
      "messagetype": "action_TURB ENG NUM TANKS USED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG PRESSURE RATIO:index",
      "displaytitle": "TURB ENG PRESSURE RATIO:index(Set)",
      "description": "Set the simvar The indexed engine pressure ratio: Units ratio",
      "messagetype": "action_TURB ENG PRESSURE RATIO:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG PRESSURE RATIO:index_get",
      "displaytitle": "TURB ENG PRESSURE RATIO:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed engine pressure ratio: Units ratio",
      "messagetype": "action_TURB ENG PRESSURE RATIO:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG PRIMARY NOZZLE PERCENT:index_get",
      "displaytitle": "TURB ENG PRIMARY NOZZLE PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent thrust of primary nozzle for the indexed engine: Units percent Over 100",
      "messagetype": "action_TURB ENG PRIMARY NOZZLE PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG REVERSE NOZZLE PERCENT:index_get",
      "displaytitle": "TURB ENG REVERSE NOZZLE PERCENT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent thrust reverser nozzles deployed for the indexed engine: Units percent",
      "messagetype": "action_TURB ENG REVERSE NOZZLE PERCENT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG TANK SELECTOR:index_get",
      "displaytitle": "TURB ENG TANK SELECTOR:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel tank selected for the indexed engine. See Fuel Tank Selection for a list of values: Units enum",
      "messagetype": "action_TURB ENG TANK SELECTOR:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG TANKS USED:index_get",
      "displaytitle": "TURB ENG TANKS USED:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerFuel tanks used by the indexed engine: Units mask",
      "messagetype": "action_TURB ENG TANKS USED:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG THROTTLE COMMANDED N1:index",
      "displaytitle": "TURB ENG THROTTLE COMMANDED N1:index(Set)",
      "description": "Set the simvar  The indexed turbine engine commanded N1 for current throttle position: Units percent",
      "messagetype": "action_TURB ENG THROTTLE COMMANDED N1:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG THROTTLE COMMANDED N1:index_get",
      "displaytitle": "TURB ENG THROTTLE COMMANDED N1:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'trigger The indexed turbine engine commanded N1 for current throttle position: Units percent",
      "messagetype": "action_TURB ENG THROTTLE COMMANDED N1:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG THRUST EFFICIENCY LOSS:index",
      "displaytitle": "TURB ENG THRUST EFFICIENCY LOSS:index(Set)",
      "description": "Set the simvar This can be used to control the thrust efficiency loss of the indexed engine, where a value of 0 is 100% of available thrust, and 100 is 0% available thrust: Units percent",
      "messagetype": "action_TURB ENG THRUST EFFICIENCY LOSS:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "TURB ENG THRUST EFFICIENCY LOSS:index_get",
      "displaytitle": "TURB ENG THRUST EFFICIENCY LOSS:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis can be used to control the thrust efficiency loss of the indexed engine, where a value of 0 is 100% of available thrust, and 100 is 0% available thrust: Units percent",
      "messagetype": "action_TURB ENG THRUST EFFICIENCY LOSS:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB ENG VIBRATION:index_get",
      "displaytitle": "TURB ENG VIBRATION:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe indexed turbine engine vibration value: Units number",
      "messagetype": "action_TURB ENG VIBRATION:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "TURB MAX ITT_get",
      "displaytitle": "TURB MAX ITT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerRetrieve the itt_peak_temperature as set in the engine.cfg file: Units rankine",
      "messagetype": "action_TURB MAX ITT_get",
      "parameters": {}
    },
    {
      "name": "TURN COORDINATOR BALL_get",
      "displaytitle": "TURN COORDINATOR BALL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTurn coordinator ball position.: Units position 128",
      "messagetype": "action_TURN COORDINATOR BALL_get",
      "parameters": {}
    },
    {
      "name": "TURN COORDINATOR BALL INV_get",
      "displaytitle": "TURN COORDINATOR BALL INV(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTurn coordinator ball position inverted (upside down).: Units position 128",
      "messagetype": "action_TURN COORDINATOR BALL INV_get",
      "parameters": {}
    },
    {
      "name": "TURN INDICATOR RATE_get",
      "displaytitle": "TURN INDICATOR RATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTurn indicator reading.: Units radians per second",
      "messagetype": "action_TURN INDICATOR RATE_get",
      "parameters": {}
    },
    {
      "name": "TURN INDICATOR SWITCH_get",
      "displaytitle": "TURN INDICATOR SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if turn indicator switch is on.: Units bool",
      "messagetype": "action_TURN INDICATOR SWITCH_get",
      "parameters": {}
    },
    {
      "name": "TYPICAL DESCENT RATE_get",
      "displaytitle": "TYPICAL DESCENT RATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerthe typical (normal) descent rate for the aircraft.: Units feet",
      "messagetype": "action_TYPICAL DESCENT RATE_get",
      "parameters": {}
    },
    {
      "name": "USER INPUT ENABLED",
      "displaytitle": "USER INPUT ENABLED(Set)",
      "description": "Set the simvar Is input allowed from the user.: Units bool",
      "messagetype": "action_USER INPUT ENABLED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "USER INPUT ENABLED_get",
      "displaytitle": "USER INPUT ENABLED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs input allowed from the user.: Units bool",
      "messagetype": "action_USER INPUT ENABLED_get",
      "parameters": {}
    },
    {
      "name": "VARIOMETER MAC CREADY SETTING",
      "displaytitle": "VARIOMETER MAC CREADY SETTING(Set)",
      "description": "Set the simvar The MacCready setting used to fly an optimal speed between thermals.: Units Meters per second",
      "messagetype": "action_VARIOMETER MAC CREADY SETTING",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VARIOMETER MAC CREADY SETTING_get",
      "displaytitle": "VARIOMETER MAC CREADY SETTING(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe MacCready setting used to fly an optimal speed between thermals.: Units Meters per second",
      "messagetype": "action_VARIOMETER MAC CREADY SETTING_get",
      "parameters": {}
    },
    {
      "name": "VARIOMETER NETTO_get",
      "displaytitle": "VARIOMETER NETTO(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerVariometer rate using Netto (Total Energy - polar sinkRate).: Units feet per second",
      "messagetype": "action_VARIOMETER NETTO_get",
      "parameters": {}
    },
    {
      "name": "VARIOMETER RATE_get",
      "displaytitle": "VARIOMETER RATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe variometer rate.: Units feet per second",
      "messagetype": "action_VARIOMETER RATE_get",
      "parameters": {}
    },
    {
      "name": "VARIOMETER SPEED TO FLY_get",
      "displaytitle": "VARIOMETER SPEED TO FLY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerOptimal speed to fly between thermals using polar curve and MacCready setting.: Units Kilometers per hour",
      "messagetype": "action_VARIOMETER SPEED TO FLY_get",
      "parameters": {}
    },
    {
      "name": "VARIOMETER SPEED TO FLY GLIDE RATIO_get",
      "displaytitle": "VARIOMETER SPEED TO FLY GLIDE RATIO(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe glide ratio at optimal speed to fly.: Units number",
      "messagetype": "action_VARIOMETER SPEED TO FLY GLIDE RATIO_get",
      "parameters": {}
    },
    {
      "name": "VARIOMETER SWITCH_get",
      "displaytitle": "VARIOMETER SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the variometer switch is on, false if it is not.: Units bool",
      "messagetype": "action_VARIOMETER SWITCH_get",
      "parameters": {}
    },
    {
      "name": "VARIOMETER TOTAL ENERGY_get",
      "displaytitle": "VARIOMETER TOTAL ENERGY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe variometer rate using total energy.: Units feet per second",
      "messagetype": "action_VARIOMETER TOTAL ENERGY_get",
      "parameters": {}
    },
    {
      "name": "VELOCITY BODY X",
      "displaytitle": "VELOCITY BODY X(Set)",
      "description": "Set the simvar True lateral speed, relative to aircraft X axis: Units feet",
      "messagetype": "action_VELOCITY BODY X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY BODY X_get",
      "displaytitle": "VELOCITY BODY X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue lateral speed, relative to aircraft X axis: Units feet",
      "messagetype": "action_VELOCITY BODY X_get",
      "parameters": {}
    },
    {
      "name": "VELOCITY BODY Y",
      "displaytitle": "VELOCITY BODY Y(Set)",
      "description": "Set the simvar True vertical speed, relative to aircraft Y axis: Units feet",
      "messagetype": "action_VELOCITY BODY Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY BODY Y_get",
      "displaytitle": "VELOCITY BODY Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue vertical speed, relative to aircraft Y axis: Units feet",
      "messagetype": "action_VELOCITY BODY Y_get",
      "parameters": {}
    },
    {
      "name": "VELOCITY BODY Z",
      "displaytitle": "VELOCITY BODY Z(Set)",
      "description": "Set the simvar True longitudinal speed, relative to aircraft Z axis: Units feet",
      "messagetype": "action_VELOCITY BODY Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY BODY Z_get",
      "displaytitle": "VELOCITY BODY Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue longitudinal speed, relative to aircraft Z axis: Units feet",
      "messagetype": "action_VELOCITY BODY Z_get",
      "parameters": {}
    },
    {
      "name": "VELOCITY WORLD X",
      "displaytitle": "VELOCITY WORLD X(Set)",
      "description": "Set the simvar Speed relative to earth, in East/West direction.: Units feet per second",
      "messagetype": "action_VELOCITY WORLD X",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY WORLD X_get",
      "displaytitle": "VELOCITY WORLD X(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSpeed relative to earth, in East/West direction.: Units feet per second",
      "messagetype": "action_VELOCITY WORLD X_get",
      "parameters": {}
    },
    {
      "name": "VELOCITY WORLD Y",
      "displaytitle": "VELOCITY WORLD Y(Set)",
      "description": "Set the simvar Speed relative to earth, in vertical direction.: Units feet per second",
      "messagetype": "action_VELOCITY WORLD Y",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY WORLD Y_get",
      "displaytitle": "VELOCITY WORLD Y(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSpeed relative to earth, in vertical direction.: Units feet per second",
      "messagetype": "action_VELOCITY WORLD Y_get",
      "parameters": {}
    },
    {
      "name": "VELOCITY WORLD Z",
      "displaytitle": "VELOCITY WORLD Z(Set)",
      "description": "Set the simvar Speed relative to earth, in North/South direction.: Units feet per second",
      "messagetype": "action_VELOCITY WORLD Z",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VELOCITY WORLD Z_get",
      "displaytitle": "VELOCITY WORLD Z(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerSpeed relative to earth, in North/South direction.: Units feet per second",
      "messagetype": "action_VELOCITY WORLD Z_get",
      "parameters": {}
    },
    {
      "name": "VERTICAL SPEED",
      "displaytitle": "VERTICAL SPEED(Set)",
      "description": "Set the simvar The current indicated vertical speed for the aircraft: Units feet",
      "messagetype": "action_VERTICAL SPEED",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "VERTICAL SPEED_get",
      "displaytitle": "VERTICAL SPEED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current indicated vertical speed for the aircraft: Units feet",
      "messagetype": "action_VERTICAL SPEED_get",
      "parameters": {}
    },
    {
      "name": "VISUAL MODEL RADIUS_get",
      "displaytitle": "VISUAL MODEL RADIUS(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerModel radius.: Units meters",
      "messagetype": "action_VISUAL MODEL RADIUS_get",
      "parameters": {}
    },
    {
      "name": "WAGON BACK LINK LENGTH_get",
      "displaytitle": "WAGON BACK LINK LENGTH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe length of the link at the back of the vehicle used to attach a wagon behind.: Units meters",
      "messagetype": "action_WAGON BACK LINK LENGTH_get",
      "parameters": {}
    },
    {
      "name": "WAGON BACK LINK ORIENTATION_get",
      "displaytitle": "WAGON BACK LINK ORIENTATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current orientation of the link at the back of the vehicle used to attach a wagon behind.: Units degrees",
      "messagetype": "action_WAGON BACK LINK ORIENTATION_get",
      "parameters": {}
    },
    {
      "name": "WAGON BACK LINK START POSZ_get",
      "displaytitle": "WAGON BACK LINK START POSZ(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Z\" axis position of the start of the link at the back of the vehicle used to attach a wagon behind, relative to the ground.: Units meters",
      "messagetype": "action_WAGON BACK LINK START POSZ_get",
      "parameters": {}
    },
    {
      "name": "WAGON FRONT LINK LENGTH_get",
      "displaytitle": "WAGON FRONT LINK LENGTH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe length of the link at the front of the vehicle used to be attached as wagon.: Units meters",
      "messagetype": "action_WAGON FRONT LINK LENGTH_get",
      "parameters": {}
    },
    {
      "name": "WAGON FRONT LINK ORIENTATION_get",
      "displaytitle": "WAGON FRONT LINK ORIENTATION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current orientation of the link at the front of the vehicle used to be attached as wagon.: Units degrees",
      "messagetype": "action_WAGON FRONT LINK ORIENTATION_get",
      "parameters": {}
    },
    {
      "name": "WAGON FRONT LINK START POSZ_get",
      "displaytitle": "WAGON FRONT LINK START POSZ(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe \"Z\" axis position of the start of the link at the front of the vehicle used to be attached as wagon, relative to the ground.: Units meters",
      "messagetype": "action_WAGON FRONT LINK START POSZ_get",
      "parameters": {}
    },
    {
      "name": "WARNING FUEL_get",
      "displaytitle": "WARNING FUEL(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the fuel warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING FUEL_get",
      "parameters": {}
    },
    {
      "name": "WARNING FUEL LEFT_get",
      "displaytitle": "WARNING FUEL LEFT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the left fuel tank warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING FUEL LEFT_get",
      "parameters": {}
    },
    {
      "name": "WARNING FUEL RIGHT_get",
      "displaytitle": "WARNING FUEL RIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the right fuel tank warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING FUEL RIGHT_get",
      "parameters": {}
    },
    {
      "name": "WARNING LOW HEIGHT_get",
      "displaytitle": "WARNING LOW HEIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the low height warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING LOW HEIGHT_get",
      "parameters": {}
    },
    {
      "name": "WARNING OIL PRESSURE_get",
      "displaytitle": "WARNING OIL PRESSURE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the oil pressure warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING OIL PRESSURE_get",
      "parameters": {}
    },
    {
      "name": "WARNING VACUUM_get",
      "displaytitle": "WARNING VACUUM(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the vacuum system warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING VACUUM_get",
      "parameters": {}
    },
    {
      "name": "WARNING VACUUM LEFT_get",
      "displaytitle": "WARNING VACUUM LEFT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the left vacuum system warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING VACUUM LEFT_get",
      "parameters": {}
    },
    {
      "name": "WARNING VACUUM RIGHT_get",
      "displaytitle": "WARNING VACUUM RIGHT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the right vacuum system warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING VACUUM RIGHT_get",
      "parameters": {}
    },
    {
      "name": "WARNING VOLTAGE_get",
      "displaytitle": "WARNING VOLTAGE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThis is the current state of the electrical system voltage warning, either on (true) or off (false).: Units bool",
      "messagetype": "action_WARNING VOLTAGE_get",
      "parameters": {}
    },
    {
      "name": "WATER BALLAST TANK CAPACITY:index_get",
      "displaytitle": "WATER BALLAST TANK CAPACITY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe capacity of the indexed water ballast tank.: Units pounds",
      "messagetype": "action_WATER BALLAST TANK CAPACITY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "WATER BALLAST TANK NUMBER_get",
      "displaytitle": "WATER BALLAST TANK NUMBER(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe number of water ballast tank available.: Units number",
      "messagetype": "action_WATER BALLAST TANK NUMBER_get",
      "parameters": {}
    },
    {
      "name": "WATER BALLAST TANK QUANTITY:index_get",
      "displaytitle": "WATER BALLAST TANK QUANTITY:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe quantity of water ballast in the indexed tank.: Units pounds",
      "messagetype": "action_WATER BALLAST TANK QUANTITY:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "WATER BALLAST VALVE_get",
      "displaytitle": "WATER BALLAST VALVE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue (1) if a water ballast valve is available, False (0) otherwise.: Units bool",
      "messagetype": "action_WATER BALLAST VALVE_get",
      "parameters": {}
    },
    {
      "name": "WATER BALLAST VALVE FLOW RATE_get",
      "displaytitle": "WATER BALLAST VALVE FLOW RATE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe flow rate of the water ballast valve.: Units gallons per hour",
      "messagetype": "action_WATER BALLAST VALVE FLOW RATE_get",
      "parameters": {}
    },
    {
      "name": "WATER LEFT RUDDER EXTENDED_get",
      "displaytitle": "WATER LEFT RUDDER EXTENDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent extended: Units percent",
      "messagetype": "action_WATER LEFT RUDDER EXTENDED_get",
      "parameters": {}
    },
    {
      "name": "WATER LEFT RUDDER STEER ANGLE_get",
      "displaytitle": "WATER LEFT RUDDER STEER ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWater left rudder angle, negative to the left, positive to the right: Units percent Over 100",
      "messagetype": "action_WATER LEFT RUDDER STEER ANGLE_get",
      "parameters": {}
    },
    {
      "name": "WATER LEFT RUDDER STEER ANGLE PCT_get",
      "displaytitle": "WATER LEFT RUDDER STEER ANGLE PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWater left rudder angle as a percentage: Units percent Over 100",
      "messagetype": "action_WATER LEFT RUDDER STEER ANGLE PCT_get",
      "parameters": {}
    },
    {
      "name": "WATER RIGHT RUDDER EXTENDED_get",
      "displaytitle": "WATER RIGHT RUDDER EXTENDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent extended: Units percent",
      "messagetype": "action_WATER RIGHT RUDDER EXTENDED_get",
      "parameters": {}
    },
    {
      "name": "WATER RIGHT RUDDER STEER ANGLE_get",
      "displaytitle": "WATER RIGHT RUDDER STEER ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWater right rudder angle, negative to the left, positive to the right: Units percent Over 100",
      "messagetype": "action_WATER RIGHT RUDDER STEER ANGLE_get",
      "parameters": {}
    },
    {
      "name": "WATER RIGHT RUDDER STEER ANGLE PCT_get",
      "displaytitle": "WATER RIGHT RUDDER STEER ANGLE PCT(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWater right rudder as a percentage: Units percent Over 100",
      "messagetype": "action_WATER RIGHT RUDDER STEER ANGLE PCT_get",
      "parameters": {}
    },
    {
      "name": "WATER RUDDER HANDLE POSITION",
      "displaytitle": "WATER RUDDER HANDLE POSITION(Set)",
      "description": "Set the simvar Position of the water rudder handle (0 handle retracted, 1 rudder handle applied): Units percent Over 100",
      "messagetype": "action_WATER RUDDER HANDLE POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "WATER RUDDER HANDLE POSITION_get",
      "displaytitle": "WATER RUDDER HANDLE POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPosition of the water rudder handle (0 handle retracted, 1 rudder handle applied): Units percent Over 100",
      "messagetype": "action_WATER RUDDER HANDLE POSITION_get",
      "parameters": {}
    },
    {
      "name": "WHEEL ROTATION ANGLE:index_get",
      "displaytitle": "WHEEL ROTATION ANGLE:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWheel rotation angle (rotation around the axis for the wheel): Units radians",
      "messagetype": "action_WHEEL ROTATION ANGLE:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "WHEEL RPM:index_get",
      "displaytitle": "WHEEL RPM:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerWheel rpm: Units RPM",
      "messagetype": "action_WHEEL RPM:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "WINDSHIELD DEICE SWITCH_get",
      "displaytitle": "WINDSHIELD DEICE SWITCH(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTrue if the aircraft windshield deice switch is on.: Units bool",
      "messagetype": "action_WINDSHIELD DEICE SWITCH_get",
      "parameters": {}
    },
    {
      "name": "WINDSHIELD RAIN EFFECT AVAILABLE_get",
      "displaytitle": "WINDSHIELD RAIN EFFECT AVAILABLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerIs visual effect available on this aircraft: Units bool",
      "messagetype": "action_WINDSHIELD RAIN EFFECT AVAILABLE_get",
      "parameters": {}
    },
    {
      "name": "WINDSHIELD WIND VELOCITY_get",
      "displaytitle": "WINDSHIELD WIND VELOCITY(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerLongitudinal speed of wind on the windshield.: Units feet",
      "messagetype": "action_WINDSHIELD WIND VELOCITY_get",
      "parameters": {}
    },
    {
      "name": "WING AREA_get",
      "displaytitle": "WING AREA(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal wing area: Units square feet",
      "messagetype": "action_WING AREA_get",
      "parameters": {}
    },
    {
      "name": "WING FLEX PCT:index",
      "displaytitle": "WING FLEX PCT:index(Set)",
      "description": "Set the simvar The current wing flex. Different values can be set for each wing (for example, during banking). Set an index of 1 for the left wing, and 2 for the right wing.: Units percent Over 100",
      "messagetype": "action_WING FLEX PCT:index",
      "parameters": {
        "index": "0",
        "data": ""
      }
    },
    {
      "name": "WING FLEX PCT:index_get",
      "displaytitle": "WING FLEX PCT:index(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe current wing flex. Different values can be set for each wing (for example, during banking). Set an index of 1 for the left wing, and 2 for the right wing.: Units percent Over 100",
      "messagetype": "action_WING FLEX PCT:index_get",
      "parameters": {
        "index": "0"
      }
    },
    {
      "name": "WING SPAN_get",
      "displaytitle": "WING SPAN(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerTotal wing span: Units feet",
      "messagetype": "action_WING SPAN_get",
      "parameters": {}
    },
    {
      "name": "YAW STRING ANGLE_get",
      "displaytitle": "YAW STRING ANGLE(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe yaw string angle. Yaw strings are attached to gliders as visible indicators of the yaw angle. An animation of this is not implemented in ESP.: Units radians",
      "messagetype": "action_YAW STRING ANGLE_get",
      "parameters": {}
    },
    {
      "name": "YAW STRING PCT EXTENDED_get",
      "displaytitle": "YAW STRING PCT EXTENDED(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerYaw string angle as a percentage: Units percent Over 100",
      "messagetype": "action_YAW STRING PCT EXTENDED_get",
      "parameters": {}
    },
    {
      "name": "YOKE X INDICATOR_get",
      "displaytitle": "YOKE X INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerYoke position in horizontal direction.: Units position",
      "messagetype": "action_YOKE X INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "YOKE X POSITION",
      "displaytitle": "YOKE X POSITION(Set)",
      "description": "Set the simvar Percent control deflection left/right (for animation).: Units position",
      "messagetype": "action_YOKE X POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YOKE X POSITION_get",
      "displaytitle": "YOKE X POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent control deflection left/right (for animation).: Units position",
      "messagetype": "action_YOKE X POSITION_get",
      "parameters": {}
    },
    {
      "name": "YOKE X POSITION WITH AP_get",
      "displaytitle": "YOKE X POSITION WITH AP(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent control deflection left/right (for animation). Also includes AP's inputs.: Units position",
      "messagetype": "action_YOKE X POSITION WITH AP_get",
      "parameters": {}
    },
    {
      "name": "YOKE Y INDICATOR_get",
      "displaytitle": "YOKE Y INDICATOR(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerYoke position in vertical direction.: Units position",
      "messagetype": "action_YOKE Y INDICATOR_get",
      "parameters": {}
    },
    {
      "name": "YOKE Y POSITION",
      "displaytitle": "YOKE Y POSITION(Set)",
      "description": "Set the simvar Percent control deflection fore/aft (for animation).: Units position",
      "messagetype": "action_YOKE Y POSITION",
      "parameters": {
        "data": ""
      }
    },
    {
      "name": "YOKE Y POSITION_get",
      "displaytitle": "YOKE Y POSITION(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent control deflection fore/aft (for animation).: Units position",
      "messagetype": "action_YOKE Y POSITION_get",
      "parameters": {}
    },
    {
      "name": "YOKE Y POSITION WITH AP_get",
      "displaytitle": "YOKE Y POSITION WITH AP(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerPercent control deflection fore/aft (for animation). Also includes AP's inputs.: Units position",
      "messagetype": "action_YOKE Y POSITION WITH AP_get",
      "parameters": {}
    },
    {
      "name": "ZERO LIFT ALPHA_get",
      "displaytitle": "ZERO LIFT ALPHA(Get)",
      "description": "Request the value, will be returned in a 'name_(Single) 'triggerThe angle of attack at which the wing has zero lift.: Units radians",
      "messagetype": "action_ZERO LIFT ALPHA_get",
      "parameters": {}
    }
  ]
}